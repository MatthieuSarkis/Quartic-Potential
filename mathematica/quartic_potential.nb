(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3449549,      67928]
NotebookOptionsPosition[   3371307,      66801]
NotebookOutlinePosition[   3371853,      66820]
CellTagsIndexPosition[   3371810,      66817]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Quadratic potential for Quantum Drude Oscillators", "Title",
 CellChangeTimes->{{3.863748632532035*^9, 3.863748643888073*^9}, {
  3.8637692125760307`*^9, 3.863769217471353*^9}, {3.863884088336817*^9, 
  3.8638841058722982`*^9}},ExpressionUUID->"fe2360b0-62b6-4776-80a3-\
16c5f3914b5b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", "\"\<Running automatic cells!\>\"", "]"}]], "Code",
 CellChangeTimes->{{3.8645293680251083`*^9, 3.864529384570129*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"2cf9f381-7be1-4d17-9079-360bae585fc9"],

Cell[BoxData["\<\"Running automatic cells!\"\>"], "Print",
 CellChangeTimes->{{3.864529389316641*^9, 3.8645294000315027`*^9}, 
   3.864531886881159*^9, {3.8646128828503017`*^9, 3.864612882995989*^9}, {
   3.864704015033862*^9, 3.864704015269785*^9}, {3.864815020248878*^9, 
   3.864815020496274*^9}, {3.864877193102209*^9, 3.8648771933073883`*^9}, {
   3.8649643361990843`*^9, 3.864964336409341*^9}, 3.8649645770215483`*^9, {
   3.864967074203937*^9, 3.864967074397295*^9}, {3.864968203293312*^9, 
   3.864968203435671*^9}, {3.8649820785934563`*^9, 3.864982078785571*^9}, 
   3.864992424750996*^9, 3.864992482183079*^9, 3.864998521427479*^9, 
   3.864998578817552*^9, 3.865006651104135*^9, 3.86500670963759*^9, 
   3.865011218260708*^9, 3.865011277092289*^9, 3.8650482351177177`*^9, 
   3.8650483011132097`*^9, 3.865049587331525*^9, 3.865058743247319*^9, 
   3.865058804484337*^9, 3.8650685527089167`*^9, 3.865068616790579*^9, 
   3.865406921932446*^9, 3.865406981687531*^9, 3.865407540340289*^9, {
   3.865407660174427*^9, 3.865407668614305*^9}, 3.8654077029589453`*^9},
 CellLabel->
  "During evaluation of \
In[49]:=",ExpressionUUID->"2897ad32-24fa-4451-9ed6-2f56cb8fcb7d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multipolar Expansion", "Section",
 CellChangeTimes->{{3.8654835547371607`*^9, 
  3.86548357007966*^9}},ExpressionUUID->"9f228cc1-5a8c-4d26-b93c-\
ccb01f4b74ac"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "d", "]"}]], "Input",
 CellChangeTimes->{{3.865484200230321*^9, 3.865484204628558*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"6618d7e1-083d-4ce5-bdf3-36c5ba5c7c5d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"a___", "\[CenterDot]", 
        RowBox[{"(", 
         RowBox[{"b_", "\[CenterDot]", "c_"}], ")"}], "\[CenterDot]", 
        "d___"}], "/;", 
       RowBox[{"NumericQ", "[", "b", "]"}]}], "->", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"a", "\[CenterDot]", "c", "\[CenterDot]", "d"}], ")"}]}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a___", "\[CenterDot]", 
       RowBox[{"(", 
        RowBox[{"b_", "+", "c_"}], ")"}], "\[CenterDot]", "d___"}], "->", 
      RowBox[{
       RowBox[{"a", "\[CenterDot]", "b", "\[CenterDot]", "d"}], "+", 
       RowBox[{"a", "\[CenterDot]", "c", "\[CenterDot]", "d"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a___", "\[CenterDot]", 
       RowBox[{"(", 
        RowBox[{"-", "b_"}], ")"}], "\[CenterDot]", "d___"}], "->", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"a", "\[CenterDot]", "b", "\[CenterDot]", "d"}], ")"}]}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a___", "\[CenterDot]", 
       RowBox[{"(", 
        FractionBox[
         RowBox[{"m1", " ", "x_"}], 
         RowBox[{"m1", "+", "m2"}]], ")"}], "\[CenterDot]", "d___"}], "->", 
      RowBox[{
       FractionBox["m1", 
        RowBox[{"m1", "+", "m2"}]], 
       RowBox[{"(", 
        RowBox[{"a", "\[CenterDot]", "x", "\[CenterDot]", "d"}], ")"}]}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a___", "\[CenterDot]", 
       RowBox[{"(", 
        FractionBox[
         RowBox[{"m2", " ", "x_"}], 
         RowBox[{"m1", "+", "m2"}]], ")"}], "\[CenterDot]", "d___"}], "->", 
      RowBox[{
       FractionBox["m2", 
        RowBox[{"m1", "+", "m2"}]], 
       RowBox[{"(", 
        RowBox[{"a", "\[CenterDot]", "x", "\[CenterDot]", "d"}], ")"}]}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CenterDot", "[", "a_", "]"}], "->", "a"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865483853778816*^9, 3.865483984514991*^9}, {
  3.8654844680556498`*^9, 3.865484539047721*^9}, {3.865484583048909*^9, 
  3.865484628536212*^9}, {3.86548466471276*^9, 3.865484682808568*^9}, {
  3.8654847837055883`*^9, 3.865484821241377*^9}, {3.8654848745385523`*^9, 
  3.865484874681549*^9}, {3.865485381997056*^9, 3.865485459148705*^9}, {
  3.865485494494356*^9, 3.86548550108599*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"364e018c-7c51-42f9-aca4-2762d585e75e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dist", "[", 
   RowBox[{"r_", ",", "\[Epsilon]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", "r"], 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     FractionBox[
      RowBox[{"\[Epsilon]", "\[CenterDot]", "r"}], "r"], "-", 
     FractionBox[
      RowBox[{
       RowBox[{"\[Epsilon]", "\[CenterDot]", "\[Epsilon]"}], "-", 
       RowBox[{"3", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Epsilon]", "\[CenterDot]", "r"}], ")"}], "2"]}]}], 
      RowBox[{"2", 
       SuperscriptBox["r", "2"]}]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"5", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Epsilon]", "\[CenterDot]", "r"}], ")"}], "3"]}], "-", 
       RowBox[{"3", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]", "\[CenterDot]", "\[Epsilon]"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]", "\[CenterDot]", "r"}], ")"}]}]}], 
      RowBox[{"2", 
       SuperscriptBox["r", "3"]}]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"35", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Epsilon]", "\[CenterDot]", "r"}], ")"}], "4"]}], "-", 
       RowBox[{"30", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]", "\[CenterDot]", "\[Epsilon]"}], ")"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Epsilon]", "\[CenterDot]", "r"}], ")"}], "2"]}], "+", 
       RowBox[{"3", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Epsilon]", "\[CenterDot]", "\[Epsilon]"}], ")"}], 
         "2"]}]}], 
      RowBox[{"8", 
       SuperscriptBox["r", "4"]}]]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.865483649617403*^9, 3.865483845553491*^9}, {
  3.865484209669525*^9, 3.865484212052739*^9}, {3.865484389894927*^9, 
  3.865484424134643*^9}, {3.865485795712842*^9, 3.86548584399946*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"e1b4a4bf-c59c-47e0-9ba5-cd7c0763476b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox["1", "r"], "-", 
    RowBox[{"dist", "[", 
     RowBox[{"r", ",", 
      RowBox[{"-", "x1"}]}], "]"}], "-", 
    RowBox[{"dist", "[", 
     RowBox[{"r", ",", "x2"}], "]"}], "+", 
    RowBox[{"dist", "[", 
     RowBox[{"r", ",", 
      RowBox[{"x2", "-", "x1"}]}], "]"}]}], "//.", "rules"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.865484012500339*^9, 3.865484082052243*^9}, {
   3.865484215813373*^9, 3.8654842210287457`*^9}, {3.8654847328729553`*^9, 
   3.865484733528624*^9}, 3.865484896714161*^9, {3.865485806239888*^9, 
   3.865485849727889*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"7196e22b-f255-462a-a290-4ee44035c83f"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"8", " ", 
    SuperscriptBox["r", "5"]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x1", "\[CenterDot]", "x2"}], ")"}], "2"]}], "-", 
    RowBox[{"140", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x1", "\[CenterDot]", "r"}], ")"}], "3"], " ", 
     RowBox[{"x2", "\[CenterDot]", "r"}]}], "-", 
    RowBox[{"12", " ", "r", " ", 
     RowBox[{"x1", "\[CenterDot]", "x1"}], " ", 
     RowBox[{"x2", "\[CenterDot]", "r"}]}], "-", 
    RowBox[{"30", " ", 
     RowBox[{"x1", "\[CenterDot]", "x1"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x2", "\[CenterDot]", "r"}], ")"}], "2"]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["r", "2"], " ", 
     RowBox[{"x2", "\[CenterDot]", "x1"}]}], "-", 
    RowBox[{"6", " ", 
     RowBox[{"x1", "\[CenterDot]", "x1"}], " ", 
     RowBox[{"x2", "\[CenterDot]", "x1"}]}], "+", 
    RowBox[{"12", " ", "r", " ", 
     RowBox[{"x2", "\[CenterDot]", "r"}], " ", 
     RowBox[{"x2", "\[CenterDot]", "x1"}]}], "+", 
    RowBox[{"30", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x2", "\[CenterDot]", "r"}], ")"}], "2"], " ", 
     RowBox[{"x2", "\[CenterDot]", "x1"}]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x2", "\[CenterDot]", "x1"}], ")"}], "2"]}], "-", 
    RowBox[{"4", " ", 
     RowBox[{"x1", "\[CenterDot]", "r"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"15", " ", "r", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x2", "\[CenterDot]", "r"}], ")"}], "2"]}], "+", 
       RowBox[{"35", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x2", "\[CenterDot]", "r"}], ")"}], "3"]}], "+", 
       RowBox[{"3", " ", 
        RowBox[{"x2", "\[CenterDot]", "r"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}], "-", 
          RowBox[{"5", " ", 
           RowBox[{"x1", "\[CenterDot]", "x1"}]}], "+", 
          RowBox[{"5", " ", 
           RowBox[{"x2", "\[CenterDot]", "x1"}]}], "-", 
          RowBox[{"5", " ", 
           RowBox[{"x2", "\[CenterDot]", "x2"}]}]}], ")"}]}], "+", 
       RowBox[{"3", " ", "r", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x2", "\[CenterDot]", "x1"}], "-", 
          RowBox[{"x2", "\[CenterDot]", "x2"}]}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"x1", "\[CenterDot]", "x2"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["r", "2"]}], "+", 
       RowBox[{"15", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x1", "\[CenterDot]", "r"}], ")"}], "2"]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"x1", "\[CenterDot]", "x1"}]}], "+", 
       RowBox[{"6", " ", "r", " ", 
        RowBox[{"x2", "\[CenterDot]", "r"}]}], "+", 
       RowBox[{"15", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x2", "\[CenterDot]", "r"}], ")"}], "2"]}], "-", 
       RowBox[{"6", " ", 
        RowBox[{"x1", "\[CenterDot]", "r"}], " ", 
        RowBox[{"(", 
         RowBox[{"r", "+", 
          RowBox[{"5", " ", 
           RowBox[{"x2", "\[CenterDot]", "r"}]}]}], ")"}]}], "+", 
       RowBox[{"3", " ", 
        RowBox[{"x2", "\[CenterDot]", "x1"}]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"x2", "\[CenterDot]", "x2"}]}]}], ")"}]}], "+", 
    RowBox[{"30", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x1", "\[CenterDot]", "r"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "r", " ", 
        RowBox[{"x2", "\[CenterDot]", "r"}]}], "+", 
       RowBox[{"7", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x2", "\[CenterDot]", "r"}], ")"}], "2"]}], "+", 
       RowBox[{"x2", "\[CenterDot]", "x1"}], "-", 
       RowBox[{"x2", "\[CenterDot]", "x2"}]}], ")"}]}], "+", 
    RowBox[{"6", " ", 
     RowBox[{"x1", "\[CenterDot]", "x1"}], " ", 
     RowBox[{"x2", "\[CenterDot]", "x2"}]}], "-", 
    RowBox[{"6", " ", 
     RowBox[{"x2", "\[CenterDot]", "x1"}], " ", 
     RowBox[{"x2", "\[CenterDot]", "x2"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.8654840684764338`*^9, 3.865484082581304*^9}, 
   3.865484222159149*^9, 3.865484435636639*^9, 3.865484494695033*^9, 
   3.865484543271656*^9, 3.8654845912090063`*^9, {3.8654846542172003`*^9, 
   3.865484685753532*^9}, 3.865484734520638*^9, {3.86548482546733*^9, 
   3.865484826697542*^9}, {3.865484878457789*^9, 3.86548489730021*^9}, 
   3.865485809777416*^9, {3.865485847648673*^9, 3.8654858504641533`*^9}},
 CellLabel->"Out[78]=",ExpressionUUID->"b2eb45b9-5433-42af-986d-22503962fecb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"reduced", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x1", "->", 
      RowBox[{
       FractionBox["m2", 
        RowBox[{"m1", "+", "m2"}]], "x"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"x2", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["m1", 
         RowBox[{"m1", "+", "m2"}]]}], "x"}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865484977515995*^9, 3.8654849837700453`*^9}, {
  3.8654851006665583`*^9, 3.865485132874604*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"babb2478-5ae3-4efd-ac11-428289a02acc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "r"], "-", 
      RowBox[{"dist", "[", 
       RowBox[{"r", ",", 
        RowBox[{"-", "x1"}]}], "]"}], "-", 
      RowBox[{"dist", "[", 
       RowBox[{"r", ",", "x2"}], "]"}], "+", 
      RowBox[{"dist", "[", 
       RowBox[{"r", ",", 
        RowBox[{"x2", "-", "x1"}]}], "]"}]}], ")"}], "//.", "reduced"}], "//.",
    "rules"}], "//", 
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{"#", ",", 
     SuperscriptBox["r", "_"], ",", " ", "Simplify"}], "]"}], 
   "&"}]}]], "Input",
 CellChangeTimes->{{3.865485147402666*^9, 3.86548515018729*^9}, {
  3.86548522386806*^9, 3.865485286380054*^9}, {3.8654855224619703`*^9, 
  3.865485559021866*^9}, {3.865485589549636*^9, 3.865485595550645*^9}, {
  3.865485685743169*^9, 3.865485718959077*^9}, {3.865485960592301*^9, 
  3.8654859940648203`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"e19f03b9-ca99-4701-b962-92489f16b2b9"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"m1", " ", "m2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "\[CenterDot]", "r"}], ")"}], "2"]}], "-", 
      RowBox[{"x", "\[CenterDot]", "x"}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"m1", "+", "m2"}], ")"}], "2"], " ", 
    SuperscriptBox["r", "3"]}]], "+", 
  FractionBox[
   RowBox[{"3", " ", "m1", " ", "m2", " ", 
    RowBox[{"x", "\[CenterDot]", "r"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "5"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "\[CenterDot]", "r"}], ")"}], "2"]}], "+", 
      RowBox[{"3", " ", 
       RowBox[{"x", "\[CenterDot]", "x"}]}]}], ")"}]}], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"m1", "+", "m2"}], ")"}], "2"], " ", 
    SuperscriptBox["r", "4"]}]], "+", 
  FractionBox[
   RowBox[{"m1", " ", "m2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["m1", "2"]}], "+", 
      RowBox[{"3", " ", "m1", " ", "m2"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["m2", "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"35", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "\[CenterDot]", "r"}], ")"}], "4"]}], "-", 
      RowBox[{"30", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "\[CenterDot]", "r"}], ")"}], "2"], " ", 
       RowBox[{"x", "\[CenterDot]", "x"}]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "\[CenterDot]", "x"}], ")"}], "2"]}]}], ")"}]}], 
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"m1", "+", "m2"}], ")"}], "4"], " ", 
    SuperscriptBox["r", "5"]}]]}]], "Output",
 CellChangeTimes->{
  3.865485150896349*^9, {3.8654852684169064`*^9, 3.865485288492217*^9}, 
   3.865485470258836*^9, {3.865485514169116*^9, 3.865485559533449*^9}, {
   3.865485591475896*^9, 3.865485595803046*^9}, {3.8654857033368397`*^9, 
   3.865485720374804*^9}, 3.8654858567845297`*^9, {3.865485962111022*^9, 
   3.8654859960790243`*^9}},
 CellLabel->"Out[88]=",ExpressionUUID->"a14c42da-1a3f-4251-ba02-d7b485e7f709"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Quartic Schrodinger equation and triconfluent Heun function (ONGOING)\
\>", "Section",
 CellChangeTimes->{{3.863855691713881*^9, 3.863855719776444*^9}, {
  3.86388412237913*^9, 
  3.863884125383718*^9}},ExpressionUUID->"06d2419f-fbb3-475c-be33-\
6fea5e17123c"],

Cell[CellGroupData[{

Cell["\<\
Spectrum (reproduce Heuuuun Lay paper, symmetric case) (SUCCESS)\
\>", "Subsection",
 CellChangeTimes->{{3.86420854117025*^9, 3.864208555698213*^9}, {
  3.864268776603902*^9, 3.8642687791006308`*^9}, {3.864274514564568*^9, 
  3.864274528882434*^9}, {3.864274698548256*^9, 3.864274702148451*^9}, {
  3.8643139891668453`*^9, 
  3.8643139937385*^9}},ExpressionUUID->"4fb6a8ac-24b6-40b0-aa29-01e36afe4b6c"],

Cell["We define the potential and the Schrodinger equation", "Text",
 CellChangeTimes->{{3.864274820517263*^9, 
  3.86427483221453*^9}},ExpressionUUID->"af6e7ac7-8506-4f8b-978a-\
df0eb900375e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"A", " ", "z"}], " ", "+", 
   SuperscriptBox["z", "2"], "+", 
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", 
    SuperscriptBox["z", "4"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq", "[", "\[Psi]_", "]"}], ":=", 
   RowBox[{"z", "\[Function]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "''"}], "[", "z", "]"}], "-", 
     RowBox[{
      RowBox[{"V", "[", "z", "]"}], 
      RowBox[{"\[Psi]", "[", "z", "]"}]}], "+", 
     RowBox[{"\[Epsilon]", " ", 
      RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.864035526701899*^9, 3.864035567764186*^9}, {
   3.86403565956774*^9, 3.864035667256592*^9}, {3.864115016484351*^9, 
   3.864115017418898*^9}, {3.8641152422780733`*^9, 3.864115267812194*^9}, {
   3.864115649334899*^9, 3.864115655364806*^9}, 3.864115695927232*^9, 
   3.864116018567485*^9, 3.864117086684123*^9, {3.8641181148079357`*^9, 
   3.864118115933967*^9}, {3.864118242001134*^9, 3.86411825792118*^9}, 
   3.8641990306553793`*^9, 3.8642010609833183`*^9, 3.86420237395303*^9, {
   3.864205586724691*^9, 3.864205587664859*^9}, 3.8642078236374598`*^9, {
   3.864208608819233*^9, 3.864208610930963*^9}, {3.864269777597616*^9, 
   3.864269777795177*^9}, {3.8642708672924137`*^9, 3.8642708773561974`*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"84e93e8d-6a83-4b8e-8587-8a32b94ff6d3"],

Cell[TextData[{
 "We perfoms two change of the active variable \[Psi]:\n- the exponential of \
cubic polynomial brings us to a standard triconfluent form\n- the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "+", "1"}], ")"}], 
    RowBox[{"some", " ", "power"}]], TraditionalForm]],ExpressionUUID->
  "1fe462ea-593b-43e5-ae1b-9e9f8bcb1459"],
 "allows to get nice polynomial coeffients in the ODE eventually, hence nice \
difference equations"
}], "Text",
 CellChangeTimes->{{3.864274840389675*^9, 
  3.864274940086256*^9}},ExpressionUUID->"1ddbe78d-48e3-4e46-9a06-\
2777ad0b30e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eq2", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["z", 
           RowBox[{"2", " ", "\[Lambda]"}]]}], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["z", "3"], " ", "\[Lambda]"}], "3"]}]], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"z", "+", "1"}], ")"}], 
        RowBox[{
         FractionBox[
          RowBox[{"-", "A"}], 
          RowBox[{"2", "\[Lambda]"}]], "-", "1"}]]}]], 
     RowBox[{
      RowBox[{"eq", "[", 
       RowBox[{"z", "\[Function]", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["z", 
             RowBox[{"2", " ", "\[Lambda]"}]]}], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["z", "3"], " ", "\[Lambda]"}], "3"]}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"z", "+", "1"}], ")"}], 
          RowBox[{
           FractionBox[
            RowBox[{"-", "A"}], 
            RowBox[{"2", "\[Lambda]"}]], "-", "1"}]], 
         RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", "]"}]}], "//", 
    "FullSimplify"}]}]}]], "Input",
 CellChangeTimes->{{3.864118163342272*^9, 3.864118163421801*^9}, {
   3.8641182338242292`*^9, 3.8641182794537277`*^9}, {3.864118309938342*^9, 
   3.8641183532169247`*^9}, {3.864118384770278*^9, 3.864118397361452*^9}, {
   3.86419901804711*^9, 3.864199020958868*^9}, 3.864199267933145*^9, {
   3.864199361245159*^9, 3.864199363388564*^9}, 3.864201067883738*^9, {
   3.8642023845592937`*^9, 3.8642023977426434`*^9}, {3.864202740227565*^9, 
   3.864202750578661*^9}, {3.864203210996903*^9, 3.864203221267009*^9}, {
   3.864203261029221*^9, 3.864203279172521*^9}, {3.864204269612*^9, 
   3.864204278153284*^9}, {3.864204353340111*^9, 3.864204375658196*^9}, {
   3.8642046023818207`*^9, 3.864204606220006*^9}, {3.86420559214673*^9, 
   3.864205635889922*^9}, 3.8642069206506863`*^9, 3.8642069619650087`*^9, {
   3.864269780717699*^9, 3.864269784781036*^9}},
 CellLabel->
  "In[266]:=",ExpressionUUID->"d74e46a9-fda7-4591-8646-42e8c414633f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq2", "[", "w", "]"}], "[", "z", "]"}], ",", 
    RowBox[{"w", "[", "z", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq2", "[", "w", "]"}], "[", "z", "]"}], ",", 
    RowBox[{
     RowBox[{"w", "'"}], "[", "z", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq2", "[", "w", "]"}], "[", "z", "]"}], ",", 
    RowBox[{
     RowBox[{"w", "''"}], "[", "z", "]"}]}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864199394588778*^9, 3.8641993997877407`*^9}, {
  3.864203286467333*^9, 3.864203317764724*^9}},
 CellLabel->
  "In[267]:=",ExpressionUUID->"1de40967-077e-4c16-8cf0-3579c64ced88"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "A", "+", "z"}], ")"}], "2"], "+", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"3", " ", "A"}], "+", 
      RowBox[{"2", " ", "z"}]}], ")"}], " ", "\[Lambda]"}], "+", 
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{"2", "-", 
      RowBox[{"A", " ", "z", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "z"}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "z"}], ")"}], "2"], " ", "\[Epsilon]"}]}], ")"}], 
    " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "-", 
   RowBox[{"8", " ", "z", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "z"}], ")"}], " ", 
    SuperscriptBox["\[Lambda]", "3"]}]}], 
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "z"}], ")"}], "2"], " ", 
   SuperscriptBox["\[Lambda]", "2"]}]]], "Output",
 CellChangeTimes->{
  3.864199400217688*^9, 3.864200569099619*^9, 3.864201070856123*^9, 
   3.8642024092467127`*^9, 3.86420268648132*^9, 3.864202755343679*^9, 
   3.8642032252399473`*^9, {3.864203283160215*^9, 3.864203318304611*^9}, 
   3.864204287776752*^9, {3.864204361417345*^9, 3.864204378559536*^9}, 
   3.864204608238007*^9, 3.864205602578372*^9, 3.864205641680298*^9, 
   3.86420613475618*^9, 3.8642067315017776`*^9, 3.864206877340289*^9, {
   3.864206952827579*^9, 3.864206974927493*^9}, 3.864208619279738*^9, 
   3.864233324222658*^9, 3.8642687879208183`*^9, 3.86426979078118*^9, 
   3.864270883570698*^9, 3.8642709411447287`*^9, 3.864274666836255*^9, 
   3.8643151129220343`*^9},
 CellLabel->
  "Out[267]=",ExpressionUUID->"fb0912a7-c9d2-401d-8a91-22b451992e79"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"1", "+", "A", "+", "z", "+", 
    RowBox[{"2", " ", "\[Lambda]"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["z", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "z"}], ")"}], " ", 
     SuperscriptBox["\[Lambda]", "2"]}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "z"}], ")"}], " ", "\[Lambda]"}]]}]], "Output",
 CellChangeTimes->{
  3.864199400217688*^9, 3.864200569099619*^9, 3.864201070856123*^9, 
   3.8642024092467127`*^9, 3.86420268648132*^9, 3.864202755343679*^9, 
   3.8642032252399473`*^9, {3.864203283160215*^9, 3.864203318304611*^9}, 
   3.864204287776752*^9, {3.864204361417345*^9, 3.864204378559536*^9}, 
   3.864204608238007*^9, 3.864205602578372*^9, 3.864205641680298*^9, 
   3.86420613475618*^9, 3.8642067315017776`*^9, 3.864206877340289*^9, {
   3.864206952827579*^9, 3.864206974927493*^9}, 3.864208619279738*^9, 
   3.864233324222658*^9, 3.8642687879208183`*^9, 3.86426979078118*^9, 
   3.864270883570698*^9, 3.8642709411447287`*^9, 3.864274666836255*^9, 
   3.8643151129521027`*^9},
 CellLabel->
  "Out[268]=",ExpressionUUID->"baaaeb62-ab7c-4a3e-b552-8adf01fdfb09"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.864199400217688*^9, 3.864200569099619*^9, 3.864201070856123*^9, 
   3.8642024092467127`*^9, 3.86420268648132*^9, 3.864202755343679*^9, 
   3.8642032252399473`*^9, {3.864203283160215*^9, 3.864203318304611*^9}, 
   3.864204287776752*^9, {3.864204361417345*^9, 3.864204378559536*^9}, 
   3.864204608238007*^9, 3.864205602578372*^9, 3.864205641680298*^9, 
   3.86420613475618*^9, 3.8642067315017776`*^9, 3.864206877340289*^9, {
   3.864206952827579*^9, 3.864206974927493*^9}, 3.864208619279738*^9, 
   3.864233324222658*^9, 3.8642687879208183`*^9, 3.86426979078118*^9, 
   3.864270883570698*^9, 3.8642709411447287`*^9, 3.864274666836255*^9, 
   3.864315112965383*^9},
 CellLabel->
  "Out[269]=",ExpressionUUID->"6edb00ea-1ab0-49eb-a003-241152284807"]
}, Open  ]],

Cell["\<\
We perform a change of passive variable to move to the [0,1] segment\
\>", "Text",
 CellChangeTimes->{{3.864274950694655*^9, 
  3.864274983848119*^9}},ExpressionUUID->"0958cbc1-8933-45d5-973f-\
60968a48490a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "==", 
      FractionBox["z", 
       RowBox[{"z", "+", "1"}]]}], "}"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.864202530337821*^9, 3.8642025455519876`*^9}, {
  3.864203679909642*^9, 3.864203695046502*^9}},
 CellLabel->
  "In[270]:=",ExpressionUUID->"98d15196-f75a-4bc5-8886-1e7a98d79a02"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["x", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.864203689655448*^9, 3.864203695378886*^9}, 
   3.864269792992223*^9, 3.8642746682788057`*^9, 3.864315114649518*^9},
 CellLabel->
  "Out[270]=",ExpressionUUID->"164f90da-6785-49e8-a000-424c4b537be2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"eq3", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox["#1", 
            RowBox[{"#1", "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{"1", "-", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}]], "Input",
 CellChangeTimes->{{3.864203669237536*^9, 3.864203704773901*^9}, {
   3.86420374226264*^9, 3.864203743862155*^9}, 3.864206662091394*^9, 
   3.864206908747628*^9, {3.864206958892559*^9, 3.864206981146277*^9}},
 CellLabel->
  "In[271]:=",ExpressionUUID->"38a8245a-412c-48d8-91d3-00ef68dc20ed"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "''"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "'"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{"w", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.8642037726793327`*^9, 3.8642037733193197`*^9}, 
   3.864203841368194*^9, {3.864203871495387*^9, 3.86420387333617*^9}, {
   3.864233302991518*^9, 3.864233341187462*^9}, {3.864234200547615*^9, 
   3.864234220187737*^9}, {3.864234307141831*^9, 3.864234318258086*^9}},
 CellLabel->
  "In[272]:=",ExpressionUUID->"ae35ea29-c65c-4a07-85f3-690b748e058e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "4"}], ",", "6", ",", 
   RowBox[{"-", "4"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.864203769203957*^9, 3.864203773723669*^9}, 
   3.8642038839002237`*^9, 3.86420429734442*^9, {3.8642043658496733`*^9, 
   3.8642043812811317`*^9}, 3.864204611122548*^9, 3.864205610176165*^9, 
   3.864205646503018*^9, 3.864206139995728*^9, 3.8642066656742573`*^9, 
   3.864206735208364*^9, 3.864206882136869*^9, {3.8642069563148212`*^9, 
   3.8642069832787457`*^9}, 3.864208626856995*^9, {3.86423332972937*^9, 
   3.864233341917458*^9}, 3.864234220866138*^9, 3.864234318747604*^9, 
   3.8642688059221992`*^9, 3.864269801862112*^9, 3.864270891440317*^9, 
   3.864270946613575*^9, 3.86427467203085*^9, 3.8643151181712313`*^9},
 CellLabel->
  "Out[272]=",ExpressionUUID->"33041c6e-fc0a-4a20-bb60-3cb51e3e5cc3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", "A", "+", 
      RowBox[{"4", " ", "\[Lambda]"}]}], "\[Lambda]"]}], ",", 
   RowBox[{"12", "+", 
    FractionBox[
     RowBox[{"2", "+", 
      RowBox[{"3", " ", "A"}]}], "\[Lambda]"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"3", " ", "A"}], "+", 
      RowBox[{"2", " ", "\[Lambda]", " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", "\[Lambda]"}], ")"}]}]}], "\[Lambda]"]}], ",", 
   RowBox[{"4", "+", 
    FractionBox["A", "\[Lambda]"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864203769203957*^9, 3.864203773723669*^9}, 
   3.8642038839002237`*^9, 3.86420429734442*^9, {3.8642043658496733`*^9, 
   3.8642043812811317`*^9}, 3.864204611122548*^9, 3.864205610176165*^9, 
   3.864205646503018*^9, 3.864206139995728*^9, 3.8642066656742573`*^9, 
   3.864206735208364*^9, 3.864206882136869*^9, {3.8642069563148212`*^9, 
   3.8642069832787457`*^9}, 3.864208626856995*^9, {3.86423332972937*^9, 
   3.864233341917458*^9}, 3.864234220866138*^9, 3.864234318747604*^9, 
   3.8642688059221992`*^9, 3.864269801862112*^9, 3.864270891440317*^9, 
   3.864270946613575*^9, 3.86427467203085*^9, 3.864315118196876*^9},
 CellLabel->
  "Out[273]=",ExpressionUUID->"30e68b07-c485-4362-ac4e-712b0fdce095"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "+", 
     SuperscriptBox["A", "2"], "+", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"6", " ", "\[Lambda]"}]}], ")"}]}], "+", 
     RowBox[{"4", " ", "\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]"}], ")"}], " ", "\[Lambda]"}]}], 
       ")"}]}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", "+", 
        RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "A", "+", 
        RowBox[{"2", " ", "\[Lambda]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Lambda]"}], ")"}]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "+", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"A", "+", 
       RowBox[{"4", " ", "\[Lambda]"}]}], ")"}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.864203769203957*^9, 3.864203773723669*^9}, 
   3.8642038839002237`*^9, 3.86420429734442*^9, {3.8642043658496733`*^9, 
   3.8642043812811317`*^9}, 3.864204611122548*^9, 3.864205610176165*^9, 
   3.864205646503018*^9, 3.864206139995728*^9, 3.8642066656742573`*^9, 
   3.864206735208364*^9, 3.864206882136869*^9, {3.8642069563148212`*^9, 
   3.8642069832787457`*^9}, 3.864208626856995*^9, {3.86423332972937*^9, 
   3.864233341917458*^9}, 3.864234220866138*^9, 3.864234318747604*^9, 
   3.8642688059221992`*^9, 3.864269801862112*^9, 3.864270891440317*^9, 
   3.864270946613575*^9, 3.86427467203085*^9, 3.864315118224463*^9},
 CellLabel->
  "Out[274]=",ExpressionUUID->"d556e031-1edc-4838-938d-ffc28c3794cc"]
}, Open  ]],

Cell["\<\
The coefficients of the ODE are simple polynomials now. Let us extract and \
name the coefficients of those polynomials\
\>", "Text",
 CellChangeTimes->{{3.864274994666313*^9, 
  3.864275028944138*^9}},ExpressionUUID->"79540f38-fbda-4966-a2f6-\
102b2e3ba4f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", "A", "+", 
      RowBox[{"4", " ", "\[Lambda]"}]}], "\[Lambda]"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"12", "+", 
    FractionBox[
     RowBox[{"2", "+", 
      RowBox[{"3", " ", "A"}]}], "\[Lambda]"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"3", " ", "A"}], "+", 
      RowBox[{"2", " ", "\[Lambda]", " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", "\[Lambda]"}], ")"}]}]}], "\[Lambda]"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", 
   RowBox[{"4", "+", 
    FractionBox["A", "\[Lambda]"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", 
   FractionBox[
    RowBox[{"1", "+", 
     SuperscriptBox["A", "2"], "+", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"6", " ", "\[Lambda]"}]}], ")"}]}], "+", 
     RowBox[{"4", " ", "\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]"}], ")"}], " ", "\[Lambda]"}]}], 
       ")"}]}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", "+", 
        RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "A", "+", 
        RowBox[{"2", " ", "\[Lambda]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Lambda]"}], ")"}]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}]}], ";", 
  RowBox[{"l", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "+", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"A", "+", 
       RowBox[{"4", " ", "\[Lambda]"}]}], ")"}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8642697470308247`*^9, 3.8642697719328527`*^9}, {
   3.8642698050613003`*^9, 3.864269809694182*^9}, {3.864269920748795*^9, 
   3.864269997090382*^9}, 3.864270965722127*^9},
 CellLabel->
  "In[275]:=",ExpressionUUID->"3cc96c75-42ec-4eaf-a407-f7b7b6281298"],

Cell[TextData[{
 "Ansatz for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"w", 
     RowBox[{"(", "x", ")"}]}], "=", 
    RowBox[{"\[Sum]", 
     RowBox[{
      SubscriptBox["\[Alpha]", "n"], 
      SuperscriptBox["x", "n"]}]}]}], TraditionalForm]],ExpressionUUID->
  "2364c818-b65c-475d-9421-66c667f1dd82"],
 ", we get the following difference equations"
}], "Text",
 CellChangeTimes->{{3.8642750419140577`*^9, 3.864275053063743*^9}, {
  3.864275110366568*^9, 
  3.8642751370634737`*^9}},ExpressionUUID->"bb90b2f1-f02d-427e-be13-\
9bf8cb4a5d83"],

Cell[BoxData[
 RowBox[{
  RowBox[{"diffEq", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"n", "+", "2"}], ")"}], "a", " ", 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "+", "2"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "b"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "f"}]}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "+", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "n", " ", "c"}], "+", 
      RowBox[{"n", " ", "g"}], "+", "j"}], ")"}], 
    SubscriptBox["\[Alpha]", "n"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "d"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "h"}], "+", "k"}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "-", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "3"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "e"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "i"}], "+", "l"}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "-", "2"}]]}]}]}]], "Input",
 CellChangeTimes->{{3.864270018911315*^9, 3.8642702462416697`*^9}, {
  3.8642705156994133`*^9, 3.8642705159562902`*^9}},
 CellLabel->
  "In[286]:=",ExpressionUUID->"8eda7c4e-f0c4-4baa-8ba8-117e62050539"],

Cell["\<\
The initial condition C0, C1 are fixed according to the paper of Lay.
We also gather the two first equations\
\>", "Text",
 CellChangeTimes->{{3.864275145180252*^9, 
  3.864275191066702*^9}},ExpressionUUID->"b392c7c2-6fb5-4d34-86ee-\
3b44e01ecef0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"C0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"C1", "=", 
   RowBox[{"1", "+", 
    FractionBox["1", 
     RowBox[{"2", "\[Lambda]"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialEq", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Alpha]", "0"], "-", "C0"}], ",", 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], "-", "C1"}], ",", 
     RowBox[{
      RowBox[{"2", "a", " ", 
       SubscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"f", " ", 
       SubscriptBox["\[Alpha]", "1"]}], "+", 
      RowBox[{"j", " ", 
       SubscriptBox["\[Alpha]", "0"]}]}], ",", 
     RowBox[{
      RowBox[{"6", "a", " ", 
       SubscriptBox["\[Alpha]", "3"]}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"b", "+", "f"}], ")"}], 
       SubscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"g", "+", "j"}], ")"}], 
       SubscriptBox["\[Alpha]", "1"]}], "+", 
      RowBox[{"k", " ", 
       SubscriptBox["\[Alpha]", "0"]}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.864270380769575*^9, 3.864270544385949*^9}, {
  3.864270681732925*^9, 3.8642707092690983`*^9}},
 CellLabel->
  "In[287]:=",ExpressionUUID->"5c1f63e4-2c5a-4e2c-8283-1f0efb2a34f3"],

Cell["\<\
We solve for the coefficients of the series expansion for a large value of n\
\>", "Text",
 CellChangeTimes->{{3.8642751963474607`*^9, 
  3.8642752191768208`*^9}},ExpressionUUID->"005a7ee8-eeee-4101-ae6e-\
7aa47dbefeac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nmax", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]large", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"initialEq", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"diffEq", "[", "n", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "2", ",", 
              RowBox[{"Nmax", "-", "2"}]}], "}"}]}], "]"}]}], "]"}], "==", 
        "0"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["\[Alpha]", "m"], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"Nmax", "+", "1"}], ",", "2"}], "]"}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.8642703216466703`*^9, 3.864270374397962*^9}, {
  3.8642705513296633`*^9, 3.8642705574736023`*^9}, {3.8642706051077547`*^9, 
  3.864270674659809*^9}, {3.864270719493314*^9, 3.864270843494506*^9}, {
  3.864270983647256*^9, 3.864270983916497*^9}, {3.864271384077087*^9, 
  3.864271391467572*^9}, {3.864271456796391*^9, 3.864271566285283*^9}, {
  3.864272670480879*^9, 3.8642726706307497`*^9}, {3.864315134419746*^9, 
  3.86431516409398*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"85e5043e-67e4-4f5a-8952-714bcda11643"],

Cell["\<\
The zeros of that large coefficient as a function of the energy parameter \
\[Epsilon] correspond to the spectum of the model.\
\>", "Text",
 CellChangeTimes->{{3.864275243849395*^9, 
  3.864275278617496*^9}},ExpressionUUID->"dd5bf477-fccd-438e-9230-\
60962ef700d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{"\[Alpha]large", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"A", "->", "0"}], ",", 
      RowBox[{"\[Lambda]", "->", "1"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.864272516042613*^9, 3.864272581235248*^9}, {
  3.864272630956184*^9, 3.864272652997024*^9}},
 CellLabel->
  "In[298]:=",ExpressionUUID->"ce1e471b-8455-4ab8-b805-57b7eef7f240"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Epsilon]", "\[Rule]", "1.3923542649859058`"}], "}"}]], "Output",
 CellChangeTimes->{{3.864272582474341*^9, 3.864272653692486*^9}, 
   3.8642727233006563`*^9, 3.864315179215034*^9},
 CellLabel->
  "Out[298]=",ExpressionUUID->"b7cfb2ba-02e2-4938-a940-b4ace841e389"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Spectrum (reproduce Heuuuun Lay paper, asymmetric case) (SUCCESS)\
\>", "Subsection",
 CellChangeTimes->{{3.864274692548676*^9, 3.864274722704041*^9}, {
  3.864314024517017*^9, 3.8643140265519753`*^9}, {3.8643174618391237`*^9, 
  3.864317462881097*^9}},ExpressionUUID->"9a018dee-75b4-427b-b19e-\
bfe63377c498"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GENERIC", " ", "COMMENT", " ", "ABOUT", " ", "THIS", " ", 
   RowBox[{"SECTION", ":", " ", 
    RowBox[{
    "contrary", " ", "to", " ", "the", " ", "case", " ", "of", " ", "an", " ",
      "even", " ", "potential"}]}]}], ",", " ", 
  RowBox[{
  "one", " ", "here", " ", "has", " ", "to", " ", "keep", " ", "track", " ", 
   "of", " ", "both", " ", "the", " ", "positive", " ", "x", " ", "and", " ", 
   "the", " ", "negative", " ", "x", " ", "solutions"}]}]], "Text",
 CellChangeTimes->{{3.8643119982628927`*^9, 
  3.864312056801162*^9}},ExpressionUUID->"1bc7fad4-1ed3-4c4e-b071-\
f91444251558"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"A", " ", "z"}], " ", "+", 
   SuperscriptBox["z", "2"], "+", 
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", 
    SuperscriptBox["z", "4"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq", "[", "\[Psi]_", "]"}], ":=", 
   RowBox[{"z", "\[Function]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "''"}], "[", "z", "]"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Epsilon]", "-", 
        RowBox[{"V", "[", "z", "]"}]}], ")"}], 
      RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.864035526701899*^9, 3.864035567764186*^9}, {
   3.86403565956774*^9, 3.864035667256592*^9}, {3.864115016484351*^9, 
   3.864115017418898*^9}, {3.8641152422780733`*^9, 3.864115267812194*^9}, {
   3.864115649334899*^9, 3.864115655364806*^9}, 3.864115695927232*^9, 
   3.864116018567485*^9, 3.864117086684123*^9, {3.8641181148079357`*^9, 
   3.864118115933967*^9}, {3.864118242001134*^9, 3.86411825792118*^9}, 
   3.8641990306553793`*^9, 3.8642010609833183`*^9, 3.86420237395303*^9, {
   3.864205586724691*^9, 3.864205587664859*^9}, 3.8642078236374598`*^9, {
   3.864208608819233*^9, 3.864208610930963*^9}, {3.864269777597616*^9, 
   3.864269777795177*^9}, {3.8642708672924137`*^9, 3.8642708773561974`*^9}, {
   3.8642754046018677`*^9, 3.864275412761997*^9}, {3.8642866904537773`*^9, 
   3.8642867029554768`*^9}, {3.864286770795536*^9, 3.864286800475404*^9}, {
   3.864314038337064*^9, 3.86431405733097*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"834b4028-bc20-4ff1-8341-cc2df7927880"],

Cell["\<\
Now we need to find the correct change of variable for the active variable \
\[Psi], for this, let us get inspiration from the analytical solution \
provided by Mathematica:\
\>", "Text",
 CellChangeTimes->{{3.864275423626759*^9, 
  3.864275481754038*^9}},ExpressionUUID->"34d5bb7d-55f5-4b3c-b5d3-\
f0f50f01e81b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"eq", "[", "\[Psi]", "]"}], "[", "z", "]"}], "==", "0"}], ",", 
    RowBox[{"\[Psi]", "[", "z", "]"}], ",", "z"}], "]"}], "//", 
  "PowerExpand"}]], "Input",
 CellChangeTimes->{{3.8642754848765173`*^9, 3.8642755082360373`*^9}, {
  3.864275949123186*^9, 3.864275950754225*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"567ecf2c-0687-46cd-ae07-f3c4181be0be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Psi]", "[", "z", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["z", "2"], " ", 
             SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
         RowBox[{"6", " ", "\[Lambda]"}]]}]], " ", 
      TemplateBox[{"2"},
       "C"], " ", 
      RowBox[{"HeunT", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Epsilon]"}], "-", 
         FractionBox["1", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
        RowBox[{
         RowBox[{"-", "A"}], "-", 
         RowBox[{"2", " ", "\[Lambda]"}]}], ",", 
        RowBox[{"-", 
         FractionBox["1", "\[Lambda]"]}], ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Lambda]"}], ",", "z"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"z", " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["z", "2"], " ", 
            SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
        RowBox[{"6", " ", "\[Lambda]"}]]], " ", 
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"HeunT", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Epsilon]"}], "-", 
         FractionBox["1", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
        RowBox[{
         RowBox[{"-", "A"}], "+", 
         RowBox[{"2", " ", "\[Lambda]"}]}], ",", 
        FractionBox["1", "\[Lambda]"], ",", "0", ",", 
        RowBox[{"2", " ", "\[Lambda]"}], ",", "z"}], "]"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.864275505072137*^9, 3.864275520794508*^9}, 
   3.8642759513363037`*^9, 3.8642868069716597`*^9, 3.864312218853105*^9, 
   3.86431406782215*^9, 3.864315062348353*^9, 3.864315192697967*^9, 
   3.864315893214758*^9, 3.864356928796708*^9, 3.86435750678784*^9, 
   3.864357809844928*^9, 3.864359481537784*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"26ecd390-aba1-4087-8871-86790927e985"]
}, Open  ]],

Cell[TextData[{
 "So now we have the exponential change of variable.\nRemains the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "+", "1"}], ")"}], 
    RowBox[{"some", " ", "power"}]], TraditionalForm]],ExpressionUUID->
  "85bbd925-48c4-413a-9e2d-441f11e6a7ec"],
 " to fix. Let us call the generic power \[Mu]"
}], "Text",
 CellChangeTimes->{{3.864275595259122*^9, 
  3.864275672684463*^9}},ExpressionUUID->"63dd1d47-b10f-4817-bbca-\
f4d49fbc49b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq2Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["z", "2"], " ", 
             SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
         RowBox[{"6", " ", "\[Lambda]"}]]}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "+", "1"}], ")"}], "\[Mu]"]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"z", " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["z", "2"], " ", 
               SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
           RowBox[{"6", " ", "\[Lambda]"}]]}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"z", "+", "1"}], ")"}], "\[Mu]"], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"z", " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["z", "2"], " ", 
            SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
        RowBox[{"6", " ", "\[Lambda]"}]]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "z"}], "+", "1"}], ")"}], "\[Mu]"]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"z", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["z", "2"], " ", 
              SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
          RowBox[{"6", " ", "\[Lambda]"}]]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "z"}], "+", "1"}], ")"}], "\[Mu]"], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.864118163342272*^9, 3.864118163421801*^9}, {
   3.8641182338242292`*^9, 3.8641182794537277`*^9}, {3.864118309938342*^9, 
   3.8641183532169247`*^9}, {3.864118384770278*^9, 3.864118397361452*^9}, {
   3.86419901804711*^9, 3.864199020958868*^9}, 3.864199267933145*^9, {
   3.864199361245159*^9, 3.864199363388564*^9}, 3.864201067883738*^9, {
   3.8642023845592937`*^9, 3.8642023977426434`*^9}, {3.864202740227565*^9, 
   3.864202750578661*^9}, {3.864203210996903*^9, 3.864203221267009*^9}, {
   3.864203261029221*^9, 3.864203279172521*^9}, {3.864204269612*^9, 
   3.864204278153284*^9}, {3.864204353340111*^9, 3.864204375658196*^9}, {
   3.8642046023818207`*^9, 3.864204606220006*^9}, {3.86420559214673*^9, 
   3.864205635889922*^9}, 3.8642069206506863`*^9, 3.8642069619650087`*^9, {
   3.864269780717699*^9, 3.864269784781036*^9}, {3.8642756794382143`*^9, 
   3.8642757264933233`*^9}, {3.8642759668761806`*^9, 3.86427598791363*^9}, {
   3.864286840898326*^9, 3.864286843151375*^9}, {3.864312073767428*^9, 
   3.864312114422969*^9}, {3.864312160160754*^9, 3.864312176013809*^9}, {
   3.86431242063426*^9, 3.864312427109799*^9}, {3.864314084672647*^9, 
   3.8643140943303957`*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"8a4d73c9-dde8-4f0b-a719-4579030983aa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
    RowBox[{
     RowBox[{"w", "''"}], "[", "z", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
    RowBox[{
     RowBox[{"w", "'"}], "[", "z", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
    RowBox[{"w", "[", "z", "]"}]}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.8643594884797277`*^9, 3.8643595482514753`*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"4586e6fa-2dfc-4003-8e4c-40d67b2646a1"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.8643594944807053`*^9, 3.864359506652858*^9}, 
   3.864359549285125*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"d8b73688-ffe3-4257-8139-97523ac944bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "\[Lambda]"]}], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["z", "2"], " ", "\[Lambda]"}], "+", 
  FractionBox[
   RowBox[{"2", " ", "\[Mu]"}], 
   RowBox[{"1", "+", "z"}]]}]], "Output",
 CellChangeTimes->{{3.8643594944807053`*^9, 3.864359506652858*^9}, 
   3.864359549312546*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"8458653e-cf67-4695-9c3a-4ff61141e89d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "A"}], " ", "z"}], "+", "\[Epsilon]", "+", 
  FractionBox["1", 
   RowBox[{"4", " ", 
    SuperscriptBox["\[Lambda]", "2"]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", "z", " ", "\[Lambda]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "z", "+", 
      RowBox[{"z", " ", "\[Mu]"}]}], ")"}]}], 
   RowBox[{"1", "+", "z"}]], "-", 
  FractionBox[
   RowBox[{"\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "z", "+", "\[Lambda]", "-", 
      RowBox[{"\[Lambda]", " ", "\[Mu]"}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "z"}], ")"}], "2"], " ", "\[Lambda]"}]]}]], "Output",
 CellChangeTimes->{{3.8643594944807053`*^9, 3.864359506652858*^9}, 
   3.864359550034553*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"cc4d8ca7-e128-452f-90ff-3a2fa73957de"]
}, Open  ]],

Cell["\<\
We perform a change of passive variable to move to the [0,1] segment\
\>", "Text",
 CellChangeTimes->{{3.864274950694655*^9, 
  3.864274983848119*^9}},ExpressionUUID->"61814ecc-3337-46d1-b0c1-\
b0388c251e9d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "==", 
      FractionBox["z", 
       RowBox[{"z", "+", "1"}]]}], "}"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "==", 
      FractionBox[
       RowBox[{"-", "z"}], 
       RowBox[{
        RowBox[{"-", "z"}], "+", "1"}]]}], "}"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864202530337821*^9, 3.8642025455519876`*^9}, {
   3.864203679909642*^9, 3.864203695046502*^9}, {3.8643125792997847`*^9, 
   3.864312584998733*^9}, 3.864312739399147*^9, 3.864312846895759*^9, {
   3.864313227672843*^9, 3.8643132302920513`*^9}, {3.8643145689046507`*^9, 
   3.864314569046402*^9}, {3.86435803966252*^9, 
   3.8643580553084383`*^9}},ExpressionUUID->"88ee5e8d-c2f4-4100-90c9-\
14832197358b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["x", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.864203689655448*^9, 3.864203695378886*^9}, 
   3.864269792992223*^9, 3.8642746682788057`*^9, 3.864312585566846*^9, 
   3.8643127402473993`*^9, 3.864312853051523*^9, 3.864313274121306*^9, 
   3.86431519558722*^9, 3.8643569316581*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"d46bd5ac-645a-41b9-8abe-693bd929602f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    FractionBox["x", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.864203689655448*^9, 3.864203695378886*^9}, 
   3.864269792992223*^9, 3.8642746682788057`*^9, 3.864312585566846*^9, 
   3.8643127402473993`*^9, 3.864312853051523*^9, 3.864313274121306*^9, 
   3.86431519558722*^9, 3.864356931660839*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"8b2183cb-9694-468c-9873-25aa150b1d06"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq3Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox["#1", 
            RowBox[{"#1", "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{"1", "-", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Minus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox[
            RowBox[{"-", "#1"}], 
            RowBox[{
             RowBox[{"-", "#1"}], "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}]}], "Input",
 CellChangeTimes->{{3.864203669237536*^9, 3.864203704773901*^9}, {
   3.86420374226264*^9, 3.864203743862155*^9}, 3.864206662091394*^9, 
   3.864206908747628*^9, {3.864206958892559*^9, 3.864206981146277*^9}, 
   3.864312121357253*^9, {3.8643121835475197`*^9, 3.8643121837888403`*^9}, {
   3.86431223160461*^9, 3.8643122468096533`*^9}, {3.864312635132743*^9, 
   3.864312642965464*^9}, {3.8643127437881927`*^9, 3.8643127515382442`*^9}, {
   3.864312859386508*^9, 3.86431288216315*^9}, {3.864313285147183*^9, 
   3.8643132933196983`*^9}, {3.864314583629097*^9, 3.864314588994113*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"1ff717bb-3ead-401d-9431-2256548e14fd"],

Cell["\<\
Now we need to fix the power \[Mu] in order for the coefficient of w[x] to be \
a polynomial in x\
\>", "Text",
 CellChangeTimes->{{3.8642760369276342`*^9, 
  3.8642760992304163`*^9}},ExpressionUUID->"6925a1b0-36fc-428d-9b91-\
08317d5f25c9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
    RowBox[{"w", "[", "x", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
    RowBox[{"w", "[", "x", "]"}]}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864276203478758*^9, 3.8642762449628353`*^9}, {
   3.864276415361682*^9, 3.864276443868231*^9}, 3.864312127163787*^9, {
   3.864312262542098*^9, 3.8643122664867067`*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"a7647c65-9d28-4012-b3f5-1ef7c7c8c30a"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", "x", "+", 
   RowBox[{"4", " ", "A", " ", "x", " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "-", 
   RowBox[{"4", " ", "\[Epsilon]", " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "+", 
   RowBox[{"4", " ", "x", " ", "\[Epsilon]", " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "+", 
   RowBox[{"8", " ", "x", " ", 
    SuperscriptBox["\[Lambda]", "3"]}], "+", 
   RowBox[{"4", " ", "\[Lambda]", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", "\[Lambda]"}], 
      "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["x", "2"], " ", 
       SuperscriptBox["\[Lambda]", "2"]}]}], ")"}], " ", "\[Mu]"}], "+", 
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
    SuperscriptBox["\[Lambda]", "2"], " ", 
    SuperscriptBox["\[Mu]", "2"]}]}], 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
   SuperscriptBox["\[Lambda]", "2"]}]]], "Output",
 CellChangeTimes->{{3.86427621846246*^9, 3.864276245125049*^9}, {
   3.864276419853499*^9, 3.864276444262329*^9}, 3.864286853987031*^9, 
   3.864312268584391*^9, 3.864312444627284*^9, 3.8643126484910307`*^9, 
   3.864312763725235*^9, {3.864312868911336*^9, 3.8643128850649652`*^9}, 
   3.864313297462576*^9, 3.864314108890142*^9, 3.8643150703272*^9, 
   3.864315199292749*^9, 3.8643596371011047`*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"e59923ea-665b-4967-a019-4c7f1a9523de"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", "x", "-", 
   RowBox[{"4", " ", "A", " ", "x", " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "-", 
   RowBox[{"4", " ", "\[Epsilon]", " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "+", 
   RowBox[{"4", " ", "x", " ", "\[Epsilon]", " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "+", 
   RowBox[{"8", " ", "x", " ", 
    SuperscriptBox["\[Lambda]", "3"]}], "+", 
   RowBox[{"4", " ", "\[Lambda]", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", "\[Lambda]"}], 
      "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["x", "2"], " ", 
       SuperscriptBox["\[Lambda]", "2"]}]}], ")"}], " ", "\[Mu]"}], "+", 
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
    SuperscriptBox["\[Lambda]", "2"], " ", 
    SuperscriptBox["\[Mu]", "2"]}]}], 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
   SuperscriptBox["\[Lambda]", "2"]}]]], "Output",
 CellChangeTimes->{{3.86427621846246*^9, 3.864276245125049*^9}, {
   3.864276419853499*^9, 3.864276444262329*^9}, 3.864286853987031*^9, 
   3.864312268584391*^9, 3.864312444627284*^9, 3.8643126484910307`*^9, 
   3.864312763725235*^9, {3.864312868911336*^9, 3.8643128850649652`*^9}, 
   3.864313297462576*^9, 3.864314108890142*^9, 3.8643150703272*^9, 
   3.864315199292749*^9, 3.864359637316923*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"96fba8ff-1be5-4e01-b5fd-b3afbacc8b9e"]
}, Open  ]],

Cell["\[Mu] should be such that -1+x divides the above numerator", "Text",
 CellChangeTimes->{{3.8642771359749947`*^9, 
  3.864277156949697*^9}},ExpressionUUID->"553008ed-4b8a-4a26-a9f4-\
5fd1ff882c1b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"muPlus", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PolynomialRemainder", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "+", "x", "+", 
          RowBox[{"4", " ", "A", " ", "x", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], "-", 
          RowBox[{"4", " ", "\[Epsilon]", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], "+", 
          RowBox[{"4", " ", "x", " ", "\[Epsilon]", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], "+", 
          RowBox[{"8", " ", "x", " ", 
           SuperscriptBox["\[Lambda]", "3"]}], "+", 
          RowBox[{"4", " ", "\[Lambda]", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], "-", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
              "\[Lambda]"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["x", "2"], " ", 
              SuperscriptBox["\[Lambda]", "2"]}]}], ")"}], " ", "\[Mu]"}], 
          "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
           SuperscriptBox["\[Lambda]", "2"], " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], ",", "x"}], "]"}], "==", 
       "0"}], ",", "\[Mu]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"muMinus", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PolynomialRemainder", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "+", "x", "-", 
          RowBox[{"4", " ", "A", " ", "x", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], "-", 
          RowBox[{"4", " ", "\[Epsilon]", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], "+", 
          RowBox[{"4", " ", "x", " ", "\[Epsilon]", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], "+", 
          RowBox[{"8", " ", "x", " ", 
           SuperscriptBox["\[Lambda]", "3"]}], "+", 
          RowBox[{"4", " ", "\[Lambda]", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], "-", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
              "\[Lambda]"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["x", "2"], " ", 
              SuperscriptBox["\[Lambda]", "2"]}]}], ")"}], " ", "\[Mu]"}], 
          "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
           SuperscriptBox["\[Lambda]", "2"], " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], ",", "x"}], "]"}], "==", 
       "0"}], ",", "\[Mu]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.8642764896009493`*^9, 3.864276567089525*^9}, {
   3.8642766664189796`*^9, 3.864276682947541*^9}, {3.864276958083522*^9, 
   3.864276974100775*^9}, {3.8642770336545763`*^9, 3.864277069237823*^9}, 
   3.864277164783778*^9, {3.8642868998673153`*^9, 3.864286933564728*^9}, {
   3.864312131851811*^9, 3.864312133268993*^9}, {3.8643122805726643`*^9, 
   3.86431232866*^9}, {3.864312901364444*^9, 3.864312936476317*^9}, {
   3.8643131849495573`*^9, 3.864313191041491*^9}, {3.8643133098870573`*^9, 
   3.8643133194317093`*^9}, {3.864314121375557*^9, 3.864314129335256*^9}, {
   3.864314607755836*^9, 3.86431461379952*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"b435c254-fe92-4ac4-a860-552b9d7b17be"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "-", 
  FractionBox["A", 
   RowBox[{"2", " ", "\[Lambda]"}]]}]], "Output",
 CellChangeTimes->{
  3.864277165089775*^9, 3.864286937877316*^9, 3.864312340829945*^9, {
   3.8643129171184063`*^9, 3.864312938922553*^9}, 3.864313192078261*^9, 
   3.864313320569648*^9, 3.864314130707193*^9, 3.864315071892817*^9, 
   3.864315200346899*^9},
 CellLabel->
  "Out[310]=",ExpressionUUID->"e0c7f3b7-ff0c-4382-a35d-51332089bf27"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  FractionBox["A", 
   RowBox[{"2", " ", "\[Lambda]"}]]}]], "Output",
 CellChangeTimes->{
  3.864277165089775*^9, 3.864286937877316*^9, 3.864312340829945*^9, {
   3.8643129171184063`*^9, 3.864312938922553*^9}, 3.864313192078261*^9, 
   3.864313320569648*^9, 3.864314130707193*^9, 3.864315071892817*^9, 
   3.86431520035002*^9},
 CellLabel->
  "Out[311]=",ExpressionUUID->"d49743ee-0751-4224-9353-2d77a754e1e6"]
}, Open  ]],

Cell["\<\
That is a great success. So now we can perform the change of variable \
explicitly.\
\>", "Text",
 CellChangeTimes->{{3.864277224998146*^9, 
  3.8642772574782133`*^9}},ExpressionUUID->"512083d6-6f49-4183-a60c-\
a83d63d50bcb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"A", " ", "z"}], " ", "+", 
   SuperscriptBox["z", "2"], "+", 
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", 
    SuperscriptBox["z", "4"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq", "[", "\[Psi]_", "]"}], ":=", 
   RowBox[{"z", "\[Function]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "''"}], "[", "z", "]"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Epsilon]", "-", 
        RowBox[{"V", "[", "z", "]"}]}], ")"}], 
      RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["z", "2"], " ", 
             SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
         RowBox[{"6", " ", "\[Lambda]"}]]}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "+", "1"}], ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        FractionBox["A", 
         RowBox[{"2", " ", "\[Lambda]"}]]}]]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"z", " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["z", "2"], " ", 
               SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
           RowBox[{"6", " ", "\[Lambda]"}]]}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"z", "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          FractionBox["A", 
           RowBox[{"2", " ", "\[Lambda]"}]]}]], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"z", " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["z", "2"], " ", 
            SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
        RowBox[{"6", " ", "\[Lambda]"}]]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "z"}], "+", "1"}], ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        FractionBox["A", 
         RowBox[{"2", " ", "\[Lambda]"}]]}]]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"z", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["z", "2"], " ", 
              SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
          RowBox[{"6", " ", "\[Lambda]"}]]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "z"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          FractionBox["A", 
           RowBox[{"2", " ", "\[Lambda]"}]]}]], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox["#1", 
            RowBox[{"#1", "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{"1", "-", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Minus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox[
            RowBox[{"-", "#1"}], 
            RowBox[{
             RowBox[{"-", "#1"}], "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}]}], "Input",
 CellChangeTimes->{{3.864035526701899*^9, 3.864035567764186*^9}, {
   3.86403565956774*^9, 3.864035667256592*^9}, {3.864115016484351*^9, 
   3.864115017418898*^9}, {3.8641152422780733`*^9, 3.864115267812194*^9}, {
   3.864115649334899*^9, 3.864115655364806*^9}, 3.864115695927232*^9, 
   3.864116018567485*^9, 3.864117086684123*^9, {3.8641181148079357`*^9, 
   3.864118115933967*^9}, {3.864118242001134*^9, 3.86411825792118*^9}, 
   3.8641990306553793`*^9, 3.8642010609833183`*^9, 3.86420237395303*^9, {
   3.864205586724691*^9, 3.864205587664859*^9}, 3.8642078236374598`*^9, {
   3.864208608819233*^9, 3.864208610930963*^9}, {3.864269777597616*^9, 
   3.864269777795177*^9}, {3.8642708672924137`*^9, 3.8642708773561974`*^9}, {
   3.8642754046018677`*^9, 3.864275412761997*^9}, {3.8642772909887466`*^9, 
   3.86427732148457*^9}, {3.864277363257691*^9, 3.8642773643954773`*^9}, 
   3.864286339687099*^9, {3.864286963090498*^9, 3.864286991152171*^9}, {
   3.864312401282723*^9, 3.8643124124651127`*^9}, {3.864313334376279*^9, 
   3.864313408970352*^9}, {3.8643141466780167`*^9, 3.8643142086438932`*^9}, {
   3.8643159477434483`*^9, 3.8643159534652147`*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"21747cb5-4694-4154-ae1c-065d305ffb4b"],

Cell["\<\
The coefficients of the ODE are simple polynomials now. Let us extract and \
name the coefficients of those polynomials\
\>", "Text",
 CellChangeTimes->{{3.864274994666313*^9, 
  3.864275028944138*^9}},ExpressionUUID->"0be422b8-953a-4714-8e59-\
50c2806f5843"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "''"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "'"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{"w", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864277353595161*^9, 3.8642773853036823`*^9}, {
  3.864313419531303*^9, 3.864313425651647*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"ee4a31bf-00e5-4ab1-9a32-6cf37aeee7c2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "4"}], ",", "6", ",", 
   RowBox[{"-", "4"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.8643142298423433`*^9, 
   3.864315203764007*^9, 3.864359642054078*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"6ae6002f-97c7-41f8-b6f4-56d76c8efa51"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", "A", "+", 
      RowBox[{"4", " ", "\[Lambda]"}]}], "\[Lambda]"]}], ",", 
   RowBox[{"12", "+", 
    FractionBox[
     RowBox[{"2", "+", 
      RowBox[{"3", " ", "A"}]}], "\[Lambda]"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"3", " ", "A"}], "+", 
      RowBox[{"2", " ", "\[Lambda]", " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", "\[Lambda]"}], ")"}]}]}], "\[Lambda]"]}], ",", 
   RowBox[{"4", "+", 
    FractionBox["A", "\[Lambda]"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.8643142298423433`*^9, 
   3.864315203764007*^9, 3.8643596420740557`*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"2a98a92a-7d97-42f8-9413-dce644340cc7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "+", 
     SuperscriptBox["A", "2"], "+", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"6", " ", "\[Lambda]"}]}], ")"}]}], "+", 
     RowBox[{"4", " ", "\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]"}], ")"}], " ", "\[Lambda]"}]}], 
       ")"}]}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", "+", 
        RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "A", "+", 
        RowBox[{"2", " ", "\[Lambda]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Lambda]"}], ")"}]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "+", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"A", "+", 
       RowBox[{"4", " ", "\[Lambda]"}]}], ")"}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.8643142298423433`*^9, 
   3.864315203764007*^9, 3.864359642112814*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"34b56f1e-fdfe-4f8c-a887-f894232bf752"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", "A", "+", 
      RowBox[{"4", " ", "\[Lambda]"}]}], "\[Lambda]"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"12", "+", 
    FractionBox[
     RowBox[{"2", "+", 
      RowBox[{"3", " ", "A"}]}], "\[Lambda]"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"3", " ", "A"}], "+", 
      RowBox[{"2", " ", "\[Lambda]", " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", "\[Lambda]"}], ")"}]}]}], "\[Lambda]"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", 
   RowBox[{"4", "+", 
    FractionBox["A", "\[Lambda]"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", 
   FractionBox[
    RowBox[{"1", "+", 
     SuperscriptBox["A", "2"], "+", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"6", " ", "\[Lambda]"}]}], ")"}]}], "+", 
     RowBox[{"4", " ", "\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]"}], ")"}], " ", "\[Lambda]"}]}], 
       ")"}]}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", "+", 
        RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "A", "+", 
        RowBox[{"2", " ", "\[Lambda]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Lambda]"}], ")"}]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}]}], ";", 
  RowBox[{"l", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "+", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"A", "+", 
       RowBox[{"4", " ", "\[Lambda]"}]}], ")"}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8642697470308247`*^9, 3.8642697719328527`*^9}, {
   3.8642698050613003`*^9, 3.864269809694182*^9}, {3.864269920748795*^9, 
   3.864269997090382*^9}, 3.864270965722127*^9, {3.864277396585041*^9, 
   3.8642774445072193`*^9}, {3.864287010818693*^9, 3.864287054480163*^9}, {
   3.864314237037458*^9, 3.86431427112982*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"1d133d24-d484-4bc0-8074-9d9bbae43357"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "''"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "'"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{"w", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864277353595161*^9, 3.8642773853036823`*^9}, {
  3.864313419531303*^9, 3.864313454870009*^9}},
 CellLabel->
  "In[415]:=",ExpressionUUID->"f3860058-d08d-407b-80b4-e9a18708f963"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "4"}], ",", "6", ",", 
   RowBox[{"-", "4"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.8643142757104816`*^9, 3.8643152072545967`*^9, 3.864315979017342*^9},
 CellLabel->
  "Out[415]=",ExpressionUUID->"87464f24-909f-47ed-9a32-28ea9c923610"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "4"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", "A"}], "\[Lambda]"]}], ",", 
   RowBox[{"12", "+", 
    FractionBox[
     RowBox[{"2", "-", 
      RowBox[{"3", " ", "A"}]}], "\[Lambda]"]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"3", " ", "A"}], "-", 
     RowBox[{"2", " ", "\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{"6", "+", "\[Lambda]"}], ")"}]}]}], "\[Lambda]"], ",", 
   RowBox[{"4", "-", 
    FractionBox["A", "\[Lambda]"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.8643142757104816`*^9, 3.8643152072545967`*^9, 3.8643159790267687`*^9},
 CellLabel->
  "Out[416]=",ExpressionUUID->"3d4fb43b-7f2a-47fe-8167-624ad80edd2e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"4", "-", 
        RowBox[{"6", " ", "A"}]}], ")"}], " ", "\[Lambda]"}], "+", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "\[Epsilon]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", "-", 
        RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "A", "-", 
        RowBox[{"2", " ", "\[Lambda]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Lambda]"}], ")"}]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "-", 
       RowBox[{"4", " ", "\[Lambda]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"A", "-", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.8643142757104816`*^9, 3.8643152072545967`*^9, 3.8643159790453672`*^9},
 CellLabel->
  "Out[417]=",ExpressionUUID->"9e05e9f8-6e7c-4197-9119-9065ff5dbb25"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bb", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dd", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ff", "=", 
   RowBox[{
    RowBox[{"-", "4"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", "A"}], "\[Lambda]"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gg", "=", 
   RowBox[{"12", "+", 
    FractionBox[
     RowBox[{"2", "-", 
      RowBox[{"3", " ", "A"}]}], "\[Lambda]"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hh", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"3", " ", "A"}], "-", 
     RowBox[{"2", " ", "\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{"6", "+", "\[Lambda]"}], ")"}]}]}], "\[Lambda]"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ii", "=", 
   RowBox[{"4", "-", 
    FractionBox["A", "\[Lambda]"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jj", "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"4", "-", 
        RowBox[{"6", " ", "A"}]}], ")"}], " ", "\[Lambda]"}], "+", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "\[Epsilon]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kk", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", "-", 
        RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "A", "-", 
        RowBox[{"2", " ", "\[Lambda]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Lambda]"}], ")"}]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}]}], ";", 
  RowBox[{"ll", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "-", 
       RowBox[{"4", " ", "\[Lambda]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"A", "-", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8642697470308247`*^9, 3.8642697719328527`*^9}, {
   3.8642698050613003`*^9, 3.864269809694182*^9}, {3.864269920748795*^9, 
   3.864269997090382*^9}, 3.864270965722127*^9, {3.864277396585041*^9, 
   3.8642774445072193`*^9}, {3.864287010818693*^9, 3.864287054480163*^9}, {
   3.864313470139778*^9, 3.864313555327423*^9}, {3.86431431501865*^9, 
   3.864314348460184*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"60c43622-b66c-465c-8a2e-093cbf906e87"],

Cell[TextData[{
 "Ansatz for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"w", 
     RowBox[{"(", "x", ")"}]}], "=", 
    RowBox[{"\[Sum]", 
     RowBox[{
      SubscriptBox["\[Alpha]", "n"], 
      SuperscriptBox["x", "n"]}]}]}], TraditionalForm]],ExpressionUUID->
  "cf744cdb-0a40-4c66-877d-c22d40a9c5dc"],
 ", we get the following difference equations, exactly the same as in the \
previous section because it is for generic coefficients abcdefghijkl"
}], "Text",
 CellChangeTimes->{{3.8642750419140577`*^9, 3.864275053063743*^9}, {
  3.864275110366568*^9, 3.8642751370634737`*^9}, {3.864277463032014*^9, 
  3.864277495417461*^9}},ExpressionUUID->"de2ea44c-6544-48a8-b669-\
874f143b57fb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"diffEqPlus", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"n", "+", "2"}], ")"}], "a", " ", 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "+", "2"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "b"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "f"}]}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "+", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "n", " ", "c"}], "+", 
      RowBox[{"n", " ", "g"}], "+", "j"}], ")"}], 
    SubscriptBox["\[Alpha]", "n"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "d"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "h"}], "+", "k"}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "-", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "3"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "e"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "i"}], "+", "l"}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "-", "2"}]]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffEqMinus", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"n", "+", "2"}], ")"}], "aa", " ", 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "+", "2"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "bb"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "ff"}]}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "+", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "n", " ", "cc"}], "+", 
      RowBox[{"n", " ", "gg"}], "+", "jj"}], ")"}], 
    SubscriptBox["\[Delta]", "n"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "dd"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "hh"}], "+", "kk"}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "-", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "3"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "ee"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "ii"}], "+", "ll"}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "-", "2"}]]}]}]}]}], "Input",
 CellChangeTimes->{{3.864270018911315*^9, 3.8642702462416697`*^9}, {
  3.8642705156994133`*^9, 3.8642705159562902`*^9}, {3.864313518020338*^9, 
  3.864313519482671*^9}, {3.864313560863084*^9, 3.864313611425284*^9}},
 CellLabel->
  "In[418]:=",ExpressionUUID->"6346966c-6e3c-45f3-a007-fb0bf911ab3d"],

Cell[TextData[{
 "Now we need to generalize the choice of initial conditions C0 and C1 in \
order to be able to extract the even level energy spectrum, and in particular \
the ground state energy.\nLet us recall that for the previous potential (\
\[Gamma]->0, \[Beta]->1), we had C0=1 and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C1", "=", 
    RowBox[{"1", "+", 
     FractionBox["1", 
      RowBox[{"2", "\[Lambda]"}]]}]}], TraditionalForm]],ExpressionUUID->
  "8fe8e02e-568d-4145-afa4-3e25fee1d163"],
 "."
}], "Text",
 CellChangeTimes->{{3.864275145180252*^9, 3.864275191066702*^9}, {
  3.864277514040395*^9, 3.86427757220188*^9}, {3.8642777223928633`*^9, 
  3.8642778004261217`*^9}, {3.8642862975920963`*^9, 
  3.864286314556131*^9}},ExpressionUUID->"f693829a-a506-416e-bc84-\
fff32fd406a4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"psiPlus", "[", "z_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"z", " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["z", "2"], " ", 
          SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
      RowBox[{"6", " ", "\[Lambda]"}]]}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "+", "1"}], ")"}], 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     FractionBox["A", 
      RowBox[{"2", " ", "\[Lambda]"}]]}]], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Alpha]", "0"], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], 
      FractionBox["z", 
       RowBox[{"z", "+", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["z", 
         RowBox[{"z", "+", "1"}]], ")"}], "2"]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiMinus", "[", "z_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"z", " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["z", "2"], " ", 
         SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
     RowBox[{"6", " ", "\[Lambda]"}]]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "z"}], "+", "1"}], ")"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox["A", 
      RowBox[{"2", " ", "\[Lambda]"}]]}]], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Delta]", "0"], "+", 
     RowBox[{
      SubscriptBox["\[Delta]", "1"], 
      FractionBox[
       RowBox[{"-", "z"}], 
       RowBox[{
        RowBox[{"-", "z"}], "+", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[Delta]", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"-", "z"}], 
         RowBox[{
          RowBox[{"-", "z"}], "+", "1"}]], ")"}], "2"]}]}], 
    ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.864286324723585*^9, 3.864286433353557*^9}, {
   3.8642889704779167`*^9, 3.8642890116523952`*^9}, 3.8642890470751457`*^9, {
   3.864289083251052*^9, 3.86428912995544*^9}, {3.864289237638175*^9, 
   3.864289254868375*^9}, {3.864313707915181*^9, 3.864313713541687*^9}, {
   3.864313881883119*^9, 3.864313887220744*^9}, {3.86431438247745*^9, 
   3.864314419802773*^9}, {3.8643145018795633`*^9, 3.8643145063187*^9}, {
   3.864314643037959*^9, 3.864314675004569*^9}, {3.8643147513527117`*^9, 
   3.8643147549171143`*^9}, {3.86431601454582*^9, 3.864316017331876*^9}},
 CellLabel->
  "In[420]:=",ExpressionUUID->"02a6420f-2b82-4d6a-beda-38f99a2fb1a1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"psiPlus", "'"}], "[", "0", "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"psiMinus", "'"}], "[", "0", "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.8642864434371567`*^9, 3.864286462633073*^9}, {
  3.864289139123407*^9, 3.864289156917902*^9}, {3.864289223876636*^9, 
  3.864289228321069*^9}, {3.86431695365029*^9, 
  3.864316956012726*^9}},ExpressionUUID->"eee868dd-e760-42e6-bc7b-\
a9b35fc2bc72"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "A", "+", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
     SubscriptBox["\[Alpha]", "0"]}], 
    RowBox[{"2", " ", "\[Lambda]"}]]}], "+", 
  SubscriptBox["\[Alpha]", "1"]}]], "Output",
 CellChangeTimes->{{3.864286450123785*^9, 3.8642864630254097`*^9}, 
   3.864287064388155*^9, {3.864289140413212*^9, 3.864289159117506*^9}, {
   3.8642892288595867`*^9, 3.864289258649302*^9}, 3.86431389030669*^9, 
   3.8643144730100193`*^9, 3.864314656171434*^9, 3.864314757939825*^9, 
   3.864316021032392*^9},
 CellLabel->
  "Out[422]=",ExpressionUUID->"ffa3261f-73f2-4437-b7b1-911ddb7425bd"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "A", "+", 
      RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
    SubscriptBox["\[Delta]", "0"]}], 
   RowBox[{"2", " ", "\[Lambda]"}]], "-", 
  SubscriptBox["\[Delta]", "1"]}]], "Output",
 CellChangeTimes->{{3.864286450123785*^9, 3.8642864630254097`*^9}, 
   3.864287064388155*^9, {3.864289140413212*^9, 3.864289159117506*^9}, {
   3.8642892288595867`*^9, 3.864289258649302*^9}, 3.86431389030669*^9, 
   3.8643144730100193`*^9, 3.864314656171434*^9, 3.864314757939825*^9, 
   3.864316021038072*^9},
 CellLabel->
  "Out[423]=",ExpressionUUID->"532d4e83-8c7b-421c-89d3-ff85eb138501"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"C0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"C1", "=", 
   RowBox[{"S", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"1", "+", "A"}], 
        RowBox[{"2", "\[Lambda]"}]], "+", "1"}], ")"}], "C0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CC0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CC1", "=", 
   RowBox[{
    RowBox[{"-", "S"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"1", "-", "A"}], 
        RowBox[{"2", "\[Lambda]"}]], "+", "1"}], ")"}], "CC0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialEqPlus", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Alpha]", "0"], "-", "C0"}], ",", 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], "-", "C1"}], ",", 
     RowBox[{
      RowBox[{"2", "a", " ", 
       SubscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"f", " ", 
       SubscriptBox["\[Alpha]", "1"]}], "+", 
      RowBox[{"j", " ", 
       SubscriptBox["\[Alpha]", "0"]}]}], ",", 
     RowBox[{
      RowBox[{"6", "a", " ", 
       SubscriptBox["\[Alpha]", "3"]}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"b", "+", "f"}], ")"}], 
       SubscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"g", "+", "j"}], ")"}], 
       SubscriptBox["\[Alpha]", "1"]}], "+", 
      RowBox[{"k", " ", 
       SubscriptBox["\[Alpha]", "0"]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialEqMinus", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Delta]", "0"], "-", "CC0"}], ",", 
     RowBox[{
      SubscriptBox["\[Delta]", "1"], "-", "CC1"}], ",", 
     RowBox[{
      RowBox[{"2", "aa", " ", 
       SubscriptBox["\[Delta]", "2"]}], "+", 
      RowBox[{"ff", " ", 
       SubscriptBox["\[Delta]", "1"]}], "+", 
      RowBox[{"jj", " ", 
       SubscriptBox["\[Delta]", "0"]}]}], ",", 
     RowBox[{
      RowBox[{"6", "aa", " ", 
       SubscriptBox["\[Delta]", "3"]}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"bb", "+", "ff"}], ")"}], 
       SubscriptBox["\[Delta]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"gg", "+", "jj"}], ")"}], 
       SubscriptBox["\[Delta]", "1"]}], "+", 
      RowBox[{"kk", " ", 
       SubscriptBox["\[Delta]", "0"]}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.864270380769575*^9, 3.864270544385949*^9}, {
  3.864270681732925*^9, 3.8642707092690983`*^9}, {3.864277584361083*^9, 
  3.864277623001809*^9}, {3.864277788826624*^9, 3.864277805818914*^9}, {
  3.8643148390180197`*^9, 3.864314996387719*^9}, {3.864315370805738*^9, 
  3.864315370870441*^9}, {3.8643154226625013`*^9, 3.864315422935775*^9}, {
  3.8643161033803577`*^9, 3.8643161147858477`*^9}, {3.864316764706365*^9, 
  3.864316769043502*^9}, {3.864316802577961*^9, 3.864316820537896*^9}},
 CellLabel->
  "In[455]:=",ExpressionUUID->"51c73d4f-062d-4634-a0d6-6b2f89f77c3e"],

Cell["\<\
We solve for the coefficients of the series expansion for a large value of n\
\>", "Text",
 CellChangeTimes->{{3.8642751963474607`*^9, 
  3.8642752191768208`*^9}},ExpressionUUID->"a329d138-6d7a-4ca7-bba3-\
03a632efb73c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nmax", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]largePlus", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"initialEqPlus", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"diffEqPlus", "[", "n", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "2", ",", 
              RowBox[{"Nmax", "-", "2"}]}], "}"}]}], "]"}]}], "]"}], "==", 
        "0"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["\[Alpha]", "m"], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"Nmax", "+", "1"}], ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]largeMinus", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"initialEqMinus", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"diffEqMinus", "[", "n", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "2", ",", 
              RowBox[{"Nmax", "-", "2"}]}], "}"}]}], "]"}]}], "]"}], "==", 
        "0"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["\[Delta]", "m"], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"Nmax", "+", "1"}], ",", "2"}], "]"}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.8642703216466703`*^9, 3.864270374397962*^9}, {
  3.8642705513296633`*^9, 3.8642705574736023`*^9}, {3.8642706051077547`*^9, 
  3.864270674659809*^9}, {3.864270719493314*^9, 3.864270843494506*^9}, {
  3.864270983647256*^9, 3.864270983916497*^9}, {3.864271384077087*^9, 
  3.864271391467572*^9}, {3.864271456796391*^9, 3.864271566285283*^9}, {
  3.864272670480879*^9, 3.8642726706307497`*^9}, {3.8643150041381397`*^9, 
  3.864315039287624*^9}, {3.8643152147129307`*^9, 3.864315217142314*^9}, {
  3.8643153954184837`*^9, 3.8643153955802298`*^9}, {3.864316807467794*^9, 
  3.8643168351853743`*^9}},
 CellLabel->
  "In[466]:=",ExpressionUUID->"6be06e70-0b04-4d3a-8f6b-f76391bbb77c"],

Cell["\<\
The zeros of that large coefficient as a function of the energy parameter \
\[Epsilon] correspond to the spectum of the model.\
\>", "Text",
 CellChangeTimes->{{3.864275243849395*^9, 
  3.864275278617496*^9}},ExpressionUUID->"aec30ee4-9875-4e5c-99d1-\
75349cc9cf91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Alpha]largePlus", ",", "\[Alpha]largeMinus"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", "->", "1"}], ",", 
      RowBox[{"A", "->", "1.0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", 
       RowBox[{"-", "10"}]}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.864272516042613*^9, 3.864272581235248*^9}, {
   3.864272630956184*^9, 3.864272652997024*^9}, {3.8643152302549*^9, 
   3.864315334743429*^9}, {3.864315388282217*^9, 3.864315388370914*^9}, {
   3.864315478660943*^9, 3.864315500630616*^9}, {3.8643161278235292`*^9, 
   3.8643161552456636`*^9}, {3.864316829844284*^9, 3.864316829982398*^9}, {
   3.864317021269602*^9, 3.864317096679879*^9}, {3.864317220413212*^9, 
   3.864317231961761*^9}, 3.864317298780168*^9, {3.864317334566575*^9, 
   3.864317342387321*^9}},
 CellLabel->
  "In[483]:=",ExpressionUUID->"e57bd8d8-3948-4718-93e1-0833c13a072c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Epsilon]", "\[Rule]", "1.2992147129802147`"}], ",", 
   RowBox[{"S", "\[Rule]", 
    RowBox[{"-", "0.31871551177194624`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864272582474341*^9, 3.864272653692486*^9}, 
   3.8642727233006563`*^9, {3.864315296586309*^9, 3.864315344630843*^9}, {
   3.864315378405192*^9, 3.864315417696125*^9}, {3.864315457418236*^9, 
   3.864315501130307*^9}, {3.864316143990018*^9, 3.864316155816534*^9}, {
   3.864316791724887*^9, 3.8643168537145967`*^9}, {3.8643170232770653`*^9, 
   3.864317097691369*^9}, {3.86431722205857*^9, 3.864317232530428*^9}, 
   3.864317299287344*^9, {3.864317335018508*^9, 3.8643173428797483`*^9}},
 CellLabel->
  "Out[483]=",ExpressionUUID->"c6b83e80-05ca-460f-89e4-aeb12f600b3e"]
}, Open  ]],

Cell["\<\
!!!VERY IMPORTANT COMMENT!!!  (set {\[Lambda]->1,A->1.0} in the following \
comment)
The result of the above FindRoot function depends strongly on the \
initialization of the unknown variable S:
- if I initialize S=10 for instance (and \[Epsilon]=1), the result converges \
to the first excited energy 4.61606
- if I initialize S=-10 for instance (and \[Epsilon]=1), the result converges \
to the ground state energy 1.29921\
\>", "Text",
 CellChangeTimes->{{3.864317159987091*^9, 
  3.864317339702817*^9}},ExpressionUUID->"796f8069-b69e-4536-8ac4-\
cdfd1133154e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Spectrum (most generic quartic potential) (SUCCESS)", "Subsection",
 CellChangeTimes->{{3.864274692548676*^9, 3.864274722704041*^9}, {
  3.8643140153087*^9, 3.864314015970899*^9}, {3.8643185685023603`*^9, 
  3.864318578479597*^9}},ExpressionUUID->"dd6ce8dd-d52f-4919-baae-\
bfc80178df37"],

Cell[CellGroupData[{

Cell["Setup ODE", "Subsubsection",
 CellChangeTimes->{{3.864531502129651*^9, 3.8645315040934896`*^9}, {
  3.8650494206630898`*^9, 
  3.865049423238859*^9}},ExpressionUUID->"dd7f872f-bbb2-4e62-b465-\
4b024100df6c"],

Cell[TextData[{
 "Let us now generalize the above story to the following more generic quartic \
potential.\nNotation: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["H", "2"], "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["m", "1"], "+", 
       SubscriptBox["m", "2"]}], 
      RowBox[{
       SubscriptBox["m", "1"], 
       SubscriptBox["m", "2"]}]], 
     FractionBox[
      SuperscriptBox["hbar", "2"], "2"]}]}], TraditionalForm]],ExpressionUUID->
  "56dbe85e-456d-4781-bfd0-6074c10fdc1b"],
 "\nThe couplings in the potential A, \[Beta], \[Gamma], \[Lambda] are fixed \
according to the multipolar expansion in terms of the masses, charges and \
frequencies of the pair of QDOs."
}], "Text",
 CellChangeTimes->{{3.864274820517263*^9, 3.86427483221453*^9}, {
  3.864275377289834*^9, 3.864275399449318*^9}, {3.8642867086502132`*^9, 
  3.864286761195252*^9}, {3.864358765330817*^9, 
  3.864358823738635*^9}},ExpressionUUID->"c93deddb-90ec-4d53-a857-\
cf0cfc05d13f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GENERIC", " ", "COMMENT", " ", "ABOUT", " ", "THIS", " ", 
   RowBox[{"SECTION", ":", " ", 
    RowBox[{
    "contrary", " ", "to", " ", "the", " ", "case", " ", "of", " ", "an", " ",
      "even", " ", "potential"}]}]}], ",", " ", 
  RowBox[{
  "one", " ", "here", " ", "has", " ", "to", " ", "keep", " ", "track", " ", 
   "of", " ", "both", " ", "the", " ", "positive", " ", "x", " ", "and", " ", 
   "the", " ", "negative", " ", "x", " ", "solutions"}]}]], "Text",
 CellChangeTimes->{{3.8643119982628927`*^9, 
  3.864312056801162*^9}},ExpressionUUID->"a70d9391-164b-42ae-9926-\
1da565c18e49"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"A", " ", "z"}], " ", "+", 
   RowBox[{"\[Beta]", " ", 
    SuperscriptBox["z", "2"]}], "+", 
   RowBox[{"\[Gamma]", " ", 
    SuperscriptBox["z", "3"]}], "+", 
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", 
    SuperscriptBox["z", "4"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq", "[", "\[Psi]_", "]"}], ":=", 
   RowBox[{"z", "\[Function]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "''"}], "[", "z", "]"}], "+", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Epsilon]", "-", 
        RowBox[{"V", "[", "z", "]"}]}], 
       RowBox[{
        SuperscriptBox["H", "2"], " "}]], 
      RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.864035526701899*^9, 3.864035567764186*^9}, {
   3.86403565956774*^9, 3.864035667256592*^9}, {3.864115016484351*^9, 
   3.864115017418898*^9}, {3.8641152422780733`*^9, 3.864115267812194*^9}, {
   3.864115649334899*^9, 3.864115655364806*^9}, 3.864115695927232*^9, 
   3.864116018567485*^9, 3.864117086684123*^9, {3.8641181148079357`*^9, 
   3.864118115933967*^9}, {3.864118242001134*^9, 3.86411825792118*^9}, 
   3.8641990306553793`*^9, 3.8642010609833183`*^9, 3.86420237395303*^9, {
   3.864205586724691*^9, 3.864205587664859*^9}, 3.8642078236374598`*^9, {
   3.864208608819233*^9, 3.864208610930963*^9}, {3.864269777597616*^9, 
   3.864269777795177*^9}, {3.8642708672924137`*^9, 3.8642708773561974`*^9}, {
   3.8642754046018677`*^9, 3.864275412761997*^9}, {3.8642866904537773`*^9, 
   3.8642867029554768`*^9}, {3.864286770795536*^9, 3.864286800475404*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"8ef4b5a2-b391-4465-bbc2-c3aa197c324a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"latexCouplings", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "->", "\[Alpha]"}], ",", 
     RowBox[{"\[Lambda]", "->", 
      SqrtBox["\[Delta]"]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"physicalCouplings", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", "q2"}], "+", 
          RowBox[{"m2", " ", "q1"}]}], 
         RowBox[{"m1", "+", "m2"}]]}], "\[Tau]"}]}], ",", 
     RowBox[{"\[Beta]", "->", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]], 
        FractionBox[
         RowBox[{"2", " ", "q1", " ", "q2"}], 
         SuperscriptBox["r", "3"]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         RowBox[{"m1", "+", "m2"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", 
           SuperscriptBox["\[Omega]2", "2"]}], "+", 
          RowBox[{"m2", " ", 
           SuperscriptBox["\[Omega]1", "2"]}]}], 
         RowBox[{"m1", "+", "m2"}]]}]}]}], ",", 
     RowBox[{"\[Gamma]", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]]}], 
       FractionBox[
        RowBox[{"3", " ", "q1", " ", "q2"}], 
        SuperscriptBox["r", "4"]]}]}], ",", 
     RowBox[{"\[Delta]", "->", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "m1", " ", "m2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            SuperscriptBox["m1", "2"]}], "+", 
           RowBox[{"3", "m1", " ", "m2"}], "+", 
           RowBox[{"2", 
            SuperscriptBox["m2", "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"m1", "+", "m2"}], ")"}], "4"]], 
       FractionBox[
        RowBox[{"q1", " ", "q2"}], 
        SuperscriptBox["r", "5"]]}]}], ",", 
     RowBox[{"H", "->", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"m1", "+", "m2"}], 
         RowBox[{"m1", " ", "m2"}]], 
        FractionBox[
         SuperscriptBox["HBAR", "2"], "2"]}]]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"latexCouplingsExplicit", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "->", "alpha"}], ",", 
     RowBox[{"\[Lambda]", "->", 
      SqrtBox["delta"]}], ",", " ", 
     RowBox[{"\[Beta]", "->", "beta"}], ",", " ", 
     RowBox[{"\[Gamma]", "->", "gamma"}], ",", 
     RowBox[{"\[Delta]", "->", "delta"}], ",", " ", 
     RowBox[{"\[Epsilon]", "->", "epsilon"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"physicalCouplingsExplicit", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alpha", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", "q2"}], "+", 
          RowBox[{"m2", " ", "q1"}]}], 
         RowBox[{"m1", "+", "m2"}]]}], "tau"}]}], ",", 
     RowBox[{"beta", "->", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]], 
        FractionBox[
         RowBox[{"2", " ", "q1", " ", "q2"}], 
         SuperscriptBox["r", "3"]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         RowBox[{"m1", "+", "m2"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", 
           SuperscriptBox["omega2", "2"]}], "+", 
          RowBox[{"m2", " ", 
           SuperscriptBox["omega1", "2"]}]}], 
         RowBox[{"m1", "+", "m2"}]]}]}]}], ",", 
     RowBox[{"gamma", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]]}], 
       FractionBox[
        RowBox[{"3", " ", "q1", " ", "q2"}], 
        SuperscriptBox["r", "4"]]}]}], ",", 
     RowBox[{"delta", "->", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "m1", " ", "m2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            SuperscriptBox["m1", "2"]}], "+", 
           RowBox[{"3", "m1", " ", "m2"}], "+", 
           RowBox[{"2", 
            SuperscriptBox["m2", "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"m1", "+", "m2"}], ")"}], "4"]], 
       FractionBox[
        RowBox[{"q1", " ", "q2"}], 
        SuperscriptBox["r", "5"]]}]}], ",", 
     RowBox[{"H", "->", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"m1", "+", "m2"}], 
         RowBox[{"m1", " ", "m2"}]], 
        FractionBox[
         SuperscriptBox["HBAR", "2"], "2"]}]]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"HHrule", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "->", "0.6099"}], ",", 
     RowBox[{"m2", "->", "0.6099"}], ",", 
     RowBox[{"q1", "->", "0.7080"}], ",", 
     RowBox[{"q2", "->", "0.7080"}], ",", 
     RowBox[{"\[Omega]1", "->", "0.4273"}], ",", 
     RowBox[{"\[Omega]2", "->", "0.4273"}], ",", 
     RowBox[{"HBAR", "->", "1"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"HHruleExplicit", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "->", "0.6099"}], ",", 
     RowBox[{"m2", "->", "0.6099"}], ",", 
     RowBox[{"q1", "->", "0.7080"}], ",", 
     RowBox[{"q2", "->", "0.7080"}], ",", 
     RowBox[{"omega1", "->", "0.4273"}], ",", 
     RowBox[{"omega2", "->", "0.4273"}], ",", 
     RowBox[{"HBAR", "->", "1"}]}], "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.864396217362211*^9, 3.864396265512763*^9}, {
   3.864396367069921*^9, 3.864396374568042*^9}, {3.8643965649153843`*^9, 
   3.864396581585636*^9}, 3.86439912153622*^9, {3.8643996969927397`*^9, 
   3.8643999795681963`*^9}, {3.86452602030055*^9, 3.864526085408793*^9}, {
   3.864526130561105*^9, 3.8645261509441347`*^9}, {3.865049396727646*^9, 
   3.865049412695977*^9}, {3.865049648425116*^9, 3.86504964903269*^9}, {
   3.865148568949938*^9, 3.865148576738531*^9}, {3.865148612159862*^9, 
   3.8651486614068403`*^9}, {3.8651492537286177`*^9, 3.865149269712734*^9}, {
   3.865406992721068*^9, 3.865406993097678*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"ff4d649d-72af-4424-8b4e-b48dd4d35a72"],

Cell["\<\
Now we need to find the correct change of variable for the active variable \
\[Psi], for this, let us get inspiration from the analytical solution \
provided by Mathematica:\
\>", "Text",
 CellChangeTimes->{{3.864275423626759*^9, 
  3.864275481754038*^9}},ExpressionUUID->"dc63463d-ffa1-43d3-b023-\
16b905d51db8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"eq", "[", "\[Psi]", "]"}], "[", "z", "]"}], "==", "0"}], ",", 
    RowBox[{"\[Psi]", "[", "z", "]"}], ",", "z"}], "]"}], "//", 
  "PowerExpand"}]], "Input",
 CellChangeTimes->{{3.8642754848765173`*^9, 3.8642755082360373`*^9}, {
  3.864275949123186*^9, 3.864275950754225*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"3d2674f1-d9fd-463c-a000-28d3b38adaba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Psi]", "[", "z", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3"}], " ", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{"6", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Beta]"}], "+", 
               RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
             SuperscriptBox["\[Lambda]", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["z", "2"], " ", 
             SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
         RowBox[{"24", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "3"]}]]}]], " ", 
      TemplateBox[{"2"},
       "C"], " ", 
      RowBox[{"HeunT", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Gamma]", "4"], "-", 
           RowBox[{"8", " ", "\[Beta]", " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "-", 
           RowBox[{"32", " ", "H", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "5"]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Beta]", "2"], "+", 
              RowBox[{"4", " ", "\[Epsilon]", " ", 
               SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}]}], 
          RowBox[{"64", " ", 
           SuperscriptBox["H", "2"], " ", 
           SuperscriptBox["\[Lambda]", "6"]}]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "\[Lambda]"}], "H"]}], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], "-", 
           RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"8", " ", "A", " ", 
            SuperscriptBox["\[Lambda]", "4"]}]}], 
          RowBox[{"8", " ", 
           SuperscriptBox["H", "2"], " ", 
           SuperscriptBox["\[Lambda]", "4"]}]]}], ",", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"4", " ", "\[Beta]", " ", 
           SuperscriptBox["\[Lambda]", "2"]}]}], 
         RowBox[{"4", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "3"]}]], ",", 
        RowBox[{"-", 
         FractionBox["\[Gamma]", 
          RowBox[{"H", " ", "\[Lambda]"}]]}], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", "\[Lambda]"}], "H"]}], ",", "z"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"z", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SuperscriptBox["\[Gamma]", "2"]}], "+", 
           RowBox[{"6", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Beta]"}], "+", 
              RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["z", "2"], " ", 
            SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
        RowBox[{"24", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "3"]}]]], " ", 
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"HeunT", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Gamma]", "4"], "-", 
           RowBox[{"8", " ", "\[Beta]", " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"32", " ", "H", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "5"]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Beta]", "2"], "+", 
              RowBox[{"4", " ", "\[Epsilon]", " ", 
               SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}]}], 
          RowBox[{"64", " ", 
           SuperscriptBox["H", "2"], " ", 
           SuperscriptBox["\[Lambda]", "6"]}]]}], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], "-", 
           RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{"A", "-", 
              RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
          RowBox[{"8", " ", 
           SuperscriptBox["H", "2"], " ", 
           SuperscriptBox["\[Lambda]", "4"]}]]}], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], "-", 
           RowBox[{"4", " ", "\[Beta]", " ", 
            SuperscriptBox["\[Lambda]", "2"]}]}], 
          RowBox[{"4", " ", "H", " ", 
           SuperscriptBox["\[Lambda]", "3"]}]]}], ",", 
        FractionBox["\[Gamma]", 
         RowBox[{"H", " ", "\[Lambda]"}]], ",", 
        FractionBox[
         RowBox[{"2", " ", "\[Lambda]"}], "H"], ",", "z"}], "]"}]}]}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.864275505072137*^9, 3.864275520794508*^9}, 
   3.8642759513363037`*^9, 3.8642868069716597`*^9, 3.864312218853105*^9, 
   3.864317506247504*^9, 3.864358620510544*^9, 3.864396277422563*^9, 
   3.864398377095174*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"f788a805-7b0c-4c55-94ef-7362eef0bddb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3"}], " ", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{"6", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Beta]"}], "+", 
               RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
             SuperscriptBox["\[Lambda]", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["z", "2"], " ", 
             SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
         RowBox[{"24", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "3"]}]]}]], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Beta]", "->", "1"}], ",", 
        RowBox[{"\[Gamma]", "->", "0"}], ",", 
        RowBox[{"H", "->", "1"}]}], "}"}]}], ")"}], "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["z", 
        RowBox[{"2", " ", "\[Lambda]"}]]}], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["z", "3"], " ", "\[Lambda]"}], "3"]}]]}], "//", 
   "PowerExpand"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8642755327791977`*^9, 3.864275587996393*^9}, 
   3.864275957522493*^9, {3.864286816515222*^9, 3.864286820666658*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"5577d6e0-3446-460c-a2c7-d971ae9673d0"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.8642755453939857`*^9, 3.864275588348443*^9}, 
   3.864275958047332*^9, 3.864286821522951*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"4aaf2634-c680-4ada-8cac-e0022b45d964"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"z", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "+", 
         RowBox[{"6", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Beta]"}], "+", 
            RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["z", "2"], " ", 
          SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
      RowBox[{"24", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "3"]}]]}], ",", "z"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"z", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{"6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Beta]"}], "+", 
           RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["z", "2"], " ", 
         SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
     RowBox[{"24", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "3"]}]], ",", "z"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864275685859309*^9, 3.864275687575535*^9}, 
   3.864275960581841*^9, 3.8642868320653667`*^9, {3.8643589506879377`*^9, 
   3.8643589909237423`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"39cc0d46-afda-46a3-87e4-313ad7f46403"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "2"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "3"]}]], ",", 
   RowBox[{"-", 
    FractionBox["\[Gamma]", 
     RowBox[{"4", " ", "H", " ", "\[Lambda]"}]]}], ",", 
   RowBox[{"-", 
    FractionBox["\[Lambda]", 
     RowBox[{"3", " ", "H"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.86427568824868*^9, 3.864275961517703*^9, 3.864286832679997*^9, {
   3.8643589530376472`*^9, 3.864358991352721*^9}, 3.864398379384306*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"0227efbb-7679-4aa3-9a4e-74b40b57ddb0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "2"], "-", 
      RowBox[{"4", " ", "\[Beta]", " ", 
       SuperscriptBox["\[Lambda]", "2"]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "3"]}]]}], ",", 
   FractionBox["\[Gamma]", 
    RowBox[{"4", " ", "H", " ", "\[Lambda]"}]], ",", 
   FractionBox["\[Lambda]", 
    RowBox[{"3", " ", "H"}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.86427568824868*^9, 3.864275961517703*^9, 3.864286832679997*^9, {
   3.8643589530376472`*^9, 3.864358991352721*^9}, 3.864398379403253*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"c93e2b14-67a9-49be-85d2-3a602da479e8"]
}, Open  ]],

Cell[TextData[{
 "So now we have the exponential change of variable.\nRemains the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "+", "1"}], ")"}], 
    RowBox[{"some", " ", "power"}]], TraditionalForm]],ExpressionUUID->
  "37a51820-b9a7-4630-a962-3bc700e424b2"],
 " to fix. Let us call the generic power \[Mu]"
}], "Text",
 CellChangeTimes->{{3.864275595259122*^9, 
  3.864275672684463*^9}},ExpressionUUID->"12fd6c21-5c33-431e-89d0-\
c632747007a7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq2Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3"}], " ", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{"6", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Beta]"}], "+", 
               RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
             SuperscriptBox["\[Lambda]", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["z", "2"], " ", 
             SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
         RowBox[{"24", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "3"]}]]}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "+", "1"}], ")"}], "\[Mu]"]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"z", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "3"}], " ", 
               SuperscriptBox["\[Gamma]", "2"]}], "+", 
              RowBox[{"6", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[Beta]"}], "+", 
                 RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
               SuperscriptBox["\[Lambda]", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["z", "2"], " ", 
               SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
           RowBox[{"24", " ", "H", " ", 
            SuperscriptBox["\[Lambda]", "3"]}]]}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"z", "+", "1"}], ")"}], "\[Mu]"], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"z", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SuperscriptBox["\[Gamma]", "2"]}], "+", 
           RowBox[{"6", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Beta]"}], "+", 
              RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["z", "2"], " ", 
            SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
        RowBox[{"24", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "3"]}]]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "z"}], "+", "1"}], ")"}], "\[Mu]"]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"z", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], " ", 
              SuperscriptBox["\[Gamma]", "2"]}], "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Beta]"}], "+", 
                RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
              SuperscriptBox["\[Lambda]", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["z", "2"], " ", 
              SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
          RowBox[{"24", " ", "H", " ", 
           SuperscriptBox["\[Lambda]", "3"]}]]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "z"}], "+", "1"}], ")"}], "\[Mu]"], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.864118163342272*^9, 3.864118163421801*^9}, {
   3.8641182338242292`*^9, 3.8641182794537277`*^9}, {3.864118309938342*^9, 
   3.8641183532169247`*^9}, {3.864118384770278*^9, 3.864118397361452*^9}, {
   3.86419901804711*^9, 3.864199020958868*^9}, 3.864199267933145*^9, {
   3.864199361245159*^9, 3.864199363388564*^9}, 3.864201067883738*^9, {
   3.8642023845592937`*^9, 3.8642023977426434`*^9}, {3.864202740227565*^9, 
   3.864202750578661*^9}, {3.864203210996903*^9, 3.864203221267009*^9}, {
   3.864203261029221*^9, 3.864203279172521*^9}, {3.864204269612*^9, 
   3.864204278153284*^9}, {3.864204353340111*^9, 3.864204375658196*^9}, {
   3.8642046023818207`*^9, 3.864204606220006*^9}, {3.86420559214673*^9, 
   3.864205635889922*^9}, 3.8642069206506863`*^9, 3.8642069619650087`*^9, {
   3.864269780717699*^9, 3.864269784781036*^9}, {3.8642756794382143`*^9, 
   3.8642757264933233`*^9}, {3.8642759668761806`*^9, 3.86427598791363*^9}, {
   3.864286840898326*^9, 3.864286843151375*^9}, {3.864312073767428*^9, 
   3.864312114422969*^9}, {3.864312160160754*^9, 3.864312176013809*^9}, {
   3.86431242063426*^9, 3.864312427109799*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"54705305-6d2c-4dee-bdb1-11d879e4708f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "''"}], "[", "z", "]"}]}], "]"}], "/.", 
    RowBox[{"\[Mu]", "->", "0"}]}], "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
         RowBox[{
          RowBox[{"w", "'"}], "[", "z", "]"}]}], "]"}], "/.", 
       RowBox[{"\[Mu]", "->", "0"}]}], "/.", "latexCouplings"}], "//", 
     "FullSimplify"}], ",", "z"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
         RowBox[{"w", "[", "z", "]"}]}], "]"}], "/.", 
       RowBox[{"\[Mu]", "->", "0"}]}], "/.", "latexCouplings"}], "//", 
     "FullSimplify"}], ",", "z"}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864396826760911*^9, 3.864396966083762*^9}, {
  3.864397122289941*^9, 3.864397129270009*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"f42abe4c-6d1b-4840-8e4e-77f57ec5955c"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.8643968320367727`*^9, 3.864396859312842*^9}, {
   3.864396890635481*^9, 3.8643968999014683`*^9}, {3.8643969381990967`*^9, 
   3.864396966537038*^9}, {3.864397123840867*^9, 3.86439712960247*^9}, 
   3.864398385354786*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"30740fa0-8e4e-4391-8706-5f33d5225da6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "2"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", "\[Delta]"}]}], 
    RowBox[{"4", " ", "k", " ", 
     SuperscriptBox["\[Delta]", 
      RowBox[{"3", "/", "2"}]]}]], ",", 
   RowBox[{"-", 
    FractionBox["\[Gamma]", 
     RowBox[{"k", " ", 
      SqrtBox["\[Delta]"]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox["\[Delta]"]}], "k"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8643968320367727`*^9, 3.864396859312842*^9}, {
   3.864396890635481*^9, 3.8643968999014683`*^9}, {3.8643969381990967`*^9, 
   3.864396966537038*^9}, {3.864397123840867*^9, 3.86439712960247*^9}, 
   3.8643983853568077`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"fa88bba5-26b5-4b50-8d68-a0560cfccfe5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "4"], "-", 
     RowBox[{"8", " ", "\[Beta]", " ", 
      SuperscriptBox["\[Gamma]", "2"], " ", "\[Delta]"}], "-", 
     RowBox[{"32", " ", "k", " ", "\[Gamma]", " ", 
      SuperscriptBox["\[Delta]", 
       RowBox[{"5", "/", "2"}]]}], "+", 
     RowBox[{"16", " ", 
      SuperscriptBox["\[Delta]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Beta]", "2"], "+", 
        RowBox[{"4", " ", "\[Delta]", " ", "\[Epsilon]"}]}], ")"}]}]}], 
    RowBox[{"64", " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox["\[Delta]", "3"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", "\[Delta]"}], "+", 
      RowBox[{"8", " ", "\[Alpha]", " ", 
       SuperscriptBox["\[Delta]", "2"]}], "+", 
      RowBox[{"16", " ", "k", " ", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"5", "/", "2"}]]}]}], 
     RowBox[{"8", " ", 
      SuperscriptBox["k", "2"], " ", 
      SuperscriptBox["\[Delta]", "2"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8643968320367727`*^9, 3.864396859312842*^9}, {
   3.864396890635481*^9, 3.8643968999014683`*^9}, {3.8643969381990967`*^9, 
   3.864396966537038*^9}, {3.864397123840867*^9, 3.86439712960247*^9}, 
   3.8643983853837557`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"7a9d2884-78fc-4e91-9d00-0589c2cf2a3b"]
}, Open  ]],

Cell["\<\
We perform a change of passive variable to move to the [0,1] segment\
\>", "Text",
 CellChangeTimes->{{3.864274950694655*^9, 
  3.864274983848119*^9}},ExpressionUUID->"1797eaaa-2a96-4258-8f16-\
b0aaeadc709f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "==", 
      FractionBox["z", 
       RowBox[{"z", "+", "1"}]]}], "}"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "==", 
      FractionBox[
       RowBox[{"-", "z"}], 
       RowBox[{
        RowBox[{"-", "z"}], "+", "1"}]]}], "}"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864202530337821*^9, 3.8642025455519876`*^9}, {
   3.864203679909642*^9, 3.864203695046502*^9}, {3.8643125792997847`*^9, 
   3.864312584998733*^9}, 3.864312739399147*^9, 3.864312846895759*^9, {
   3.864313227672843*^9, 3.8643132302920513`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"0ba523e6-8de9-4e5a-8c93-e58531fdfa9d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["x", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.864203689655448*^9, 3.864203695378886*^9}, 
   3.864269792992223*^9, 3.8642746682788057`*^9, 3.864312585566846*^9, 
   3.8643127402473993`*^9, 3.864312853051523*^9, 3.864313274121306*^9, 
   3.864317519201784*^9, 3.864358623939385*^9, 3.864398387368374*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"62c91768-4e1f-4eee-89f5-e29d587b4f46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    FractionBox["x", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.864203689655448*^9, 3.864203695378886*^9}, 
   3.864269792992223*^9, 3.8642746682788057`*^9, 3.864312585566846*^9, 
   3.8643127402473993`*^9, 3.864312853051523*^9, 3.864313274121306*^9, 
   3.864317519201784*^9, 3.864358623939385*^9, 3.864398387390162*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"6648de88-982d-4005-8690-5473040f5008"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq3Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox["#1", 
            RowBox[{"#1", "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{"1", "-", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Minus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox[
            RowBox[{"-", "#1"}], 
            RowBox[{
             RowBox[{"-", "#1"}], "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}]}], "Input",
 CellChangeTimes->{{3.864203669237536*^9, 3.864203704773901*^9}, {
   3.86420374226264*^9, 3.864203743862155*^9}, 3.864206662091394*^9, 
   3.864206908747628*^9, {3.864206958892559*^9, 3.864206981146277*^9}, 
   3.864312121357253*^9, {3.8643121835475197`*^9, 3.8643121837888403`*^9}, {
   3.86431223160461*^9, 3.8643122468096533`*^9}, {3.864312635132743*^9, 
   3.864312642965464*^9}, {3.8643127437881927`*^9, 3.8643127515382442`*^9}, {
   3.864312859386508*^9, 3.86431288216315*^9}, {3.864313285147183*^9, 
   3.8643132933196983`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"e00713bd-4f4d-44c7-be2c-6e62e00d44a1"],

Cell["\<\
Now we need to fix the power \[Mu] in order for the coefficient of w[x] to be \
a polynomial in x\
\>", "Text",
 CellChangeTimes->{{3.8642760369276342`*^9, 
  3.8642760992304163`*^9}},ExpressionUUID->"c193f374-e684-46e4-85ec-\
9b491781295f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
    RowBox[{"w", "[", "x", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
    RowBox[{"w", "[", "x", "]"}]}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864276203478758*^9, 3.8642762449628353`*^9}, {
   3.864276415361682*^9, 3.864276443868231*^9}, 3.864312127163787*^9, {
   3.864312262542098*^9, 3.8643122664867067`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"030c1b12-13b3-4947-9a36-98a6a339850d"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"64", " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
    SuperscriptBox["\[Lambda]", "6"]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
     SuperscriptBox["\[Gamma]", "4"]}], "+", 
    RowBox[{"8", " ", "x", " ", 
     SuperscriptBox["\[Gamma]", "3"], " ", 
     SuperscriptBox["\[Lambda]", "2"]}], "-", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
     SuperscriptBox["\[Gamma]", "2"], " ", 
     SuperscriptBox["\[Lambda]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"\[Beta]", "+", 
       RowBox[{"2", " ", "H", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Lambda]", " ", 
        "\[Mu]"}]}], ")"}]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["\[Lambda]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       RowBox[{"4", " ", "H", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", "\[Beta]", " ", 
        "\[Lambda]", " ", "\[Mu]"}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Epsilon]"}], "+", 
          RowBox[{"x", " ", 
           RowBox[{"(", 
            RowBox[{"A", "+", "\[Epsilon]", "+", 
             RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}], "+", 
          RowBox[{"H", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "H"}], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["x", "2"], " ", "\[Lambda]"}]}], ")"}], " ", 
           "\[Mu]"}], "+", 
          RowBox[{
           SuperscriptBox["H", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], "-", 
    RowBox[{"32", " ", "\[Gamma]", " ", 
     SuperscriptBox["\[Lambda]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "H"}], " ", "\[Lambda]"}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{"\[Beta]", "+", 
          RowBox[{"H", " ", "\[Lambda]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.86427621846246*^9, 3.864276245125049*^9}, {
   3.864276419853499*^9, 3.864276444262329*^9}, 3.864286853987031*^9, 
   3.864312268584391*^9, 3.864312444627284*^9, 3.8643126484910307`*^9, 
   3.864312763725235*^9, {3.864312868911336*^9, 3.8643128850649652`*^9}, 
   3.864313297462576*^9, 3.864317640173773*^9, 3.864358629893512*^9, 
   3.864398393670128*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"1727f977-8c3b-4a83-b149-b7c1e809f3f2"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"64", " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
    SuperscriptBox["\[Lambda]", "6"]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
     SuperscriptBox["\[Gamma]", "4"]}], "-", 
    RowBox[{"8", " ", "x", " ", 
     SuperscriptBox["\[Gamma]", "3"], " ", 
     SuperscriptBox["\[Lambda]", "2"]}], "-", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
     SuperscriptBox["\[Gamma]", "2"], " ", 
     SuperscriptBox["\[Lambda]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"\[Beta]", "+", 
       RowBox[{"2", " ", "H", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Lambda]", " ", 
        "\[Mu]"}]}], ")"}]}], "+", 
    RowBox[{"32", " ", "\[Gamma]", " ", 
     SuperscriptBox["\[Lambda]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "H"}], " ", "\[Lambda]"}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{"\[Beta]", "+", 
          RowBox[{"H", " ", "\[Lambda]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["\[Lambda]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       RowBox[{"4", " ", "H", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", "\[Beta]", " ", 
        "\[Lambda]", " ", "\[Mu]"}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "A"}], " ", "x"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Epsilon]"}], "+", 
          
          RowBox[{"H", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "x", " ", "\[Lambda]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "H"}], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["x", "2"], " ", "\[Lambda]"}]}], ")"}], " ", 
              "\[Mu]"}], "+", 
             RowBox[{"H", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
      ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.86427621846246*^9, 3.864276245125049*^9}, {
   3.864276419853499*^9, 3.864276444262329*^9}, 3.864286853987031*^9, 
   3.864312268584391*^9, 3.864312444627284*^9, 3.8643126484910307`*^9, 
   3.864312763725235*^9, {3.864312868911336*^9, 3.8643128850649652`*^9}, 
   3.864313297462576*^9, 3.864317640173773*^9, 3.864358629893512*^9, 
   3.864398394326879*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"922ec6a5-2259-4f9c-8562-7fb067a391f2"]
}, Open  ]],

Cell["\[Mu] should be such that -1+x divides the above numerator", "Text",
 CellChangeTimes->{{3.8642771359749947`*^9, 
  3.864277156949697*^9}},ExpressionUUID->"8171d9ac-34d9-4484-bb7a-\
05482ef52eaf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"muPlus", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PolynomialRemainder", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "4"]}], "+", 
           RowBox[{"8", " ", "x", " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "-", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            SuperscriptBox["\[Lambda]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Beta]", "+", 
              RowBox[{"2", " ", "H", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Lambda]", " ",
                "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              RowBox[{"4", " ", "H", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", "\[Beta]",
                " ", "\[Lambda]", " ", "\[Mu]"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Lambda]", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[Epsilon]"}], "+", 
                 RowBox[{"x", " ", 
                  RowBox[{"(", 
                   RowBox[{"A", "+", "\[Epsilon]", "+", 
                    RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}], "+", 
                 RowBox[{"H", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "H"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["x", "2"], " ", "\[Lambda]"}]}], ")"}], 
                  " ", "\[Mu]"}], "+", 
                 RowBox[{
                  SuperscriptBox["H", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], "-", 
           RowBox[{"32", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "H"}], " ", "\[Lambda]"}], "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{"\[Beta]", "+", 
                 RowBox[{"H", " ", "\[Lambda]", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Mu]"}]}], 
                   ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], ",", "x"}], "]"}], "==", 
       "0"}], ",", "\[Mu]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"muMinus", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PolynomialRemainder", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "4"]}], "-", 
           RowBox[{"8", " ", "x", " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "-", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            SuperscriptBox["\[Lambda]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Beta]", "+", 
              RowBox[{"2", " ", "H", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Lambda]", " ",
                "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"32", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "H"}], " ", "\[Lambda]"}], "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{"\[Beta]", "+", 
                 RowBox[{"H", " ", "\[Lambda]", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Mu]"}]}], 
                   ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              RowBox[{"4", " ", "H", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", "\[Beta]",
                " ", "\[Lambda]", " ", "\[Mu]"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Lambda]", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "A"}], " ", "x"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
                  "\[Epsilon]"}], "+", 
                 RowBox[{"H", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "x", " ", "\[Lambda]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "H"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["x", "2"], " ", "\[Lambda]"}]}], ")"}], 
                    " ", "\[Mu]"}], "+", 
                    RowBox[{"H", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
                    SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], ",", "x"}], "]"}], "==", 
       "0"}], ",", "\[Mu]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.8642764896009493`*^9, 3.864276567089525*^9}, {
   3.8642766664189796`*^9, 3.864276682947541*^9}, {3.864276958083522*^9, 
   3.864276974100775*^9}, {3.8642770336545763`*^9, 3.864277069237823*^9}, 
   3.864277164783778*^9, {3.8642868998673153`*^9, 3.864286933564728*^9}, {
   3.864312131851811*^9, 3.864312133268993*^9}, {3.8643122805726643`*^9, 
   3.86431232866*^9}, {3.864312901364444*^9, 3.864312936476317*^9}, {
   3.8643131849495573`*^9, 3.864313191041491*^9}, {3.8643133098870573`*^9, 
   3.8643133194317093`*^9}, {3.864317648225321*^9, 3.864317658506645*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"bc8bd5a8-1838-433f-b10b-ccc9781582d8"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Gamma]", "3"], "-", 
    RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
     SuperscriptBox["\[Lambda]", "2"]}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["\[Lambda]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{"A", "+", 
       RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
   RowBox[{"16", " ", "H", " ", 
    SuperscriptBox["\[Lambda]", "5"]}]]}]], "Output",
 CellChangeTimes->{
  3.864277165089775*^9, 3.864286937877316*^9, 3.864312340829945*^9, {
   3.8643129171184063`*^9, 3.864312938922553*^9}, 3.864313192078261*^9, 
   3.864313320569648*^9, 3.864317660725588*^9, 3.8643586318566103`*^9, 
   3.8643983949426727`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"804b4a0b-0521-4674-b789-442b723415cb"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[Gamma]", "3"], "-", 
   RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "+", 
   RowBox[{"8", " ", 
    SuperscriptBox["\[Lambda]", "4"], " ", 
    RowBox[{"(", 
     RowBox[{"A", "-", 
      RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
  RowBox[{"16", " ", "H", " ", 
   SuperscriptBox["\[Lambda]", "5"]}]]], "Output",
 CellChangeTimes->{
  3.864277165089775*^9, 3.864286937877316*^9, 3.864312340829945*^9, {
   3.8643129171184063`*^9, 3.864312938922553*^9}, 3.864313192078261*^9, 
   3.864313320569648*^9, 3.864317660725588*^9, 3.8643586318566103`*^9, 
   3.8643983949586906`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"99651457-a5ef-41ed-846e-b94044fbf406"]
}, Open  ]],

Cell["\<\
Let us check that we recover the result when there is no cubic coupling and \
the quadratic coupling is unity\
\>", "Text",
 CellChangeTimes->{{3.864277168293796*^9, 
  3.864277217334004*^9}},ExpressionUUID->"ce5cdc2c-1ae1-42ee-b05e-\
001c5ccbb4bf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"muPlus", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]", "->", "1"}], ",", 
     RowBox[{"\[Gamma]", "->", "0"}], ",", 
     RowBox[{"H", "->", "1"}]}], "}"}]}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"muMinus", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]", "->", "1"}], ",", 
     RowBox[{"\[Gamma]", "->", "0"}], ",", 
     RowBox[{"H", "->", "1"}]}], "}"}]}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864277071238452*^9, 3.864277092886804*^9}, {
  3.864286945404324*^9, 3.864286947049967*^9}, {3.86431236195774*^9, 
  3.864312369611364*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"a2c6bcce-1e88-4487-a9df-e7c987a320eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "-", 
  FractionBox["A", 
   RowBox[{"2", " ", "\[Lambda]"}]]}]], "Output",
 CellChangeTimes->{{3.864277071886488*^9, 3.864277093232448*^9}, 
   3.864286947721074*^9, 3.8643123713891277`*^9, 3.864313327058065*^9, 
   3.86431766496283*^9, 3.86435863571774*^9, 3.864398398081375*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"e582dd3a-ecda-4740-b916-ed1c599824ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  FractionBox["A", 
   RowBox[{"2", " ", "\[Lambda]"}]]}]], "Output",
 CellChangeTimes->{{3.864277071886488*^9, 3.864277093232448*^9}, 
   3.864286947721074*^9, 3.8643123713891277`*^9, 3.864313327058065*^9, 
   3.86431766496283*^9, 3.86435863571774*^9, 3.8643983980831747`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"1bbe72e8-2c27-4da9-9296-351c0e3c04ff"]
}, Open  ]],

Cell["\<\
That is a great success. So now we can perform the change of variable \
explicitly.\
\>", "Text",
 CellChangeTimes->{{3.864277224998146*^9, 
  3.8642772574782133`*^9}},ExpressionUUID->"ceba5f3e-a66d-4040-88bf-\
51c4ea0f6de5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"A", " ", "z"}], " ", "+", 
   RowBox[{"\[Beta]", " ", 
    SuperscriptBox["z", "2"]}], "+", 
   RowBox[{"\[Gamma]", " ", 
    SuperscriptBox["z", "3"]}], "+", 
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", 
    SuperscriptBox["z", "4"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq", "[", "\[Psi]_", "]"}], ":=", 
   RowBox[{"z", "\[Function]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "''"}], "[", "z", "]"}], "+", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Epsilon]", "-", 
        RowBox[{"V", "[", "z", "]"}]}], 
       RowBox[{
        SuperscriptBox["H", "2"], " "}]], 
      RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3"}], " ", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{"6", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Beta]"}], "+", 
               RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
             SuperscriptBox["\[Lambda]", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["z", "2"], " ", 
             SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
         RowBox[{"24", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "3"]}]]}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "+", "1"}], ")"}], 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Gamma]", "3"], "-", 
          RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[Lambda]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"A", "+", 
             RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
         RowBox[{"16", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "5"]}]]}]]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"z", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "3"}], " ", 
               SuperscriptBox["\[Gamma]", "2"]}], "+", 
              RowBox[{"6", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[Beta]"}], "+", 
                 RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
               SuperscriptBox["\[Lambda]", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["z", "2"], " ", 
               SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
           RowBox[{"24", " ", "H", " ", 
            SuperscriptBox["\[Lambda]", "3"]}]]}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"z", "+", "1"}], ")"}], 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], "-", 
            RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
             SuperscriptBox["\[Lambda]", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["\[Lambda]", "4"], " ", 
             RowBox[{"(", 
              RowBox[{"A", "+", 
               RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
           RowBox[{"16", " ", "H", " ", 
            SuperscriptBox["\[Lambda]", "5"]}]]}]], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"z", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SuperscriptBox["\[Gamma]", "2"]}], "+", 
           RowBox[{"6", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Beta]"}], "+", 
              RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["z", "2"], " ", 
            SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
        RowBox[{"24", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "3"]}]]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "z"}], "+", "1"}], ")"}], 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "3"], "-", 
         RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["\[Lambda]", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"A", "-", 
            RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
        RowBox[{"16", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}]]]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"z", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], " ", 
              SuperscriptBox["\[Gamma]", "2"]}], "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Beta]"}], "+", 
                RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
              SuperscriptBox["\[Lambda]", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["z", "2"], " ", 
              SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
          RowBox[{"24", " ", "H", " ", 
           SuperscriptBox["\[Lambda]", "3"]}]]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "z"}], "+", "1"}], ")"}], 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], "-", 
           RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{"A", "-", 
              RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
          RowBox[{"16", " ", "H", " ", 
           SuperscriptBox["\[Lambda]", "5"]}]]], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox["#1", 
            RowBox[{"#1", "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{"1", "-", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Minus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox[
            RowBox[{"-", "#1"}], 
            RowBox[{
             RowBox[{"-", "#1"}], "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}]}], "Code",
 CellChangeTimes->{{3.864035526701899*^9, 3.864035567764186*^9}, {
   3.86403565956774*^9, 3.864035667256592*^9}, {3.864115016484351*^9, 
   3.864115017418898*^9}, {3.8641152422780733`*^9, 3.864115267812194*^9}, {
   3.864115649334899*^9, 3.864115655364806*^9}, 3.864115695927232*^9, 
   3.864116018567485*^9, 3.864117086684123*^9, {3.8641181148079357`*^9, 
   3.864118115933967*^9}, {3.864118242001134*^9, 3.86411825792118*^9}, 
   3.8641990306553793`*^9, 3.8642010609833183`*^9, 3.86420237395303*^9, {
   3.864205586724691*^9, 3.864205587664859*^9}, 3.8642078236374598`*^9, {
   3.864208608819233*^9, 3.864208610930963*^9}, {3.864269777597616*^9, 
   3.864269777795177*^9}, {3.8642708672924137`*^9, 3.8642708773561974`*^9}, {
   3.8642754046018677`*^9, 3.864275412761997*^9}, {3.8642772909887466`*^9, 
   3.86427732148457*^9}, {3.864277363257691*^9, 3.8642773643954773`*^9}, 
   3.864286339687099*^9, {3.864286963090498*^9, 3.864286991152171*^9}, {
   3.864312401282723*^9, 3.8643124124651127`*^9}, {3.864313334376279*^9, 
   3.864313408970352*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"33266b00-1840-4e26-943c-a220052c1b66"]
}, Closed]],

Cell[CellGroupData[{

Cell["Setup recurrence", "Subsubsection",
 CellChangeTimes->{{3.864531519695738*^9, 
  3.864531522493395*^9}},ExpressionUUID->"e9687498-4e52-40c3-8f96-\
b01c1467a36c"],

Cell["\<\
The coefficients of the ODE are simple polynomials now. Let us extract and \
name the coefficients of those polynomials\
\>", "Text",
 CellChangeTimes->{{3.864274994666313*^9, 
  3.864275028944138*^9}},ExpressionUUID->"4c640880-6459-4024-b91c-\
680836bbf068"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "''"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "'"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{"w", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864277353595161*^9, 3.8642773853036823`*^9}, {
  3.864313419531303*^9, 3.864313425651647*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"8c936833-1c05-4ed1-9e55-d66306293c7f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "4"}], ",", "6", ",", 
   RowBox[{"-", "4"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.864317683945923*^9, 
   3.864358640844207*^9, 3.8643984051989737`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"3f70b2b9-ea2c-4dde-a5e5-5e7db2d8e4f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"2", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"32", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "-", 
     RowBox[{"4", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "+", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"3", " ", 
       SuperscriptBox["\[Gamma]", "3"]}], "-", 
      RowBox[{"2", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "A"}], "+", "\[Beta]", "-", "\[Gamma]"}], ")"}], 
       " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"96", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "+", 
      RowBox[{"16", " ", 
       SuperscriptBox["\[Lambda]", "6"]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Lambda]", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"A", "+", 
        RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.864317683945923*^9, 
   3.864358640844207*^9, 3.8643984053394737`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"d21a7259-80ce-4539-aeb8-191840bde25b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"256", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "6"], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "A"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"48", " ", "H", " ", 
       SuperscriptBox["\[Gamma]", "3"], " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "-", 
      RowBox[{"32", " ", 
       RowBox[{"(", 
        RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "6"]}], "-", 
      RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "7"]}], "+", 
      RowBox[{"64", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", "+", "\[Beta]"}], ")"}], "2"], " ", 
       SuperscriptBox["\[Lambda]", "8"]}], "+", 
      RowBox[{"128", " ", "H", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "A"}], "+", 
         RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "9"]}], "+", 
      RowBox[{"256", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]}], ")"}]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"A", "+", "\[Beta]", "-", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "4"]}], "+", 
        RowBox[{"32", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}], "+", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Lambda]", "6"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Lambda]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"A", "+", 
           RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"128", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}], " ", 
     
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.864317683945923*^9, 
   3.864358640844207*^9, 3.864398405504036*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"6e9f1865-9d2c-4f9f-9734-58e633c97e50"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"2", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"32", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "-", 
     RowBox[{"4", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "+", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"3", " ", 
       SuperscriptBox["\[Gamma]", "3"]}], "-", 
      RowBox[{"2", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "A"}], "+", "\[Beta]", "-", "\[Gamma]"}], ")"}], 
       " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"96", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "+", 
      RowBox[{"16", " ", 
       SuperscriptBox["\[Lambda]", "6"]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Lambda]", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"A", "+", 
        RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"256", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "6"], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "A"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"48", " ", "H", " ", 
       SuperscriptBox["\[Gamma]", "3"], " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "-", 
      RowBox[{"32", " ", 
       RowBox[{"(", 
        RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "6"]}], "-", 
      RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "7"]}], "+", 
      RowBox[{"64", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", "+", "\[Beta]"}], ")"}], "2"], " ", 
       SuperscriptBox["\[Lambda]", "8"]}], "+", 
      RowBox[{"128", " ", "H", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "A"}], "+", 
         RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "9"]}], "+", 
      RowBox[{"256", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"128", " ", 
       SuperscriptBox["H", "2"], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"A", "+", "\[Beta]", "-", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "4"]}], "+", 
        RowBox[{"32", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}], "+", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Lambda]", "6"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Lambda]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"A", "+", 
           RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
       ")"}]}]}]}]}], ";", 
  RowBox[{"l", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]]}], ";"}]}], "Code",
 CellChangeTimes->{{3.8642697470308247`*^9, 3.8642697719328527`*^9}, {
   3.8642698050613003`*^9, 3.864269809694182*^9}, {3.864269920748795*^9, 
   3.864269997090382*^9}, 3.864270965722127*^9, {3.864277396585041*^9, 
   3.8642774445072193`*^9}, {3.864287010818693*^9, 3.864287054480163*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"8e4de106-f69b-4013-9ec7-508b64e01070"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "/.", "latexCouplings"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.8643990506629972`*^9, 3.864399079726974*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"a62b3c59-2e96-4f2b-95b3-51cea4a7b7cc"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Gamma]", "3"], "-", 
    RowBox[{"2", " ", "\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
     "\[Delta]"}], "+", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}], " ", 
     SuperscriptBox["\[Delta]", "2"]}], "+", 
    RowBox[{"32", " ", "H", " ", 
     SuperscriptBox["\[Delta]", 
      RowBox[{"5", "/", "2"}]]}]}], 
   RowBox[{"8", " ", "H", " ", 
    SuperscriptBox["\[Delta]", 
     RowBox[{"5", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.864400756374359*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"cde43abd-8032-4cf6-a234-a48014f55260"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"3", " ", 
    SuperscriptBox["\[Gamma]", "3"]}], "-", 
   RowBox[{"4", " ", "\[Gamma]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
    "\[Delta]"}], "+", 
   RowBox[{"8", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "\[Alpha]"}], "+", 
      RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
    SuperscriptBox["\[Delta]", "2"]}], "+", 
   RowBox[{"96", " ", "H", " ", 
    SuperscriptBox["\[Delta]", 
     RowBox[{"5", "/", "2"}]]}]}], 
  RowBox[{"8", " ", "H", " ", 
   SuperscriptBox["\[Delta]", 
    RowBox[{"5", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.864400756399481*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"e72b2ced-ead7-438b-a22a-37f0faac06bb"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"3", " ", 
     SuperscriptBox["\[Gamma]", "3"]}], "-", 
    RowBox[{"2", " ", "\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"6", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
     "\[Delta]"}], "+", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "\[Alpha]"}], "+", "\[Beta]", "-", "\[Gamma]"}], 
      ")"}], " ", 
     SuperscriptBox["\[Delta]", "2"]}], "+", 
    RowBox[{"96", " ", "H", " ", 
     SuperscriptBox["\[Delta]", 
      RowBox[{"5", "/", "2"}]]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["\[Delta]", "3"]}]}], 
   RowBox[{"8", " ", "H", " ", 
    SuperscriptBox["\[Delta]", 
     RowBox[{"5", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.8644007564350147`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"3d89f7d7-a359-472d-bb4c-1599c76dba51"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[Gamma]", "3"], "-", 
   RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", "\[Delta]"}], "+", 
   RowBox[{"8", " ", 
    RowBox[{"(", 
     RowBox[{"\[Alpha]", "+", 
      RowBox[{"4", " ", "H", " ", 
       SqrtBox["\[Delta]"]}]}], ")"}], " ", 
    SuperscriptBox["\[Delta]", "2"]}]}], 
  RowBox[{"8", " ", "H", " ", 
   SuperscriptBox["\[Delta]", 
    RowBox[{"5", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.86440075644879*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"779bcff1-7993-4afb-8615-bb8d9d2c96a1"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"256", " ", 
    SuperscriptBox["H", "2"], " ", 
    SuperscriptBox["\[Delta]", "5"]}]], 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[Gamma]", "6"], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Gamma]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
     "\[Delta]"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Gamma]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "\[Alpha]"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}],
      " ", 
     SuperscriptBox["\[Delta]", "2"]}], "+", 
    RowBox[{"48", " ", "H", " ", 
     SuperscriptBox["\[Gamma]", "3"], " ", 
     SuperscriptBox["\[Delta]", 
      RowBox[{"5", "/", "2"}]]}], "-", 
    RowBox[{"32", " ", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
     SuperscriptBox["\[Delta]", "3"]}], "-", 
    RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
     SuperscriptBox["\[Delta]", 
      RowBox[{"7", "/", "2"}]]}], "+", 
    RowBox[{"64", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}], "2"], " ", 
     SuperscriptBox["\[Delta]", "4"]}], "+", 
    RowBox[{"128", " ", "H", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "\[Alpha]"}], "+", 
       RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
     SuperscriptBox["\[Delta]", 
      RowBox[{"9", "/", "2"}]]}], "+", 
    RowBox[{"256", " ", 
     SuperscriptBox["\[Delta]", "5"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.864400756585198*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"e5e5baf3-7b98-4c06-a4eb-0b900a84e5a1"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", "\[Delta]"}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "+", 
         RowBox[{"2", " ", "H", " ", 
          SqrtBox["\[Delta]"]}]}], ")"}], " ", 
       SuperscriptBox["\[Delta]", "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", "\[Delta]"}], "-", 
      RowBox[{"4", " ", "\[Gamma]", " ", "\[Delta]", " ", 
       RowBox[{"(", 
        RowBox[{"\[Beta]", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}], ")"}]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[Delta]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "+", "\[Beta]", "+", 
         RowBox[{"4", " ", "H", " ", 
          SqrtBox["\[Delta]"]}], "+", 
         RowBox[{"2", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], 
   RowBox[{"128", " ", 
    SuperscriptBox["H", "2"], " ", 
    SuperscriptBox["\[Delta]", "5"]}]]}]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.8644007566702538`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"e955d5f8-e2d5-4a22-bba7-f3411f366383"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", "\[Delta]"}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"\[Alpha]", "+", 
        RowBox[{"2", " ", "H", " ", 
         SqrtBox["\[Delta]"]}]}], ")"}], " ", 
      SuperscriptBox["\[Delta]", "2"]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", "\[Delta]"}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"\[Alpha]", "+", 
        RowBox[{"4", " ", "H", " ", 
         SqrtBox["\[Delta]"]}]}], ")"}], " ", 
      SuperscriptBox["\[Delta]", "2"]}]}], ")"}]}], 
  RowBox[{"256", " ", 
   SuperscriptBox["H", "2"], " ", 
   SuperscriptBox["\[Delta]", "5"]}]]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.8644007566826143`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"1dc4123d-4b27-4c8a-9c8d-bb5d4085bccd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "''"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "'"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{"w", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864277353595161*^9, 3.8642773853036823`*^9}, {
  3.864313419531303*^9, 3.864313454870009*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"a8ba9d02-a284-4225-8897-8252a381dffe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "4"}], ",", "6", ",", 
   RowBox[{"-", "4"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.864317698224139*^9, 3.864358644440229*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"7ac3630c-de46-4eae-ae9a-278edb748dba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"32", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "-", 
     RowBox[{"4", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "+", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "-", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], 
       ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}], "-", 
     RowBox[{"16", " ", 
      SuperscriptBox["\[Lambda]", "6"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[Lambda]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"A", "-", 
         RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.864317698224139*^9, 3.864358644621873*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"a37f1060-3fb8-4b80-926f-1170f0d4900a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "6"], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Gamma]", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Gamma]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["\[Beta]", "2"]}], "-", 
        RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "A"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"48", " ", "H", " ", 
      SuperscriptBox["\[Gamma]", "3"], " ", 
      SuperscriptBox["\[Lambda]", "5"]}], "-", 
     RowBox[{"32", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "A"}], "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "6"]}], "-", 
     RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "7"]}], "+", 
     RowBox[{"64", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"A", "-", "\[Beta]"}], ")"}], "2"], " ", 
      SuperscriptBox["\[Lambda]", "8"]}], "+", 
     RowBox[{"128", " ", "H", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "9"]}], "+", 
     RowBox[{"256", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "+", 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
         " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], ")"}], " ", 
         
         SuperscriptBox["\[Lambda]", "4"]}], "-", 
        RowBox[{"32", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Lambda]", "6"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Lambda]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"A", "-", 
           RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"128", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}], " ", 
     
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.864317698224139*^9, 3.8643586448405027`*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"a06afa03-843d-40fb-ad9d-a38d07d3ee10"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bb", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dd", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ff", "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"32", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gg", "=", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "-", 
     RowBox[{"4", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "+", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hh", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "-", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], 
       ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}], "-", 
     RowBox[{"16", " ", 
      SuperscriptBox["\[Lambda]", "6"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ii", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[Lambda]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"A", "-", 
         RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jj", "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"256", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "6"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Beta]", "2"]}], "-", 
         RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "A"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "-", 
      RowBox[{"48", " ", "H", " ", 
       SuperscriptBox["\[Gamma]", "3"], " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "-", 
      RowBox[{"32", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "A"}], "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "6"]}], "-", 
      RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "7"]}], "+", 
      RowBox[{"64", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", "-", "\[Beta]"}], ")"}], "2"], " ", 
       SuperscriptBox["\[Lambda]", "8"]}], "+", 
      RowBox[{"128", " ", "H", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "A"}], "+", 
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "9"]}], "+", 
      RowBox[{"256", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kk", "=", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"128", " ", 
       SuperscriptBox["H", "2"], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "+", 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
         " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "4"]}], "-", 
        RowBox[{"32", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Lambda]", "6"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Lambda]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"A", "-", 
           RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
       ")"}]}]}]}]}], ";", 
  RowBox[{"ll", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]]}], ";"}]}], "Code",
 CellChangeTimes->{{3.8642697470308247`*^9, 3.8642697719328527`*^9}, {
   3.8642698050613003`*^9, 3.864269809694182*^9}, {3.864269920748795*^9, 
   3.864269997090382*^9}, 3.864270965722127*^9, {3.864277396585041*^9, 
   3.8642774445072193`*^9}, {3.864287010818693*^9, 3.864287054480163*^9}, {
   3.864313470139778*^9, 3.864313555327423*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"bba9a1c4-1d18-4a26-8ab3-9e2229071852"],

Cell[TextData[{
 "Ansatz for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"w", 
     RowBox[{"(", "x", ")"}]}], "=", 
    RowBox[{"\[Sum]", 
     RowBox[{
      SubscriptBox["\[Alpha]", "n"], 
      SuperscriptBox["x", "n"]}]}]}], TraditionalForm]],ExpressionUUID->
  "cbaac105-2cb4-4761-b2be-8853b3d81809"],
 ", we get the following difference equations, exactly the same as in the \
previous section because it is for generic coefficients abcdefghijkl"
}], "Text",
 CellChangeTimes->{{3.8642750419140577`*^9, 3.864275053063743*^9}, {
  3.864275110366568*^9, 3.8642751370634737`*^9}, {3.864277463032014*^9, 
  3.864277495417461*^9}},ExpressionUUID->"60006717-d4f0-49fd-9749-\
d28b32186661"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"diffEqPlus", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"n", "+", "2"}], ")"}], "a", " ", 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "+", "2"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "b"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "f"}]}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "+", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "n", " ", "c"}], "+", 
      RowBox[{"n", " ", "g"}], "+", "j"}], ")"}], 
    SubscriptBox["\[Alpha]", "n"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "d"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "h"}], "+", "k"}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "-", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "3"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "e"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "i"}], "+", "l"}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "-", "2"}]]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffEqMinus", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"n", "+", "2"}], ")"}], "aa", " ", 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "+", "2"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "bb"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "ff"}]}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "+", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "n", " ", "cc"}], "+", 
      RowBox[{"n", " ", "gg"}], "+", "jj"}], ")"}], 
    SubscriptBox["\[Delta]", "n"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "dd"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "hh"}], "+", "kk"}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "-", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "3"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "ee"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "ii"}], "+", "ll"}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "-", "2"}]]}]}]}]}], "Code",
 CellChangeTimes->{{3.864270018911315*^9, 3.8642702462416697`*^9}, {
  3.8642705156994133`*^9, 3.8642705159562902`*^9}, {3.864313518020338*^9, 
  3.864313519482671*^9}, {3.864313560863084*^9, 3.864313611425284*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"fbf7c6cd-954c-4a1e-b761-d9403fc7d7ae"],

Cell[TextData[{
 "Now we need to generalize the choice of initial conditions C0 and C1 in \
order to be able to extract the even level energy spectrum, and in particular \
the ground state energy.\nLet us recall that for the previous potential (\
\[Gamma]->0, \[Beta]->1), we had C0=1 and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C1", "=", 
    RowBox[{"1", "+", 
     FractionBox["1", 
      RowBox[{"2", "\[Lambda]"}]]}]}], TraditionalForm]],ExpressionUUID->
  "2051da58-ecc0-4f63-915a-1c6ae8372c38"],
 "."
}], "Text",
 CellChangeTimes->{{3.864275145180252*^9, 3.864275191066702*^9}, {
  3.864277514040395*^9, 3.86427757220188*^9}, {3.8642777223928633`*^9, 
  3.8642778004261217`*^9}, {3.8642862975920963`*^9, 
  3.864286314556131*^9}},ExpressionUUID->"11cc14b3-1299-4c1d-aeb7-\
00492ad7f768"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"psiPlus", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"z", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "+", 
         RowBox[{"6", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Beta]"}], "+", 
            RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["z", "2"], " ", 
          SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
      RowBox[{"24", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "3"]}]]}], "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "+", "1"}], ")"}], 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]]}]], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Alpha]", "0"], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], 
      FractionBox["z", 
       RowBox[{"z", "+", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["z", 
         RowBox[{"z", "+", "1"}]], ")"}], "2"]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiMinus", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Exp", "[", 
    FractionBox[
     RowBox[{"z", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{"6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Beta]"}], "+", 
           RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["z", "2"], " ", 
         SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
     RowBox[{"24", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "3"]}]], "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "z"}], "+", "1"}], ")"}], 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[Gamma]", "3"]}], "+", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "A"}], "+", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]]}]], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Delta]", "0"], "+", 
     RowBox[{
      SubscriptBox["\[Delta]", "1"], 
      FractionBox[
       RowBox[{"-", "z"}], 
       RowBox[{
        RowBox[{"-", "z"}], "+", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[Delta]", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"-", "z"}], 
         RowBox[{
          RowBox[{"-", "z"}], "+", "1"}]], ")"}], "2"]}]}], 
    ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.864286324723585*^9, 3.864286433353557*^9}, {
   3.8642889704779167`*^9, 3.8642890116523952`*^9}, 3.8642890470751457`*^9, {
   3.864289083251052*^9, 3.86428912995544*^9}, {3.864289237638175*^9, 
   3.864289254868375*^9}, {3.864313707915181*^9, 3.864313713541687*^9}, {
   3.864313881883119*^9, 3.864313887220744*^9}, {3.864317721805814*^9, 
   3.864317725550482*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"7cd8a1e6-a867-45c1-8c9c-b6914c1b1b70"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"psiPlus", "'"}], "[", "0", "]"}], "/.", "rule"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"psiMinus", "'"}], "[", "0", "]"}], "/.", "rule"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.8642864434371567`*^9, 3.864286462633073*^9}, {
  3.864289139123407*^9, 3.864289156917902*^9}, {3.864289223876636*^9, 
  3.864289228321069*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"d1664fba-5159-4fbb-b119-d7acbcf15af0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "A", "+", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
     SubscriptBox["\[Alpha]", "0"]}], 
    RowBox[{"2", " ", "\[Lambda]"}]]}], "+", 
  SubscriptBox["\[Alpha]", "1"]}]], "Output",
 CellChangeTimes->{{3.864286450123785*^9, 3.8642864630254097`*^9}, 
   3.864287064388155*^9, {3.864289140413212*^9, 3.864289159117506*^9}, {
   3.8642892288595867`*^9, 3.864289258649302*^9}, 3.86431389030669*^9, 
   3.864317732172204*^9, 3.8643586500678988`*^9, 3.864446550293253*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"b30999df-d06f-44df-a4fb-95610785319e"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "A", "+", 
      RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
    SubscriptBox["\[Delta]", "0"]}], 
   RowBox[{"2", " ", "\[Lambda]"}]], "-", 
  SubscriptBox["\[Delta]", "1"]}]], "Output",
 CellChangeTimes->{{3.864286450123785*^9, 3.8642864630254097`*^9}, 
   3.864287064388155*^9, {3.864289140413212*^9, 3.864289159117506*^9}, {
   3.8642892288595867`*^9, 3.864289258649302*^9}, 3.86431389030669*^9, 
   3.864317732172204*^9, 3.8643586500678988`*^9, 3.864446550307499*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"42f0e254-8815-46b8-8648-71079399d491"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"psiPlus", "'"}], "[", "0", "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"psiMinus", "'"}], "[", "0", "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.86428941613244*^9, 3.864289417586679*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"f370c1c6-3320-4a08-b7c7-dcfe4553ed4f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"2", " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "4"]}], "+", 
       RowBox[{"16", " ", "H", " ", 
        SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
     SubscriptBox["\[Alpha]", "0"]}], 
    RowBox[{"16", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], "+", 
  SubscriptBox["\[Alpha]", "1"]}]], "Output",
 CellChangeTimes->{3.864289418474496*^9, 3.864317827419479*^9, 
  3.8643586517049227`*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"0b5f9636-c4a0-4e2b-b758-f6e227b10e97"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "+", 
       RowBox[{"2", " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
        " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "4"]}], "-", 
       RowBox[{"16", " ", "H", " ", 
        SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
     SubscriptBox["\[Delta]", "0"]}], 
    RowBox[{"16", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], "-", 
  SubscriptBox["\[Delta]", "1"]}]], "Output",
 CellChangeTimes->{3.864289418474496*^9, 3.864317827419479*^9, 
  3.864358651786807*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"c19e0f7a-6a8a-4e04-8f7b-bcd70ec076f4"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"C0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"C1", "=", 
   RowBox[{"S", "+", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Gamma]", "3"], "-", 
         RowBox[{"2", " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          RowBox[{"(", 
           RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "4"]}], "+", 
         RowBox[{"16", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
       SubscriptBox["\[Alpha]", "0"]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]], "C0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CC0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CC1", "=", 
   RowBox[{
    RowBox[{"-", "S"}], "-", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Gamma]", "3"], "+", 
         RowBox[{"2", " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
          " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          RowBox[{"(", 
           RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "4"]}], "-", 
         RowBox[{"16", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "0"]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]], "CC0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialEqPlus", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Alpha]", "0"], "-", "C0"}], ",", 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], "-", "C1"}], ",", 
     RowBox[{
      RowBox[{"2", "a", " ", 
       SubscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"f", " ", 
       SubscriptBox["\[Alpha]", "1"]}], "+", 
      RowBox[{"j", " ", 
       SubscriptBox["\[Alpha]", "0"]}]}], ",", 
     RowBox[{
      RowBox[{"6", "a", " ", 
       SubscriptBox["\[Alpha]", "3"]}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"b", "+", "f"}], ")"}], 
       SubscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"g", "+", "j"}], ")"}], 
       SubscriptBox["\[Alpha]", "1"]}], "+", 
      RowBox[{"k", " ", 
       SubscriptBox["\[Alpha]", "0"]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialEqMinus", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Delta]", "0"], "-", "CC0"}], ",", 
     RowBox[{
      SubscriptBox["\[Delta]", "1"], "-", "CC1"}], ",", 
     RowBox[{
      RowBox[{"2", "aa", " ", 
       SubscriptBox["\[Delta]", "2"]}], "+", 
      RowBox[{"ff", " ", 
       SubscriptBox["\[Delta]", "1"]}], "+", 
      RowBox[{"jj", " ", 
       SubscriptBox["\[Delta]", "0"]}]}], ",", 
     RowBox[{
      RowBox[{"6", "aa", " ", 
       SubscriptBox["\[Delta]", "3"]}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"bb", "+", "ff"}], ")"}], 
       SubscriptBox["\[Delta]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"gg", "+", "jj"}], ")"}], 
       SubscriptBox["\[Delta]", "1"]}], "+", 
      RowBox[{"kk", " ", 
       SubscriptBox["\[Delta]", "0"]}]}]}], "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.864270380769575*^9, 3.864270544385949*^9}, {
  3.864270681732925*^9, 3.8642707092690983`*^9}, {3.864277584361083*^9, 
  3.864277623001809*^9}, {3.864277788826624*^9, 3.864277805818914*^9}, {
  3.8643148390180197`*^9, 3.864314996387719*^9}, {3.864315370805738*^9, 
  3.864315370870441*^9}, {3.8643154226625013`*^9, 3.864315422935775*^9}, {
  3.8643161033803577`*^9, 3.8643161147858477`*^9}, {3.864316764706365*^9, 
  3.864316769043502*^9}, {3.864316802577961*^9, 3.864316820537896*^9}, {
  3.8643179116870728`*^9, 3.864317931324974*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"bca1ef3b-66a9-41d9-8196-5aab1bd979ab"]
}, Closed]],

Cell[CellGroupData[{

Cell["Solve recurrence", "Subsubsection",
 CellChangeTimes->{{3.864531533293716*^9, 
  3.8645315366840963`*^9}},ExpressionUUID->"6c03e5ae-951f-4455-8880-\
6529b8f93feb"],

Cell["\<\
We solve for the coefficients of the series expansion for a large value of n\
\>", "Text",
 CellChangeTimes->{{3.8642751963474607`*^9, 
  3.8642752191768208`*^9}},ExpressionUUID->"ffcadf0a-4dbf-4025-814e-\
8971b9ff2228"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nmax", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]largePlus", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"initialEqPlus", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"diffEqPlus", "[", "n", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "2", ",", 
              RowBox[{"Nmax", "-", "2"}]}], "}"}]}], "]"}]}], "]"}], "==", 
        "0"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["\[Alpha]", "m"], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"Nmax", "+", "1"}], ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]largeMinus", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"initialEqMinus", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"diffEqMinus", "[", "n", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "2", ",", 
              RowBox[{"Nmax", "-", "2"}]}], "}"}]}], "]"}]}], "]"}], "==", 
        "0"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["\[Delta]", "m"], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"Nmax", "+", "1"}], ",", "2"}], "]"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->CompressedData["
1:eJwd0FtIk3EcxvHXOYJm2RK6UFERRYdikail2GhTgtRoqQlzrWgpZWKLZUhQ
aJpi5nlhnvBQppalLi08MaW8cb7aEPGUoSWJythATL1os//zu3j4XH8fX402
MV3AcVwEGywyhBnzTRaZ5wg/DutLt5bgWGDPDzike/MLSryubsGoCZsNOma0
BzDxy464gLmdZCdzcwQxMHXXSh5+7J4ARb4TSnjt1vc16HFqlmzLfFZRyzwT
tqmHyea5d3CuzP89PJuWNQalVToyeN96v45ZY03PhmH7an6BWVqVRq64C1Rr
zAZXEelqmu2AnFDTCUdEtTwMV6RMwYSsoQ2YszNKbvjZL/5htl8QxkHNoQdP
4HntQ7JmpsMA3Vr3+uB06AszVJ4uJ1dDRF2b+KXxK7mt2pyCKbU28vV1xcAB
s0X+fBjKmhbjnCYtsupml3hoWf2sgnfyR8nkV45cWB8jzIMhNa162Lvxlvwb
Pd8Ej9uXyRbPoG8wtSycnHRLuylgnvQpJ397lWTCLO9KckqqrIQvC9Sk64ql
Gc5420jxI0cflK4L+qFGH1kXxJRUnCNNR3raYHfGJ5K/0TUIx1v6SENJqBVy
zpFkklEj/cAMiOXk0OmubhEe9MiXoMu/vV1Y3S7Yg+vFPnaY0BBAFg1ECz8y
g4vjyVhFVAqUWmWkRGyshn7OIXqYrDPJ59H1c47UafOewv6qXvLSQuG9ZfQe
qyB9M5RmOBxxm+wM4BodzMuFYlJiPnqim7fIslUe5Eqgwh/67KpJfpC/Ymba
jdPkfyIw6rY=
  "],ExpressionUUID->"800309c8-c87d-4c44-b6bf-42d5f0f86b32"],

Cell["\<\
Check that we recover the result for the simpler potential.
The first method we use is by numerically solving for S and \[Epsilon] using \
the vanishing of the positive and negative coefficients. With proper \
initialization, it gives us the ground state energy.\
\>", "Text",
 CellChangeTimes->{{3.864275243849395*^9, 3.864275278617496*^9}, {
  3.864317968659535*^9, 3.864317980809977*^9}, {3.8650114424388237`*^9, 
  3.865011498854601*^9}},ExpressionUUID->"f087c32a-614f-4602-b796-\
8535b1c16195"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Alpha]largePlus", ",", "\[Alpha]largeMinus"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", "->", "1"}], ",", 
      RowBox[{"A", "->", "1.0"}], ",", 
      RowBox[{"\[Gamma]", "->", "0"}], ",", 
      RowBox[{"H", "->", "1"}], ",", 
      RowBox[{"\[Beta]", "->", "1"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1.0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", 
       RowBox[{"-", "10"}]}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.864272516042613*^9, 3.864272581235248*^9}, {
   3.864272630956184*^9, 3.864272652997024*^9}, {3.8643152302549*^9, 
   3.864315334743429*^9}, {3.864315388282217*^9, 3.864315388370914*^9}, {
   3.864315478660943*^9, 3.864315500630616*^9}, {3.8643161278235292`*^9, 
   3.8643161552456636`*^9}, {3.864316829844284*^9, 3.864316829982398*^9}, {
   3.864317021269602*^9, 3.864317096679879*^9}, {3.864317220413212*^9, 
   3.864317231961761*^9}, 3.864317298780168*^9, {3.864317334566575*^9, 
   3.864317342387321*^9}, {3.864318011281124*^9, 3.864318026607298*^9}, {
   3.8648152350966997`*^9, 3.864815235334029*^9}, {3.8648152886433153`*^9, 
   3.864815290182455*^9}, {3.864815350419099*^9, 3.864815350530383*^9}, 
   3.864815457195801*^9, {3.864815506360507*^9, 3.864815507751213*^9}, {
   3.864815553078826*^9, 3.864815562151266*^9}, {3.864877208457326*^9, 
   3.864877213672748*^9}, {3.864879694782627*^9, 3.86487977377365*^9}, {
   3.864880429843172*^9, 3.8648804334743853`*^9}, {3.86488125389849*^9, 
   3.8648812893362513`*^9}, {3.864882149792671*^9, 3.864882160029595*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"5e86adfd-ce6d-4ad4-bda0-153c6bc22cd5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Epsilon]", "\[Rule]", "1.2984329350142854`"}], ",", 
   RowBox[{"S", "\[Rule]", 
    RowBox[{"-", "0.3184263445999832`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864272582474341*^9, 3.864272653692486*^9}, 
   3.8642727233006563`*^9, {3.864315296586309*^9, 3.864315344630843*^9}, {
   3.864315378405192*^9, 3.864315417696125*^9}, {3.864315457418236*^9, 
   3.864315501130307*^9}, {3.864316143990018*^9, 3.864316155816534*^9}, {
   3.864316791724887*^9, 3.8643168537145967`*^9}, {3.8643170232770653`*^9, 
   3.864317097691369*^9}, {3.86431722205857*^9, 3.864317232530428*^9}, 
   3.864317299287344*^9, {3.864317335018508*^9, 3.8643173428797483`*^9}, 
   3.86431806306894*^9, 3.86481515433778*^9, 3.864815276172928*^9, 
   3.864815330930966*^9, 3.864815395054429*^9, 3.864815497476426*^9, 
   3.864815548890336*^9, 3.864815603244605*^9, 3.86487730937459*^9, 
   3.864879622209888*^9, {3.864879666309824*^9, 3.8648797755261183`*^9}, 
   3.864880435816009*^9, 3.864880958222632*^9, 3.864881094787812*^9, 
   3.8648811347803373`*^9, 3.864881225823657*^9, {3.86488125997513*^9, 
   3.864881292611203*^9}, {3.864882154639968*^9, 3.864882160641786*^9}, 
   3.864882628543458*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"321b80a3-66ca-44eb-abbd-cfb74336156a"]
}, Open  ]],

Cell["\<\
The second method we use is much more efficient. It consists in solving for S \
using one of the two equations (it so happens that the dependence on S is \
just linear), and plug it back in the other equation. This gives us a \
rational function of \[Epsilon], the vanishing of which being ensured by the \
vanishing of its numerator. The numerator is a polynomial of a given degree, \
hence giving us access to quite a nice number of energy levels in addition to \
the ground state energy.
The first levels fit perfectly with the paper of Lay and Bay. The discrepancy \
in the other levels is probably due to the fact that one has to take further \
coefficients in the series expansions.\
\>", "Text",
 CellChangeTimes->{{3.86501150286266*^9, 
  3.865011702989729*^9}},ExpressionUUID->"98d4ae08-619f-4e2c-8407-\
286657de6f13"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]Plus", "=", 
   RowBox[{"\[Alpha]largePlus", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", "->", "1"}], ",", 
      RowBox[{"A", "->", "1.0"}], ",", 
      RowBox[{"\[Gamma]", "->", "0"}], ",", 
      RowBox[{"H", "->", "1"}], ",", 
      RowBox[{"\[Beta]", "->", "1"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]Minus", "=", 
   RowBox[{"\[Alpha]largeMinus", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", "->", "1"}], ",", 
      RowBox[{"A", "->", "1.0"}], ",", 
      RowBox[{"\[Gamma]", "->", "0"}], ",", 
      RowBox[{"H", "->", "1"}], ",", 
      RowBox[{"\[Beta]", "->", "1"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rational", "=", 
   RowBox[{"\[Alpha]Plus", "/.", 
    RowBox[{"S", "->", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"\[Alpha]Minus", "==", "0"}], ",", "S"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"num", "=", 
   RowBox[{
    RowBox[{"rational", "//", "Together"}], "//", "Numerator"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"num", "==", "0"}], ",", "\[Epsilon]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.865011272214334*^9, 3.865011354066938*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"ca4c6747-0808-459a-999a-137a50e43e28"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "1.2992147129802176`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "4.6160637724680225`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "8.651623464456057`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "13.182833863900498`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "17.58224004199639`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "22.715954340228716`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "32.41631230403714`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "51.033468160772486`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "83.37846751786722`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "137.24488050178743`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "225.62131502075422`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "370.6120813282369`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "611.6022773809508`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "1023.5986676023903`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "1763.3015603665547`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "3204.136581818244`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "6430.560228813639`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "15821.910315675828`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "66870.54810843477`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.865011359625132*^9, 3.865048399976865*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"5166facb-d7c1-4de8-b94a-35f846271ac8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Export everything needed for python", "Subsubsection",
 CellChangeTimes->{{3.865049129318329*^9, 3.865049139510181*^9}, {
  3.8650493503723793`*^9, 
  3.865049370406671*^9}},ExpressionUUID->"638d987a-5b5c-4123-9625-\
2b7f7085a3ef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "saveDir", "=", 
   "\"\</home/sarkis/git_repositories/Quartic-Potential/archived/output_\
mathematica/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<plusNumerator.py\>\""}], ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]largePlus", "/.", "latexCouplingsExplicit"}], "//", 
       "Together"}], "//", "Numerator"}], ",", " ", "FortranForm"}], "]"}], 
   ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<plusDenominator.py\>\""}], ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]largePlus", "/.", "latexCouplingsExplicit"}], "//", 
       "Together"}], "//", "Denominator"}], ",", " ", "FortranForm"}], "]"}], 
   ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<minusNumerator.py\>\""}], ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]largeMinus", "/.", "latexCouplingsExplicit"}], "//", 
       "Together"}], "//", "Numerator"}], ",", " ", "FortranForm"}], "]"}], 
   ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<minusDenominator.py\>\""}], ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]largeMinus", "/.", "latexCouplingsExplicit"}], "//", 
       "Together"}], "//", "Denominator"}], ",", " ", "FortranForm"}], "]"}], 
   ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.865049542818655*^9},ExpressionUUID->"9c7623ef-a6fb-48c3-8c40-\
c7b35078f494"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]Plus", "=", 
   RowBox[{"\[Alpha]largePlus", "/.", "latexCouplingsExplicit"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]Minus", "=", 
   RowBox[{"\[Alpha]largeMinus", "/.", "latexCouplingsExplicit"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[51]:=",ExpressionUUID->"5ad06055-8ea9-46ea-8ead-fc915e00bbf9"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"Level", "[", 
     RowBox[{"\[Alpha]Minus", ",", 
      RowBox[{"-", "5"}]}], "]"}], "//", "Tally"}], "//", 
   RowBox[{"MaximalBy", "[", "Last", "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.86505475240481*^9, 3.865054766475773*^9}, 
   3.865058517834971*^9},ExpressionUUID->"72edcd1b-ae1e-4897-9224-\
23c9b2be9fed"],

Cell["\<\
The equation for S is just linear, so to help mathematica let\
\[CloseCurlyQuote]s just extract the coefficients and solve manually\
\>", "Text",
 CellChangeTimes->{{3.865058524939623*^9, 
  3.865058560660483*^9}},ExpressionUUID->"fb11cd44-ec9d-47bf-addf-\
33d11671cacb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coefS", "=", 
   RowBox[{"CoefficientList", "[", 
    RowBox[{"\[Alpha]Minus", ",", "S"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865055020831924*^9, 3.8650550257140303`*^9}, {
  3.865057742084869*^9, 3.865057773988196*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"4bb8c281-cd9f-4a0c-900a-62049ef38e1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "coefS", "]"}]], "Input",
 CellChangeTimes->{{3.865058327368753*^9, 3.865058351923066*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"e321b3c9-2ca6-46ad-85ba-6c617dd21e0d"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.8650583377595654`*^9, 3.865058352680169*^9}},
 CellLabel->"Out[90]=",ExpressionUUID->"80738758-8b73-4024-a9e3-9d3fc368f448"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"solS", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"coefS", "[", 
      RowBox[{"[", "1", "]"}], "]"}], 
     RowBox[{"coefS", "[", 
      RowBox[{"[", "2", "]"}], "]"}]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865058388936252*^9, 3.8650584117160997`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"65d49684-88aa-401c-a74e-db3bc3fcfb4e"],

Cell["We plug back in the other equation", "Text",
 CellChangeTimes->{{3.86506779724603*^9, 
  3.865067802862265*^9}},ExpressionUUID->"fb9c66e6-5c00-48f5-8ed5-\
2326f350e161"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rational", "=", 
   RowBox[{"\[Alpha]Plus", "/.", 
    RowBox[{"S", "->", "solS"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865058489476781*^9, 3.865058490468895*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"471b429a-0e66-4009-90f2-f5b1880ee288"],

Cell["\<\
Put in fraction form (this take A LOT of time, a few hours for Nmax=20)\
\>", "Text",
 CellChangeTimes->{{3.865067810638118*^9, 
  3.86506783393408*^9}},ExpressionUUID->"99e731d5-356a-4818-854a-\
9a95ceace031"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rational2", "=", " ", 
   RowBox[{"rational", "//", "Together"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865058567866859*^9, 3.8650585914946737`*^9}, 
   3.865058762596073*^9, {3.86505896233062*^9, 3.865058975175508*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"3add8282-3571-43d2-9b5a-219513b9ef94"],

Cell["\<\
Extract the numerator and denominator separately and save them both in \
mathematica notebooks and in text files in python format\
\>", "Text",
 CellChangeTimes->{{3.865067848686243*^9, 
  3.8650678804945307`*^9}},ExpressionUUID->"356dca39-f246-43f3-b2e9-\
6f3b4d44abe9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"num", "=", 
   RowBox[{"rational2", "//", "Numerator"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8650648751010723`*^9, 3.865064894281478*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"546d84d5-d6da-45e8-a722-6833686a9cd6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"den", "=", 
   RowBox[{"rational2", "//", "Denominator"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865065921810235*^9, 3.865065930708765*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"9b8245d4-c711-4464-8e79-d462ef52ff86"],

Cell[BoxData[
 RowBox[{"num", ">>", 
  "\"\</home/sarkis/git_repositories/Quartic-Potential/mathematica/\
rationalNumerator_N20.m\>\""}]], "Input",
 CellChangeTimes->{{3.8049956481827393`*^9, 3.80499572195166*^9}, {
   3.804995829955764*^9, 3.804995859025194*^9}, 3.8130286138999243`*^9, {
   3.8130286915868*^9, 3.813028737791086*^9}, {3.813029052533731*^9, 
   3.813029066013687*^9}, {3.813029156597683*^9, 3.813029157915803*^9}, {
   3.8650676462182817`*^9, 3.865067647210259*^9}, {3.86506768304077*^9, 
   3.8650676986504393`*^9}, {3.865067750844502*^9, 
   3.865067752058529*^9}},ExpressionUUID->"02fb20e3-5dd4-4278-b4a7-\
b45b0c90a918"],

Cell[BoxData[
 RowBox[{"den", ">>", 
  "\"\</home/sarkis/git_repositories/Quartic-Potential/mathematica/\
rationalDenominator_N20.m\>\""}]], "Input",
 CellChangeTimes->{{3.865067737674655*^9, 3.865067747866434*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"d48572de-a28a-4636-8b6a-b738428d075b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "saveDir", "=", 
   "\"\</home/sarkis/git_repositories/Quartic-Potential/archived/output_\
mathematica/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator.py\>\""}], ",", 
   RowBox[{"ToString", "[", 
    RowBox[{"num", ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator.py\>\""}], ",", 
   RowBox[{"ToString", "[", 
    RowBox[{"den", ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.865048925529873*^9, 3.865048954938983*^9}, {
   3.865049055388707*^9, 3.8650490767941303`*^9}, {3.865058582518388*^9, 
   3.8650585830777273`*^9}, {3.865058666146372*^9, 3.865058667970311*^9}, 
   3.865064965713005*^9, {3.865065910875408*^9, 3.865065950178067*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"195ecbb2-57bd-4edf-8b9b-b4d2e73f2b3b"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica/rationalNumerator.py\"\>"], "Output",
 CellChangeTimes->{3.865065872298984*^9, 3.865065924263405*^9, 
  3.8650659588139467`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"c04ccea7-3f71-49a6-a362-3c7941fe50f6"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica/rationalDenominator.py\"\>"], "Output",
 CellChangeTimes->{3.865065872298984*^9, 3.865065924263405*^9, 
  3.865065959284857*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"a5e731a1-238c-4e33-8e94-e313f1588c04"]
}, Open  ]],

Cell["\<\
We double check that no errors occurred during the computation\
\>", "Text",
 CellChangeTimes->{{3.8650678878226013`*^9, 
  3.865067912062971*^9}},ExpressionUUID->"edaf6acb-d476-442f-b34b-\
358bfe859af0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"specialNum", "=", 
   RowBox[{"num", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"delta", "->", "1"}], ",", 
      RowBox[{"alpha", "->", "1.0"}], ",", 
      RowBox[{"gamma", "->", "0"}], ",", 
      RowBox[{"H", "->", "1"}], ",", 
      RowBox[{"beta", "->", "1"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865066048404996*^9, 3.8650660610933113`*^9}, {
  3.865066095797245*^9, 3.865066111141767*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"f63b7536-f49c-4c30-8c63-550f04584996"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"specialNum", "==", "0"}], ",", "epsilon"}], "]"}]], "Input",
 CellChangeTimes->{{3.865066118586887*^9, 3.86506612757345*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"61dfab4c-78aa-433c-ad72-6684c6b030e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1.2992147129802134`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "4.616063772468295`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "8.651623464453854`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "13.182833863903042`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "17.58224004202428`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "22.715954340155275`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "32.41631230411431`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "51.033468160703684`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "83.37846751791798`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "137.24488050176112`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "225.62131502077713`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "370.6120813282067`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "611.6022773810004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1023.5986676022744`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1763.3015603667457`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "3204.1365818181494`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "6430.5602288136715`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "15821.910315675823`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "66870.5481084348`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.865066131339369*^9, 3.865148502075282*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"c14c9886-7ad1-4a7e-9bdc-d42c3eb8f12d"]
}, Open  ]],

Cell["\<\
Exporting separately the coefficients of the \[Epsilon] polynomial to help \
numpy\
\>", "Text",
 CellChangeTimes->{{3.86506858641536*^9, 3.8650685987353907`*^9}, {
  3.865068982645403*^9, 3.865068989221512*^9}, {3.8650696229826527`*^9, 
  3.8650696445693398`*^9}},ExpressionUUID->"d767ac92-e93c-406c-9a2c-\
62ac80e515c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"num", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sarkis/git_repositories/Quartic-Potential/mathematica/\
rationalNumerator_N20.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"den", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sarkis/git_repositories/Quartic-Potential/mathematica/\
rationalDenominator_N20.m\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8650686585939207`*^9, 3.8650686858116617`*^9}, {
  3.865069541434374*^9, 3.865069556263504*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"43aa1519-f34d-48cc-9d72-22c5877a1922"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HHNum", "=", 
   RowBox[{
    RowBox[{"num", "/.", "physicalCouplingsExplicit"}], "/.", 
    "HHruleExplicit"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8651488024506407`*^9, 3.8651488702051573`*^9}, {
  3.865149289267313*^9, 3.865149289827015*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"07c81278-c985-4523-b452-512ab15fa331"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"numnum", "=", 
   RowBox[{"HHNum", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "->", "4"}], ",", 
      RowBox[{"tau", "->", "0"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.86514938589338*^9, 3.865149402160404*^9}, {
  3.865149668620867*^9, 3.865149699534534*^9}, {3.865149746150929*^9, 
  3.8651497506267347`*^9}, {3.865151205248459*^9, 3.8651512233920317`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"2c142d1d-ec34-4d12-ba4a-0b01ba311e23"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"-\\\", \
FractionBox[\\\"7.150739521176802`*^-26\\\", \
\\\"92938556779861441424878906134368785008203762603712153690985741207246291072\
525273346573019656009771911862420236887060815653411577846556606736926911318899\
664111435677527966242121417900614643608554389949736396964825379234294179867505\
50981868377179113018825281909088399455148533430091776\\\"]}]\\) is too small \
to represent as a normalized machine number; precision may be lost.\"", 2, 
   144, 19, 29173448080933174315, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.865149673604875*^9, 3.865149701574894*^9}, 
   3.865149752823126*^9, 3.865151208085746*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"c6eeacd8-d049-46cf-981b-20597174c4f6"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"-\\\", \
FractionBox[\\\"2.0822268309535958`*^-29\\\", \
\\\"23234639194965360356219726533592196252050940650928038422746435301811572768\
131318336643254914002442977965605059221765203913352894461639151684231727829724\
916027858919381991560530354475153660902138597487434099241206344808573544966876\
37745467094294778254706320477272099863787133357522944\\\"]}]\\) is too small \
to represent as a normalized machine number; precision may be lost.\"", 2, 
   144, 20, 29173448080933174315, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.865149673604875*^9, 3.865149701574894*^9}, 
   3.865149752823126*^9, 3.8651512082558107`*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"f8690fa7-537d-4ff3-bae1-0451e5008a6c"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"-\\\", \
FractionBox[\\\"4.539014684195623`*^-27\\\", \
\\\"58086597987413400890549316333980490630127351627320096056866088254528931920\
328295841608137285006107444914012648054413009783382236154097879210579319574312\
290069647298454978901325886187884152255346493718585248103015862021433862417190\
9436366773573694563676580119318024965946783339380736\\\"]}]\\) is too small \
to represent as a normalized machine number; precision may be lost.\"", 2, 
   144, 21, 29173448080933174315, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.865149673604875*^9, 3.865149701574894*^9}, 
   3.865149752823126*^9, 3.865151208426754*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"8ab58e75-e40a-404e-bcb9-a9a7909c9168"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 144, 22, 29173448080933174315, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.865149673604875*^9, 3.865149701574894*^9}, 
   3.865149752823126*^9, 3.8651512087824087`*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"e4b7583d-85ab-4ab9-80c6-c0be6961d5c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["numnum"], "Input",
 CellChangeTimes->{{3.865151181872993*^9, 3.8651511841872663`*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"1061cdfd-2d99-4209-ac4d-1d3d9b616135"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.439230486448272`*^-233"}], "+", 
  RowBox[{"7.656654540465346`*^-233", " ", "epsilon"}], "-", 
  RowBox[{"1.0068600049901385`*^-232", " ", 
   SuperscriptBox["epsilon", "2"]}], "+", 
  RowBox[{"4.8303055269738525`*^-233", " ", 
   SuperscriptBox["epsilon", "3"]}], "-", 
  RowBox[{"9.94731565442056`*^-234", " ", 
   SuperscriptBox["epsilon", "4"]}], "+", 
  RowBox[{"9.677467829763631`*^-235", " ", 
   SuperscriptBox["epsilon", "5"]}], "-", 
  RowBox[{"4.752635368798825`*^-236", " ", 
   SuperscriptBox["epsilon", "6"]}], "+", 
  RowBox[{"1.237301980747617`*^-237", " ", 
   SuperscriptBox["epsilon", "7"]}], "-", 
  RowBox[{"1.7711448897345287`*^-239", " ", 
   SuperscriptBox["epsilon", "8"]}], "+", 
  RowBox[{"1.4315821035699726`*^-241", " ", 
   SuperscriptBox["epsilon", "9"]}], "-", 
  RowBox[{"6.65177355316783`*^-244", " ", 
   SuperscriptBox["epsilon", "10"]}], "+", 
  RowBox[{"1.7940787213812595`*^-246", " ", 
   SuperscriptBox["epsilon", "11"]}], "-", 
  RowBox[{"2.8126968600057786`*^-249", " ", 
   SuperscriptBox["epsilon", "12"]}], "+", 
  RowBox[{"2.542823237885046`*^-252", " ", 
   SuperscriptBox["epsilon", "13"]}], "-", 
  RowBox[{"1.300010230356939`*^-255", " ", 
   SuperscriptBox["epsilon", "14"]}], "+", 
  RowBox[{"3.628153820600475`*^-259", " ", 
   SuperscriptBox["epsilon", "15"]}], "-", 
  RowBox[{"5.208408329024474`*^-263", " ", 
   SuperscriptBox["epsilon", "16"]}], "+", 
  RowBox[{"3.473753577266576`*^-267", " ", 
   SuperscriptBox["epsilon", "17"]}], "-", 
  RowBox[{"8.893389222376271`*^-272", " ", 
   SuperscriptBox["epsilon", "18"]}], "+", 
  RowBox[{"5.566578556616262`*^-277", " ", 
   SuperscriptBox["epsilon", "19"]}]}]], "Output",
 CellChangeTimes->{{3.865151184509548*^9, 3.8651512124420137`*^9}},
 CellLabel->
  "Out[145]=",ExpressionUUID->"5a185a69-cb17-4654-a8da-27e9bcaaf2e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"numnum", "==", "0"}], ",", "epsilon"}], "]"}]], "Input",
 CellChangeTimes->{{3.8651494288528357`*^9, 3.865149437632782*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"19a6c94a-6336-4a95-b026-f489c57e8e04"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "0.2750548597357799`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1.0496928151530274`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "2.6126229456166707`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "5.8565582051639895`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "12.17227576537034`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "23.743107284420468`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "43.97667882501939`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "78.17561942584265`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "134.64608391000831`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "226.6084059875146`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "375.6487420900405`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "618.318369546829`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1019.6651507167073`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1703.5369176455347`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "2928.673141959294`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "5311.72455291152`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "10643.687017429367`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "26157.652115736622`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "110475.98969782532`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.865149438458359*^9, {3.865149686185192*^9, 3.865149711051893*^9}, {
   3.8651497605457363`*^9, 3.865149765402261*^9}, {3.865151200649691*^9, 
   3.865151215431389*^9}},
 CellLabel->
  "Out[146]=",ExpressionUUID->"0dee98f9-15aa-424a-a247-53c215b87f09"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"specialNum", "=", 
   RowBox[{"num", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"delta", "->", "1"}], ",", 
      RowBox[{"alpha", "->", "1.0"}], ",", 
      RowBox[{"gamma", "->", "0"}], ",", 
      RowBox[{"H", "->", "1"}], ",", 
      RowBox[{"beta", "->", "1"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865066048404996*^9, 3.8650660610933113`*^9}, {
  3.865066095797245*^9, 3.865066111141767*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"1e2c9859-1d37-4ff0-a03d-70319185d045"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"specialNum", "==", "0"}], ",", "epsilon"}], "]"}]], "Input",
 CellChangeTimes->{{3.865066118586887*^9, 3.86506612757345*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"1eb9a044-da0a-4ba5-8a05-bf3e78731a8c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1.2992147129802134`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "4.616063772468295`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "8.651623464453854`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "13.182833863903042`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "17.58224004202428`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "22.715954340155275`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "32.41631230411431`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "51.033468160703684`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "83.37846751791798`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "137.24488050176112`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "225.62131502077713`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "370.6120813282067`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "611.6022773810004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1023.5986676022744`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1763.3015603667457`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "3204.1365818181494`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "6430.5602288136715`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "15821.910315675823`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "66870.5481084348`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.865066131339369*^9, 3.865148502075282*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"5b20a9d9-35b2-47a6-a4e4-5636282938e3"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"listNum", "=", 
   RowBox[{"CoefficientList", "[", 
    RowBox[{"num", ",", "epsilon"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listDen", "=", 
   RowBox[{"CoefficientList", "[", 
    RowBox[{"den", ",", "epsilon"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.86506989404906*^9, 3.8650699083376923`*^9}, {
  3.865071686553843*^9, 3.865071692212829*^9}, {3.8650717245177*^9, 
  3.865071738229124*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"d0d08e64-81ea-428d-bc88-c84720276933"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Length", "[", "listNum", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "listDen", "]"}]}], "Input",
 CellChangeTimes->{{3.865071831002026*^9, 3.8650718439126*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"f3df003c-a044-4a76-a780-92dd0dc42af1"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{{3.865071835280501*^9, 3.865071844214357*^9}, 
   3.865148481811997*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"c9c1ec57-b391-4f8b-abb4-7634b9d59564"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{{3.865071835280501*^9, 3.865071844214357*^9}, 
   3.865148481813334*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"fdab0f9f-772b-46c8-88ce-b24f718465c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "saveDir", "=", 
   "\"\</home/sarkis/git_repositories/Quartic-Potential/archived/output_\
mathematica_coefficients/numerator/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_0.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_1.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_2.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_3.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_4.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_5.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_6.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "7", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_7.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "8", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_8.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "9", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_9.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "10", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_10.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_11.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "12", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_12.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "13", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_13.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "14", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_14.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "15", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_15.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "16", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_16.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "17", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_17.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "18", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_18.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "19", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_19.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "20", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.865071716133852*^9, 3.8650717204229918`*^9}, {
  3.865071767846192*^9, 3.86507189729142*^9}, {3.865071934694552*^9, 
  3.8650719385685663`*^9}, {3.865072084733864*^9, 3.8650721194004707`*^9}, {
  3.865072159682582*^9, 3.8650721637259398`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"6cf5b05e-99c0-400c-a8c6-1a143762afb0"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_0.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072258732958*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"c64310d9-db25-4a89-8d8c-475ceb441d8b"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_1.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072259953915*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"c0cd9033-cf4e-4a52-8556-ed9e267d3ec8"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_2.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072260967979*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"9b04dc9d-ea9c-4924-94d5-f96892946074"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_3.py\
\"\>"], "Output",
 CellChangeTimes->{3.8650722617644444`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"7e0b57fb-ee9b-4c5b-a034-40294e80efcf"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_4.py\
\"\>"], "Output",
 CellChangeTimes->{3.8650722623929253`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"e5b2a3e4-d1e0-4fc0-8a69-014abfe99b91"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_5.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072262878223*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"3b162f10-3b95-42b8-9a72-06cd989440a1"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_6.py\
\"\>"], "Output",
 CellChangeTimes->{3.8650722632369757`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"4f5e3491-a967-4862-9b3a-18c8378202ec"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_7.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072263525201*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"1cf75c91-35ec-4783-9ec9-3c93b8e0f3c4"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_8.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072263725746*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"17d78ca3-2ca1-4e15-b4d2-f31cd7e0ac67"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_9.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072263883136*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"d76c7546-1342-4398-b696-7a782fc0a91b"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_10.\
py\"\>"], "Output",
 CellChangeTimes->{3.865072264001464*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"ec2e64ad-8343-461e-809c-d853b36530c8"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_11.\
py\"\>"], "Output",
 CellChangeTimes->{3.865072264067236*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"2d0b4a29-c2e7-4425-a224-c07a3f323a79"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_12.\
py\"\>"], "Output",
 CellChangeTimes->{3.8650722641101017`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"33b4d714-1c82-4703-a3ac-d8c1ccdfa9cb"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_13.\
py\"\>"], "Output",
 CellChangeTimes->{3.8650722641355743`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"1e046030-59d9-44ca-ac12-12f1c80d878c"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_14.\
py\"\>"], "Output",
 CellChangeTimes->{3.865072264157556*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"3a0779a6-929d-41b0-a4bd-c010ced5f400"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_15.\
py\"\>"], "Output",
 CellChangeTimes->{3.8650722641804657`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"4ce3593b-b7ca-4a77-b607-fe4d93fb275b"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_16.\
py\"\>"], "Output",
 CellChangeTimes->{3.8650722641822863`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"02717dca-20ed-40d2-a5f2-e8f3d11a8088"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_17.\
py\"\>"], "Output",
 CellChangeTimes->{3.865072264183524*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"a378f1ce-8abd-40fc-8b9d-e0a95449a1cd"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_18.\
py\"\>"], "Output",
 CellChangeTimes->{3.865072264184795*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"b4feadd2-c10f-49ab-a721-d8fb5b4cd812"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_19.\
py\"\>"], "Output",
 CellChangeTimes->{3.865072264186121*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"36220416-6014-4b30-83c2-ee70dc6992a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "saveDir", "=", 
   "\"\</home/sarkis/git_repositories/Quartic-Potential/archived/output_\
mathematica_coefficients/denominator/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_0.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_1.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_2.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_3.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_4.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_5.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_6.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "7", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_7.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "8", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_8.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "9", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_9.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "10", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.865072171496413*^9, 3.865072251001671*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"8d53aed8-d919-4664-9528-56e9615d57ef"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
0.py\"\>"], "Output",
 CellChangeTimes->{3.8650722644295197`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"c0a5f361-ea9a-4fe0-a258-9e3276dfb157"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
1.py\"\>"], "Output",
 CellChangeTimes->{3.865072264595069*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"29ba2311-8da5-40b6-9c3b-334798074af8"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
2.py\"\>"], "Output",
 CellChangeTimes->{3.865072264685749*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"8187fd45-3abc-4437-923b-bf523d5c87c5"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
3.py\"\>"], "Output",
 CellChangeTimes->{3.8650722647397537`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"941f1cff-50a4-4063-91de-337789ff98ae"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
4.py\"\>"], "Output",
 CellChangeTimes->{3.86507226476867*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"9cd718a1-78ad-4e3d-bdb7-c87236e1d0d3"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
5.py\"\>"], "Output",
 CellChangeTimes->{3.865072264789915*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"e01a4939-39c3-4dae-bb7e-4e55791ddd8b"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
6.py\"\>"], "Output",
 CellChangeTimes->{3.8650722647921343`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"a2685032-d489-49c5-8ea6-90984f1eac71"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
7.py\"\>"], "Output",
 CellChangeTimes->{3.865072264809712*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"6c3b481a-39a4-47d6-ba3f-1498d17871c0"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
8.py\"\>"], "Output",
 CellChangeTimes->{3.865072264811531*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"5c0d180a-f4b9-48c0-b27c-5fc15574be0b"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
9.py\"\>"], "Output",
 CellChangeTimes->{3.865072264812826*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"0f204fd6-4e35-44b8-b719-81ba32f34844"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting for paper", "Subsubsection",
 CellChangeTimes->{{3.8649914369811077`*^9, 
  3.8649914401650047`*^9}},ExpressionUUID->"7d8bc839-ff56-4e3e-b8ce-\
44880c097ea1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"latexCouplings", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "->", "\[Alpha]"}], ",", 
     RowBox[{"\[Lambda]", "->", 
      SqrtBox["\[Delta]"]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"physicalCouplings", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", "q2"}], "+", 
          RowBox[{"m2", " ", "q1"}]}], 
         RowBox[{"m1", "+", "m2"}]]}], "\[Tau]"}]}], ",", 
     RowBox[{"\[Beta]", "->", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]], 
        FractionBox[
         RowBox[{"2", " ", "q1", " ", "q2"}], 
         SuperscriptBox["r", "3"]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         RowBox[{"m1", "+", "m2"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", 
           SuperscriptBox["\[Omega]2", "2"]}], "+", 
          RowBox[{"m2", " ", 
           SuperscriptBox["\[Omega]1", "2"]}]}], 
         RowBox[{"m1", "+", "m2"}]]}]}]}], ",", 
     RowBox[{"\[Gamma]", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]]}], 
       FractionBox[
        RowBox[{"3", " ", "q1", " ", "q2"}], 
        SuperscriptBox["r", "4"]]}]}], ",", 
     RowBox[{"\[Delta]", "->", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "m1", " ", "m2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            SuperscriptBox["m1", "2"]}], "+", 
           RowBox[{"3", "m1", " ", "m2"}], "+", 
           RowBox[{"2", 
            SuperscriptBox["m2", "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"m1", "+", "m2"}], ")"}], "4"]], 
       FractionBox[
        RowBox[{"q1", " ", "q2"}], 
        SuperscriptBox["r", "5"]]}]}], ",", 
     RowBox[{"H", "->", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"m1", "+", "m2"}], 
         RowBox[{"m1", " ", "m2"}]], 
        FractionBox[
         SuperscriptBox["HBAR", "2"], "2"]}]]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"latexCouplingsExplicit", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "->", "alpha"}], ",", 
     RowBox[{"\[Lambda]", "->", 
      SqrtBox["delta"]}], ",", " ", 
     RowBox[{"\[Beta]", "->", "beta"}], ",", " ", 
     RowBox[{"\[Gamma]", "->", "gamma"}], ",", 
     RowBox[{"\[Delta]", "->", "delta"}], ",", " ", 
     RowBox[{"\[Epsilon]", "->", "epsilon"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"physicalCouplingsExplicit", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alpha", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", "q2"}], "+", 
          RowBox[{"m2", " ", "q1"}]}], 
         RowBox[{"m1", "+", "m2"}]]}], "tau"}]}], ",", 
     RowBox[{"beta", "->", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]], 
        FractionBox[
         RowBox[{"2", " ", "q1", " ", "q2"}], 
         SuperscriptBox["r", "3"]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         RowBox[{"m1", "+", "m2"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", 
           SuperscriptBox["omega2", "2"]}], "+", 
          RowBox[{"m2", " ", 
           SuperscriptBox["omega1", "2"]}]}], 
         RowBox[{"m1", "+", "m2"}]]}]}]}], ",", 
     RowBox[{"gamma", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]]}], 
       FractionBox[
        RowBox[{"3", " ", "q1", " ", "q2"}], 
        SuperscriptBox["r", "4"]]}]}], ",", 
     RowBox[{"delta", "->", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "m1", " ", "m2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            SuperscriptBox["m1", "2"]}], "+", 
           RowBox[{"3", "m1", " ", "m2"}], "+", 
           RowBox[{"2", 
            SuperscriptBox["m2", "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"m1", "+", "m2"}], ")"}], "4"]], 
       FractionBox[
        RowBox[{"q1", " ", "q2"}], 
        SuperscriptBox["r", "5"]]}]}], ",", 
     RowBox[{"H", "->", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"m1", "+", "m2"}], 
         RowBox[{"m1", " ", "m2"}]], 
        FractionBox[
         SuperscriptBox["HBAR", "2"], "2"]}]]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"HHrule", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "->", "0.6099"}], ",", 
     RowBox[{"m2", "->", "0.6099"}], ",", 
     RowBox[{"q1", "->", "0.7080"}], ",", 
     RowBox[{"q2", "->", "0.7080"}], ",", 
     RowBox[{"\[Omega]1", "->", "0.4273"}], ",", 
     RowBox[{"\[Omega]2", "->", "0.4273"}], ",", 
     RowBox[{"HBAR", "->", "1"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"HHruleExplicit", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "->", "0.6099"}], ",", 
     RowBox[{"m2", "->", "0.6099"}], ",", 
     RowBox[{"q1", "->", "0.7080"}], ",", 
     RowBox[{"q2", "->", "0.7080"}], ",", 
     RowBox[{"omega1", "->", "0.4273"}], ",", 
     RowBox[{"omega2", "->", "0.4273"}], ",", 
     RowBox[{"HBAR", "->", "1"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.86540698405575*^9, 3.865406984409531*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"c85a6744-c15b-4a54-8442-1bb8bb18c4a3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]Plus", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]largePlus", "/.", "latexCouplings"}], "/.", 
     "physicalCouplings"}], "/.", "HHrule"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]Minus", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]largeMinus", "/.", "latexCouplings"}], "/.", 
     "physicalCouplings"}], "/.", "HHrule"}]}], ";"}]}], "Input",
 CellLabel->"In[72]:=",ExpressionUUID->"0a840572-3e50-40f9-981e-4a535247fd97"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rational", "=", 
   RowBox[{
    RowBox[{"\[Alpha]Plus", "/.", 
     RowBox[{"S", "->", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"\[Alpha]Minus", "==", "0"}], ",", "S"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Tau]", "->", "0"}], ",", 
      RowBox[{"r", "->", "10"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865007107644417*^9, 3.865007116808415*^9}, {
  3.8650071663123503`*^9, 3.865007168501062*^9}, {3.865008221510722*^9, 
  3.865008221602228*^9}, {3.8650083440854807`*^9, 3.8650083939438257`*^9}, {
  3.865008443846773*^9, 3.8650084769169703`*^9}, {3.865008512749763*^9, 
  3.865008513030899*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"7d376c22-1934-4f3c-9759-0bccb31dfcbe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"num", "=", 
   RowBox[{
    RowBox[{"rational", "//", "Together"}], "//", "Numerator"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.86500692344523*^9, 3.865006941961009*^9}, {
  3.865006982843453*^9, 3.865006994576399*^9}, {3.8650070534528627`*^9, 
  3.865007055234913*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"3d53ea0d-7777-4ba5-9f57-ce31fe4db344"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"num", "==", "0"}], ",", "\[Epsilon]"}], "]"}]], "Input",
 CellChangeTimes->{{3.865007197643188*^9, 3.865007207060359*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"c0844726-bbdc-4f31-a45e-7227c119720a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "22.286019682678024`"}], "-", 
      RowBox[{"20.68774583279195`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "22.286019682678024`"}], "+", 
      RowBox[{"20.68774583279195`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", 
     RowBox[{"18.72888087805439`", "\[VeryThinSpace]", "-", 
      RowBox[{"49.75104659929728`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", 
     RowBox[{"18.72888087805439`", "\[VeryThinSpace]", "+", 
      RowBox[{"49.75104659929728`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", 
     RowBox[{"86.89216343033333`", "\[VeryThinSpace]", "-", 
      RowBox[{"34.57260457616983`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", 
     RowBox[{"86.89216343033333`", "\[VeryThinSpace]", "+", 
      RowBox[{"34.57260457616983`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "148.50536792945695`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "273.7813300606355`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "540.9922299091687`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "1142.0413612388807`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "2576.937398942562`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "6294.343342370951`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "18081.8439141469`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "84530.23892255237`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.865007207770591*^9, 3.865008239182199*^9, {3.865008331411027*^9, 
   3.865008407382365*^9}, 3.865008456247333*^9, 3.865008490184958*^9, 
   3.865008526606431*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"c1a1996d-7e4d-447f-bfd3-30d91a555436"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]P", "=", 
   RowBox[{
    RowBox[{"\[Alpha]Plus", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Tau]", "->", "0"}], ",", 
       RowBox[{"r", "->", "4"}]}], "}"}]}], "//", "FullSimplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]M", "=", 
   RowBox[{
    RowBox[{"\[Alpha]Minus", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Tau]", "->", "0"}], ",", 
       RowBox[{"r", "->", "4"}]}], "}"}]}], "//", "FullSimplify"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[58]:=",ExpressionUUID->"6a555a0c-0a08-4eb9-ad06-757abde4adbd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FP", "[", 
   RowBox[{"\[Epsilon]_", ",", "S_"}], "]"}], ":=", 
  RowBox[{"\[Alpha]P", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Symbol", "[", "\"\<\[Epsilon]\>\"", "]"}], "->", 
      "\[Epsilon]"}], ",", 
     RowBox[{
      RowBox[{"Symbol", "[", "\"\<S\>\"", "]"}], "->", "S"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FM", "[", 
   RowBox[{"\[Epsilon]_", ",", "S_"}], "]"}], ":=", 
  RowBox[{"\[Alpha]M", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Symbol", "[", "\"\<\[Epsilon]\>\"", "]"}], "->", 
      "\[Epsilon]"}], ",", 
     RowBox[{
      RowBox[{"Symbol", "[", "\"\<S\>\"", "]"}], "->", "S"}]}], 
    "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.864998621164598*^9, 3.8649987041773653`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"766bb855-112e-44b7-8222-fdd810d97c80"],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", "\[Epsilon]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"FP", "[", 
     RowBox[{"\[Epsilon]", ",", "S"}], "]"}], "/.", 
    RowBox[{"S", "->", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FM", "[", 
          RowBox[{"\[Epsilon]", ",", "S"}], "]"}], "==", "0"}], ",", "S"}], 
       "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.865002444242592*^9, 3.8650025865101147`*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"f97459a9-ca5d-4269-abf1-679f38a1498b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"FM", "[", 
       RowBox[{"\[Epsilon]", ",", "S"}], "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{"FP", "[", 
       RowBox[{"\[Epsilon]", ",", "S"}], "]"}], "==", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", 
     RowBox[{"-", "10"}], ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"S", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "->", "None"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<\[Epsilon]\>\"", ",", "Black", ",", "30"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<S\>\"", ",", "Black", ",", "30"}], "]"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Latin Modern Roman\>\""}], ",", 
      RowBox[{"FontSize", "\[Rule]", "25"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"25", ",", "Black", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ContourStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", 
        RowBox[{"Darker", "[", 
         RowBox[{"Green", ",", "0.8"}], "]"}], ",", 
        RowBox[{"Opacity", "[", "0.6", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", 
        RowBox[{"Darker", "[", 
         RowBox[{"Red", ",", "0.4"}], "]"}], ",", 
        RowBox[{"Opacity", "[", "0.6", "]"}]}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Purple", ",", 
      RowBox[{"PointSize", "@", "Large"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"1.9", ",", "3.8"}], "}"}], "]"}], ",", "Purple", ",", 
      RowBox[{"PointSize", "@", "Large"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0.4", ",", "0"}], "}"}], "]"}], ",", "Purple", ",", 
      RowBox[{"PointSize", "@", "Large"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"14.83", ",", "5.66"}], "}"}], "]"}], ",", "Purple", ",", 
      RowBox[{"PointSize", "@", "Large"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"5.69", ",", 
         RowBox[{"-", "0.51"}]}], "}"}], "]"}], ",", "Purple", ",", 
      RowBox[{"PointSize", "@", "Large"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"34.6", ",", 
         RowBox[{"-", "1.55"}]}], "}"}], "]"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Background", "\[Rule]", "White"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQrTf5ZNLj028cnwnWp4LoRapyLSC66inDdBDNIHt6
Noi+kJ2yFETbKOusBNFKfg6bQPQXxyXbQPQbjs9g+saxB/tAtMGNvcdBdNL+
sOYnQNpsfdJMEK2zevU8EG3Ld24JiO7ZvXEjiH4bmrcbROcsuJ31DEi//9xR
AKIDun57PQfSHCphLSD6jHpOL4j2X5ffB6JZJlQtBtHZlpLrQLTcS4vNIDrr
sBuY9lE+vhtEbynS3QuiJ51+exBEc6WnHAXRkvxrToPoPc1KF0C0+9d12i+A
9EYuG2MQfchZ9QiIlvnBeBREAwCEK7rE
  "],
 CellLabel->"In[62]:=",ExpressionUUID->"b832d30d-a2b7-45af-a445-5fc4f7fcc8b8"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxFWwc8Ve//v/ae177WvfZehaieT8tKKtGSJA2KBg2JaKBSohINTaQiSspI
5xHqKyqJskdk703G3x/n/ry8Xl4f99xznnU+z3t8Hvruw/Z7WSkUyiM2CuX/
//JV3xGISehHlLkfZVytTbkYmdKPyhWtZc/7KWFOfu/ryvf70XVl69lfJeyY
/Mz8WVg/SontYvlPTAmvG/XQoEb1o7mPrzOwcWqC19P9/ejMuXSvru0MbOfa
O73eqx/dURl4u1GUgW0Dplmpe/vRW6/q2V863pDUdefhjn5E9c/PU3lCx/rm
aq+cdvej7etcJ1x20HGqYb5TwrZ+NHd7ZTq2XLrK8u2GfhSvfUDZtlMRf/Be
rntucz9aq3Njy9kERYztfTwt1/Wj6rkHKOJNLvpfilb1I4aYpbazkSJ+faFI
I8G6H71XpAceaVTA294VFf9C5PUKmK+F5TixuB9deh0jnTQij7cf1FWMN+9H
n2LWqQidkMf+EYt+3HIix0sef3Jn9fRQnb3/e8fWfSFyWFX7nsJm7X7k3fX4
2F9eOeyjkK2iQifHRxbXoXTNO+L9SEHD6dcfcVmsbH3r52UpcjxoWLqJ3fgi
rR9JSZ6K+veAhkcu22qdF+pHVnP9p2FumniUFNvs9z2nXCXiZfCkiJAbhacf
eW5d5Oy0WAYnNP0KrNfsR3O3eyuNr8cIHHzQ04dqjoXPDBtJ4zJTg/oTQ31I
+u7Bj8JFUljWjzdKRpKcXylMO23YUPm7D0kumbzi81ES2/Yf8blR24fOrBn0
1XSVxG9zc/at+da30F4JbGe9ZHLnhz50O+5aWMAGCcy9ht+/La8PJVNyP2WN
imOfscYJh7Y+VDX3BXH8nOuY2YtHfah49y+h6VoxfKA0/V9nQh9a8dr1RUW4
GK7Mz/jkVtyHZuZ+qPjBeY2bkmf70F3YsaryABXfFXr3vTu4D13+NHj2kSoV
h35W7o9I6lsYX1HMHleSUOzUh0oyXaBzRATvsx0I4dnVh64Eb3Q2J0Sw7x/t
k4NWfQvjKYKVxqR+pej3Ibt9P7vYzwnj4w4J7iKL+hCbb19IxVZh3BbiknjB
uQ9VzrVfCL9fFvn66mQvOn1L/9Q3SUH86O3Bc4cofajzbd6TU60C+HHk99Yv
+b2IMdcefrwcibNIBveirWdw3El1PnwirPNbzWxc3tM8HKbIh0vm7tuLfm14
3v36CS++GqHKzmHRiw7OzR8PLtlttsOXrxf95VKzv7CNG+sIUv7LYetFEXMd
5sZHg3k2vJroQZTPAv/GFnPjq2zPn93M6kFv5uaHE5sXa9WvO9OD+p2VUmOj
OHC5tIGRu0cPqph7Lgc+8Ztzw/kNPWioxWC17nIOzJFcU/lTsAdNzY0/G47g
FuE+/6Mb/RY+6T35ixX/JO450551L/SPFX8xVD/febIb0dNC4OlyVrxzsQW/
oHE3spgbXxZMs88tVBjvQpdWTK95oEDBAdy+3bWvu1D53PNniMvRX293b+9C
7klXC3z2TxNcbzWON9O6kPzc/SeJswGbPq/804kqVh04tuXvBCHhlqJv49mJ
3OfGZ5y4b0ofEvrZgVh3xCqO64wRoR333QJjO9Cruf6PEMnnv+fbenUgTpHL
XN+eDxMq15t89ya0o4m5/g0SHfETBQ632lDy+gtPFmX0E1I7NhzuPtWGVs21
v584va4ueGBXG9o04Lst+3Efcd5byyedvRVJzbWvi0iae04LMpTdYPSMrYuQ
pXkfL/7yF72No1/VjWwlzjV0hjn7/kUv5q8jPqxb+7e6vRnxs6lqvbv2l7jT
px/pSG9GQ2a33o0O/yEsriWmtwQ3oWVzz28khFbp+6ss/4OOJhApvqy1xDGw
sHnwpxFVXf+9WSSxmnBfdsU3pa8BPZi7/y9CaK5dNahH9XZWhXAxoaqaeavg
bjWi3nsqL6f8H8F298i7NGo1Cp27/hNR3nieI/1UJboWLmeamPWRKLQ9I7RU
/hdiX7vY1HfxK4JblPFhU0PpQr6rWEo7+0DnEVcJqjd5w2dyORFdmb8PunFY
8fb1PznoyeOcL0fsPqIRc2/pgtI8dP+y3fvviz+g1oXr2nZOHw08ext1mNgX
sq0rQfyH5iaS8J/ZabohphytYVl29vWpHOL7fH+QfNgR2W3XvhHrjKzUbrdV
o+KFflo2DZRfEG9AaFvDyEe/KsJxfrzQOT3f4k6JRsJJLvCgjXgT4p1rdzPh
uEx7X8KOZmTrEy377GI7kbcwbwmNAS2XtnYSPs7LG6KTWpHewrzK5hpNTsy0
ooM3NGQ/CPURhkmc+deWtCPNuc8HCLqSQ1y7YSfyvbUR52oPEt4mN2bs8zvR
+4V1d8BBMIVPrAdtuGv4s6hujDh/PdBz8nYvOlwgbrbm7hSxfn59Id+4uza7
OqYJZO3kQPfvRw0L70VayVGKxc1+dHH4/IWbxhSc7xK2v+5bP8qcuz8L3q2P
++iZA6icvrHLNIgVNwi5uVkoDyLWuf6yY3XTJundXweR8ipNIz1Xdsw59/8h
pGZF4/wcz4Ebd/OzCz0bQt+v/VU24ebCrk83+4XoDaObC3klWtCt7fbXYRQj
axq/6Tc3zvh6L7ZSbgTVzbWPF69Ckd1COSPolLGqf2QqL86Z7zf6dq82oFGS
H9cl0qMenxlFagt5UGag/6HOk1F01fbpy2lnAbzGe/QQb+coWlJf9ejRLiGc
o1VTGlA2hmrn7i+Mu9a+bV25ZRxVXRPqbNshgi9ymm44JDaBak2HLY+8FcH7
/1tdwWk1gVQX8r6GVvFn+b4J1GORpdDJTcVi60tDehz/oWCrK+/94sWwsGfR
SL/bJDo8t9zEcN9V2ck13pOI9o1l+VdCDPN8VBg/5DeJVK44sLA0iuH5eZ5E
ntbDdHdvCbx2ZpRz6/MplLGw7wkBcqE1TiFTDxeTV/6S+Ox1y9P2MI2cMtav
kdGRwku4qbnJ+dOIZW7cpfETV032ZWgGBXw5oJnXIY0nnLXpsr9nED3Yc0Z5
rQw+oKW39AUrBWwW9vmBtyspLpYUsF8lV6mTSMPR/yqMpI5T4IDIbctBfjks
/m1JxIYyCtyYmy85LOA3MxnfRoErPJohzp5ymOL65OXdYQos3xNjyBCUx7bz
+RgEXuzNa9JTwLtGK6ksJ1mgZgH3rCrkX6F8gQWy9Ua4qvMV8Amj4AsfY1ig
fpPmjY9+ijjIg34vepgF5m5TqIiv3/7q5iXDCkmC7ov/baNjd7Otj/MCWOHd
Aq6TWqOrPP2CFdJe7jihHcbA0KEWu2Scdf553Qx83apJdMUSNpBe97VzWE0J
p+e/0EjewwYkDk0aeyJ6/SMZL4KwaOMW+tkuYlHhxj6uMiN4Mu3CcTi4g/A5
O8LDH2YEZH6dSycnjECqYTyp//dfYviTbybfdiMYyNi2o/BYM7G46Z2yipoR
fBNO7lsq+oeYWw7dhnDLhXia/ayOCHYbXRoeYwhkPj2tW93he9IQzPbmek29
+UnM4YY9hnDR8e7qFbU/iO73m0Ot6IZwbr+MRp/VZ2JsS0nVPQVDyD9MlfWb
/ETM4yQD+DZZ9XlD7RuioXqGtfqTAQR4f1Rec+gF4WjT2/jqoQGQ+XVuOu0N
gD23CB87moPkB13GJCQMgKp3h4uRUIjuKluZ+fXqw08Jznc/TpagyLn50IfA
r70iUkM/kX1yS9rDHH1ov/r5n1xfGcrZYaGmn6gPZD4dtzGjce/Rh6qu1qjP
NTXzOAvpg8a0Vn6oQwNyKp66QRzRgx0Xq1KFs1sWcI8e5Loftd5e3IL+qOdF
/+epB4UVB8yCfsx+/jXcUfKgHpD5tO27bgvfB124U+WwfftoxzwOcZqNBaaf
rPbpRuN+6xQOiugC4zVPdJpRL3L1EVxDidYBMh/O4xodQLzdPKl6A8g78PyV
sUxtOGKfs7KifhB5/v9jjLVBLCnd7OKvYfRMtmZlb7sWkPln1TFa0ctjWvCP
QfFMDRlDlnP31QK77mAhltxxlE0fdrhRpgmdfUgwrnUCMeLaihZ5aAL5vh/z
k1vhbqoJdRNf3992nprHOaKaUCK2o3mUexpdP3WzqSNHAxrn8zR6tadC9fRD
DVi+W8xar2Nmvv2XNEDcbOVhXx0KPFfpHTwlqwHk+/f5DesymoAGCCmcvRVs
yQLTcxOgDsklnFbxHrPvXxI94fSkGrDN53Fg2DV97x1SA+nlzWErqewwh6O7
1WDTkXiVfVrs0Kuiu1iHSw2y5vEebPYVky0YVIX99f/lb5blgvS5/6uCY71T
yZ1jXJCTIsqlH6sKt+bzPAgPXB3d4q8KWZHLZGwzuWGuv/aqsK5ueXjELh44
pe3ba2auCkfn8SjsJfLu5/GpwvOvU+Hn3Xlh22eX0JoGlYX+8cFc/wtV4LNl
R9GlK3ygZkfVi3qsAnsFth49rsUPqzbcSTx4VQXU5/cF4PpSTXxarQIr/6Y7
rhoUgHVLvmTbrFABrZ6CoaNsgvPjg1TA6YT3M19eQfhkZO6bO6EM9fN4HHzL
JyzKmpVh0yTjmF2bEEhFOJw//0EZ7GgWHmfdhGGl4XW98ixlWNhXYG79vFWG
7sAnxbmnhEH/iiSXQLgyJKhvwBo9woAzpN2EzyjD2nl+AJ0erWdZ9yvDOy1Z
tdEjIpBo//dk9lZliLeKNBd9LAL7KlPeclkqw/y+IAIr7K4rc4EyRJvw51UM
iszPl44yDD4/XcppLAr7L3zNfUpVhoV9Cx6nPh5aNawE1rJ/0xqmRIEl1OLe
51wleJtZai5YSQXR0NF3xu+UYH5fF4NzefhyxWslWN/lt4WbKgZz+ShOCWYx
duJeRzHwOZtjfc1HCSTXNoc4a4vDpQfnzHz2KsH8vi0OvD98gvvslaBGgD0s
vEocpNq+5SSZKcH3yx+emttJQNqm0uWrGUowjzMkYO5rNCWQ9z4nP8kqCYc3
d2pu5FQCn8CnYkonJCEuaMvywX8MaNdbWbDivSRczxaMfNXIgHkcIQWRcvoS
nWUMUI2iBU4+koInn86a2KQz4Milkw56F6WheU2mhXLybDzPV8HywpOHEs8Y
MFz2NWdluTQozesKcOJjHfdQiAxslywqYgQx4NaEjLoLPw3itPzSW/wZC+uP
Bq55Obcl/RgQtzpqS9lqGhAOnLettzFgNPk3YW0hC2Uzml9erWfAPC6RhWT3
K2ufWjIgv3D13aJhWTjcJ7T2kDEDROsna0OC5eCd6Zonn9QYC+MvD1OePwT+
0hhwSYWlsCpWHlo+7aX+k2BAU1povl2hPDQVFPxazc5YGG8F2O246CAapkNv
wPCNKwqK0Od+IL7tNx3U7V2GNiYqQlFJ3FjVZ/rCvk+HkI/Kdz69oUPaLa/4
5Rl02LKbJb4/mb6wvuhg/vpDTHIiHcKaU2SvjNBhpdSv1F236KCyME6bs6Nd
R4PokPQ0PCHQSgmesRcJ583GKWqnYxOslebfp0A69LW2NGVsUAKdo/85RnjS
QWGkqol3UAmoMd/3Hz9IJ/dhMBe5/7zt7iCpD4HV2JLGpDuDiEtTxj18VAn2
7DHW+fV0EF3qr3QLmL0fb7xVttbzQVIvAhunT9Sb8YPoPEvvjbsrlCBt/ePz
HmmDKOjjavYXMQywqhqK3f96EJHt79K0qNj5ahAJMmLeZocx4OG7ifZ+YhAR
Rq9M8xvocPredR2R2Zgcj54ua0PND4Po5Ap+8/5yOoxxKkhcm8W9LpOPdnxS
n43z7F1+FQ8icnwv6wjaSs3GuVhlYrkiHXaejju+r2YQtbM83PjyiCI8d7xv
ZFQ7iOZxkSIkBLxL3Fg92/8kNYfEA4owsM4uNK5rENU/a8jvO6IAH6D8pUD3
ICLne1+0QCrn7OcFE4ef7D6gAC1XTe6emR5EqTknzGF2/TDqNq0ImSZxujyc
dypMOzob324eic2ZkYMFXorC+0Xts//IQYiNlNkf7qEFXC4Hn6V6VltQh9CD
x3uCA6NkoYTfkjEyG5PredemgJnXYkOoc+/UeHm4LAh2h2Q7aM7i/My97g+1
aDC89kp/p9YQIt8XixcDg491htABRX/FUVka7FvGo9K7aghtEW4a1PkoDbYZ
bdqPLYYQ+X4GnejaE249hLZ7X+O6/VwaqA655aG7htAq5/bF5tukYNfPgMjb
e8j2SsElLZYZTo8h9HTgv/1PTKRAbJ1bSHLQELox0Tla3ycByr52q4+FDCEy
35RsPcb66cps+3fKuY7mSUDEj2eZYvFDiJHyZr3ZJXFYzx3qzpI8hMh81vPz
2cus9CG0+EMC1Wu9OLxeT6PHfxtCj/5UVh1hiIG74fHmdZVDiMyfzeMefgp/
h1Dqi1USJbP51WDxbqWr00OIw/7rTPp7UWisWrQih3+Y5BWgln9Q/Y7sMDqW
WC5XtVsUeGqf5L7SGEZkvh/9mSbkYjyMhi9/LLLdKgK5BfaxetbDiNw/uvzF
v3vtHEa+Uw8TNDuEYUNeu3DEwWGS54Bczi7J5b7DKOqhaZNipxC84mw8vSxy
GJH729CNFKIoeRg1VtX2edcJQvTW6NfvsoYR+1x/BKEizm5C5fMw8i5n8aVo
CoAgR2Xq7bZhRO6vuw8vp+4QGkGp30r/C/zDB+dsF5k8oo0gcr8+aVLb6ao2
gvq6Hd8nHOKF+3uXKWQ6jCByv39y8KOt/uUR1MR/4pliHTfEmAnc4YoaQSR+
qOwtOu70YARtd1eoM87mgs3DPIasdSOIxCP+6UEXwjVGUXhI6uUbXzng0doX
fpcNRhfmjwPE9kaySS0ZRXwn9Vm4qRywK+ysptT1UUTin/K/h4ZiKWMoi7ua
7cRzVvgZfPXaGOvYQv9Y4VzBVUsdjjH0/cz0rkenWeHKXLvG0M6oZLktX1jg
wfqImaSLY4jEX6kpleV5U2PI7oMvN71lBv2JX5GmrDaOSDynsm7HEjmPcaTa
vys3O3kaGVwxCm9pHkckPlQIef0gc+MEOub8iGZu8g99Tt9qeHHbBOprOVgh
J/kPqR3xqTUrnv18Xp9CQ0Mpj18y/qEtT77kFuaOobY7N81FM/6hK1cuPG31
HEWC/g26p7r+IRK/NnWMsp0RmkQdugqPzC+MIIWF554yFRoY8xtG4evKEo6s
n0Ikn/fkOCpEK51CAecOuhVqDqKs7DeHTddOI75FLSqhNgPozTEDi/fsM4jE
1/N4ngLbmiVH6492o0q+88puFykQ8ut4q0dlF5J7Sv+2uYUC3+WcY+9v6ERc
Xz16i/+wMPF9E09NcbsSK8gU2DBk0v+SOiCg/ZJ7jm9qRlLWv/JMPdmA1GP8
Lnpk1QyzwfoDW7R+rapb0DXZ4b1/KvuL3kqkEaTfeEqbg8lPGtwurakb5gCX
Jae306ilpI4JFfTi7kTvQpTboZMTIsQFpJ4UohNUWNvPBUufZl1lWfRuQbfk
htCvSfUnHU1RmfLp8BEKD5NfFQc/U372jwfoLrdcpD5kENv2cyzd1sYLpB5G
35I48oGDD9yanX+YK/9HWCy8Jy36kquPhhQSXh+aT0IVHxjM/f8HIW+j802H
gx8+r2K9F6xTSkhFGPDHYX4mf0QZ4WMHWATgITsVRrZVENfm1qcAZP644sBK
rSIu3zTP/DEuADHKS73q7tQRmh1FhfnnBIHU/5ythaIquwUhmK+IPezUH6Ji
IS+05zZwW6s2E+pGbhEitUJQVmxbdvr1X2LZ570lveLCTD48j8eF4dbXF58N
OzuJWrWXjOflwhBowvgatL6L2GbzkmbCKQKWOcmbWSq6iVG7O+Y54SJA6p8f
2+4/a00RgRMPjng+jukn0hfyXkhldk+l9QDR79StXhogCvsGKDWumsPEmeOs
oxbfRIHUX0/oqHpXIirIPTgeUlY9RmzGMe9L66nwZugM7fTSSUJs89uHI71U
IPXew1+ufDoyTIV75wpyjr6cJOb5ERVmntor7O2YJIom1qY3uosBqR8LvK26
aBQrBgY2m5eN2VPwrvWJrbQMMYi50zXqmETBHT1nS15UiwGpRw/FNZzZ0iUG
lZLvSzS2sOB5ficOAXZCbWW/WbBHZO7tLabikN82ZRjmwopfOK/2YN0lDhWZ
geUd46w4xMa52yxBHEh9/M+Xn4r+n8VB10UiTM6fHc/zTQkwaz93qnGEA09s
2jR1wFYCaBKxn2wTOPEjkcajAY4SQOrzxzhXPNY7IAF9ziznkSkXNnA/N2Ab
LwGkvl9jURXQWSAB8R3SpZn13LjFcOeN770SQPoD83xYEixsu9e8U+LD280D
t/2bjXlyDmXuV+bDH7MrfPlNJGFPzsbkn7OxfPKb7yKzuJ30J757hmmExkqC
yvJrHLSTAvh01aIY9FpygZcKYAfzmN3ePyThoubvu/LfBHGMq33H+05JIP2Q
F8mGfAJTkpD+POya1k8hrHVya9S4tBR0dZ+sXW0njFdvVep4y5Ca50Fewjhi
AReUptS+OT4gjMNXROkmOEjB0Jl7YS2yIrjR+wzv9s1SQPozBdc3TVjO4orc
6qBwBz0R/ER72ZNHAVIwLRr+4nCGCF4hmy9pECw1z1OqRfAm5y/XFl+XgvAb
BulK/KI42ibyhEy8FBTq7b4y4SCKl7SMNlBeSwHpFwm0XVgzkycFXxWzLPSb
RfGeii6PjhqpeZ3Lmorrv2388qVHChSXTOhFRlLxfovfY3yc0kD6U88S2GL+
KktD1mb/l0HXxfAM70PnszrSCzxTDC8R8DPJN5KGD7R1XrY/xLD4t9/+VjbS
QPphunqSHl4+0jCaPel/XUwCP1u0+EOvrzR0SfDZLTeVwMtTJ15fuCUNpN8W
/uzr7YxkaVhGt7jq6SSJbaOv538hpGFRlmuFQbkkDuhW1GcpkwbSz3thvE6R
tVkanL7v3DMQJ4VT0tSzMEUG7CsvbjE5JI035GRlDPDLAOkXHttaYJwqIQOp
h/2r6/uk8enhVQdDlsrAm31pmz6z0fBF2dIni0AGSD/yo7F7P81CBpJaS6+N
L6fh+XUhA1nqYkqaHrL4eJwa+xFvGXj//CCP0jVZHMhv/Dx6Nib9UGKnWqKY
jwzkuLmx1kbJYgP9Ju2+OzJAS3lVWNkoh48YyTRkxMoA6bcGLbESq38oA4eT
IktkGPK49sVeRfprGZi3EeTxKpFb39qwDHR8t18CxgrY7WhvaE2BDJD+btWW
m5lHimbj4pp8wyQFLK03GjJYsdAeUUW8tk36/c1mGdiVcClC0kIRlx3dyXao
k/y+Is6L8HwpNygDZ2YkT+reUcTZ7BFum6ZkmLpoBNffWjVOGrwrnhzI7VfE
p4+4xTwXpAHpX/fWav7TlaLBhgdu03uc6ZjmLqXqp0Cb718QHTdMftYtUaEB
L4t7n9B9Oh6IOqf9nx4NSL9cY7H7jmYzGqh265qUKjDwgMPpQ3cQbX7+jBk4
4en18LeraLDYrrpt0IaBnzsnbR2xowHpz6tz9r867kSD9gz33IuNDOy+LJ+r
0Zk2379uBi5yuOU940KD6Dvm6a5jDGx1QcnOxZMGpP9fr1qtJeZHA/TAi/X2
YyW8olMo87jfQv/ilHB18jq/otnYcWv6cbsEJTzPN2nw+4351LJCJRxD6Kk/
DaUxdV7CdeVzi0+qTL7pSFNxsslTBewT4tXWqwT7dw+5RkWpwssN2s6VmAFc
vL/KT11RZfLd3aExXL/Pq0IPe3ZK8xYG7MgxkLnjpwqxpqOFE7M8PXPRlzvq
XqpM/hxyJjz2/i5VuK2UuCH8Eh3ui59taXBWhW2Mt2fW+NIhSzEriM9WlcnH
DdrYBIKRKtQLJdo+LVeE1Z8qRa2XqMJzxrfqUxmKcGZkVdG4uiqQfDHiR8Df
QAVVCF01/ER5kSLYB2725xVUBePgQOrNQgVQP1D/XwGbKlMfmBopEP88pQJj
Vp9/XVRTgDXDlPHkehWwlhi+yC8vD/Xr3/MtrVFh6g/GOTO9xlUqoFLvWrG0
XY6pt73ytDq/coscCJxqO70rVYWpbxxfvTUu9IUKvPRJWPr1gCyw2yk0516Z
vZ6Dq0b8OA3UjbS/0YNUmPqJpuKnIDsvFTh8RTFU4bkM5EkdGnttq8LUZzZ/
wryLjVXgj63DPUEBaZD64KWTpj/bnsTWyNudUhB8LHkDFldh6j8Pdhf5cXCp
QHyBzq8VdZJQH5weEP5XGZ7+0y1+JS0JJ/b0OnZUKTP1pviwD0EK5crgqfNj
QDRNAiQzL+lR3isvtE+Cqd/9fv9ady+XBOCrbqtMHiqDVGENtTVMHOrV9ovp
31Fm6l03tXjZC68pg9jJULv7S8RBPngfj4a7Mhz4T7y6exZHrJ9OvuVtr8zU
10i9zsNs3Om0HRX8omMppdqz19vxvHW0oYKyX+nE5dl4vn9UeO9azsM+G0um
qZc0WFChQnbXzyS2/+l7vXK9kZXdSnBvyYW8m/qi4KVQ7mlbqcTUC+/JnHuw
/JUSiFg9EvFdLALXQ4MnNyUrMfXH6YbQjytfKME2jYeTCTQRpt6XWvn75DBF
BESNDq1jnFFi6ptX1TwUE/YogRiRaifBLwxfjv84VmejxNRLp6lvPIVklKDn
NpWWwCYIYzeaTshLKQHvPvxce1QAiqmmQdsaGEx9ds+DigfsRQzwz/hVPTPB
x9TjIsxCNmjd5YXlTq2htAMMpj58J84ofo8lA9j9svKVe7mh5Nnqu/8pMCBK
wtEvn58bei7tqN/VRGfq1aQeZXZTJ2JrPTsEUxy+xrjSweLZFwPqRnbQMXBU
W2FHZ+rhDzR+zrz4pwgchy/OKDxghR6Pgqr3cYpMfZ1RMSg7dU0Rri4RW6Nd
SFnYZxWhlMM//DJQQBVprpL5rMDU+60OB+4WcFCAEI/TK6V7Jxb4iTycvySg
IFoyhmIeXdu/WVye6S9UV9BWbNktB349uQdiU4cW+I8sZIT/Gd5tNoAKEeXB
MhdZuEF5zvoqqR8Vr1xu36Ypy/Q3/i5d8Up0Iw1c2RvlIq50oxQpzy4vOg30
531nRO6fsxSq3/RPG4rJGDo/YyYDR/fwLepob0WLdv0g+FhkmHws0H/AM1tO
GmR7pgPue/1BJL7yy5Te/7qpBtlUJo3qTEjCbnMe9TcqVYiFLzuqNUaSybc+
6CtVnvwhAfxPNfL22H1H7r+ebHi5XYLJr0g8y63lUqrBmod8Yz3KJ+PEwcD3
p/WNVemIQ2j3TTk2cSa/slHUPX7ohBhY8qeGUnPSmPj9ddGSE4ttPhLsUh3i
O7KoTL6Vcbne+rclFfaJJ0fRd34j5v0NUejzDbI5dbKUWN/0yMfwoCiTT4nf
1XJIoInC3Y21q49drGTykbqM73Wj49XEZXTokbW6CJM/KZn2nO0aFga7eGS5
n/qHyYeeH+1xvtn7h1gZKbkjeECIyZeIpMGtpUlC4DEVxfHufCuTb+076mSs
aNJGpK2N5t5RKABk/Ud2Z3G5+CUBaOK0PF+8tJvJ7zoK6SVGPD3EeNnFm/vq
+Jh8KsA0O6gvhA+MC1beyHraz+SXISfDnVbvHCAqkaeglDEvqQMSXjvkdoim
8oDZaX+VvI4hguS3p+kB2VzHRwi/pYyMuu/cTL5VH+Y1IiLEDbfgPt/942OE
Ryx310gsF5D1MiSfvnPV8IZL/T+CalTgACmcYLVBYdR1yyTR6ToYzfmQk8nH
Is99XVUYxAmjv+PclfmmCD+/h0s0/+Ng8i+X0L0jj09xQMZY+X/pphScSFHI
fEXlYPItku9zqcTnOP9jwcKVayne59khwvJhNesRVrzXJuvst1PsQNYTcb7s
sc84yA779n8M25XPiodusRfnDLMx+RbFjL60/CUbmK91yXqdw4591duf2F9g
A7KeiX3YRTXQmg3+i3+abu3KiVO/lL2tobMx+daG82e7AvnYQAOVtCzV5sKK
Bmrm+36zwtL6vzoiNG6cLdvtHFXEyuRfpL7BanAu5c8WHrzYs0H6YxArKFmB
iPYLHqzvY9oTGsjK5GOLCut+OQewgkv1+Udf83nw9ceBEpWrWMFcSSrKso8X
r3kYkBC9lHVhfPiwmY/5x2VGrGB8YufiXjc+3CSiHHadnxXGvll9UF7CjxNi
jDtnKKxMvnaherPcYD8LGF/fo6EzxY89Xp79FFrFAr9jHkgEBgvgHvttlneL
WJj8jUNMzo2SwQL7lex+BUcK4m1DP2hsySyQ+HNlUG2ZIB5ga1p/5i4Lk881
6qbaLbnAAueWsKY3CAtjHfOzaw+dZ4GLXO5tXlRhLH3g5Wj7YRYmnxNXN0Pq
O1jgds2rSYMcYVy96+GLJVtZwJLd4+W+X8LYJ3HJzRVWLEw+J3bxkaufMQs8
Lj1WfzZGBKvrhhclirFASUfEKypVFC+TpP1g4WZh8rNjBQaitF4K8Bx/rckm
T8V/VHapt1ZRoOP+apbLXlQcUGz6KPQbhcnHOA6ol8mmUWCnjdKRzAdi2Dem
vJrtGQVsf+jmPfgihvdq3xFwiKUw+ZdhuJXXRCAFNIf1807LS2BH7Y5zAQEU
OJo5FlSmIYFtNcXRe28Kk3+tfyN0Kd+OAiMD3jvHQiXxb5RSErSOwuRbO5uq
ks1tKaDRry+kwSeNvZeKsrzUpjD5FW9CRGW+MAU6nU4FZ9vJ4IgH38NDhChM
PnVx520uS0EK/FjMSFz2j4aptvzRHR0zzPrRJEfb+kMfZtDSta/y4qTlMJvY
hAjn+xlmPar7DR25u5kz6HvgtIFGqzze8r2h/H7kDLO+9bcYV4q71+z9dM96
R7Yq4Gtc7q6SB2eY9bIPzWoM8t1n0BkqDzd3myL+wGGY2W05w6y/Fd/ZsK1H
YwalfYgSaHCi44JA4/h0tRlmPW+7mqP1aZUZdOOttu12JwaedL+1UYx3hlkf
jF9GW9f2TaOBfVP+5fkMXN9UPPC+Z5pZX8xlvlL1btc00mGpCfz2VQk/o2Vq
HCqfZtYnk/UgF5LZX51o5cU3vYVYfH4aQfPma4Ev4/hwyvAKz7fxRsz3hawH
iYOId2mz78fOB1ukKiyMIOSErFi8lyB+0BUt+pRmxFz/ZD3IpVFqGTcSxvW6
P3L35xmCQ6nOdiJNGO8IO3D58gND5noOC94cUGNtCGf9JTmE1orifVH1T/JM
DJnrl6z/2DxZQH0zRcU3R74WC8/G6z+GmHHPrtfJ8eV/q6oMmOt3XQ7r4Hil
AeRqRbvUs4lhySRX5cUJBlDLpfH8S70Y/ulf/7AwxIC5ftd7+d1kPWYAdpK6
TvGfxTFZP2LbuNwwx0cCD0QnNLxZZsBcvxUNxTsMtAxAo7JdMXmVJDZn43c+
K2kApWJN6nuTJPFVwWz3zH/6zPVM1pcMbmrbdfeSNK45ldkmlK8Plz3+TNs9
k8ZZYqbaSh/1mev7cbrgwdocfYjaOhXUUyaNw004FmvF6kNnfn68XYoM3h+D
5a9f1Weu97m/F/ShLeWttZk7DY937x+Y8NWHZv5r3y+8p+FNvgzdRi996H0d
9qxPUhZHXv0UGOOsz9QPyPoVoZesEl8i5fBFnlQdGWN98JQOUr77Vw43K6Qe
VTXSZ+oHbqXmLRd19eHBqV2913Xl8YBUqbaipD68sxu0f0dRwC33BIOi+fSZ
eoHBLFB2G9aDRMeyZXYiitikRlP79JAexFrdia+jKuKbS53W7CnRY+oDPurP
zt7M0YNoVrAZfqyIw8WsFB/f04Mfm9oKbDjoWOJ2s3JyhB5TD9iRMKiw85Ie
rA1VL2YxoWOy3kbf6Ubvpkg6ztK8WXveUY/J/13pFru/quuBZgRDY+seBjZU
Df3wVk6Pye9P3nQzeiCgB8K7etq3ljKwCJtz2siMLrxLaisen2Hgg8OSvE0d
ukw+X3v4vZvKb114WXKJ48FdJbxnc4fxulJdaNiz1hGnKmHfadkPe9/rMvm6
6gnXzqdrJph+sN5FZ58s1QnU1RvxaWexEiwxWF6XpzaBzH/4Jaf4KwGRTzvz
0GiC6Qd3PuFZv4I6gZQ91TubqErwxoW7z0psAq36HPvT5zMDppbfWmGnOMH0
gy2rSpZunx5HNzRXRto4MWDVtXZJl5lxdLl0+dXNogzwu6HEXjo4zvSDPcpM
PKpbx9F0042l1x7TIeNn7NqatnHk3m/q5ORMh5po/jU+NeNMP3hPuM2um9/H
0d5un6bkdkW4svfIz2sl4+jMomrbkERFEIL9rvp540w/2OJhQYpt+jhSnH71
45G+IjSPuD35NBurzutHkFpW1AZvx1H/sUyzjFYFkE7cIFP8dJzpD5+RHtL9
GDOOYrb95CrqkYcOtHE86fY4MtZueJV/Rh5KVVv2T18aZ/rDdecqviecGkeP
eRr7m0/LgajJ7aPBfuNIozhbEknIAeVS6NRRj3Gm/xvddaE0dss4ep9p1nWW
WxayLapaPbeOI6627injlzSIVR8Wz10zzvR/9X6LKJsajqO4skyfazdlYJ1c
z6HB2fjDn0k+wkIGxlXa1hyVH2f6v4Z4+G4v9/gsb7LUHlWQBh9RzrxInnHk
VLH4a3e9FJzSKhntHhhj+r/nrR4lKlaPIeX1I6WxzyVhyDe37vFsLG5+5mPd
KUkIWLGU5+zHMab/6/1f5n8siWPIaqtJqesiCShqj7Z3mo0lZT/+TBOTgJeR
93Ktrowx/d9F7Yvqog+NIRP/tPXSOWLww95nX85svOfMdpvoVDHYHCE8pLF+
jOn/kv7gjqUb3myqo4J8a5KQnsEYUr2QUcpYR4Wsm5EB0rpjqL8xMPPxaipw
7z709J3gGNMP1r15+rZC/yiSc0pcLN0hAh+zIleMNI8iTwNRh+wvIoBjHrMk
FIwy/d9XxjqTyxJH0bmd3kOhF4VBxvfvGYgYRV/yQ3Va7ITBfMnMS/ejo0y/
193F0j7KYRTt7XIUD94oCClP05ImtUdRltY3bqtHAvB5+e8nS4RGmf5umV9a
TsTgCKr/8sLs0C0+qE86bCL8bgS5HzAICrvPCy93tl+xv/s/P9crchfl7dkR
9NBxhdRQAzfs/t3EUN/2Pz93bePtB0nqI0hLcM+Kpze4oOpW2Dsv4f/5ueE6
7edNJ4ZRXdrVxamGnHDEUnbxplPDSNOLZ/+nAHa4dXScbXDfMNO/Leihvbfc
PIzEnR5JtF1lg8tleumi94aQWuWl4JhZnKjaYKl58cYQ05+9amYX0hA2hGhl
LrIDwxRY3cS1vF1siOnPkvURvu7ukpenplHJ9fY4jseDqC9yhK+vZBLpFh4T
2h8xyPRrbfhM6hNODKL0Dfx7MownkeydgYds/waY/uz3tbkQc3cABUdsN+Yu
nJ1XKdcoF7sBph9rE3+e7fCvfjRQXeu2+8AwemvLXRF9oZ/pvx6Y+NmmZdWP
tneuYDs+NIDQsi8psVF9TL+VPN+RtcfE+FVeN3qn7iowIdqLbtmvYfv8rQuV
hwlSXSd6EMn/je/e4Tr+sQcpXOFYKafYhe4K7f653bgbLa29KvLCsQ3pHVmq
cj2sC5H8f2+20qA3byeKbXZcckCkGa3Okw6409aB9hWNneSoaEJxbz2SeC+3
I9KPJc8rlBQ9pZ4cqER9SVzdtSYtSDF/OO9c+m90cLLjXVrtX0TqA0OMsFOs
Cc1Ij5e291L7TwTlgc7qYY3Mev6jo1HC8acakFKLW3Yuey4izx+IPTK2UpN8
jcItNc4lLK9gnh8wI5YL6X8qRecO6lyOuZVGkOcHdGL5175OKSD+zZwdXX+k
gHk+wTZTnbOZ7QW6shV/twj4QZDnBXhXlYn2ZP8iVkaI79xz+x1B6gO2Fy6y
thcXE26LIfjDmRqCPC+wSfTioSsmDcSTE6fWda+rIkh9gCF43+BTfwNRcVFY
XVC3iSDPCzjVNe9I3tRM2BxtGVxa0k6Q+oBNX5bA/tOdRE+i+KdtUa0EeV5g
o5H7cHtbK0Ex3mxi29JLhPHtzDtMbSfI8wJrrl/m55LpJPpOG33+u3SQEE4V
fvT1ZSdBnhd4nxd9bc10N+G92EcnoH+MuHFYY0jobC8h5qRQe79oiiD1A09/
3hV1Q9NEi5tIKuN4P0GeF1BvJerUw2djzpqSU4YUrFtM8d1b2E+cCZDd+OHC
LI/u2GSI5AcJ8nxARYmx45KiQaLhHLv6i33smNQbfp2JkgxM5MC38j90HYof
IpR+HAq5z8uFD0/vnswyHCbI8wGnhn09+r4OE+7LzC9wVnLjrkcxhVG0EWLl
CQetQzd5MalHGFu/uRonxY9jvdiC7geMEuR5gF3nDgaWxY0SbcZ8ely7BfAO
RzWZg32jhH7r+DcHVyEsRufuCv85RpDnAbLMiM+e28aJS9aPTbKbhTGpZ/wW
DP6SskMEV6dNJ3CKTxCMDOEtmhkieP8n0xePbCcI8nxAxJiE+7qBCUK+YuOa
+/Fi2AKqMjbsmSR834nbd34Qw9un0aFC/0mifkXZoj2zOJvUP8h6f2XPkQ1x
f6aIc4Y3S40ZUrhAkmvwbeM0kSyXPi4DMvhmt4JHS+sMQdbvF6ek1KVbUnDw
uz9fQx/T8Fj6j5UP/SmYrNf3fz5RUNRGwbuEXojoCMtjUi/hU3B+d0xHATtz
RXxDfiyYrM+/9/5GpcIFFiwQ9jB5ba4Crt3i7sp2kwU31obkac3ysKD3qf7R
fqyYrL+Pz5fE2S9Y8d3PedUsVxg4QTvihfc/VnxdXFMRqythTzaXwcjdbJjE
dYs+qLRqf2TD/weuYThA
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0., 0.19999999999999996`, 0.], Thickness[Large], Opacity[
        0.6], 
        StyleBox[{
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
           126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
           139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 
           152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
           165, 166, 167, 168, 169, 170}], LineBox[CompressedData["
1:eJwN0NNBBQAAAMCXbbvXSI3QAPXbTtm2bdu23X3cAhcsqygtDwkEApVUUU0N
tdRRTwONNNFMC6200U4HnXTRTQ+99NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8C
iyyxzAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwL
r7zxzgeffPHND7/8EZAbQihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWST
Qy555FNAIUUUE6SEf7bfS1s=
           "]], LineBox[CompressedData["
1:eJwV0FN3kAEAgOFvi3+jk5aNtWW7ltvSwvKybRsLyy3btm27lm33dPGc816/
6WLjozqGBEGQTHqRgYxkIjNhZCEr2chODnKSi9zkIS/5yE8BClKIwoRThAgi
KUoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5pEUYva1KEu9ahPAxoSTQyN
aEwTmtKMWJrTgpa0Io7WtKEt7WhPB/5Pi6cTnelCV7rRnR70pBe96UNf+tGf
AQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcwkgVnMZg5zSWQe
81nAQhaxmCUsJYllLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd9
7OcABznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5wl3vc
5wEPecRjnpDMU57xnBe85BWvecNb3vGeD3zkE5/5wle+8Z0f/OQXv/nDX4LQ
IAghlBSkJBWpSUNa/gHpPIDa
           "]]},
         FontFamily->"Latin Modern Roman",
         FontSize->25]},
       RowBox[{
         RowBox[{
           RowBox[{"16.690512562234368`", "\[VeryThinSpace]"}], "+", 
           RowBox[{
             TagBox["\[Epsilon]", HoldForm], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "64.64229475379511`"}], "+", 
                 RowBox[{
                   TagBox["\[Epsilon]", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"23.274701120121268`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.4357266425934954`"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.0192655399199428`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.00006190224352549722`"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"4.514860551625962`*^-8", "-", 
                    RowBox[{"5.253244336233911`*^-12", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
             TagBox["S", HoldForm], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "61.39785582164369`"}], "+", 
                 RowBox[{
                   TagBox["\[Epsilon]", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"63.30999038870587`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "9.057099140098906`"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.2553721163204712`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.0016705922143569042`"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"2.60571150480496`*^-6", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "8.218142900456068`*^-10"}], "+", 
                    RowBox[{"2.4005503662081683`*^-14", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], "\[Equal]", 
         "0"}]],
      Annotation[#, 
       16.690512562234368` + 
        HoldForm[$CellContext`\[Epsilon]] (-64.64229475379511 + 
          HoldForm[$CellContext`\[Epsilon]] (23.274701120121268` + 
            HoldForm[$CellContext`\[Epsilon]] (-1.4357266425934954` + 
              HoldForm[$CellContext`\[Epsilon]] (0.0192655399199428 + 
                HoldForm[$CellContext`\[Epsilon]] (-0.00006190224352549722 + (
                    4.514860551625962*^-8 - 5.253244336233911*^-12 
                    HoldForm[$CellContext`\[Epsilon]]) 
                   HoldForm[$CellContext`\[Epsilon]]))))) + 
        HoldForm[$CellContext`S] (-61.39785582164369 + 
          HoldForm[$CellContext`\[Epsilon]] (63.30999038870587 + 
            HoldForm[$CellContext`\[Epsilon]] (-9.057099140098906 + 
              HoldForm[$CellContext`\[Epsilon]] (0.2553721163204712 + 
                HoldForm[$CellContext`\[Epsilon]] (-0.0016705922143569042` + 
                  HoldForm[$CellContext`\[Epsilon]] (
                    2.60571150480496*^-6 + (-8.218142900456068*^-10 + 
                    2.4005503662081683`*^-14 
                    HoldForm[$CellContext`\[Epsilon]]) 
                    HoldForm[$CellContext`\[Epsilon]])))))) == 0, 
       "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {RGBColor[0.6, 0., 0.], Thickness[Large], Opacity[0.6], 
        StyleBox[{LineBox[CompressedData["
1:eJwNw2dbjQEAANCXb1ZGRpRx7ZERKiNb2Rqydwiha0XZESEzo4jK3iEkMyTE
n3LO85xQVjgjt0UQBI22ahkErW1jW9sZYXs72NFORtrZLna1m1F2t4fRxtjT
Xva2jyH72s/+DnCggxzsEIc6zFiHO8KRjjLO0Y5xrPEmmOg4xzvBiSY5yclO
carTnO4MZ5psirOc7RznOs/5LnChqaaZboaLzHSxS1zqMpe7wpWucrVrXOs6
15vlBje6yWw3u8Wt5rjN7e4w17A73eVu97jXPPe533wLPOBBD3nYIx71mIUe
94RFnvSUxZ72jGct8ZznveBFL3nZUq941Wtet8xyb3jTCm9520qrrPaOd73n
fR/40Ec+9olPfeZzX1jjS1/52lrf+NZ31vneej/40U9+9otfbfCb3/1hoz9t
8pe//WOzf/3nf910VLs=
           "]], 
          LineBox[{716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
            728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 
           741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 
           754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 
           767, 768, 769, 770, 771}], LineBox[CompressedData["
1:eJwNwwc3kAEAAMCvlwZFUiQZGS0tDZGVbBIltDRItFCSkEgSisgOkX/a3XuX
3NJV17ktCIINQ7YHwQ53usvdhhrmHvcaboT7jHS/UR7woNHGeMhYDxvnEeNN
MNEkj5psiqmmeczjnvCkp0z3tGc86znPm+EFL3rJy2Z6xSyzvWqOueaZb4HX
LPS6RRZbYqllllthpVXesNqb1ljrLW9b5x3rbbDRu97zvg98aJOPfOwTn9ps
i89s9blttvvCl77ytW/ssNMu3/rObt/b4wd7/Wif/Q74yUE/O+SwXxzxq6N+
c8zvjjvhpD/86ZTT/nLGWX8757wLLrrksiv+cdU11/3rhpv+c8v/TVQ3Fw==

           "]]},
         FontFamily->"Latin Modern Roman",
         FontSize->25]},
       RowBox[{
         RowBox[{
           RowBox[{"268.39524046856945`", "\[VeryThinSpace]"}], "+", 
           RowBox[{
             TagBox["\[Epsilon]", HoldForm], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "778.1447050402614`"}], "+", 
                 RowBox[{
                   TagBox["\[Epsilon]", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"170.80885907842625`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6.503293853173094`"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.057136986172952556`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.00012739932283046778`"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"6.767918961719378`*^-8", "-", 
                    RowBox[{"5.963615477359369`*^-12", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
             TagBox["S", HoldForm], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"901.1582993016734`", "\[VeryThinSpace]"}], "+", 
                 RowBox[{
                   TagBox["\[Epsilon]", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "598.4922517363444`"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"51.88491703469251`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.9287706963526848`"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.004099779491094447`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "4.552055702359152`*^-6"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.0674088645973745`*^-9", "-", 
                    RowBox[{"2.4005503662081683`*^-14", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], "\[Equal]", 
         "0"}]],
      Annotation[#, 
       268.39524046856945` + 
        HoldForm[$CellContext`\[Epsilon]] (-778.1447050402614 + 
          HoldForm[$CellContext`\[Epsilon]] (170.80885907842625` + 
            HoldForm[$CellContext`\[Epsilon]] (-6.503293853173094 + 
              HoldForm[$CellContext`\[Epsilon]] (0.057136986172952556` + 
                HoldForm[$CellContext`\[Epsilon]] (-0.00012739932283046778` + \
(6.767918961719378*^-8 - 5.963615477359369*^-12 
                    HoldForm[$CellContext`\[Epsilon]]) 
                   HoldForm[$CellContext`\[Epsilon]]))))) + 
        HoldForm[$CellContext`S] (901.1582993016734 + 
          HoldForm[$CellContext`\[Epsilon]] (-598.4922517363444 + 
            HoldForm[$CellContext`\[Epsilon]] (51.88491703469251 + 
              HoldForm[$CellContext`\[Epsilon]] (-0.9287706963526848 + 
                HoldForm[$CellContext`\[Epsilon]] (0.004099779491094447 + 
                  HoldForm[$CellContext`\[Epsilon]] (-4.552055702359152*^-6 + \
(1.0674088645973745`*^-9 - 2.4005503662081683`*^-14 
                    HoldForm[$CellContext`\[Epsilon]]) 
                    HoldForm[$CellContext`\[Epsilon]])))))) == 0, 
       "Tooltip"]& ]}], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  Background->GrayLevel[1],
  BaseStyle->{
    GrayLevel[0], FontFamily -> "Latin Modern Roman", FontSize -> 25},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[0.5, 0, 0.5], 
    PointSize[Large], 
    PointBox[{1.9, 3.8}], 
    RGBColor[0.5, 0, 0.5], 
    PointSize[Large], 
    PointBox[{0.4, 0}], 
    RGBColor[0.5, 0, 0.5], 
    PointSize[Large], 
    PointBox[{14.83, 5.66}], 
    RGBColor[0.5, 0, 0.5], 
    PointSize[Large], 
    PointBox[{5.69, -0.51}], 
    RGBColor[0.5, 0, 0.5], 
    PointSize[Large], 
    PointBox[{34.6, -1.55}]},
  Frame->{True, True},
  FrameLabel->{{
     FormBox[
      StyleBox["\"S\"", 
       GrayLevel[0], 30, StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox["\"\[Epsilon]\"", 
       GrayLevel[0], 30, StripOnInput -> False], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  LabelStyle->Directive[25, 
    GrayLevel[0], FontFamily -> "Times"],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-10, 20}, {-10, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8650006117510147`*^9, 3.865000995100832*^9}, {
   3.865001069195051*^9, 3.8650010759612226`*^9}, 3.865001275975718*^9, {
   3.8650013083241653`*^9, 3.86500132925404*^9}, 3.865001370970562*^9, {
   3.865001440923731*^9, 3.8650014498111143`*^9}, {3.86500148894179*^9, 
   3.8650015155361643`*^9}, {3.865001567426333*^9, 3.8650016013743668`*^9}, {
   3.8650016378491793`*^9, 3.865001650030106*^9}, {3.86500233404529*^9, 
   3.865002394545395*^9}, 3.865003560449058*^9, 3.8654077532300873`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"21157811-51a7-47c4-932f-b6d5d588e977"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rm", "=", 
   RowBox[{"-", "5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rM", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pm", "=", 
   RowBox[{"-", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pM", "=", "10"}], ";"}]}], "Input",
 CellChangeTimes->{{3.864993423636203*^9, 3.8649934340332537`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"ce160c10-a63c-412f-9430-35f14f47157a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"contourPotentialPlot1", "=", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"FM", "[", 
         RowBox[{"\[Epsilon]", ",", "S"}], "]"}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{"FP", "[", 
         RowBox[{"\[Epsilon]", ",", "S"}], "]"}], "==", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "rm", ",", "rM"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", "pm", ",", "pM"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"Contours", "\[Rule]", "15"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotPoints", "->", "50"}], ",", 
     RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
     RowBox[{"Frame", "\[Rule]", "False"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.864993463218747*^9, 3.864993489879678*^9}, {
  3.864994010521727*^9, 3.864994041893669*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"fd924231-b75c-4540-b76c-4a53f850e5dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"level", "=", 
  RowBox[{"-", "1.5"}]}]], "Input",
 CellChangeTimes->{{3.864993505988164*^9, 3.864993507664818*^9}, {
  3.8649937860212*^9, 3.864993798105344*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"f2b499fc-8048-4565-a8f0-bfb4687756b5"],

Cell[BoxData[
 RowBox[{"-", "1.5`"}]], "Output",
 CellChangeTimes->{
  3.86499350792962*^9, {3.864993786418323*^9, 3.864993798517879*^9}},
 CellLabel->
  "Out[172]=",ExpressionUUID->"d879c031-3751-4a5f-96ad-dd43d8b2cfcd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"potential1", "=", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FM", "[", 
        RowBox[{"\[Epsilon]", ",", "S"}], "]"}], ",", 
       RowBox[{"FP", "[", 
        RowBox[{"\[Epsilon]", ",", "S"}], "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "rm", ",", "rM"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", "pm", ",", "pM"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], ",", "1"}], "}"}]}], ",", 
     RowBox[{"ClippingStyle", "\[Rule]", "None"}], ",", 
     RowBox[{"MeshFunctions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"#3", "&"}], "}"}]}], ",", 
     RowBox[{"Mesh", "\[Rule]", "15"}], ",", 
     RowBox[{"MeshStyle", "\[Rule]", 
      RowBox[{"Opacity", "[", ".5", "]"}]}], ",", 
     RowBox[{"MeshShading", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", ".3", "]"}], ",", "Blue"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", ".8", "]"}], ",", "Orange"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", ".01", "]"}], ",", "Cyan"}], "}"}]}], 
       "}"}]}], ",", 
     RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.864993551308247*^9, 3.8649935568629227`*^9}, {
  3.864993665788474*^9, 3.8649936710382423`*^9}, {3.864993880258629*^9, 
  3.864993915876451*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"c0f8cf19-3f71-48c3-b6df-818ec63cf6e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FM", "[", 
      RowBox[{"\[Epsilon]", ",", "S"}], "]"}], ",", 
     RowBox[{"FP", "[", 
      RowBox[{"\[Epsilon]", ",", "S"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "rm", ",", "rM"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"S", ",", "pm", ",", "pM"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "500"}], ",", "500"}], "}"}]}], ",", 
   RowBox[{"ClippingStyle", "\[Rule]", "None"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"#3", "&"}], "}"}]}], ",", 
   RowBox[{"Mesh", "\[Rule]", "15"}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", 
    RowBox[{"Opacity", "[", ".5", "]"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "\"\<Rainbow\>\"", "]"}], ",", 
      RowBox[{"Directive", "[", "\"\<TemperatureMap\>\"", "]"}]}], "}"}]}], 
   ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.864994199101231*^9, 3.8649943958182573`*^9}, {
  3.864994503029675*^9, 3.8649945042232513`*^9}, {3.8649945395478773`*^9, 
  3.864994540921068*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"d35e4030-b331-4367-ac7f-3798990cb4cf"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
t18s9qZgnoIOTYnmaZILQzHfQIexzSF63un+2C/ws/vjlvuSw8IxTrDvio5q
ftIZgXUD5ouEjOblwtpQzBPwM8j+78iA27E4LlAn554/sVg+YSXGb9CnA0st
drvExr1jsV3gXrKeKts+RCEX/NeQEHma4zB1JpvOT8i3d1OrEpws/VE3iEdo
y/n0oYvo6xTw4g65EbOGR/XrPwzzx1kv+suil3HUP3POehLs34kYvi+UjUF7
qGMrP+2s0QoNJMBBn+kB7j83mPev6zjrVfATNrGCb8KqcArWXf3X0/5/+fhg
3cXkUJ+ZnHsdRXPGdRw59zqK6V+Bh/f9VHk49zqK2a4OD4f1D5PDumXgOE15
+D998PshzDgt/4PLUX31Xp3bD0dnJgedmRx0ZnLQmclB54H9K/Dwvp8qDwed
B25Xh4eDzkwOOg8cpykPB50HjtPyP7gcBfcvTJ2ZHHRmctCZyZn3R0ydB/av
wMNBZyYHnQduV4eHg85MDjoPHKcpDwedB47T8j+4HAXrTKbOTA46MznozOTM
+02mzgP7V+DhoDOTg84Dt6vDw0FnJgedB47TlIeDzgPHafkfXI6CdTtTZyYH
nZkcdGZy5v07U+eB/SvwcNCZyUHngdvV4eGgM5ODzgPHacrDQeeB47T8Dy5H
wX0QU2cmB52ZHHRmcuZ+CFPngf0r8PC+nyoPB50HbleHh4POTA46DxynKQ8H
nQeO0/I/OL3Pw+Xn/+3zcOvQymZy0JnJmftCTJ0H9q/Aw0FnJgedB25Xh4eD
zkwOOg8cpykPB50HjtPyPzis695NZOrM5NzrOpoz98eYOjM5c3+M278CD+/7
qfJw5v4Yd7s6PJx7XUdz7nUdM05THs69rmPGafkfXI6CfQAuPxydmRx0ZnLQ
mcmZ+4Hc8UvycNCZyft+qjycua/I3a4ODwedmRx0HjhOUx4OOg8cp+V/cDkK
9lWYOjM56MzkoDOTM/dLmToP7F+Bh4POTA46D9yuDg9n7tMydR44TlMeDjoP
HKflf3A5CvZ7mTozOejM5KAzkzP3mZk6D+xfgYeDzkwOOg/crg4PB52ZnLnv
zdR5QH04Og8cp+V/cDkK9smZOjM56MzkoDOTM/fnmToP7F+Bh4POTA46D9yu
Dg8HnZmc+byAqfOA+nB0HjhOy//gchQ8d2DqzOSgM5ODzkzOfK7B1Hlg/wo8
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
AdTjWnY=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFnHn8VVP3x++93XumL19RUVJSKSlzhoxlaCINSEIqZaooQklFMqtkTI+h
kIwhyTxmJmQmQ8/D85jnIbPf5+2zvH5/7Nded5199tlnn73X8Flr342GHzfg
2EqpVFo7KZUaqP68KJXGifGh6g3KpdKdKv3Fbx/0g6IH6fpi0QNKbrM4+Nuq
XqIyWnRr1berDBbds2L+E6I/yc3/Iy2V2qm+Q+UB8burvl9lguivctObZKVS
B9V3Rf87qF6qMqxk/t0qQ0V/qvb9VP9X7bcL/pP63abie2lTr/fZmTa1UmlT
8Rro2n7cK7os+l7RvdRmH9X/Vj99RCfi76O6idqURN+j6i3dv5fqV8Wvac4O
Ej2ucH+/ld3nNxrPA6K/Vp2LX1M5WPy+apeKbp+4Lfc8JP4moitBty37uY+J
LmscD6v+RfUf4ldjzPupn0x0feZ+uJdv8S3PU328xjip7DG8o99N1O4p1S1y
f69bmXfmRPUtQTcLfv+gbw7+ctU30E70e0Hvwjzmvvcj1Y1UL4g2DVXfxloR
/aGudVP9mp6fMRaV6/S7TvWN0U99PGt30Y2Df6vopqpvYg2Jbqn3Wyh675K/
xcJ41h6ah0Gq31T9u+p54l+rev+K6a2i/aK49zuN50HRx2o8/xO9p3hfaq66
iHdPrJkvxB/DM3OvsaXBn1K4zWfiv68yX/R7ql/kneK9PtCavpla/f8n93p7
RfRzqcf1ouh/i7+T6JdEv1B2P1xrpjFfG/08H30yPx+o/daqX9Y4XxPvIRUN
pfSr+lyqunnhOfyFedHvJ8S/RvVZuu/X+lJphuifVB+mNTde9HS131htv1A5
pOS996Xow9i/ura96q1Ub0cR/ajG+V9d/7nsa9z3edy7Sep1navvHQq3eUm8
VoX304aqvxfvB/ayfk9gXlR3Ev8Wtbtc9EWic9FXi95adKG++oj+U7yRmpOi
4vG1Ljz+nfRevVUmie7PfIu/mdpMVb2H+Kewz8R/UHQf3fei6jaF6YNE91U5
VW2uUH2V7rtS5RCVLPHeRwZsoXG+JLoPfSTuc8/M/XylfnqJt6+eMVH8fUR3
0rUXRe+l9muor69ZY/q9Ur+3UL1Y13sxbvF7qH5G984X/wXxx4i3KmTmONX/
Vjm5ZFn7QezHM6qaX9Wnq95D/a+r0oE5Ulmv4vXRVfU6Kq1ED9U41bQ0WGtm
oOg68Q9QfZSe9674Y3Ovefgv6PcRZffznegr1eZb1cPUfoRKI/FnqZ+RotcX
f7jqtdTmcdF7iz482sBvEmPYSNcuUJsvGLue1b/ia/AHhOzqr7pxZp2wkeiD
4lsjq5EB7/0jZ2reR+ynG4KPnFip8m7Zsmd9lfdDj7wf89Y+6vdjDg/TMxry
rRlvEfJG32G9wvumieoOGs9y0RsjVwrrw7dV/6k+Plbprd87Fq7fQ4aUvTf2
QNYhC5GP0S/9v66xT9D6OFP0ARr/jyoPsx9YFxrLK/Gt10Vmlrzu39C9PVW/
q3s3rPhdkYcf6/du7Hddb61nHy/6RI3lPf3uhV7KLBcbhWzcSdfWKVsWddcY
jhavC3Oo9i1FnyP+z4n35e3qe7Se1Tzk9q1q00b19eLfLHpD0eep/XG8q8qJ
+n0xc6h7ZqvGgGgh/uKSdUiz0B2f6v6uqv+tPuaozSS+sa51KTxfjQvLuSzk
3qtqvy37Qu0/Vdlf9Gd67leiDxD9uegVatMZGSnejxp/e9G31SyTk7Jl7Lrq
tyJ6WWY9gg7BPjhQm6K76uNUdy4sJ5GXA6vW6WNUP63fO8LXvXvpdxd0kerm
Gvta6qsB30/PbSf+LXru66LXYz5Fz9M9c0T/Jt5uGs/2attc9em6t7fKiWWv
LdZYR7U9Tbyx4u1ZtqxB5mwj/g6ZZdSBiWUKsmVzbKGQY4PF65p772IjnS7+
K6K70afGfyF7SPceoXEfoPaHqz5U7XuI7qZ6tq6drzazVB+fmr5Q9MjEMm0P
9XOO6DNEHyr6R7U5UPQfeseDxT+B9SX+v9TfN8gM5lfPmKt6d9V/qs3mou+t
WbajN54WfafotqIv0b2fJl5XV4n/38Rrcq7oK9RmXdEn860T09PFf0T8zUTP
F3+RyjzRT4p3BeMQvVT0AyqdRF8t3rLUY7hW9G2Zx/aE3j1LrdeeUp8zREs1
lpaj2zO/x9Nq00vfZUXZ369jYl23c2p5h9xrqLZjVd5nntX+kbJ1M3r5fPW7
NnPFs8QYLP73oh9X/YbKkND56P489PzzsQd21nOXqW6q+yer/w9V35O7L/pc
rHpq2TKEZ89R/28ix1Ufr/arxBuP3ld5TPxTsA/jXsZ1WWH+L7ntteUhK55S
/bbKMJWng25WsrxdHuOs6d4jxEt177Ya56vinabf36MXRV+Y24Zn3rCfmsf6
v5x9qbI5z9Vkn1r2fDFXvDv2E/ZgtbAtfa7anqT+3xLvU/2eqv4/Uj1R/G9E
byT+BaKnld2GuepZtZ07RXVaeGys8176vVL8o1Wv1u860Ter/im+2bjM3+MJ
5LiuraHfI1T/pfq83M/imd9mtv3xWerQ/ezf8F/QOdhOd4XOwU9ZS2360o/a
JLr3cNG/Z7ab7it5PX2d2X77XW1+rvf8ME8DwkfAV8A3wY7CxsJ/wr9CX9bl
nnPmvnnVe3NQ1fYp/g/26mYaw6HoFrVtW7GPgX/xSdnvhQ6bEWsPPdtAz3tO
9OPqc/+q5dxo1U1177Nl2wano/NUn6o+/1RZh3Hllovci43yZWabfOPU/bPO
sW/nq/9nRPPhsTWahr1xRqw51lul8LPKqs9nvsQ7jXVV8b20Z20+Fe2nBc06
qerj7i96ZG6bDDnWVX0crHGcLnqEeKNF91ebw9RmoK5NE3+Y6CPF30f8AWFb
7i16X+yW3PxB1Kntzx7qZ4jKZNH7i38le1L0YF0fllg3ttJYLtGYLw6Zf0TF
upNrp6aWyUfk1v/jwgYYnFjm/1Bv2xQaPbB3Yp94mubkROSv2p+g6+eJPlT0
ueKfnJtmj2yi8jQyHFmLDyJ+O9X76/duordi/ybmb4w/mNuvxjdsjW8i+sDC
+msv0Q1F91T7Y5CB4nVU2VX8LVRvhk0gfnvsbpXDyl4bF9RMT0IGJG7fiXlC
14o+RvQgtRkk+mD1v2/iOd+bb5G7zSjVLeqsH3vr+h6JbZ5teI7m89CY29MZ
N7aBrl9YWIZNzb1Ong6ZdpX4I1VfrXq15ndj1qnqmRXbMIfr2hq6NhR5pfqK
wry5qi+qeL1iI09Xv9uwTvF7NP41RJ+gOUgT4xzHYVMUbjtP9czcMhPZiVxD
vrVPLVuOQeahh4OP/NtQ9I7sT3R1xWPetGT/aUTZttrC3D4+2AK+4KSQpQNr
5oMB3ByybhS2RMUyt4g9wF4Yous35eYfhF6u2Z+g0bcqp4h/fW5ZepLoa2gr
ejRjSCyL8FvwWa5W/yeXvQdWBB/5f5banYvs1b1nij6n5DV/XW56/8x2GPbY
Vqq3SfzurXLvWWyV09C34r+nNuPEX5ZYxzHnSxP7MkfTT+619Cj36vdb4g9V
/Xtim2FpzWugn8a6oSbmPv1eLf4Ctbld5RfRd6q+RvzPRM9U22nqazj7VPQS
9fO2+GPE+070l6IvVPu70a/YM2pzfeY+b8q8fvroWX9gG+ueA9XPYNFn6trF
yGD6SyxLp4HtqHRSmz+xXRkzMlD3faXxtBT9mu5dQ7+3ZO/jZ4l+Hhmr9hP0
e5OKfYF1xN9KbRqpnpV5nBdjP6u0Ql+qza+iO4r+XG2mhG49TfVJ+n0I6wQ/
PjNGBu70kMbwKzYC/ktm7GB/npVY/60Wr0tqfbSv+Jfq99dq/6razxF9qejV
iWXjePai+E+IbiT+yer7Fv2eLP7Pqu/GVhb9l+p7Eu8v9tkdYffk2Gl61tyy
+x+va1NE3y5604pxRvTjw6w58dfRt35A9HR0a53xgV6iu+f2x7HD+6m/u/Ws
s2L99Ent41yWW7awBlgL66l0xt5gj6rsXjYWgV3dT/TaGtuTyOWy5wqZNTb6
QYYj57GFBiHHRM/JLVfRC5fm3mPstXXARlSG6F1uLaxfmLerWUc1780bcssB
9j725zPiH1U25sNeRlbgl7FX2bPYZsiZUaJnqD5b5WjR57BOcreZnVuO0Qb7
CtmEjNpd/Vys38eKviQ3NtsTfvSDT7q25uzM3HY+GBK2ENjZ0JKx4krYH1PQ
iWXTrJkjdb2DnvNxbrw4wZdK7Ovlme0w7LGt1bZ7YRupQe69gFxFvo4tvJ5Z
16zb4eJvkdr3B0PBJvs9bLAtU+OgtKddo8Q+ZjUzzseYh5VsHzEeZDp4NZjs
D5lxLmwxMOHOiXXfppmxQmQe2ODWibEf8JY2oU/Rq2vnfl9wj01FjxO9Z+jo
saJ3T43vsu/AeJGHjHE99X9AansAG+Gn2IM/BgYDjT2J7mA83VLj3q0rfnds
xS3Q9bq3V2odii5l/+ITg53jR80T/Yz63DZ3GzCG7XP7eu0y2zLDVPYt2/7v
XPG6xz7ATriBOnzD7dX+XF3vUrH/c3bZdgv24vHou7IxamwAcCrwKnwF/Ads
nc0rxvTwi7E5sD22TIxfHM31xPgJ7Xg2mBn7C51xY+H9yz6eq+tXqHSq2G7D
fttFY1tf5Vn6ye0LMEZ8NfYw73Rb4X3IfpyX20bEVtxL901Wv7OwZ9kf4SMf
KP5RodfQb9h4M0Vfo+uP5LZLX8ptv6GX8UWwRWmPbhyaWy/jv2PX4dPg052n
ce9SsY9yROIx9Efm58YcTs0sr5HblxbWMeiaA2r2JXeq+NojNdsRD4Ih6N5d
xNsusa0Ijf32Sm5M4/LM/thMlV31+83cdsfD6uMt0VeKf39qfxu/eyH+NzaT
+C/nXn+sQ/YHuhQ+OC84bJ+Q//fltvtn1Oz34ifgI7yeG8+ZmxknYgzXhW2N
fTE88Twyn/ORaXq/3Sq225bn3tvYD11T70H2IrbtpWX7RMgd5A8+GjqlYclY
XIfgs/dPqJmPj4xPhFxFvo4KDBYsdpGurUUbXb8fPVoyJsPevaRsPwtMcnbZ
2OOzuTG8VXqv9ZDHZWN9xGIuKjt2Q5xiVtkYdOOg8c2fy41ffaR7X8jdP/KN
uWBORuT2gfCF8ImWBc0aAlMlFoZPOLlw3Qw7qmRfEvttq8T+a6PMNjwY71uJ
bXj2K34euAU+Muvw8dy+8qTQiaNE76bxbKp7jkJ2qp97y5535hP/gm/BN6Hd
qNjL2DBbq00n0Y1z3wuuAvYCHo4die+KD0tsEp8FGd4s8/gYJ+vnr8QY+/3E
vKrW+xtXPcbTQuag39l32Lr4q/DGY9ugw0r2GbFFGoU9dnbhe8FbTgv5xT1g
Q2BESzLHm84vO8b0mPgflOyXgTGBNd2gNmW975bsu5ptA/bLHeI/kxv/X47v
gL4tG+POYy/gj2PMYwdWkHkRg+iJrZs49rEv8r/eexY8kjWAr/Opfk/ObdeB
nWC/4EczXxfpdwvVN2o8t9a818BQt9D7XgY/9bgZ/92i76oZT/tVbVaGzTZR
vFV8M9FTRM+vGSv+AsxP896E76X6ipoxPbC9TTT51+q7blxneXB4yIQvda25
6gvVdnDF8hpZ3bLOsn+X3Bj45MDBO4U8Zw1tgF9TsawCWwVj7Rv7GDuDtYcO
OS30yKHRBp/xR73v0aKfLOxnTaw45sEiOUX0n4V9T57FGOYFdn19yfGXiRGD
IU7BGNjbyCvaIDPB8ukH24h9zPjZ16/re+mVS0fofe8Voap0SM0+MP4LfszB
uXUs9h44ApjBQl3fqM58rl+o/v6l8n3Jdtw1MbbWdaaxx2ZXra8vUn1dxfPf
kfFU/BsaG5MYGPEv4qVZyGHicMTjHk3dBz4esmZa1Zj5nlWvXdbws+z9Ovvg
M8R7PrDZp1Lbv8z/Sfrdvs7jZQ2wnlhXd+vdZ9a8Bt4R76TYg/gHj4e8+TD2
DHvn3tQxZGKl6AV8QnxD4rlHBQYIFri45vF0Yv5yxxzBQp8Mn2JYzfM0L+at
o9rNF91G9Ut69+/0jE1V/1X4O7IulgQ+jO47o2ZcGnz6vsy6FR37eMQmqqlt
k6lhn7BmJsQa66Z6RsWxsL6qL6h4fxK/Oz90WaM6y/I3E+s3+K1Kvu+CuHfH
im0sbJcuQYPzbq/6nIr9fXAQZEJj1jU2uvj1onet2LZgfuci63nFOscJwKYu
UH146FlwtVTlLOSp2j6QOe64Krd+fjF0NLgdmB7XiL8ir4idYm8QvyBGSrwW
2dUvse2LDdwlse2LDYxNslNqGw+90Czs9mai166zrEZmf1Hve59WPSg1Fgcm
t3dq+xM7tG1mnYJu2Tpz/zsTc8hsh2OPtww7EHvwvrJjosRUvinbx4G+IvFz
eX6tzroenQ9uBH7Ugf2cGR/ALzsu85rEJ/1GH+EEtfla9ZTc3xac6dLApcGn
R0f7n/DNwfjU/mfV36uMF/2d6uHR/xeF8WJw470Kr5mTK4653qFxqlmpd835
EGCwYLG/F9YJs1S/ozJWbUdmjmsS38RW7Fb7O72ltKowVjwl/DVs/GkhV6cm
fnfmYGDF8bx/ZN6c2Ecb6Nrlou8t7C9cGvK2mfgrkAFgv3WWQU1UH5S6z6HY
0viD4lfqLM8viXv/CpmFvAKHA48j3j07aLA2nsPz9o29xndBx3B9drQHS0Nu
slcPCP4fotfJbA+trbqW+jlLas7FKGJtg+kN4L3U5trC9z9a83sPjHen/YEx
J+Rq8MzrwBETy7+bCvspQyvGe/lOfK9lheftqIrnYUVhe/DjzLJolPgvgi8V
fhZ9Eq8ibvWs6kcT26Jj1d8DhffCrpn3Knv2vsLvekDMA744PjnPQJaSK4MN
g52IvTi0ZPvr4IrtQ/wp9AM6CN7g4N8Qft+CwrHgPSvO5dg1t75Fh78c458Z
eRroYOYBPXxorCviAvtVjJcyx/vFnjok9CB6b16ME/1EjgDjxJYdErqL+SUH
bVCsW+aCOWHeFhWec3y6pTE/zNPrard3xbY+cTFofCgwTGxQ7E8wvH1D9iKr
+4XsBUOEvgp/qs7X5tUsm/tGGzCYvSr2naiJYRC/ADvtGf2zJnuEXgDjZQ65
b1WMAZ+YuEf34LMXe8e8YX/0iPWMn4e/h82PL8aYwa7/CBzyXxrnHaxF0ber
/o/uH15x/G5x4ZjQ6MLzjb5H119SdZuLVS8pjHeBU10UdsVGVePpvMORhb/L
yFg/d8azmqWOUe5TMa5OvG6fGGfraE9uD/KrT8wz7zUg1gB21h4xP9hQ2ILY
UcwJ+575nBltaI+tsVmshxGqW1Sc94U+BAdHJ5IjQT4ZeRKX6x22E31e1TFD
cA38f+5rGff2CznInIOX0w+ye2roXXQucQf0OjIWuYNuwL7lvm1jnnnHbrE2
ZhS2zyeHD9s13v3czLIamd0oxnFzyTYm9i525oSyx0wci5wVclfIuXojc84D
8TtsQmQSsYo2Ydu0q7Ods0D0tTXnUXRlXKntpNYl23HnF7Y9sEHIx+gGrTav
F5EvmRl33D7mk/yX9Sv/nwNzQ8nx9WUxnjcz50qSX/F1zRg6ugwddHThHLzX
wT0KYx3YPNgyO8bcnlPYfsOOO0P0VhXHwoidgQEhg8B+4IP/rJkbJwfPZH21
jjVJ3SboSbq/g+hTVPdM3f6kwjbbFiGfyZMDLyLvDDuOa8g1dAV+CD7IQYFp
kJdBfmDHiv1r9jZ4NJjgZnEvfcLrGHzkaKeQpeB0jI9YMjEkcEdyRMkrJTYE
docc20ZtzlRdzY2Fgom2rnp9nVu1PcccYjP/YxeSJwAmgHwAC/ouM1YPDnym
7mkn/nTVZ6m0F31w1fKgVcU46LGF9wHY7PjCuGs30R+lzvfZrbC9gN2Az3V8
4T5pAw7MnPN+xHvAu6YnxjSHi26SeA6YU+aBXA1yNr6Wcns5/At85bv+oVPb
QKwfbC7ybMG7iLFclxkHAA8gvoNfDKZFDgp9PpY6d4R40BJyTMIfwS/BbsW2
wHbdVe3VZemDwpgCfeLLkFOCz3JH6ngS/TyUWjbvFfJ5kZ6dMic159gRnyIG
91BifT2m5vguWO6J4o1RmS56WGq7B/sH22l+2N5gO+ThnMe6SG27Y8MXdY7h
nR7zeWXhd0EfzUuMT4JTflrve1eonqBnryn6+cR7i/UBZnFW6jjdjMS5I6tK
xkZG1/wujxe2TbFRsW1//Ae/zR07A98A51gc83+f6Psz2xTE8ckbI8+HGNPJ
IQORhcTakHlghsShwDPBNdER4FfIQeI9yNk7c8sH+OTDgEWBy4Dx7FM1ptFI
9VcR2yXGC8aIX0UewUyVDdBp5LPV3Oau1HlI5CMRI5sTcSviV7cFNoK/SW4c
Ohwc9ITUuXzk9N0bOBh4GDlMvOPC1LYK2BDvT5wYGYytCAbEXOEvTwzdja57
OHPO28Op8Vn0ObbxQ5lt3wapcyyJFRIzPKqw3Yotek/gUEsz5/OBt1yVOo8K
en5qjOq3GA+4Ku91k/iPYHyWnQdF/JI2YLzkfaJvsRm+TzxXzNlH9V6rL9Qb
3wHnaVi1TEJHoh/LdZZrC8KOAs/Hhtkzd6yNWAn5qOTHtlW9vvofKf62rP/M
sRhiMuQ4gp28UjPuCf75n9Q55+QofiLesZGjQq7Kt/X2d9omzgtFd6I3RxXO
rQR3JX+SvJ31U+c1gSeBrzatsx1JzA3/BD+FGAF5BsRByMFbP3dcsXHEicA2
wZPxHcBOwVD5XnxrcgSeCNyMfDTyPs+M/f5Yzf4FfkYzjbuH6K2rjitugz3L
mg/Zjown1w57FR+3e8QvyEMhF42Yz5qJ9daWoffIVcN3xocmFtsm5D1nGTiD
0Fv1u6nzzz8idzF1ruM7Nefsk8NJ/ufCwFvYy7fGWiJvdEDk+O1Rdf4EawMs
ETxhSOxH4sjoH/LXrqt537H/5gfOA+aHP4L9xjoGS0E2kos3MmIch6TGt/DX
sC8rsT6Jt7cLe6at6i0L21m3BFYJDknu6oSwCbHFToo8DbCfTmFLTMqMT4Lh
kG9YyxxzJPaIH4EPQYxgjcT486apz2qA74Ptk/vFWvpMfXySOofh25pzjdF1
6PGZgWWBm/YsnMvVQvUPqfN1f605N5ocaXAzMBqwGvKdvte1geK3VtujIsY0
BPkf3+7FmvUzMUp0NHbRlhXnS+yYGvcAjycnBrsO34Rcbp5FXjb2OfnMzWI9
3IRsUd0kxrayZlwHfAd89frwefF9yeXtqjav1byXmIdPRLdIHU/8QvT/Ys8S
u/hPZruVGMiKLM5HqO2ahfUteBL27Y3xLOIhxEXIH+b8x5pl97UqNbYKNsu6
vRHdkTq/DMwc7Lx14LfgduTe9Y3x3Bl9/h33KTs280B8V75vfWLcuEO02aXw
PmiZ2i77MtqPDl9pAwxfjft+VZunPvNCe2xg8pLBAJ+s2W7uFnNFDJtYdtPE
+c1/y/zMOeNrht3MOZj6ePfVyNOy7Xsw5CYhr8jHXBDvS84xenNu6vwF/BN8
E3Jm8GuJZd0adgj5Mtjs2O7gpA+FrAObWRp6n/yaMZlxiQXYXRHXIL5B/jz9
cIaA3N+/47y5c/eRjcSP8Gv/tnvLlunI9laJsYUOITOJxXUJunNmGUvMuU3E
74jjEacH92uc2IbFBsCOnSq5U6/fk1X3y2z/EDvFNsLOOTdxXASM8XkJleG6
9qboA8RbM7NdTRy/UHlUdKp6TNg/5CvdFO9LXig2GfpuLBhs5rg0OQ/kAqn6
O99qRGbcbP+aYzNgnvslzp8m/7BnblmGTCN+OzbsvSGZ9zP7mhgysRNkF34Z
sugR0Q0yYzW/hcxhT7FuOeN2a6xnYov4Y/vFWuVMQu+S/e7PQ6a1Si3TaA/m
836sf+5lzaJP/163oVvBna4pO5cee+X52F9gL8g4ZN3nqe1zYlecY0J/oEdW
pj4HxLol3/vNmv07zlrh++ED/i/1mSv4H6bO70fvb5g6Loq+JjZK3ut6QTPJ
rH98/zGF+ZzReyxzzgm5J5xTwu98XP38r2ZZgcy4IN6F+NrC2Ef4M+g/ZCnn
sdh3nFnYveSYbbOYH86a3Bi2wufhC3OmDSxiVvBbBs6AzfFu7E3o5eE7cAbo
2czPQn6DY70T84l8R87/rLbfi75b9Df4OCpL0C+qf6s5v5ccfDBfsF9yCJsH
/Uvq8228FznK5M2j12an9s0Wxzx3DZp5Jo5MDsxvmc9Z9QkZ/lnZuS70Q54J
34CzXB+jX0X/N/V6Yl19V/O5Sb4F7boVPqvImcWJmfE34uTgFsh1vscvId+Y
5zdqXnecHwS7IIcYHACdU0R7zs7x3Thnx3kM1lgR9hvyjzgpedTktv1SMw7R
MNYz52HQZei0V8M2W1Zzznld3Iv9yHOJ63NGke/7YmpMpGvJ9idneBgv9if4
Lhgs4yty59VkubHA/oHt/KZ2x1Wca8cZAXI0yf/vnHpfk9c3kP0jejts/8z0
jpllLrKXeMHy1DqB8bRL7HfjfxMjIC6wWnX/8NE+LnyWBvxle9WbYMOzzyXb
d84s58GE+yaOgxAPAc8/Q/00r7N84/wI50gOTU2TOw1OQm4hOYYnhJ3ZMPfZ
wNXxLM5UkpNGblqDkF3kMTYNHb0y89mER8vO8SNngrVBXANsnFxe8tzAe7HD
scc563F17OVtdO3Hss8kPqjfV5XsK4Fncr7p/cxnOuDjjzdMHX8kDklOJ7md
b+TOyyQ/87XcZzyJ93yZ+6wEOYTkEnJmhPgmZ4M+rPnsz2up896fLDsvkfMU
xCZ/z32e5YqS8QSw7mM0/nE1n//hHNAi8W9LTYMb/JG4/WLRQ1mXJZ8r5Hwu
ORPkZE5UP8+J3yZzzIizEL8VjlvB5zqYDPbfXYVzQMkFbZ/5TFD3eK+7Ep/j
5jx3Dz3rGbXZTPzeqftplVn/oQfJMSAPEh8NXw1sZ0zFeadtw19rp7pp5n7I
Jwdn+FtvpsYtu8Y4wTaJWZJDu0Nim6eFrn+X+lwbtiVnyrDbsd8XpM49wCcF
c9GjSr3UZkjh+PgxmWMinE97RXVdZpm5YWJMkrNnb6jePfN8kqM1Qn29Rj+i
u2eme6seWnUse67qvfX7dfH7qh6X2k4YlDlmd7zafFXYxngDnZ45T/HIkjHD
/VLHNPfRPPwoO+PsinNN182ce0/+Nnb4YyX7XF+HPG+rOg3bD/sQm4Q2/dRm
VtXY/oVV5+7TD/n5xOzWFP+gwjEqsDJyUPFJ/8nrOTb1OAdkjr/gg+OLvx22
/buZ/Y1eoS8uSp2HfBl2Y+Yc3atFr6tn/yS6v+qBiWOsxFrBOsjXukDP2kXX
ZiNPqo7fXVaxnEGOIE8a1PkMGH4i/iL90v91qe1M8nvJ8x0esWbOqC3TM6qi
n9JYvk2MySzUeCdEPg95Pc9FzslkcJTcZxk65z63i2+Fj8V5ZHRYS9EvJ8Yo
pqn9+YHzg/d/WO/88MP0rA8S+6cX12zr/p3rU/i/AsAR1irsv6DjsDs+DT24
UehTzuSz9jYIXwN/cN2IbxLnfDpkETKpGn4BOoj8BPIxyIvB18DGY21vEP7F
zqrfj2+3vui3QpYiU5cEhoD/u13Va7iH6jywwTXrHLM+S/RadY5xY4d3TXzu
FR3B+UvOvXJ+tanqXVV+F31M4fw/sNPrU9vQ2NKcSewcc07e8keJMbc5GsuJ
Vef/n6T64cJ5NU+pbpB4v7Pv8UHI8SbXm/PsxErJH/i9ZtwG/OaEqvOix1eN
waLXwFPvKYyL3l84/5DzhnfU7Hfhf5F/jtIEO2mYeL6YN+JcLcLvZj1wBh+7
9t3cMa8RIT87qlxUcoySOBdnde5G1yTGS0fWfCaCOP6Rmc+C4XeTs7wwsFlw
Vs66sgZYC48lngfyjPCLF2GDZfZDkDMHqf457L12qc/mo6/R25wr/ybk7RGp
saOTE5855+w5Y+Mcwcfin5H5vDznyjhrj22EjfQsfh/PEH2z6i9TY02ra8bv
pofcO01zvZbGeZnqmeGbgPOR+zG94pz50YHPgGE/H3PyYL3PvrJOyBNbETjz
sMwYN+3PTn1uE1v04tSYHf4FfsbKwrrpo8JnZn9Qm2syY4DYkNiSnDdvXPH5
i1ah+zjXgE+Fb8X52Wr4Dtiiefg72NKL4t0fqPncCrGe+tznEJBF1yIvE393
vv/RqWPlUxKf7/419iB24xpl58ljB2APvFDz+Q3k56Wp/3eAGM9ZhWNVxGI5
k3VG5I2A1fOfIewv9tmCxLnBo3OftedcPPHTy9XXJeJfmRqbxfbDBhyVuh/6
+yWxriRfj3wp8DTO5hMf4YwGZzWIBRCDJi69VexZ8vbZq+xZcgBnhO4ejG5M
LM/PTe3jcF6atYr/UhP9XGZ8GZyZvYO9hd3F+fInM8tt8sbfUVm7bF2DD4wv
zJnl81LP86zQNazbK2uW78j525HZid/9X6LHB96Fvub/Vf5Sn3sW3gPsBc4s
4/cRW+Sc966p88O3SBwnmBq2GVgwsoXzAvwXBGdAOAtCHAQ9gj7B/8EP4gwB
MQvwKHAp5AjyZLPUuUqTwpbgrDExgkU1Y5uMH32F/kaP838sSdjAncMPxZ8F
h6Yv+iSXdUX4zuiXlbFnX6o5/5kz1dir4DPkhDxY+P9eONfD+R5ippxFR1Zz
jpE4MDnqNyQ+9835b3LO0ZsPh+/Jd+S/JogdbhNrlfOhzBvzx/8e8L8VnPsD
u8Y+wU4BP9lP945mDlL/l8jViWPEYL7YA2/X/N2x8zkrzrfjG+L744sR/+X/
IvgfHM4NkS8H7kscA7sQ+7A1c5L7XA/2Of9twn8ucPZkYur8tDmJfcb60FnE
pdAR+ED8DwzrpEfhM7yPir+DLv4fJHbChw==
            "]], 
           Polygon3DBox[CompressedData["
1:eJxFnAfYl+P7xp/n6/vMt95CykpTKCskWxmhIVRGRkOUmZ0QZSUzVHZEISN7
z5AUIpEdRVsJlc3//Djv3/E/jvc63uve47nHdZ3XdX+b9R982OmVKIquq0aR
/qLmRRSdrv9vi1qIH63IzspwqWik+O3TKDpZaTvGUbR3FkVjFR4jOlf8eaLe
eRQdJbpWcdeJ3hFNFx2fRNEA0RDVcb7K9hL1F/+e8k5QfbuLZog/W/St+GFK
Pzpx2bdF/RPXcYiou+j1Moqmlk6bJuqXOM8ixS0snYe8T6tP26i+lqInxG+n
vNuK9hS/l+go5alR2jeiyYxd7X8t/gK1/7PCJ4quUvh60UXKv6A2iuaL3hfN
EvVU+jClXSk6SemHhnbp2xuiK8RfLrpZaWNIV/2XKu8o0WkKX6XydZhLhUeK
f1B0ocKviM7IPY6DRa+VHvMWSh+svNNFW4r/TX04Q/O4saiFxlVfZd5Q2g4q
30Dp76jMdNG7ovdEM0rHwb8v2l+0n+hP9eUvUXvRzqJmqqu56FvV/4HqO1N0
uMK/q/5XxfcX/SZ+F7XRXtRK/BaiEerHLkq7W3Sp+MeUdrH6cq7Wz2ClH6C6
O4l2V117iL5S/V+KponeDvyOKrdZ1XFf1zoPadNF16q+U1TfB6JVqu9v1fUc
31fhJUqrq3Ad0buas/cS8zWimYnj3uDbiBLFpaJ/VWaEyi5SHSNUXyvFbS76
VfSbKFf6dkr/UJSGufpX/OCK5+xV0V0qGynuVeZe4fEEFX5d4StVfpD4taK3
lLZGcUcr/XnR2tx9K0UzEvexvvJvr7yni24uTDeJ6hVO+1b0D9+XNSu+VnVM
Fd9W+Xuob9sr7ljN3VlVl/tK9JfS7xXNVDtnMfdKayk6T/O/X9Xfaq2oYdVz
zLeeEXnuqYO6jqm6Dzvo/wFK6yQ6oupveIb4dyJ/29HKc2qYr19y78s6SksY
s/JuqPQ3xZ8iaiT+NNWxv/h1GLP4xoXPHs6gTcVvW7gv9Km1+Baqc6b4Dsq/
s8IPKfybwncp/LnCc0W/K7yF6JPCa/Jd8R1jr1XKtBM1z11X26rHQh8Or3pt
7i/aLfUara/D4UrOPtEazcd5yjNEdY1XuG/VefcT7Zq6TKvCc8GctBTfrPBe
Zc82EX89+0NlrxINrHpvdxO9WnqPzwhnJmflCaKXxb8k6iO+r2iZ+tBJ5ZqI
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
ZEBkQeoDa/g/jgSbVg==
            "]], Polygon3DBox[CompressedData["
1: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
67hHf8qRK+D/4jA2xA==
            "]]},
          Annotation[#, "Charting`Private`Tag$78053#1"]& ]],
        Lighting->"Neutral"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
KA==
            "]], Polygon3DBox[CompressedData["
1:eJxFmwf41uP3x799e77W8xmPEolKVEgSGipSGclq2JK0qbSUhuzsyIgQkkop
oVS2kj2yCUllFZWy+Qn/96vzdv2v63lf13nOvcfn3Oc+59x1eg7uMqi8rKys
ZqGsTL+yFsWyskOEE4WOQiuhpdBJ6CyMF24QJmRlZTcLy/KysreEk8U7RXg7
Dx70qcL1ynOd8JTwdBZ53xROKkaZk0R3EY5KysqOFgYI/YWPlPaxkJbKyhLh
dPHOEA51n+hLF+E64Vr6pbpvFN7Jow+0fRrtOw9pN2XRd3jQjOF+YYrQW7w+
wrt51EHZ04WmaruJ0EJ5WgrvK+094QylnSlkpegjfTtTWKQ8C4XHhQXCDmlZ
2fbCJmGz8KR4TwgPCjOFj8Xbo6KsbDfhLNVzq3i3CINU92BhnvCMFuYr4RO1
+0EefaDtrsbDSltViLSbPA+PCo95jRjnPGF+FmvZwmvLmh4s3j/aAJ8JPYox
NuaAsTNGxn6wcEgWc8DeaC6c4D3ymPC02n5CuJd59h652eOY4Hl/zH24Q2il
sf6l/OWl6Ctr94j7/JPK/ih8IawSBmlOzxc+Ef2psFbz9a1QTXl3Fl5SX18U
dhGqm14q7Gze/Sr7o9r6THhF/98QXheeEf9Z4TXRrwpPiX46iTwvC1OSKNtR
9InCvWrrvizK/Ky6Pi9EXScIxwuTlXZPFnVTJ3XRxtmiu7Ef2VPCSvW9jsb/
i8r/T/8f1f8vNffzhXM0vhfEWyLsJFQzvVioat4TwiJhB6Hosb7gvIx5nur7
SnW9KVwi+l3hO9GPCF1E/yv8A199e0/4W/QW4W3R7wjlGkMloULYRijLogx5
30+iLGXI+67XZqCwvBhr1D2PMTPW04V+wvMa6wvCuaJ/UZ6fhdXCmmLMLXPI
3DHHpP3ktSfPr8UoQ94vhR20Z7YXTlGbpyaxVzYLK71nNgk/CCuEz4vRN2QK
soQ+dmdNhN5qs08eeTcKn7nMZtfxues8J48xMZYzhHOSqIOyfYWB6vMA4Syh
m9CVb1PoqDydklj7s5CH3gNniddV6CG6p+t8SnPzbCHaom/dhF559PH8LNqg
7rOFapr7nYTuos/hG0iDB91DqC56F6Gn6F5Z0OQhDR510wfapg1ka1E4LQkZ
u1BjXiDcL0wV3kGmC88Kzwm7K+9uwh5CHaFmKXjQewqHCYcKPWhD2FV0Ze33
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
            "]], 
           Polygon3DBox[CompressedData["
1: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
eQ==
            "]]},
          Annotation[#, "Charting`Private`Tag$78053#2"]& ]],
        Lighting->"Neutral"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1: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
mHOzl3vd0+sh1uuZ5fqmk9yLvf4Pql6guQ==
           "]],
          Annotation[#, "Charting`Private`Tag$78053#3"]& ]],
        Lighting->"Neutral"]}, {}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl02VTFlEYBuBFxA8o2EUpdncXIG0LqKCAiCKKCnZ3K92INdaM+Qv8F+pH
259gzThjXC/uvNc+s8/ue5+zu2cTS6tyKsMCm112RFcJXkYHQWT3IJhITybT
m8UsoR9JJLOcFAYwlYGsYSk5pJLLMQazjmmkM4T5xvti3M984iMfeM873pLl
mvAeQdCNMAL+6v/hNxu0YmXlU0AMe9nIPuK4zCYucZFC9lNEMQc4yGbmMoqF
jKPBeNXGaFSbaKaFVtpop4Ma13SqN7nFbe5Qq//LMz0pq4wOtnGUE4xmHoc4
TAmdNNJEIrO5QX1oPlzhKiO4RgvNHGcL1bRznSOUsp2t1DCeu+ZWZ26P1Ic8
4D73qNd/oT7nGU95wmManHvjfl7zigmyFjE29D4ZwwJGModMhjOLYWSQwEzi
Q+tK5hKSSKZMfowaSxzxJDCM9c599c6/8Z0f/CRTf6isGWygiumsZw+V5LGb
XVzgHOdJYxBrWc0qKljJCvozhb70IZpJRIWyjF3BTnZQzvaIriUalKibKaaI
QvyC4kjHFNKnm3WqKSpYZneWNlrJZid1lFPLDrI4zRlO0Ytw/8+XV0CUzByZ
ueThMEhRl5JKGulkhJ5b6PuK+P/t/wMRTWjA
        "]]}, 
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0+VWVFEYgOE9AwMoCEp32600mJfgJXgBej1KqoCF3a1gd3djdxcgPix/
POvd8605sc/MKVu6fMmySAihn8XJIfREQ6hKC6GaGmqpo54GGmliU3wIj+jh
N49JiYVQTB75jGEG05lJKoO+N1eHtErHMo7AM7MjZFg/1+NkWb/SU7zhHO+5
RG5KCDlkk0UmGaTTax8d7rOdNlppoZmVrOCyc3zgPPWuU0cDCcTIJp44MokS
IZ1qhh03R/9qmu7UIi2kgFJ2mM3WPzpLB7RRd+k8raWGpz7vZg/76ecAhzhK
Ly84wWnO8JYLfOQqefadTwGFFFFMCaWUUU4FlfR5Rp2eQxfdXHOOK1zkHWd5
zUle0scxDnOQfexlO9t4wlaa7GejbiDJOpccEpnAWvOJ2qX3+coa7vKZVdym
jRu0MMr9JZFIAjHiiSNKhMBwqt+DIQYZoNnx12nlFu3cpINP3GE1X7hHJ98o
c4/lPLDuZpL1T63U8SQzmhK2mE/VaVQwhclsNv/Fen6M7MPsoX5n3ch/wDs3
nwUsZFHy//fwHw+BdL4=
        "]]}, 
      {GrayLevel[0], 
       Line3DBox[{1030, 785, 1026, 1011, 800, 815, 830, 845, 860, 875, 890, 
        905, 920, 935, 950, 965, 980, 1015, 1032, 995, 1028, 1020, 996, 997, 
        998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1017, 
        1033, 1009, 1029, 1021, 994, 979, 964, 949, 934, 919, 904, 889, 874, 
        859, 844, 829, 814, 1013, 1031, 799, 1027, 1019, 798, 797, 796, 795, 
        794, 793, 792, 791, 790, 789, 788, 787, 786, 1018, 1030}]}, 
      {Opacity[0.5], 
       Line3DBox[{1353, 2783, 1342, 1710, 1343, 1726, 1390, 1928, 1747, 1414, 
        1941, 1768, 2181, 2179, 1951, 1956, 2199, 2514, 1465, 2213, 2499, 
        2220, 2218, 2521, 3779, 2246, 1804, 1483, 2003, 1506}], 
       Line3DBox[{1364, 2148, 2798, 2800, 2799, 2469, 2157, 2807, 2810, 2808, 
        2477, 2168, 2604, 2171, 2423, 2425, 2175, 2429, 2701, 2702, 1439, 
        2512, 2715, 2714, 2713, 2813, 2203, 2657, 2204, 2663, 2718, 2717, 
        2847, 2205, 2716, 2857, 1440, 1771, 2433, 2434, 2662, 2661, 2658, 
        2659, 1753, 2178, 1399, 1732, 1398, 1733, 1377, 1720, 1372}], 
       Line3DBox[{1370, 2656, 1368, 2651, 2415, 2496, 1717, 1369, 2473, 2161, 
        2550, 2568, 2547, 2160, 2472, 2471, 2543, 2544, 2414, 2650, 1365, 
        2777, 2648}], 
       Line3DBox[{1382, 3797, 3772, 1739, 1400, 1738, 1405, 1759, 1427, 1776, 
        1446, 1966, 1787, 2208, 2207, 1980, 1982, 2238, 1996, 1491, 1811, 
        1492, 2017, 1513, 1820, 1514, 1835, 1547, 1833, 1549, 1852, 1579, 
        1851, 1580, 2325, 2085, 2087, 2360, 2108, 2110, 2747, 2742, 2745, 
        1664, 2823, 2827, 1690}], 
       Line3DBox[{1500, 2006, 1814, 2265, 2014, 2586, 2735, 2736, 2270, 2619, 
        2271, 2015, 2257, 2575, 2574, 1509, 2530, 2258, 2525, 2526, 2254, 
        1994, 2524, 2230, 2231, 2503, 2228, 1978, 2520, 1456, 1785, 2607, 
        1960, 1438, 1770, 1947, 1417, 1750, 2603, 1934, 2768, 1393, 1729, 
        2805, 2757, 1356, 1714, 2794, 2786, 1347}], 
       Line3DBox[{1527, 2029, 2027, 1521, 2024, 2022, 1519, 2771, 1496, 2622, 
        2666, 2665, 2261, 2262, 2242, 2563, 1480, 2438, 1988, 2612, 1987, 
        2210, 3823, 3822, 3831, 3821, 1448, 2194, 1432, 1764, 1410, 1744, 
        3777, 3802, 1387}], 
       Line3DBox[{1533, 2037, 1531, 3824, 1571, 3832, 2310, 3833, 1574, 2676, 
        1601, 2674, 2319, 2450, 2352, 2356, 2456, 1624, 3826, 1893, 1654, 
        1906, 1680}], 
       Line3DBox[{1567, 2059, 2056, 1558, 2305, 1844, 2054, 2300, 1840, 1556, 
        2070, 2337, 2335, 1857, 1588, 2090, 2372, 1872, 2377, 2375, 2114, 
        2117, 2401, 2134, 2138, 1677, 1926, 1696, 1917, 1697}], 
       Line3DBox[{1600, 2078, 2074, 2350, 2346, 1860, 1593, 2095, 2381, 2099, 
        3787, 2126, 1647, 1891, 1650, 2139, 2144, 3792, 3816, 1702, 1920, 
        1704}], Line3DBox[{1688, 1913, 1662, 1897, 2388, 1630, 1880, 1627, 
        2107, 2359, 2086, 2084, 2324, 2064, 2635, 2063, 2644, 2293, 2294, 
        2592, 2591, 1546, 2046, 1512, 1818, 1511, 1819, 1490, 1810, 1489, 
        1995, 1477, 1799, 1476, 1979, 2206, 1968, 1965, 1445, 1775, 1426, 
        1758, 1404, 1737, 1381, 1724, 1376}], 
       Line3DBox[{1694, 1915, 2831, 1689, 2833, 2493, 2405, 2820, 2403, 2822, 
        2491, 2492, 2510, 2461, 1633, 2848, 2727, 2728, 1869, 2454, 1610, 
        2845, 2365, 2846, 2366, 2817, 2725, 2726, 2576, 2367, 2331, 2455, 
        1611, 2690, 2691, 2688, 1883, 1636, 2398, 1668, 2132, 2467, 2408, 
        2412, 1701}], 
       Line3DBox[{1695, 1916, 2406, 1669, 1900, 2399, 2464, 2578, 2463, 2567, 
        2369, 2397, 2577, 2733, 2734, 2693, 2694, 2687, 2730, 2729, 1635, 
        2732, 2731, 2840, 2396, 2849, 2395, 2462, 2460, 1882, 1634, 2404, 
        2465, 2511, 2495, 2494, 2834, 3829, 2832, 3830, 3834}], 
       Line3DBox[{2649, 2778, 2149, 2413, 1716, 1366, 2545, 1394, 2418, 2549, 
        2548, 2480, 2569, 2481, 2556, 2555, 1419, 2557, 2482, 2695, 2483, 
        2497, 2419, 1397, 2551, 2474, 2155, 2416, 2152, 2655, 2652}], 
       Line3DBox[{2882, 4096, 2876, 2898, 3298, 3309, 3906, 3625, 3435, 3325, 
        3493, 3121, 3439, 3532, 3444, 3449, 3337, 3567, 3574, 3131, 2941, 
        3689, 3692, 3677, 3144, 2983, 4101, 3153, 3011, 4155, 3043, 4131, 
        4184, 4137, 4143, 4219, 4205, 4212, 3976, 4088, 3998}], 
       Line3DBox[{3090, 3199, 3082, 3192, 3069, 3184, 4172, 3046, 3171, 4158, 
        3014, 3156, 4104, 2986, 3147, 3680, 3349, 3695, 2944, 3577, 3466, 
        3340, 3644, 2935, 3715, 2908, 3496, 3328, 3520, 3425, 3432, 3312, 
        3301, 2901, 4045, 3894}], 
       Line3DBox[{3108, 3217, 3989, 4079, 3967, 4064, 3952, 3059, 3040, 3166, 
        3940, 3933, 3926, 3921, 3140, 2969, 2931, 3916, 3739, 3737, 2923, 
        3421, 2891, 3483, 3392, 3407, 2886, 3510, 2869, 3115, 3583, 3281, 
        3592, 3884, 4039, 3257, 3369, 3367, 3244, 3229, 3876, 4033, 3861, 
        4018, 3846}], 
       Line3DBox[{3771, 1711, 1344, 1727, 1391, 1929, 1748, 1415, 1938, 1942, 
        2180, 1952, 3778, 1780, 1451, 1973, 2214, 2500, 2221, 2219, 2522, 
        3780, 2247, 1805, 1484, 2004, 1507}], 
       Line3DBox[{3794, 3813, 3789, 3809, 1678, 3812, 3788, 2127, 2123, 3784, 
        3806, 1620, 3818, 3781, 3803, 1597}], 
       Line3DBox[{3835, 4007, 3850, 4022, 3865, 3218, 3233, 3356, 3246, 2861, 
        3109, 2862, 4090, 3549, 4190, 3110, 2863, 3603, 3605, 3558, 3564, 
        3396, 3395, 3524, 3909, 3628, 3632, 4191, 3620, 3618, 3901, 3304, 
        3293, 2893, 2871, 4091, 2877}], 
       Line3DBox[{3900, 4051, 2907, 3318, 4055, 3431, 3519, 3492, 3502, 4149, 
        3642, 3639, 3651, 3464, 3347, 4198, 3355, 4199, 3475, 3478, 4110, 
        3162, 3020, 4164, 3177, 3052, 4178, 3190, 3075, 3198, 3088, 3205, 
        3096}], Line3DBox[{3993, 4083, 3971, 4207, 4200, 4214, 4138, 4132, 
        4179, 4126, 4121, 4165, 4116, 4111, 4150, 3710, 4100, 3684, 4099, 
        3699, 3470, 3662, 3474, 4189, 4188, 3542, 2945, 3674, 4097, 3668, 
        4098, 3734, 2947, 3769, 3721, 3757, 3723, 2951, 2973, 2992, 4056, 
        2993, 3003, 3021, 3029, 3178, 3062, 3076, 3956, 4068, 3978, 3206, 
        3097}], Line3DBox[{4006, 4003, 3992, 4082, 3970, 4067, 3955, 4057, 
        3945, 3944, 3943, 3936, 3929, 3924, 3143, 2972, 2934, 3919, 3742, 
        3891, 3889, 3390, 4187, 4186, 4146, 3579, 3586, 3590, 3588, 3887, 
        4042, 3260, 3882, 4038, 3232, 3879, 4036, 3864, 4021, 3849}], 
       Line3DBox[{1345, 2784, 2792, 1712, 1354, 2755, 2803, 2802, 2809, 2478, 
        2169, 2605, 2172, 2424, 2174, 2176, 2186, 1962, 2608, 1963, 2706, 
        2707, 2705, 1457, 2560, 2721, 2720, 2719, 2232, 2664, 2233, 1471, 
        2236, 2837, 2839, 2838, 2855, 2853, 2856, 1458, 2860, 2858, 2189, 
        2435, 2188, 2660, 1423, 1754, 1422, 1755, 1401, 1734, 1378, 1721, 
        1373}], Line3DBox[{1346, 2785, 2793, 1713, 1355, 2756, 2804, 1728, 
        1392, 2766, 2767, 2602, 1749, 1416, 1946, 1769, 1437, 1959, 2606, 
        1784, 1455, 2519, 1470, 2708, 2229, 2562, 2561, 2234, 2573, 2235, 
        2528, 2527, 1488, 2723, 2724, 2722, 1472, 1794, 2436, 2237, 1795, 
        1473, 1797, 1460, 2852, 2854, 2851, 2859, 1442, 1772, 1441, 1773, 
        1424, 1756, 1402, 1735, 1379, 1722, 1374}], 
       Line3DBox[{1348, 2787, 2795, 1715, 1357, 2750, 2758, 2762, 1930, 1935, 
        2165, 1943, 1948, 2183, 1957, 1961, 2202, 2517, 2518, 2225, 2223, 
        1793, 1468, 1993, 2253, 2504, 2256, 2255, 2529, 1508, 2012, 2009, 
        2268, 2266, 1815, 2007, 1501}], 
       Line3DBox[{1349, 2779, 2788, 1358, 2751, 2759, 2763, 1931, 1936, 2166, 
        1944, 1949, 2184, 1958, 1452, 1781, 1453, 1976, 2224, 2501, 2502, 
        1469, 2227, 1992, 2252, 2249, 1806, 1486, 2010, 1497, 2267, 1816, 
        2008, 1502}], 
       Line3DBox[{1350, 2780, 2789, 1359, 2752, 2760, 2764, 1932, 1937, 2167, 
        1945, 1433, 1765, 1434, 1953, 1782, 1454, 2201, 1974, 2215, 1977, 
        2226, 2523, 1485, 2250, 1807, 1487, 2011, 1498, 2005, 2000, 1503}], 
       Line3DBox[{1351, 2781, 2790, 1360, 2753, 2761, 2765, 1933, 1411, 1745, 
        1412, 1939, 1766, 1435, 1954, 1783, 2200, 2197, 2515, 1975, 2216, 
        2211, 1791, 1466, 1990, 2251, 1808, 1991, 2244, 1802, 1481, 2001, 
        1504}], Line3DBox[{1352, 2782, 2791, 1361, 2754, 1388, 1725, 1389, 
        1927, 1746, 1413, 1940, 1767, 1436, 2182, 1950, 1955, 2198, 2513, 
        2516, 2217, 2212, 1792, 1467, 2222, 1989, 2248, 2245, 1803, 1482, 
        2002, 1505}], 
       Line3DBox[{1362, 2146, 2796, 2150, 2470, 1367, 2546, 2158, 2417, 1730, 
        1395, 2553, 2710, 2709, 2570, 2422, 2173, 2487, 2698, 1751, 2835, 
        2699, 2700, 2488, 2498, 2427, 1420, 2558, 2484, 2164, 2420, 2162, 
        2552, 2475, 2476, 1718, 2153, 2653}], 
       Line3DBox[{1363, 2147, 2797, 2151, 2801, 2468, 2156, 2806, 2159, 2479, 
        1396, 2554, 2170, 2421, 2696, 2697, 1418, 2571, 2712, 2711, 2572, 
        2430, 2811, 2185, 2812, 2703, 2704, 2431, 2836, 2432, 2187, 2489, 
        1421, 1752, 2426, 2428, 2177, 2559, 2485, 2486, 1731, 2163, 1371, 
        1719, 2154, 2654}], 
       Line3DBox[{1375, 1723, 1380, 1736, 1403, 1757, 1425, 1774, 1444, 1964, 
        1459, 1786, 1461, 1798, 1474, 1796, 1475, 2259, 2440, 2439, 1809, 
        2850, 2815, 2816, 2814, 2016, 1510, 2667, 2272, 2505, 2274, 2669, 
        2273, 2633, 1544, 2632, 2589, 2590, 1832, 1545, 2636, 2637, 2634, 
        1850, 1578, 2081, 1867, 1605, 2103, 1879, 1629, 2387, 1896, 1661, 
        1912, 1687}], 
       Line3DBox[{1383, 3798, 3773, 1740, 1406, 1760, 1428, 2190, 1443, 1777, 
        1447, 1967, 1788, 1462, 1981, 1800, 1478, 2239, 1997, 1998, 2260, 
        2531, 1515, 2275, 1821, 1516, 2047, 1551, 1836, 1548, 1834, 1550, 
        1853, 1582, 2361, 1606, 1868, 1607, 2109, 2599, 2841, 2749, 2748, 
        2743, 2746, 1665, 2824, 2828, 1691}], 
       Line3DBox[{1384, 3799, 3774, 1741, 1407, 1761, 1429, 2191, 2195, 2196, 
        1969, 1972, 2209, 1983, 1986, 2240, 2614, 2615, 2580, 2617, 2579, 
        1812, 1493, 2018, 2276, 2506, 2278, 2277, 2537, 1554, 2295, 1838, 
        2048, 1552, 1837, 1553, 2326, 1581, 1854, 1583, 2362, 2363, 2594, 
        2692, 1631, 2600, 2842, 1881, 1632, 2844, 2744, 2818, 1898, 1666, 
        2825, 2829, 1692}], 
       Line3DBox[{1385, 3800, 3775, 1742, 1408, 1762, 1430, 2192, 1778, 1449, 
        1970, 1789, 1463, 1984, 2610, 1801, 1479, 2616, 1999, 2581, 2583, 
        2584, 1494, 2532, 2533, 2280, 2507, 2279, 2769, 2770, 2621, 1822, 
        2281, 2773, 2774, 2624, 1823, 2282, 2025, 1825, 2284, 2031, 1828, 
        1525}], Line3DBox[{1386, 3801, 3776, 1743, 1409, 1763, 1431, 2193, 
        1779, 1450, 1971, 1790, 1464, 1985, 2611, 2609, 2613, 2437, 2241, 
        2582, 2243, 2263, 1495, 2534, 1517, 2019, 2623, 2020, 2772, 1518, 
        2021, 2023, 1520, 2026, 2028, 1526}], 
       Line3DBox[{1523, 1826, 1528, 2057, 1559, 2053, 2051, 2302, 2301, 1841, 
        1557, 2071, 1587, 2336, 2509, 2339, 2338, 2647, 2089, 2597, 2091, 
        2376, 2115, 1637, 1884, 1638, 2129, 1901, 1670, 2409, 1918, 1698}], 
       Line3DBox[{1524, 1827, 2030, 2283, 1824, 1522, 2052, 1555, 2050, 2625, 
        2049, 2297, 2296, 1839, 2508, 2299, 2672, 2298, 2539, 2069, 2333, 
        2332, 1856, 1586, 2645, 2646, 2596, 2598, 1870, 1612, 2112, 1885, 
        1639, 2130, 1902, 1671, 2410, 1919, 1699}], 
       Line3DBox[{1534, 2038, 1532, 3825, 1572, 2307, 2630, 2308, 2313, 2311, 
        2565, 2446, 2316, 2675, 2320, 2451, 2452, 2353, 1876, 1625, 3827, 
        1894, 1655, 1679, 1681}], 
       Line3DBox[{1535, 2039, 1829, 2285, 2775, 2627, 2631, 2309, 2314, 2312, 
        2566, 2447, 2449, 2317, 2678, 1864, 1602, 2354, 1877, 1626, 3828, 
        1653, 2389, 1656, 1907, 1682}], 
       Line3DBox[{1536, 2040, 1830, 2286, 2776, 2043, 2628, 1541, 2673, 1573, 
        2315, 2291, 2448, 1576, 2684, 2318, 2679, 1865, 1603, 2355, 1623, 
        2104, 2457, 2383, 2390, 1657, 1908, 1683}], 
       Line3DBox[{1537, 2032, 2035, 1529, 2287, 2044, 2629, 1831, 2441, 2564, 
        2443, 2445, 2290, 2638, 1849, 1577, 2682, 2683, 2680, 2677, 2082, 
        2357, 2100, 2105, 2458, 2384, 2391, 1658, 1909, 1684}], 
       Line3DBox[{1538, 2033, 2036, 1530, 2041, 2587, 2042, 2626, 1540, 2442, 
        2288, 2444, 1543, 2671, 1575, 2639, 2642, 2641, 2321, 2079, 2681, 
        2083, 2358, 2101, 2106, 2459, 2385, 2392, 1659, 1910, 1685}], 
       Line3DBox[{1539, 2034, 1499, 1813, 2264, 2013, 2585, 2737, 1817, 2269, 
        2618, 2620, 2588, 2668, 2738, 2739, 2670, 1542, 2535, 2289, 2045, 
        2536, 2292, 2061, 2640, 2062, 2643, 2322, 2323, 2080, 1866, 1604, 
        2102, 1878, 1628, 2386, 1895, 1660, 1911, 1686}], 
       Line3DBox[{1562, 1845, 1568, 2075, 2351, 2347, 1861, 1594, 2096, 2382, 
        2378, 1873, 1616, 2121, 1892, 1651, 2140, 2145, 3793, 3817, 1703, 
        1921, 1705}], 
       Line3DBox[{1563, 1846, 1569, 2076, 1591, 2348, 1862, 1595, 2097, 1614, 
        2379, 1874, 1617, 2118, 2122, 1652, 2141, 1672, 1903, 1673, 1922, 
        1706}], Line3DBox[{1564, 1847, 1570, 2077, 1592, 2349, 1863, 1596, 
        2098, 1615, 2380, 1875, 1618, 2119, 1640, 1886, 1642, 2135, 1904, 
        1674, 1923, 1707}], 
       Line3DBox[{1565, 1848, 2060, 2303, 1842, 1560, 2072, 2342, 2340, 1858, 
        1590, 2345, 2092, 2373, 2094, 1619, 2120, 1641, 1887, 1643, 2136, 
        1905, 1675, 1924, 1708}], 
       Line3DBox[{1566, 2058, 2055, 2306, 2304, 1843, 1561, 2073, 1589, 2341, 
        1859, 2344, 2343, 2093, 2374, 2371, 1871, 1613, 2116, 1888, 1644, 
        2402, 2133, 2137, 1676, 1925, 1709}], 
       Line3DBox[{1598, 3804, 3782, 3819, 1621, 3807, 3785, 2124, 1645, 1889, 
        1648, 2142, 3810, 3790, 3814, 3795}], 
       Line3DBox[{1599, 3805, 3783, 3820, 1622, 3808, 3786, 2125, 1646, 1890, 
        1649, 2143, 3811, 3791, 3815, 3796}], 
       Line3DBox[{1693, 1914, 2830, 2826, 1667, 1899, 2819, 2843, 1663, 2821, 
        2490, 2394, 2601, 2393, 2595, 1609, 2741, 2740, 2453, 1608, 2364, 
        1584, 1855, 2327, 2328, 2065, 2066, 1585, 2067, 2593, 2068, 2330, 
        2685, 2329, 2686, 2538, 2334, 2540, 2541, 2368, 2088, 2542, 2370, 
        2111, 2689, 2113, 2400, 2128, 2131, 2466, 2407, 2411, 1700}], 
       Line3DBox[{2878, 4092, 2872, 2894, 3294, 3305, 3902, 3619, 3621, 4192, 
        3633, 3629, 3910, 3525, 3526, 3397, 3531, 2883, 3117, 3565, 3559, 
        3606, 3604, 2864, 3111, 3548, 3597, 3550, 3271, 3370, 3261, 3247, 
        3357, 3234, 3219, 3866, 4023, 3851, 4008, 3836}], 
       Line3DBox[{2879, 4093, 2873, 2895, 3295, 3306, 3903, 3622, 3319, 4193, 
        3322, 3630, 3911, 3527, 3330, 3398, 3331, 3530, 3547, 3529, 2884, 
        3118, 3557, 3615, 3560, 3612, 3607, 3382, 3594, 3598, 3551, 3272, 
        3371, 3262, 3248, 3358, 3235, 3220, 3867, 4024, 3852, 4009, 3837}], 
       Line3DBox[{2880, 4094, 2874, 2896, 3296, 3307, 3904, 3623, 3320, 4194, 
        3323, 3631, 3912, 3528, 3443, 3332, 3447, 3503, 2912, 3634, 2939, 
        3657, 3571, 3661, 3659, 3473, 3698, 3702, 3687, 3709, 3705, 4153, 
        4114, 4119, 4168, 4124, 4129, 4182, 4135, 4141, 4217, 4203, 4210, 
        3974, 4086, 3996}], 
       Line3DBox[{2881, 4095, 2875, 2897, 3297, 3308, 3905, 3624, 3321, 4195, 
        3324, 3442, 3438, 3535, 3333, 3448, 3504, 2913, 3635, 3636, 3566, 
        3573, 3130, 2940, 3688, 3691, 3676, 3675, 3706, 4154, 4115, 4120, 
        4169, 4125, 4130, 4183, 4136, 4142, 4218, 4204, 4211, 3975, 4087, 
        3997}], Line3DBox[{3091, 3200, 3083, 3193, 3070, 3185, 4173, 3047, 
        3172, 4159, 3015, 3157, 4105, 2987, 3148, 3681, 3350, 3467, 3459, 
        3653, 3341, 3645, 2936, 3716, 2909, 3497, 3329, 3521, 3426, 3433, 
        3313, 3302, 2902, 4046, 3895}], 
       Line3DBox[{3092, 3201, 3084, 3194, 3071, 3186, 4174, 3048, 3173, 4160, 
        3016, 3158, 4106, 2988, 3149, 3682, 3351, 3468, 3460, 3654, 3342, 
        3646, 2937, 3717, 2910, 3498, 3522, 3515, 3427, 3434, 3314, 3303, 
        2903, 4047, 3896}], 
       Line3DBox[{3093, 3202, 3085, 3195, 3072, 3187, 4175, 3049, 3174, 4161, 
        3017, 3159, 4107, 2989, 3150, 3683, 3352, 3469, 3461, 3648, 3652, 
        3647, 2938, 3718, 2911, 3499, 3523, 3516, 3428, 4052, 3315, 2904, 
        4048, 3897}], 
       Line3DBox[{3094, 3203, 3086, 3196, 3073, 3188, 4176, 3050, 3175, 4162, 
        3018, 3160, 4108, 2990, 3476, 3353, 4196, 3345, 3462, 3649, 3637, 
        3640, 4147, 3500, 3490, 3517, 3429, 4053, 3316, 2905, 4049, 3898}], 
       Line3DBox[{3095, 3204, 3087, 3197, 3074, 3189, 4177, 3051, 3176, 4163, 
        3019, 3161, 4109, 2991, 3477, 3354, 4197, 3346, 3463, 3650, 3638, 
        3641, 4148, 3501, 3491, 3518, 3430, 4054, 3317, 2906, 4050, 3899}], 
       Line3DBox[{3098, 3207, 3979, 4069, 3957, 3077, 3063, 3179, 3030, 3022, 
        3004, 2994, 2974, 2959, 3132, 2952, 3724, 3758, 3722, 3770, 2948, 
        3731, 3735, 3669, 3672, 3671, 2946, 3541, 3543, 3720, 3719, 3343, 
        3569, 3344, 3663, 3471, 3696, 3700, 3685, 3707, 3703, 4151, 4112, 
        4117, 4166, 4122, 4127, 4180, 4133, 4139, 4215, 4201, 4208, 3972, 
        4084, 3994}], 
       Line3DBox[{3099, 3208, 3980, 4070, 3958, 3078, 3064, 3180, 3031, 3023, 
        3005, 2995, 2975, 2960, 3133, 2953, 3725, 3759, 3765, 3763, 2949, 
        3732, 3736, 3670, 3673, 3664, 3711, 3451, 3124, 3507, 3458, 3540, 
        3457, 3655, 3656, 3570, 3660, 3658, 3472, 3697, 3701, 3686, 3708, 
        3704, 4152, 4113, 4118, 4167, 4123, 4128, 4181, 4134, 4140, 4216, 
        4202, 4209, 3973, 4085, 3995}], 
       Line3DBox[{3100, 3209, 3981, 4071, 3959, 3079, 3065, 3181, 3032, 3024, 
        3006, 2996, 2976, 2961, 3134, 2954, 3726, 3760, 3766, 3764, 2950, 
        3733, 2925, 3665, 3714, 3712, 3452, 3505, 3454, 3334, 3413, 3536, 
        3410, 3614, 3616, 3561, 3613, 3608, 3383, 3595, 3599, 3552, 3273, 
        3372, 3263, 3249, 3359, 3236, 3221, 3868, 4025, 3853, 4010, 3838}], 
       Line3DBox[{3101, 3210, 3982, 4072, 3960, 3080, 3066, 3182, 3033, 3025, 
        3007, 2997, 2977, 2962, 3135, 2955, 3727, 3761, 3767, 3750, 3743, 
        2916, 3125, 3666, 3423, 3713, 3453, 3506, 3455, 3335, 3414, 3537, 
        3411, 3617, 3291, 3562, 3286, 3609, 3384, 3596, 3600, 3553, 3274, 
        3373, 3264, 3250, 3360, 3237, 3222, 3869, 4026, 3854, 4011, 3839}], 
       Line3DBox[{3102, 3211, 3983, 4073, 3961, 4058, 3946, 3053, 3034, 3026, 
        3008, 2998, 2978, 2963, 3136, 2956, 3728, 3762, 3768, 3751, 3744, 
        2917, 3126, 3667, 3424, 3456, 2914, 3538, 2888, 3412, 3292, 3563, 
        3287, 3610, 3385, 3601, 3283, 3554, 3275, 3374, 3265, 3251, 3361, 
        3238, 3223, 3870, 4027, 3855, 4012, 3840}], 
       Line3DBox[{3103, 3212, 3984, 4074, 3962, 4059, 3947, 3054, 3035, 3027, 
        3009, 2999, 2979, 2964, 3137, 2957, 3729, 2926, 3752, 3745, 2918, 
        3416, 3486, 3415, 2915, 3539, 2889, 3119, 3402, 3288, 3388, 3611, 
        3386, 3602, 3284, 3555, 3276, 3375, 3266, 3252, 3362, 3239, 3224, 
        3871, 4028, 3856, 4013, 3841}], 
       Line3DBox[{3104, 3213, 3985, 4075, 3963, 4060, 3948, 3055, 3036, 3028, 
        3010, 3000, 2980, 2965, 3138, 2958, 3730, 2927, 3753, 3746, 2919, 
        3417, 3487, 3479, 3544, 3399, 3403, 3289, 3513, 2865, 3387, 3285, 
        3556, 3277, 3376, 3267, 3253, 3363, 3240, 3225, 3872, 4029, 3857, 
        4014, 3842}], 
       Line3DBox[{3105, 3214, 3986, 4076, 3964, 4061, 3949, 3056, 3037, 3163, 
        3937, 3930, 3151, 3001, 2981, 2966, 2928, 3913, 3127, 3754, 3747, 
        2920, 3418, 3488, 3480, 3545, 3400, 3404, 3290, 3514, 2866, 3112, 
        3580, 3278, 3380, 3377, 3268, 3254, 3364, 3241, 3226, 3873, 4030, 
        3858, 4015, 3843}], 
       Line3DBox[{3106, 3215, 3987, 4077, 3965, 4062, 3950, 3057, 3038, 3164, 
        3938, 3931, 3152, 3002, 2982, 2967, 2929, 3914, 3128, 3755, 3748, 
        2921, 3419, 3489, 3481, 3546, 3401, 3405, 3512, 3508, 2867, 3113, 
        3581, 3279, 3381, 3378, 3269, 3255, 3365, 3242, 3227, 3874, 4031, 
        3859, 4016, 3844}], 
       Line3DBox[{3107, 3216, 3988, 4078, 3966, 4063, 3951, 3058, 3039, 3165, 
        3939, 3932, 3925, 3920, 3139, 2968, 2930, 3915, 3129, 3756, 3749, 
        2922, 3420, 2890, 3482, 3391, 3406, 2885, 3509, 2868, 3114, 3582, 
        3280, 3591, 3883, 3379, 3270, 3256, 3366, 3243, 3228, 3875, 4032, 
        3860, 4017, 3845}], 
       Line3DBox[{3847, 4019, 3862, 4034, 3877, 3230, 3245, 3368, 3880, 3258, 
        4040, 3885, 3593, 3282, 3584, 3116, 2870, 3511, 2887, 3408, 3393, 
        3484, 2892, 3422, 2924, 3738, 3740, 3917, 2932, 2970, 3141, 3922, 
        3927, 3934, 3941, 3167, 3041, 3060, 3953, 4065, 3968, 4080, 3990, 
        4001, 4004}], 
       Line3DBox[{3848, 4020, 3863, 4035, 3878, 3231, 4037, 3881, 3259, 4041, 
        3886, 3587, 3589, 3585, 3578, 4145, 4185, 3389, 3409, 3394, 3485, 
        3120, 3888, 3890, 3741, 3918, 2933, 2971, 3142, 3923, 3928, 3935, 
        3942, 3168, 3042, 3061, 3954, 4066, 3969, 4081, 3991, 4002, 4005}], 
       Line3DBox[{3892, 4043, 2899, 3299, 3310, 3907, 3626, 3436, 3326, 3494, 
        3122, 3440, 3533, 3445, 3450, 3338, 3568, 3572, 3575, 2942, 3690, 
        3693, 3678, 3145, 2984, 4102, 3154, 3012, 4156, 3169, 3044, 4170, 
        3067, 4144, 4220, 4206, 4213, 3977, 4089, 3999}], 
       Line3DBox[{3893, 4044, 2900, 3300, 3311, 3908, 3627, 3437, 3327, 3495, 
        3123, 3441, 3534, 3446, 3336, 3643, 3339, 3465, 3576, 2943, 3694, 
        3348, 3679, 3146, 2985, 4103, 3155, 3013, 4157, 3170, 3045, 4171, 
        3183, 3068, 3191, 3081, 3089, 
        4000}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
    VertexNormals->CompressedData["
1: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
qckecIm99jU6xuV6j/WWPPwPgmeE1w==
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{380.310078585008, 275.6698500833151},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-5., 20.}, {-10., 10.}, {-500., 500.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.4709376818560106, 3.0620741820791544`, 1.360852454622632},
  ViewVertical->{-0.0611335397662024, -0.3974951272521825, 
   0.9155655706318503}]], "Output",
 CellChangeTimes->{{3.864994199689621*^9, 3.864994364285956*^9}, 
   3.864994396130711*^9, 3.864994504717518*^9, 3.864994542112433*^9},
 CellLabel->
  "Out[214]=",ExpressionUUID->"0b25abd4-2d07-4dcc-bae3-2958093715e4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"gr", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Texture", "[", "contourPotentialPlot1", "]"}], ",", 
       RowBox[{"EdgeForm", "[", "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rm", ",", "pm", ",", "level"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"rM", ",", "pm", ",", "level"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"rM", ",", "pM", ",", "level"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"rm", ",", "pM", ",", "level"}], "}"}]}], "}"}], ",", 
         RowBox[{"VertexTextureCoordinates", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
     RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", "Black"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.864993575045636*^9, 3.864993576502808*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"1977914a-64ba-4614-85ba-3770e73641c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"potential1", ",", "gr", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"BoxRatios", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0.6"}], "}"}]}], ",", 
   RowBox[{"FaceGrids", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Back", ",", "Left"}], "}"}]}], ",", 
   RowBox[{"Background", "->", "White"}], ",", 
   RowBox[{"ImageSize", "->", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.864993563701008*^9, 3.864993593873316*^9}, {
  3.864993636915388*^9, 3.864993655209297*^9}, {3.864993732992659*^9, 
  3.864993773749105*^9}, {3.8649941850416594`*^9, 3.8649941855102262`*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"8ab1d283-1c45-4b0a-9aa2-3a9dc92898c2"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1:eJx03XlcTN//B/BKmxbSrrQnVJREsr1viGylbAmVpUSWLCFLthBComxll50o
GZE7jYykjUlNCBMqKiZSU9Pyuz4+59zf90wf//R4PL0eZ+68utvcOfdmsWCl
T5CCnJxc7+5ycl2Ynxz9ne2r3paA3D//Pj/yfvx2bImoEiwnvrsdZy1PZXh0
M//zkzv2zawm+6p/c7rcvz+t//0pJ7fibfryt+ldZfz+8j//0UiTzvnH0euy
PjHOesKf1yP93Z/hl3eX8b/j68v433+mMt57wp8XsJTxv69rI+Mr/3lf/WT8
6J/4hP7/sZyOMv5PP0Oc/mM5nf/Ddbn/LK61xf+Ow/RMOuqZdNQz6ahn0lHP
nY+vL+N//5nKOOq589e1kXHUM+mo586X01HGUc+dL6fzf7gu95+Xiesl0zPp
qGfSUc+ko55JRz13Pr6+jKOeSUc9d/66NjKOeiYd9dz5cjrKOOq58+V0/g/X
5ab/fX8yPZOOeiYd9Uw66pl01HPn4+vLOOqZdNRz569rI+OoZ9JRz50vp6OM
o547X07n/3Bdrsc/y9VDpmfSUc+ko55JRz2TjnrufHx9GUc9k4567vx1bWQc
9Uw66rnz5XSUcdRz58vp/B+uy0375/0py/RMOuqZdNQz6ahn0lHPnY+vL+N/
/5nKOOq589e1kXHUM+mo586X01HGUc+dL6fzf7gu987/nEewPZOOeiYd9Uw6
6pl01HPn4+vLOOqZdNRz569rI+OoZ9JRz50vp6OMo547X07n/3B0XiccQfZM
+v+e17H+v+d1rP/veR3r/3teR46vL+N//5nK+P+e15GvayPj/3tex/r/nteR
y+ko4/97Xkcup/N/uC43829/8D/jMD2TjnomHfVMOuqZdNRz5+Pry/jff6Yy
jnru/HVtZBz1TDrqufPldJRx1HPny+n8H67Lzfi7P6HInklHPZOOeiYd9Uw6
6rnz8fVlHPVMOuq589e1kXHUM+mo586X01HGUc+dL6fzf7gud9Lf46NMz6Sj
nklHPZOOeiYd9dz5+PoyjnomHfXc+evayDjqmXTUc+fL6SjjqOfOl9P5P1yX
++B/9otsz6SjnklHPZOOeiYd9dz5+PoyjnomHfXc+evayDjqmXTUc+fL6Sjj
qOfOl9P5P1yX2+fv5xeZnklHPZOOeiYd9Uw66rnz8fVlHPVMOuq589e1kXHU
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
pR/Y48iebhPeS/2VqLOzo0bGDfyJ81ndXhdcvC7HvT232OWGuBbnn5YrnIvM
lOOubF6bG3O/FudX6v2+nxreRIfVdtcY94r9fWkIgscWOTTRoffiHqxZwP6+
dt8e817sLIGb7dUfYizN8fqgOLpx8V0TCWSs0S12NUcuhjV3HaqGKknAcHGu
KCzbGOdDrjj6NNU0QZrCsY4tz41x/qqZfMeqjRKgvds/1Cmy16XN8xpHbA+W
wPHNjsE/FNjr0ufvJh+Vuy6BjRHdJR5x7PWNn83NiS4JpIuhZHDd3s1LJaDu
aBSbvpy9XjH17FsXfR/SxbAkatB3dS+032fPB1w4T3Uv7CddDNHaTdetJ+hQ
3IXZp4Iuc9j9MPLNHi99b93F+5/VNbf8Gxq0KYni8LfhJSk4/9T/V/7srjpU
YvX4At+oqzj/Yn1f0/vBupTiHrHipYN5OB+xP5a3x0KXWmUYM3rHhac4381M
+N3PH503o+8pimj/Ac7j+gaSLoYzC6e2ml1QJOZFF9Gnq3mPR1wiXQzrNDwe
RyoqEfN7i+geg0f9UlchXQxKd0u51y+qEvP6imi9PgG9Iq+TLgb0veTomnM9
AqPr8ftFrvloQn1kVD1+v39/6nKvri4NU3/DHkeQn3ZIbwsuZY8j6PvNxnnP
fwyPqMJ55PNPKIevWFZF5PWp/Bk856HtH4m8PjVkpsusUn0Rzt8M6dNldia6
/ojmfRXRN58e0U3LJp35nDgpvP9Y+WZiHlcR7XFjziP9Bgnh7HV7rTWbT9aH
ZOA88skPcjwKCx7gPPoerubw5CKzDvY4jvxpr+XcfXXscZzbEDh8+vDeFLk8
gsXJzgkjSRdDyEeNwNKnbcT8qCK6OM5tfVUm6WJA39u6cuW+jQ9vweMj/6U4
4/CcZS14/ACua6vKJnJeUxHtN3uc+Mhm0sXQ8v37HqGgg5hHVETbHErm2haQ
zuwP//2+2PPSPBPfJHb/j/zqph6p04+z+/9037gcR4kdRY6vu4rZWJpJZ85z
no2uXbJZjphnwnxurbmo5ryRdDGg76m7qicOSbNiP1ciT0l7eHazOfu50ju9
R7fiFHI+TBHt81ZEJdwhXQxuoHA36oMcMR+jiHZcMrZdWE66GPLaayaGFQ6Q
yY8VDh3Vs4h05vjY1tVjmDE576KIfn6pdUphT9KZzwUW97R63nCQyZfMfXHk
loyj9UeeehV+RXXqbTaP5/EmxKTNy2bzMR5fP56aTs5PKKKX+/uoV/mQzmwv
G7gTE/uT8wGY9bn54owPMs4cL0r3eG0oU6SO+JoFDR3NHr88RmSs2PdWkRrU
o8K/wI09fkH7xBuHxyhRkRN2hsR5s8fTA4IPod3HKVHna1681fZmj6cB6nEP
5VfrcDdKRG819Nj9W9POjJiYMB1uwMaFNxZosfu3RVbiT+OP5oKhzap3nKTH
OK/er0N7YtgLuJz+c969kZk4/61QYmZdbUqpto/vKBzyDG+PB6NvTi6rMKUG
v+Wun36bj7dHu/2CaVUBrWDb5q5oGclet4lUnfdp+4xWiFzwKaw5gr1u83zX
i/3J0zrg0aVRt7QPsNdR4wrPJRVN7oA7VYV30vaz11E70iNvfFkgR5267bTh
9wF2fd485lrt7EA5Kr9K66k4hl2fp3WbJ3xYJEfZiq7YcsPY9TP3bcPhtAI5
inviy1rxSnb91M95Wxla2J+aucZ+1Li77HWVV8oLgxcX9ad2Xnx5QZjKXldx
NRNNWMCst+M3bdk8w5Jd3xafmp1y20Ce2tkijW23YNe3BeV0Vq2DA7VKzUTN
Kom9jpoxdEYE7ehAvSgUOqw9zV5HHRF6656KgSN10lze1jOcvY56YGk//wWM
93oQ5/IhnL2OOsxv/tp19kqUv/3NiD2/2euizz8NkJo4KFG9eX2urW9gr4sG
9555xkZBiZoTbpk8ejH7/cukdeYjfzLH8akO1JfAEPb7F6fNVwd9qVWiZo9J
/nm3nr2Oat7SFOcnVqKele/Omypmr6OuSOqrFMxTomY62syf0qaN8442/a72
5CtRYfkxK3PatXH+pGpj/pHpKlSvZpW+4hnsdVf3QYrf985WoezVFnaTeLPX
XXuaTtXLnalCNYxpt1lcxH7/Mv5wOCdtjgq1Vflr95nF7PcvPccVNu01U6M+
R/Rb/CmR/X7E1985/35vNWrigZvvi8+x34/0vFkeK1VQ4kbdzFsffu073l5C
30mXHuxQ5NaP7X888sx3vL24bO3z8mSkHPciNzerYFsdzu+N0Jy7a7scV0nZ
9FXE+jqc9y254dq2ooo+k3Sun6FAhPP1chvfRG+poq31jo0Of8aePxw4NHJF
lPl3cMraGlXxrRxvj6XFdYF7JtRBN0e5EVVx7/D26PLt9soXh3/BMNvfRVn7
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
kB5L93V88HH6MNJTILIrb8rVoaQzx8GK3Iy2IaTnge0jQR+fwaQLYFv8u6PJ
g0gXQsmKL/LSgaSXg73H9xVejqSLYIdF09sLAwhneha2dHhI7Ml8JQwoVk2f
bEfmqyHqZg+rc/3IPHPestso9ncfMl8HKn4PY67I3E/Bpymat6VGxjl0hHXu
igFupMfSd/e+DFgl4ylQ8104NU3GeWA9/aNbk4znwbwHVU7DRpMugATTH1Zb
ZFwIhTsbdbkyXg6qX9uUuowhXQRunkpN7qQzPW9M1aiOlslXQqqhbtkLmXw1
1G4xzu0mc79JDVh/snzoTTrTc+AJW8WMAvJ+Ez7da3Bg6dU80jm0sCj+2olc
0pnj4LIXW/bmkJ4CU1XlvSP4pPNA4+IQ6yXZpOdBDixr8uWRLoCdb8/lenBJ
F8Ko9aVJQx+TXg4t2pqr+j4iXQTpt0aPNcwgnOl51cQNBqocMl8J9pU3vzXd
I/PVUL39U2ZVKpmvgYsmPQ+X3iHzdWD2OeWI4SnyPh0+vW6sTkiwjHPo/Ivh
I9JkPJa2VhJqKSSSngIbg4Z98ZJxHrx8mvggScbzoK9Nx4EaGRdA5O75C1yT
SBdCceWTIXtkvBzsxtuov5ZxZr9xOfqD5WnC/+w3VGpSw0j/s98ImRL9WCZf
Dbtybs/VkLm/qQbe9dUe6Ec60/M3Q3W3IkPyvic+LayrijPRJ51D83nZn5fq
kB5Lpx47N4SjRXoKnF0WGa3UjXQeHHSb88ZHnfQ82Kw/1P6sKukCWFKjG1mn
RLoQZnLrC4d1Ib0cxsYXWETLkS4Cp6XX17xuI+7nYno2g+inllLyPq9K0NAN
MgiTkHnmOFjttiTzN5lnjoOZpg/VfpH5Oth6xKRkyD3yvjA+beFzP+eIjHPo
J1reD8UyHksHFX67OSWd9BRQORh19pqM8+DqZNMjKvdJz4NJ6pxdi2ScOa97
7r0hS8aFcCi6Zqkph/RyGDh+17xNMi6CYiWzqULSmZ7XZXNGD35A5ivBcKfP
4DjSmZ4futX2+SGTrwF/ud1Gk8n77Jiev4aPfj8ki7yfjk9Pf2oG3pmkc2ha
t+1M6APSY2nbRW/kdt8jPQXiU+/PP3uHdB7IdYnnZdwkPQ9CfVZbvb5KugBK
znlF/bhEuhDc6u2/dD1PejncoNTGWZ8mXQSGsVXJo04SzvS880O2yuwEMl8J
3wecD1kTR+arwS9y6/MDB8l8DfDz59pe2Ufm6/D9iV9tHs6tX4HmvfPx/Ynb
Pi7o2g3fH8zBbnBSLd02FHks9lvT7i4YvwR5Ch7fXdOv+6LFyHnY3/HlH20L
Qp6Hfc22qyFJC5ELsKsN89bLmI9ciP3cL0lWSQDycuxDb55d8WsechH2wmAP
Y625Wrhn5MHm4mf2fihfib2t7NjaCb4oX4396BGwCJ6J8jXYbadU5e+YjvJ1
YBpdMXGlHHn/Jp/e0Cu+QlmedOb8OWX8xtMyHkvbu7f0GKJAegrsLrtxNV/G
efBxeYBbUBfS82CYgnZZq4wL4EhCdthRRdKFUGu7XtVeiXTmcwrd7+wTGRfB
2WnvXOYoE8703Fx1sPAn6X+u+212W7xPhcxXww2thnYLVTJfA8qXkhMekL4N
zcc0pWa/eKn2shjd98rH82pyYzd2DCtEzsE+fKZVw8XnyGOx3zDOq+6WjTwF
j28iWlu+4TFyHvaDySavKjjI87DLLePzJ6ciF2BfNXDlw/SbyIXYKxoNUsyv
IC/HPv0R9+K+88hF2Pnbl5xoSPzXmZ6Ru4zXPuh/DOUrsV/ReLgj53ALvr6K
3OjVwvVOMS34+irymGMayxJ3t+Drq/dEvbUWR5L3C/Npr4eTu+/aRjqH/nZ0
TbcLO0iPpaNWnNTMiiI9BUw9sjQ+7CadBw8sqtXboknPg+nSburG+0kXwPfi
wWquB0gXQvStuV1nHSK9HKyid6qGHyZdBI/nX1M5coRwpmff4S+V78ST+Ur4
qStRKjxG5qvhwHdTpboTZL4G+ua4K6onkvk6fJ/148sSm89CdB8QH99nfUGs
Ore6FDkHe7Rrz8O1JchjsS/f0Y8vfo08BY/v88JV2lCMnIfdRXeiY7MAeR72
XvP8gtpeIRdgl0teelIeuxD75+8bC5VeIi/H/txlv6JaEXIR9lvbTrl2K/yN
vy9AHvf8+grtApSvxL5O+9EF/XyUr8Y+Z06e0CgP5WuwUxffaZq9QPk6QPeb
7x5Rf8zgtQD3jNxQ9bzux3oB7hn5NYHP4SvdinHPyEec6dJtlV0x7hl5wdK0
fa4exbhn5IFDglQUgopxz8h/yutH5W4vxj0jj8rnyx05XYx7Rq5/Yv2WOQ+L
cc/Iryzq22IlLMY9Ix/mWLautqEY94w8T7r3V1qP17hn5P7PhoVtGfAa94z8
R1xNrfuk17hn5Nv8E5d0C3mNe0bfs9z+0W5UdgzdL8+nkScYxZWYXETOwb7F
vXfcghTksdgXhnGmXH6EPAWPP/HUpK61Och52B3577MdXyPPw25Qv2pbuAi5
AHubsdKIjDrkQuyfxx1vam9GXo49d5Vd6hhl9vsU5HcSH6+I1ma/T0F+7Jm3
bb4p+32KZll9pGkG+RwDZnsfvnqpBU06h5Ym/ZxhnU16LL1abo1bn+ekp8DX
Bb/s/8yf/F/nQeDTNYb9BaTnQWmfhi6OQtIF4Llv7Q+nctKFwK9teDO4gvRy
GOkVzh9aRboI0u78vjO8lnCmH3vddUmj6sl8JVxc1xjt1kjmq8G4bN3asVIy
XwPPk6S3reSI5z8w62HCwB/bGr6Qz3ng06lvVjbckXEOXbRTvHiljMfSdfar
3trLeAqoldR7fvtMOg/6bF3NuyzjeTC276/BQTIugPkv11y1lHEhRG5s6PXx
E+nlcNIqPDZJxkWQnve7yxzS/5z3hq9bbyiTrwSxadO31+RzMJieNXLW+x+R
eT4Gc/xaJXk5VSZfh5+bIQrMtRfosts78tRpqeU2uuz2jnzXuMSDG3XY7R35
LNddUKDNbu/I+9mvEFtos9s7cqnprHPhPdjtHXl+D8rnuRa7vSM/o9ivi4kW
u70jD2vqkRbWnd3ekY/+1rIouxtyEXbd8k96hsiZnpF/Kczjh2qifCX2dN69
9bQGyldjj753uq8OcqZn5H5X9pQFq6N8HeyNEo4tu00+V4RPX0mYf6FrKukc
+tmVb/LD0kmPpSsz1gQufUB6Cijmtz4++Yh0Hlh92GXygiY9D0bXd9ss5ZEu
gMAux9/Y8Uln1mc9C9e5z0kvh6Q+147F5JEugkeugxofFRLO9Pxm0qPpda/I
fCVI5rmnmpSQ+WowCCvo4VlG5mtgyI5ZYZHvyHwdfFNMXrdf5jktfNpA8d2N
vjLOocd20f70lEd6LB2m4NFzoYynQKJ8pJecjPPguVzarqQs0vOgsePrw2Ey
zhy/Osx+lnJJF4Jn+4y+4TJeDpva9vtry7gIrrRmHb1NE870XCxtyp1M+p/P
F9L+8t8ek/lq6N+y0GUP6UzPfs0nllvL5Oug7/1Ng60ekc+x4dP79JzfRzwm
nUPXrqndXcQlPZb2fHXRoc8T0lMgxXGecMtT0nmgfUhve/Ez0vNgbV1+P7tc
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
ZTSBzUoLK2035AKwiYj1NuE0QXza5kdHsDPrs0mOT/y9JlBsKZ2hNxp5ORTx
OqZppjbBGhj0IwG7CC4tdpmxK6UJKqIORhuO0cE9b9RYObPtZhN45361OImc
6dnrTvKs8OtNwO3u/tB4LMpXg/XM9751V5rAYcbZ6UnImZ6bW/T8gpKb4PRJ
aZ0per400/PI4SWzzaKsqMKVfUy24OdL8+nVBinLgxkf/y53oTp2Dn35197t
NxmnPVZcOzELeSz9rnBhfAPjLvd61PfBngI9boy8OnyXFXXb4p5L+kzkPBgX
bZC5g/E+B30jx2LPg02L6oueM36mRZr9agZyAaRQLz5r7baiDBafUZ+PXQhf
el2SzGL8kGC0z4/pyMvBqDlS4wzjKlTl8S3YReD12te8kvGtN/Z+UEf+Z97F
HSfn/nusqCbD/jYnp6F8JTw4oOGxlvGVu4qW9UXO9Px9SeWch4xX1a9JTfdB
+RqwGsddqRBtRQX4G7SMRc70PGBD+6Ka0kbgfHoy0XQlev4Dn+aYweq5xY3g
Oaz8+r4w5Bx69LOtW/OLGuFzbKNG0yrksfSLFdyYUfmNsLGq+4qFa5CnwHR9
+ZO3nzeC1qh+hYVrkfPgfabbZXN+IyQfHe04Yh3yPAgJ2pF2mNcII2rmHL6y
HrkA6jWeZCnQjfDKLfynbgRyIWxM61K45mEjhBw/OG37RuTloDh37LvP9xuh
/fvltLpNyEVwsMuurzPSGuGoe5ae3xZ13LPB9aeN/JRG6Jf4Zh0/EuUr4ayP
suLQm43w+OevUqdtKF8Nti3jely92gjTJ2i6ntmO8jWQdm6PqVFyI3w7Y3NS
fSfK18GyL9EvNJItqKOVeWnzC9Fzy/l0+YiAr0GMzwvZFT22ADmH9jw6WIVm
3ObbyLl98pHH0nSNem/DyxbUj9BGB7U85CngOKZi9CrGOXW3utTlIufBuZOc
wFzGt69cXFr4HHkeaP88GGl1xYKaWG92/W4OcgHsnBCUuJlxnTXCyPhn+O9V
QsPZ4RmvGX/XEOuzgY+8HIIkPYQDrlpQl9ZNsJnzFLkISryqf+9hfIVEvmVk
dlfc8/jLj3VEjA/dmJFv/gTlK4HTfnTgsGsWlELr6nNdeCjP9Dwz1OsI4y+2
2IVXclG+BhJvui2vZfxoxyeP5zTK14HCqMOxJwJMKG3t7pPuvUPPe+fTw3er
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
5wEM27Dq0bw2yBxSMDOlL/I8uDjyTebA+W0wVFEveH4/5ALo6jZC7fKiNrj7
ck64ti1yIawYe3pmr5A2sD9zPuoJ9nIQjJe7cDi0DS4v+3pkrR1yEQydtOCH
8so2sBzmeKG3vRbuOckze/jm1W2QqLL+bglypmcFH5vo+vA20H+dmbWnP8pX
Q/CM6OLgiDY4fF7x5dABKF8Dub7fzN9tbgONsEkfvyJnevZZq1r71tiRire4
fuK8KduzVnmWCs34PLWE3uNM2Z4L3DdZnWe8969td76asD0fuOUMuxivexs6
8oAJ2/Nkg+9+IYzfy5753NGE7Vlt2+V1kxjfctNtRnEvtuec6sC4AYyPTbAX
re/F9rzH2+hWD8Y1thosN+7F9jwuQ/C8wciRKl6s0PzYmO1Z0erAl1LGT02t
i1pgzPbM2z9O/iHjC1yFWsrGbM/bGzp6nWbc1vJJ4lUjtmdq3oOh2xn/qXar
7xQjtuf2p6unL2L8wa/jaeKebM+PBtiHjWd827ud1NGebM9vxD+HGAS3QoA3
Z6ziLfQcWj5t6isyiwtpBYGTMbUTO4deQBeqaoa2wnjdyOEKt5HH0sk2j+v3
LG+Fh78/DtmOPQW+HbjxRiGsFRxKxzjJpSDnwYDfJ59sWd0KFzjJ/bdiz2M+
7O+9IVnbCgYnu/Zrxy6A9Cfr49esb4X9m5ZZb7mDXAgttsGR3yNaoWNuoVkr
9nIYFTd98ZLNrbBmlJPxprvIRbCjefTUz5GtUGUWr9+CnOmZHzjQNWB7K8yR
l/SISEX5SlDLMbN8s7MVCiv8NCXImZ69HLqpz9jdCmOyM1XXp6E8s39OaP1V
GN0K9y+ZKzYi//O5+1pSiNcXKZxcpq1nOgn9XSfmvO7mzpmjqqQw/+yaHtux
c2jHlCVj+3+VQt/iYs3P2GNp7VQvp141UvihMkRtPP77UCnQcG+wuXqdFNKH
H1O+hp0HJRzjbi3fpbBlpURBcwryPOA8lG+tFkth7IXZHSuxC+Dk46qvpT+l
oF6aIX2FXQibs/JL+Q1SeKXWSzLYE3k5zMtOfXqvUQrHR21pOI5dBKOenUi9
KJGC/+r3YinyP88nyd167kiLFHonQ52/F8oz+438oEM7WqVQW3b2axZypudP
hZO2rGqXwl1NhUpr/PezaiD71cDQQLlW2OC2sGIPcqbnm+vie+7bZk8dneL3
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
4tUeHG6C0ssOQaz99XjeSurloKOmh5pg5dMTVxxC6/G81YZ3Oxuf+jdB3qfs
NM0T9Xje6tG3l1vm7W0C81bxu/KoejxvFXtnxdTOkyNyx0el6J/aSu9PErgq
b2EY5VaaBcYaW+j9SRw6LdaoUr73dsWceCd6fxLTeLZr7IkRudFT2peYOtL7
kyjaTjo4ifIXacp2ORvp/UlEnTcj0yNG5P6eP9HJegO9P0l+/KhbBOWKheBW
to7en+S2bVQaL3xE7qzVG31dHOj9SUK75Is2Ur5Z4BPcvIben8TxbujXX2Ej
co/vOHUi1J7en8R8dbvYh/Lk2tsXhtnR+5OM6PaW7js+Ivfjvuy4q7b0/iRN
d3+rn6K8u/dj0oRV9P4kvNVbJo2kfHxEXVqqDb0/SVL3p3m3j1G9qciSYE3v
T9K0cdO6m62yucuUu+4fD27APQ9eG21j8Vc2N29HY458YAPuecwqvuWHZtnc
+U9/fzi1rwH3bLZc1cKzSTaXo1D+W3FvA+55peUq40GNsrmzNn/sivJswD07
zzttECuWzX38+JXSCLcG3HOgWZG2Wb1s7pRB5PjoHQ245ygT2eEltbK5ieuf
mmltacA9J062HLzrj2yuXvKDFbEbG3DPz/VD+wZqZHPj+m5vGevQgHv+OPrZ
36vVsrma9ld976xuwD3/GdX5Z/pv2dxLd8+FT7BpwD1LqZlVvv4pm6vaGXYt
aVkD7llD0a90Z5Vs7hmboIdTFzXgno3kH/N6K2Vz5W/65j1a0IB7Vng2/sia
sTXk+qU+bz+oVeGePS8YLt9lWEMqXLt5aaJSFe6Z5zFVOXhaDZldX+IUMrgK
92xsafqZNauG9CL69fjSVbhnlqZZbMK8GlL30rTaSb1C3HNL45yd2YtqyJKa
zU9C24W4Z4eihVPeraghj8yLDPzUJMQ9Z9xY3PzTroacHvUMptQJcc+aAVac
zg01ZFVVrfyR30Lc86FVqw4rbashL5lrl3z+IcQ9lxusWabnVkMuO73i8tSv
Qtzzwt71SrO9a8iOisDNRz8Jcc+3+E6fbPxryKTpSfplJULc86AH269vD6oh
HcPLao2Khbhnt2OuzvuP1ZCKX+RTj70U4p5PeEyTd72oSpQvfyZHKhXinut1
h2omXFIlrnhJvcudVoh7tn9fPfn3ZVViTdTSq9xVhbjnjOMv5024okoopZ3e
ke9diHvWmX1rletVVeJV6bsphWcLcc9HaoO3JVxTJY53q7cWPSzEPVfHbfL9
HaNKLBzjmFP8thD3bGNvfnxCrCrRaXkz4o24EPfMlh1x2TVOlUh1/bX6rVIR
7lmD05iYcEOV8D41WevdtCLcc7AXj/P7piox6eGeqverinDPwjH3X0+4rUpU
vU978NG7CPe87GN4uesdVSK2tdP/09ki3HNKuHNDQrwqsUFz4cLSh0W4Z7U5
IFV9V5VQm398sOBtEe7Z2VTz5tmzM4jiglHyF9joPK9CMimksvET5Z98HscU
P0LOIRteJxG652YQP3SWm0g/RM4iZ2n6nt9JeW3h95cWD5D/2391TlUy5e2+
ARt97iPnQm6q9MwWyqVHK4vv3UPOA3mp18fnRM0gFF8lHP2RgJwPK1dd+HSE
cs19CzRG3UUugAsxjhNeUW4w5nOy7R3k1PNgjV6ACmsGYVK8GyJuIRfCOLO6
wvWUz/WX/ZRz439O9ex2LG3UDcqXjY11b4tF+WpIeRfk/pvyNa9n9hldR3kR
/NVdkmV0fgaxZf+b8y7XUL4O5noqDvWn3H3cTsPYKygvBnLUH9MP8tOJ+DmZ
BSvwufaF5LvsZboZlC9c9c0/9hFyDvljy93B1yn/sn1Av/EhchbZKCXz9zDl
/v76fEvsbBiI3/bdhXKVk8uPXUpBzgWV5TnFKyhPvu41veYBch6MrdV+akz5
0sdRlXOw88HkbOCtEZRXctOiIpORU9/rTEvPdMpNJ4JKyxb+uI+8Auz4Mw9U
UK5R2yOejl1Ifc8478yl/Enf2LiwpKG4Z1+txlX3KF85fMnKsnsoXw3Hnq+c
E0l5jYF7z2TkVM8XtiUb+FJ+zCIyOTgR5evgjoyC6nrKx6xkb3qXgPJikFXo
Mvkl2w+vXaRZcgP0/htDV3Rd/jK4H3pPzxq5p5/ef0P1dFdPydB+MH6yK6a0
j95/Y+Sbrh35Sv2wvSxmLGBng7Zid1GWaj9c6Ht7914vvf/GuFXd0x6P6Id8
fekpqth5YHiu++JdjX5oXzHrcWAPvf/G1HfdXde0+mGSz65Zwm56/w1T1Z5t
Ubr94Bgdk7UCewWY2/cUhI3th8jnbxemdtH7b8y/0DP1kF4/vKiSytdGTvVs
ye85v3dCPzQpzFpxvJPef2OZem+Hy6R+0DPZVVLXQe+/sXJd7xbHqf2wbl3M
WgfkVM9rontfrjbuh5NBbwXP2+n9N+K9be+7PDUmrLICrbZ5ofPQC0nDMo6N
IeXazqcO93gi55D3Cf2GmnRjon5oTMYV7CzSKPks6z7lL9KSxTOxs4E9onOG
F+Wszc8M3nsg58LMEOfPRpQ7y/GcdmPnQUY170BDmjEx61H5BQXsfJhrN1ub
Tbn8BnHxXXfkAniRdfu5L+WCgT4pS+wVYKmvuG0m5clJyhYVu5ALIT8yQLot
1ZgIth+79yByqmer9sr4DMpXd5skjsT5auBts1kWSLlePFHxxA3lRbC6+Klo
DuWtNvbqtsipnj/OGHem54kxUdi6w6bWFeXFcGdT8Y27Q4yJTAdrM+979Dxs
1pChLS0KxsSFT1XBp5Loedj3WdZLLSn3dgjKT7hPz8PWeJy5GjWY+rw+jVDk
JtPzsP1avLoKeerv6ZCy9vsDeh5W47Ui9R3ImOjjL7nenULPwxofWnXhkBzV
29qKKo1H9Dzs0innfr+SNSZS+funzHxMz8Nu/lpiMYryyLXKfqvZ9Dys/2mV
SNdBxsQufmKW1xN6HjZyrt2PNBljYtFakD75/83DxteyZshQrssvs7r7/83D
Zsd8CLeTNiba1/iwctPpediP1mpfbkgZEx8+KgjKn9LzsLXda4zEA9OIlDW3
x3Zl0POwWl8MEn4q9EHIFVO/5SJ0TlkheXecQafWsD641LjTuLQGOYc0dde3
sVPqgwfLr9S6YGeRzx7r3YhQ6QPuzdeJf6uRs2FZx/jm58P74EtHn/Mx7Fz4
uHD8kr8j+qBp9fSxw7HzYGvEuCuTNfpAIcnl283fyPnw5+3Y2m2afTBW6uoV
Y+wC8B85dkG0dh+Yb3yzNucX8gqQ2jKGxdPtA1t2v8pK7FTPd0f/lBnbB24K
M3hff47CPY+q1zWfM57qYbvrSQ/kVM93Zuqe2qtP9cC5uqSzCuVFYBykU54w
oQ9SVHlSJ5BTPWdztU3KJ/ZBvvvA85E4L4bsaWflHQ5PIzYFBw0dN4PuedRB
+0F6lOtNWi33fjrds3/+SKmm0GlELV9P6sh0uucPKl97cyhPO9zebTKd7tnY
6UbXGcqDp75u+2FK93wm0bl9E+VLyuKaokzpnkXNhn8nUq543LcOTOmely2o
a2wLmUZ8Nl5a3WhC93z35OP6l5Tf+KopvGlC9yz9ad+f85S7RdR/W21C97x1
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
Mp1DWvj0bIsa1MZwFunUVC2apMZ0NoT6fPTljmM6F2435XQ7mTCdB/k+94+3
LWA61XPTJcWolUwXwFDfI5cnOTG9AqY1e43hejBdCHa+G+45BTKc6tmveZFp
WwQzXw2XfI2zzl1m5kWQ2ay1aNJdZr4OvvrKvclLZebFUHn2hP+fuUMIZs+3
AyfplVgynUM67yx+l2rFdBapb+sZcmU109nwy2LY1OD1TOdCgn6KYPsWpvPA
TXlVxFIXpvNhYpd45hQvpgtA9POcUNmP6RVwv8Qk6m8g04XgmfV+vuAww6me
p971rX0ewcxXQ/05tau3zzLzInh4MG1pxCVmvg72uDj89bzOzIvBO9rFbMuq
QcSt/3t+wT1H3N63JXQN0znkzZRj4Tc3MJ1FcjLPP8zdzHQ2fOTe+izcwXQu
1L193Cezi+k8kP3yYoLBbqbzYcyvt6uW+jJdABaN5fvdApheAfbddXEngphO
9SzXU5B0hOH/9t9QHdpQHM7MV8MNHS2NutPMPHU9G05aqMhi5uvg/fTZbtMu
M/NiKFpQVWOwQoEIymrSi3n0B/eM3Owledvi5R/cM/IG3rlxZWV/cM/Ik0q3
3Nxf/wf3jNy50miMunQt7hm5Tm1PbOrIWtwz8k9/X+vYT6nFPSM/13ctpnFh
Le4ZudVgD61za2txz8ilh1tcNXKvxT0jz9YePOpNcC3uGbm/Qellj/O1uGfk
xsYJ6gqJtbhn5DWz/S8mZtfinpHfslystvRdLe45UKzg8M18BjHRueD18Dz6
vWPkD5R6Iybn0u8dIzfJmrHYkqTfO0ae5uIxsPEF/d4x8tmqt5755NDvHSN/
9qz0wMnn9HvHyIldSrNuPaPfO0aer7akKTObfu8YudWLQynvsuj3jpG/9Xji
XsOh3ztGvmakyGAgk37vGHlp7hihBnKqZ+SOu9fFGWfQ7x0j/zEqctOyp//f
e8f/c5eX3JFb0+n3jqN8BhdmeJsSqbeK7XwDlXHPyHdOElzUPICcg12dXV1K
7kfOwp4/u01rlz9yNv75/uSgLcr7kHOxT1iuduupL3Ie9tKScT83+yDnY49Y
b2Iouxe5ALv59wUeD7yRV2CvcV2ZsmY3ciH2q2LHxi5PZdwzcqv9HjNue6B8
NfbO3gP7rdxRXoT9flgEp9EN5euwOype7ol2RXkxjFCW/3M825Rg/bdfsSLu
efo4o32rJJxD2s5Y06ch4Sxy95LAE5VZTGfD6fU3hidLOBfuuedf3yfh1PeN
Q7UTFkg4H6oiVdnyEk497900n/uew/QKGP1kc/41CRfC3JfHbHcy/d/5X5+T
BEYS+WoIqClxbs9k5kVwsau1nmQ61TN7mM6BUxJ5MZi5KPVbqZkQFm9c38xP
V8M9I7csjlHemoacg9266J394VTkLOwOBbKXbz1BzsY/f+vLOYI8NnIu9l15
e3R+PkbOw+5Dxm+Vxc7HfihHcHvCI+QC7GHPlH4ve4i8AvvZrEWT3FOQC7FH
Zx7wOvVADfeM/NbTlEfJyShfjT05Tdj85j7Ki7CnPdEwEyehfB32549tApWR
/ztv1GvFzIKTxsSM//Z3pee7ld4urHSXcA453XjWWUUJZ5HroibPZZ9gOhsO
No2pWSvhXIizV7/UEcF0HuSlDrG8LuF8+D1iQLxQwgUwZH9rTFU406nvz6V/
lkdIuBDWzP7ROpnp/851vfrp9tswZr4aYrqKbX2ZTvVMOpI96hL5Ovj1LD2J
c5yZF0MV36/Ey68XEs+1FM/NGY17vnE2d6ipfy+kxwZvqHyOnEM6Llde3rq/
F7jJ8r/DsbNIDenNxzkHeuEdh+U3FTv1vS77Phl8sBfKC7WlPjxDzoVz/h09
RFAv1H66ezYAOw+sjZdayIX0QmeVsY4udj7Iiy74F4f2glwzJykvG7kAuLcr
2WeP9ILawCLzXdgrINTJWGx/rBfGKb19qYidGjdGBk/WCOsFY50N9qlZo3HP
HSXFrl/De2HeZOH3Dcj/7SdzctSdGyd6wWq21+4+DsqLwGeR63fnU72wfmlb
1x3k/9Yx9qZqTzzTCy5rD5+wwnkxOCl2F/07f2LZ+4g6kzuV+PdIyPl5I24u
voKcg3172q01GyKRs7CL706T9zqKnI1//qHo7KzQAORc7INPLve+4IWch/3S
wU/jErcj52Mf77XjU9Y65ALsjzY3nHhrjbwC+zzboHlCQC7E/goUGltnVeLf
IyFfN/3yHYUpKF+NvUpPb73uWJQXYd+r/niIqTrK12HvlZufs3gIyoshxSSt
d4yFJsH8/Tzvu3H3sblM55D1Z5M7qucznUUqLjBsswams8Go/nbLI0umc2Hl
9dFNakuYzoPd1tfEAcuYzofILvW6r1ZMF0BKEku00IbpFfBmg2L1nVVMF0Kt
/Mmf8nYMp3oemjFI6LmGma+GKa6Hv5c4MPMiWKHe823GBma+DtxfBnyJ3sTM
i0G2/8orrUOtEOn00/nZXzT/UkgaB3Vluu1vhcebn8fGtiHnkBs7He+l+bTC
xy2XS0M6kLPIY/ufR0vtboXWrXtUt3UhZ0NKy+iIVbtaQWP7cmuiBzkXSvce
3h/j3ApzdowLG9+HnAdS4kqXmi2tsNm5K0dmADkfpngucpi1qRVCd37s+ClF
z8M61MQvPurQCrdcHkwvkKHnYUNc5GaWrG6Fl65hXomy9DxsotBNT8emFard
tiSckKfnYd9vfTXcfVkrKLib/3BXoOdhu79Nln5q2QpTPFS0rIfS87D6m840
SS9ohVWeojVTFel52JWl9T9sLVrBxysvUlGZnod9VrL+7ex0BWLvN4etqjPQ
ubCF5FnpWRuWZioQ5dap1p/nIeeQ22YNF67JViBWZKvMjlmKnEVO39XguT1H
gciY7K2/bTVyNgyKedPqnatA6F97rWKwCTkXPvOSQoNeKhAshUm9ImfkPLg3
EK5wqlCB6DsQLnq4GzkfDs7YeSG6WIHwrKn65BeAXAA2roTuXZ4CUbaeyJuN
z7WlvtddHZ345J0CsaQw7mHvKeRCaHzdbUJ+VCDYZj3X8i6K8PNgXl9ZFu+z
AjE6YWNERBzKV8NF06eLvwoUiNPqGX4291BeBK47L7yt+aZAtB8fsU31CcrX
wezovRvavlPPv399bD5no7wYmom2wx6JbZA6qP1HwAz5XNTzougCN/JOG3Qu
nz+6YSZyDnmx7vKqkTfbYGHkMUdXM+Qs8hfhNsvrehuEvX91pdwcOfW9Ltpc
J+9KG7xWV/m81gI5FyLq5GVGXWoD1U3r1N7MQc4DAVEm2s1qg/Vx11cvmoec
D5Oj773jRrZBrFAYmTUfuQAO1R3I0DzVBlUTJr02XYi8AniEVdye8DaY5Lln
cBIgF8KYaM2w/KNtsOdR+pKxlv9zque9dSJP7dA2SG/pPhq9COWrIZfIsvc5
1Abd5pak0hKUF4Fa9CmLwoA2gKATvWFLUb4OXOo2jdXdR/VAvp3TuwzlxeBs
1trhZ9gCCimpEZe3t+Hx2aUkUqdzTAsMzTWKv+bYhsdnt10TIGRUCyh+SiTj
HNrw+Owu9cJZRrUFlEXjym/btuHx2fPa+ogTCi2g2hvTmWDVhsfn3TMa7ytK
t4Ca6siRyYva8Pi8582Jt+e7mkHdIGr6o/lteHz2cRnXrNHSDBoWQ2xTzdvw
+OzXx1GPrW0GzZXHPTNM2/D47B9tbzH+ZzNobe+LyJ7ShsfnAJNap8RvzaDt
fyD+hUEbHp8Pvjp2eOqnZtA92Uxyx7Th8Tl4h048m9cMY2K9ygs12/D4HNqd
VmhW0Axj2b87X6u14fH5yMWVtdk5zTAuf9vId4pteHx2+uB8bELRd6hYN+PL
3Y1ZuGetFyP0T6t/B8GT68raozNxz2XJ+S8bdlQAX0luSZQwHfd8+cp+l7WP
y6HEY89B2cRU3PPaMEM5Tu83KC4oe3TQk417VvMtS9C1/gYnFh97VbElBff8
fsvJZUevfIXgHoeZr6rv4Z6jrOfU/P71BXzTJt5I3RuPe141u/aE9YwvwCtt
HT63OQ73rGhwfdLjwwLIWBZTozzoMu75terK4hFvy8DS+/Choskncc+n+no9
ArXLYOOsyVfyzTxwzxbyv9ueUuOIXdbaRcviBLifs+WNS80vieDy5f1tgSkC
3E9VavfljNMi+Op7JenBMwHuZ/YpuWrzoyIYa5vl9P21APcTuU3VPPOACFym
fFMe/lWA+xGa6UTM3iOC+/J9eYv/CHA/5oqGpZkuImioGrM/oFOA+zldZWpo
4SSCWSQx6f7gL7if75x5ARx7ERy67vztm8YX3M/MqGWFFlbUc8CBsHPKhl9w
Pydd7TWyFopA1iHR0tLsC+6nfN5mtzlmIrA2fdW6b8kX3I+p2q6MrKkiYCnW
3ktc+wVfh+EiX/m5eiL4LBrm9MX5C74Ov74IXp+tKQLtgmnKin5f8HU47oWU
6aYJAoiICjrIDWXh+9e1DQYjrRUEsPF7ffn1kefw/UuteXn33LoyuBtXVZg6
7Qy+f5057fVjakkZNG0WsIuXnsT3L1mDqHzdJ2UwT7ckpnJLOL5/heSk3le6
VAYR316Gdew/hu9f7etLz/UHlEG82b4KXd3D+P61t6lrX+OmMpibvvWJ9cqD
+P4lOjV6U+X8Mvgwwzo8MHgfvn/t0Ldc+GFsGbx39kpduckL37++PnfR58qU
QS8Zlm63bxu+f61df1Ih7XcppPq7Kqi6E/j+NVDwvmTYhA8QVOLt+nB5Ku5n
Xtr+7m8JHyB7wfnEgw/YuJ8Dt7QNUww/Qssmj3dnxjzC/aSfJe2D730EHwu2
vUF1Mu6n6ZBLyMpJfBBrdPCfP7yH+5nmPuS+7n0+eLYtWL9u/13cj8e6R5/q
J38CET9MIJ5/G/eTuGitVE7yJ3jjcuWp4pBY3E+VSefUs1M/Q+H4CdkLrl7G
/YwdHbdhS8pnOJbjGlJhew734zR00fFp00ohcPbRCPA+ivu52lH9qO9hKWQX
+FGP0864n08b/ZdLV+aSakFOoakPP+F+7qQvPJzan0uSzxdc97r9Cffjozok
c+foPHJ3/1iOwWX6HPCFu/kN6vPzSG1C5nPFSfoccMVXcYaFjnnkq6O/mqOD
6XPAv+q7bz1wMI/c/7JQ2c6HPgc86fCM6ElX80g9uftTh7jQ54AHfOt9+yUj
j3y/7IwVdwN9DviS2UVyZz7nkaEnvV2DbOhzwNUunl8wvzWPnPp69bFZQJ8D
XtngtF+sxiUFw2bcFM+gzwF/bG348MZ0LhmxSv15ouEn3E9oYtOv1XZcclZU
u2CbNsqLYKXMM13pvVxS+F7QponPQ68D7a3hDqlnueQ5tWdqH6VRXgxagZbu
Vhdkcr3npLCLasW4Z+Qymh6Hb1WLcc/Ir7RPsD1YJcY9Izf6XKW75rsY94w8
L+1m3ZSvYtwz8vUXNmcPKhXjnpHX+WidKv8gxj0jP7K6dMPTt2LcM/KRxhcN
zxWLcc/IkxXt2twKxLhn5FCnmA95Ytwz8k/FxRc0c8S4Z+SeSRE7mjli3DPy
gYjFpq/Txbhn5JdcpQbusMW4ZxXF9KNF3VLEzkPGgdLL0DnjheRA90qr3f1S
RPz4dBi1GDmHbPrzW3m4jDTx89WcwdMI5CyyUhD6+amcNKHvQ5YsWoCcDR+K
RsU6DpEmnEctjd44FzkX8jLYzgOK0sSdF6+37JmNnAepCSsm31WVJoSudhPC
ZiHnw51LVY1W6tLEeKXS+mvTkQvg4vGgDPEoaWJ7ulP6Y2PkFXDcTz3kgo40
cctJGFQwlT5v3X/Hw8Wzx0oTP2R2Lf42iT5v3cVu2dByPWlibHL90OYJ9Hnr
MhNUR7UrdsJ475Gm3zK0clE/xUevHBs9jOkckvV9TMOSIUxnkRvmJW7aPZjp
bBhzdVrBRTmmc+F3a7rps0FM50GK/fzYKmmm88Hv0cvBQ6WYLgCLYTb7pvd3
MLwCBnZ9/L6xl+lCKMzfZH2km+FUP5HjhU/vdTLz1bAm1H38u3ZmnroOvzVG
trcy83VQOftA5+i/zLwY9DX2B0BkO8T83++3cc8zspPMVU4xnUNabi1v/x7O
dBZpJ6Oa+egY09mwLXHxgdDDTOfCHusDs22Dmc6DkIbkjtEHmc6HyAvfM8X7
mS6AWHO1wBw/plfAg69LLc7uZboQskMPdm7ezfB/+0jrPeQYeTDz1fC1sDKw
15WZF8EfT/U5PGdmvg46la26rm9j5sVQmd6Zm+3RTg65sPjw+vP0epv8Pyof
h3q3k7E+Y64MiaTX2ySNmfjT0aedNFnd9eh5BL3eJnLtwtbkfe0kd9qnwr1H
6fU2PifXyfUEtJPrFB9/1wum19s45OzWsDnUTopqT7V/DqDX21i0HJ94PaSd
DCp2UT7lS6+30Z143aLuSDupnASG83fT622kNqeumBfWTt6O0F7Y6Eavt/nF
KnY8c6KdnOXatu7ODnq9zauCSq9vp9vJosXvvddtptfbpHR3BE8910466j0I
V9hAr7dhmaicCzrfToqlIuKe2dPrbfxdDG++udROHvmx/emelfR6m43XFrB1
rraT6i/mvR2/nF5vs8+q5ubfPimi6CH7YIocPa4uum90zV5amthtLFLaqkCP
q6pD/S48lpUmhj8ee0dlGD2u/vDMPKNE5TJMNpjnKdHj6sM3vWFeVM6Jfe61
nyo9rgYbLQotVqb+PL1wq8EIely1PnviwEQ1aSLhSV/L55H0uKrVwPMJp/5s
M8PsxAlNelytsVXz/En9uSl1t84cHXpczXi8YaelrjQRPfPu49rR9Lgaphq3
+SY1rs5L/7Y4dhw9rq71rVrXR42rwlkjBKv06XF1x5WQu7YnZQjv7EdzY9S7
8HU4hHeDff2MDPFIeZRtlVYXvg6fSOU+F52TIRqcD++YMrYLX4ebzISvzC7I
ECaZNf5+Bl34OpT2lPl87LIM4TPM7mT25C58Hd6/oS98d1WGYG/jXJcx6cLX
4Rr+ErFurAzRlDbusfWsLnwddg926/K4KUNMVzjFvTCnC1+Hd+afkMu8I0P4
bW7+/HVhF74ObXyThssmyhCp7E1/9JZ04euwNaF4tP19GaJFltvruaILX4ex
X2sn30iRIWZumqKaZtuFr8MlKormdY9lCP+HF/R71nbh61C8eNoiizQZIl26
x3zxpi58HUYH2tqGZ8gQret2Wp/Z2oWvQ4FGyrO7E6UJrm/JitF66HMRQeHP
XyyfadLE7FmfLA7hz7EO0tmj3ebPlCZS2r9MLEPXA/Vz9KbXfG051A/M+dzg
7a33BKFM55ClUdL7XxxjOos0JZUX3Y1gOhtON+ionD7NdC78Gj25fO85pvNg
4Srz++suMJ0PV4MXB8yLZroAWh7YLR4fw/QKWPlti+rgG0wXQuJQr4r62wyn
Pi+puYHJHxOY+Wpw9Ag/wLnPzIsg7eqFJTceMvN11Pf8m8PDnjDzYmDN+WTs
EjcAWb2Du8X1g3HPH4tWb715ZwAspvisKq1FziHV1785+/XeAGRuENx6IULO
Itf/WpYz8uEAmIcTrYnVyNlw1Y9bb5c6AE9Tk5ZH/UJOPV9ILdSNzByAWZWq
1w9UIeeBblSWTdHzAUhTOtiwrRI5H7aONguS4Q7AjHlCS6vvyAVw6wE7eUHR
ADxxX3HZtBx5BVTNMfoayBsA0+gnIs2vyIVg8OrekPQPA8B+qTVfWjAY9+y2
Xn9OY+kAmDQfjfrzGeWrIenXDfcp5QPwaExt1Qc+yougzk/7qqtwAIxXrjHP
/oDydWAsHV10q5rKH8w+decdyothcH7rg1nU9axqFd1vqzgM97w8gjdPh7qe
J/eu8fquhJxDnrC6+0aaup4XsVUE3irIWWTR0GAnUXg/bHbhLelTRc4G+bdr
60pO9UOA5qknkWrIubAsamrQ07P9EMVbOkZXHTkPIuwHDYs93w9JR2TOPBiJ
nA8FI77FHLvcD9xZZMfcUcgFIFuaOsXjWj+Ui4JcXmsir4AlV09nr47rh7ZY
iw+btJFT47Ojs7U5dT0r27ct+KMzDPf8UnfuV13qep4kl5ocOBrlqe+9P4Z7
DqKu50VZe0YpjEV5ESy6/afrT0o/OHlPDbsyDuXr4NjOvFPv2f3gP17UZKiH
8mKYY/e0ncdXJKr3V26VGl6Bx/nXma4RT0oViXWJwe3H9SvwOO80VkMj+osi
kV+qeW6weQUe5+sjChMOlSsSMwY/nXDGqgKP8yENAWbbfigSt2bb5yg7VeBx
Xnn9xILFVYqEirvY4YJ3BR7nb+aUOUz6rUiEXj1VP/JIBR7nTSec/KUoUiTq
X00Iu3aBfm+CG2nh31yrSDh25emMTqDfm1jbKqIeDxWJ4slb025l0u9N/HK6
djG7SZGwcOy2NnhNvzcR8HKF/s2/ikTi6eiqe+X0exMKU7tTj7crEurPZhya
2ki/N3HtQvIi9y5F4nhdyfDH0t/xOD+l2/Hjyl5FokXH6/4M9e94nBduiTPS
NJEjXg8TZLf8oterjxVmBa+YIUcUVVjsUa6l16tvcSnlHTKTI/IfXxs/pZFe
r369pkU3xUKOyDva/WlpK71e/YuninfFPDnixVqnkzu66PXqoxqm5iiDHPFs
wvN5If30evV1vlZKxCI5gtOh23h1UAvu+WKryxbfpXLE0+KQO+kKLbjnjweO
PrxjJUekXv++7r1SC+5ZtSeuj28jRzz2hiH1ai24Z9vQ7FVyq+WIFLj1fLBm
C+75rHRZnPkaOSJ5uLSP/ugW3DMv7K941zo5IunnDn3Qa8E9D1VQXXhtoxyR
8JRb6jixBfdsdcbo3GsnOeLOCf3TAUYtuOcndR1e3BSp3CC3fkJbXI97vv1K
e0jlQ6nc5T6TrE/+qcc9n09YkNj3SCp3xKE1a9t/1+Oejx7bvliHLZX743jw
Zpeqetyz77bjlRbUl50HZxNdP36vxz3vmJ8Ysj5VKvfAlfd7iG/1uGd7rWJt
/zSp3MW3uw88KqvHPVu212WeT5fKVXlgcFT3Uz3ueQZfed3jp1K539JtT59+
X4971mNPb+FlSOXeexF4sZNXj3tWO+sQVZsplbvv1Z1Yt+J63PMgzwNGCllS
ufCRl/CpoB733LospnhCtlTusPL2R4u49bjnX/o5boufSeWW/R7HYb+oxz1/
kqoctOO5VG58o3XemGf1uOcV058fWefbQUppiaqt3tDPKfqrjq/o2N1Bspbm
5tnk088pfe7WatfcO8hxfldjbXPo55SysOHf5rp0kOwbPgfsM+jnlCe3BPHl
2zpI4o3VGofH9HPKmec3d4c6dZDvO8ZN25BEP6e4CtzMxm3oILcbdA12vE0/
p0DrtP68NR1ko92Hqs0x9HOKlmpb4U7bDjI05H7Otov0c8rfqc+j5Kw7SOXk
o1edI+nnFN7y4xvvLe0gb5Ru2ucaTj+nJO60Hr/CsoOcNmiGrXso/Zxy5PDw
2tr5HeRzk6GTvQ7QzymbrgtSIy06yJWbqwbt8aGfU2Zk3gwyntVBlp/M/u7j
QT+nPBJ8bw+e2Qn9T6c+3qU3Lhf1XCp9SGXIjE5Y7b0ndBF2Dtk/ZeSky6ad
cMvgyarR2FmkoQObGG/SCc3f/up2jkfOBtsQm00Pp3XCoovm9R+xcyEgsdp3
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
UM//B56dyO8=
     "], {{
       {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwtl3uQzWUYx3/nnF275yxndSe3zI4RS0ZG2jZjjNHaZCSVW6WEUFHuW6nI
tavbpjJGLhnTNHKrKROhpmEil2rS0EVqTAmpqUZCn4+nP76z3/f3vue9fJ/v
87zvNh8y5rbR6SRJ9oECMDefJPP4MAFsqZckN4Fh8OfA/fQ1pD0Y/gIYS3t2
UZIsSyXJp2BXcZIML0mSFvTNANfRX0G7GfwZ0DIfYxzbBKzm2yHmq+HvHHA7
/d3BrHTswb2Mr5sk1fBysIC5htGuSscarpVlzFPwB8AdzFWXbw3hD4NptKfS
/1I6xjjWM3m2SWA3vBXzdYFPAf/QXpFLkhL4IrCZ8a/z7VH4APArY/vTn4JX
gH9Zax79Y1wbfEb/naB7Os7s2atod0vHntxbA+acCq8Fa+B7me8i+BLwC+0J
6LMVbV4D/YtCc7V3j+71LOOvgF8GTsDP8G1QOvboXr+h3S8de3JvH9LuC8+o
EeOPs4dO8D5gLX17aHeAdwTfwreC9vDeYBn980EveDuwjr7loC28pzGlbzrt
VsZWz8D7gTJ4c9ADfjV7uE/vgE7wieyhED4OvE37euboCr8EfEffLs77Knwk
GEp/cSn7gNcD6+k/xrfH0+FJvTmDb0XpWMO1FtLOwjuDK5k7x7e79Q5Ymo8Y
Gks1UitjZuzUSK3USK0qQQnt1pyhCbyRKAnP633P4FnUUC3VTO30sF7Ww3rZ
HDAX9LBe1sN6WU3VVs3UTs3U7vtskpwi9n+Ak9nIGXNHz+t9NVd7NVd7Pa7X
9Zzec4/uVY/olXH0PwhfDA7mwzN6R83VfjtrHGetP8G5bMTAWCwFp/MRM2Nn
Tpgbel7vn2d8dS40UitzwtxQc7U3JsZmYCH7YuwHoB/ebsy30/Cz4IZcQO4Y
x26ow7ngf4N6uYD8DCjPhQf0Qs3/tUOP6TVjZKyMsbE2J8wNNVTLzmAVBW4b
ObUa/jVoQ99K8DN8j5qzvzasPxb+JcjT9zG/6QovAIUZ1uf3q+DHwAb1ov0W
/CiopT3Ab/AjYFI2cshcMmfMnb2Mf5O+n8BM+keAw/Dm4ItMxMBYuKZrO4dz
Ocax7sG9nAT7aO+gfRX8EKiiPRkNBzoXSGejxlhrrDHWmgOccRd9u8GP8Br2
sxQ+Dazk7Cdor4FvB9PpH0V7CXwn2Ex7MOvVd29gAe2b+c1E+FfW9GzUCGuF
NcXaMoL+x+h72Xgz13J+8wn8CfWhry377Q2/GIzORE2wNpiz5u5O62wSOWFu
HGb8CHgHMAh9fqM9Cr4J9GDuCvAe/EX9zPzNGFMOHwo+Ymxr+t+FP6+G9G/k
2xB4K1CfsY3o3whfD+rCU3xrCb8XvMHY7fxmJnytHi6KmBk7NVf7xnybD28P
bikIyN2ze9dzek8P6aVa5nta7cEK2sNZcwt8OVhYFJqr/Q6wDn4jc/SBX+4Z
WLuaMa+kQlO1bUp/r1TEyFgltKs9i56i/QP76Q4vBmW0y/n9QvhD4HxheEgv
6Wm9rUf1alPwPuP3M2Y4fK75WRQ5YC6YQ+aSGqv1s8aLs+0Ds1Ohqdqqqdqq
udqrqdqaM+bO76zRAn6PnikMjdX6LjCL9ib8sB9+EFRmw+N63W/2uUf3ag25
UEuKw8vmnLmnZ/SOZ/bsekAv6Bm9M5P2k+7V32QiJsamPxhZGJ7Vu+aEuaGn
9bZ3tne3HtbLkz1PncgJc8OYGJtKvo1PRUyMjTXGWmNMjE0N6AR/xHxibB6M
hnd0vYLIUXPVGmYt0/N6vx3oTP81oG0qPKgXjZGxMgfMBWNibPS03j7CfstS
ESNjVcqeesJz4NpM5IS5Yc6YO9YMa4c1w9qhR/VqA7A4E2f27HlwayY8p/es
EdaKnszfF34pmJIJD+pFNVEba4q1xZph7TjF+lXwOv4mEx7Vq2qkVp+DbvA0
+Iv4HwDnkrjTvNvMGXPHN6pv1XcY30XtwdF0aKzWlWBRQdxR3lXmoLmo5he0
T0WtsaZYW9RYrWeDilTEyFhZk63N3iHeJXpYL1szrB16WC+rudp7Z3h3WHOt
vXpMr+lBveid593nnendac6b+2qolmqu9tYEa4NvRt+O1gRrgxqrtTXWWmtM
jI0xNtbG2FirsVqrsVqrqdqqqdqqmdp5R3pXWrOsXd6p3q1qrva+wX2L+4bz
Leebw7eHb2Dfwr5xfev6JvFt4hvbt7ZvOt92vvl8+/lG9q2sp/W2Ncfasw0N
Sn2L+MYpjTeKbxW/2ef/FP5v4R3nXWeNsFZ4R3pX+sb3re//BP5v4BzO5RvT
t6b/E/i/gf/j+L/Of+y+nTg=
          "]]]}, 
       {RGBColor[1, 0.5, 0], Opacity[0.8], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
aomaqraquWqvGqPW6AN9Yc2wdljDreX/A/yzw9s=
          "]]]}, 
       {RGBColor[0, 1, 1], Opacity[0.01], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
1tzW3tpYW5fH2DdmjJ3aWGv4hr7l/yk1wSU=
          "]]]}, 
       {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
        GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAADR0ch3d4RlZVCBgXhnZ3S1taYVFS
YlJTSlpZhHR1Y1NUBxcWChoZalpbQFBPPU1MaVlaRFRTQ1NSX09QYFBRSFhX
RVVUCRkYP09OaFhZQVFQhXV2QlJRR1dWZ1dYZlZXHAwNoZGS6uLTsKCh0uLh
r5+gKhob8Ozks8PCGwsMssLBvc3M5ucgXk5PvMzLEuQTIxMU9PDlZFRVSVlY
ZVVWucnI7eYQKxscrZ2eu8vKGgoLrp6fusrJtMTD5eQSWkpLKzs6FycmKjo5
LDw7dWVmFiYlCxsaf29wJTU0fm5vdmZnJjY1JDQzIzMyIjIxeGhpGCgnd2do
Hy8ueWlqKTk4GSkoGysqHS0sfW1uHi4tfGxtHCwrKDg3Jzc2WEhJ4NDRXW1s
ppaX7+rU4dHSV2dm38/Q4tLTWWloXm5tWGhnW2tqWmppWUlKBhYVXExNBRUU
BBQTW0tMa1tcU2NiVmZlVWVkUmJhT19eVGRjTl5dUWFgUGBfLBwdLR0e6uvi
+vLVwbGyMiIjNCQlwLCx7vLol4eIm4uMMyMkrb28MSEiloaHrLy7+fER7/Pq
FQUG+/PjFAQFmIiJ5AQTqZma9vLu9/Pvq7u6qbm4+PAD5fDkv6+wqpqb7fHm
rr69qLi3vq6vscHAFwcIsMC/8vrpFgYHpbW08fURp5eY8vbV8PQD8/fjpJSV
q5uc5OwE8Pjspra1rJydqrq58fnn9fHtpLSzLx8gNSUmLh4fNiYno7Oyr7++
pZWWmoqLva2uzNzbzd3ctqanuKips6Oky9vaJRUWsqKjydnYJBQVytrZtKSl
8efmyNjXvs7Nt8fGH+YgtcXE6OnG8+vq1OrToJCRuMjHopKTx+jGGQkK7ujW
vKyto5OUITEwtaWmIhITwtLRz9/ewdHQJxcYzt7dKBgZuamqHQ0OGAgJnIyN
JhYXHg4PnY2Ox9fWuqqrno6P8unoHw8QorKxw9PSxNTTu6usn4+Q0ODfKRka
saGi0eHgwNDPv8/OemprTFxb8/vrQzM0hZWUg5OShJSTVkZHVUVGhpaVkoKD
GiopRDQ1kqKhYXFwna2syrq7YHBvnq6tx7e4yLi5Pi4vm6uqlYWGYnJxX29u
kYGC0cHCeYmI0MDBe4uKiJiXj5+ezb2+zr6/kaGgj3+Ah5eWfIyLd4eGZXV0
0sLDZHRzgZGQgpKRUEBBU0NERTU2Tz9AY3NykKCfybm6iXl6b39+zLy9jHx9
Oiormamol6embn59UkJDk6OiOSkqOyssPCwtbX1828vManp5aXl4bHx72srL
mqqpi3t8Rzc4UUFCiHh5lKSjlqal3MzNoLCvobGwn6+u3s7PNycowrKzxbW2
OCgp3c3OxLS1w7O0y7u8k4OElISFPS0uaHh3Z3d2FSUkZnZ1nKyrlaWkjp6d
TT0+cmJjMEA/MUFAFCQj2MjJLT08cIB/cYGANUVEjX1+jn5/2cnKRjY3cGBh
b19gMkJBcWFiEiIhc2NkEyMiLj49dGRlTDw9OkpJSzs8dISDbl5fgXFyN0dG
DBwbNERDbV1ec4OCcoKB18fIgHBxNkZF6MfWO0tKOUlIdYWEPExLgnJzg3N0
Sjo7OEhHdoaFVERFQDAxDh4dDx8e5h8Q08PESDg5V0dIQjIzfo6NjJybi5ua
STk6QTEyz7/Af4+OgJCP1MTFfY2MipqZeIiHjZ2cM0NCkICBPHBoGQ==
           "]], Polygon3DBox[CompressedData["
1:eJwtl3mIlWUUhz+dO3PvzL0zowZF6rgEBZkzGhTkMhoU5JaBQeYWJJR7C6Tj
BgWZW1CQa0FB6ji2QeqoQYW7QYa7BkruFkWaoxVFlj2P5/3jgY/7ve95z3u+
8zvn3J4TXxz1Qvssyw5DDv4oy7LfYXV5lr0LZ0tZdgaWVWfZciivZB18xaav
YTBrBsFb7HkbhhezbBj0hnr4jb1Xkg1tLa7KskXQC1v3wcaaLPscjvDbUVjG
8zuwg3c7YRy/jYX/sHUTxsKYdIZnja9gDYzi7CdhEb8thCaYDSs4czls5rkV
3sDmAnia38bALtgJUzhjKvTnXT9o5nk9fMcd98N57nwBVmqzGDa1fdU7wibP
gL9Z+xdsI5hfwALu8joUoQTTsDEVTuDr99CJ2HWEB3h+ELpzZjcYCI3wL77c
qA4b2trK3i2wHloqY497r3PW77CowP3hSJ54wl7W7IEMW+1gKWctgUvs+RE2
8NwC41gzvjJiYCyquUsN1GKrBrayZhtMZM+zsILfVhbiTM++nd/ugGZisc44
s3dhKWxqew7MhTp+61qKHDAXWvh262E3vu6Bg9g8AB8Tw09gB3feDpeJwRX4
gDPeL4ucM/casFGfYmbs9EFfjuPTCeiOzW4wkucnYCg2hsBz2HweesG9MAmf
JsM0fJkKA9nTCEt4XgyfYvMzOMjaA+7FxiQ4xrujUIfP3WA9e5phGr5Nhzd5
XpqPO3m3r7DxJWxhz9aK0Jha28PzXsjMc+5xFdqgA3troSe+3wX3sPduaGTt
IOgB3bXDu/fgI9gAJ4ndKbiO7WswjLOHF0IjasWcM/dmsHZ6Lta4dj7P83Jh
U9truOuH8C+x+Q8GQH84h2/nYQu+teYjJ83N3ry7rxQ5a+7O4N102M7ZOwqh
IbXUBtfgUXx5BEZw1uMVodmmpHG1PgGfxsMY9o4thA/6sgbba+EIaw7DWTgH
HbHZAS5yh0u5iJGxao+NMmPBcxsMwNZAyLGmLBcaUAuHsHkQukBX+IZ3+yCP
j4WyqEHWouHcfQScYc1peIoYja4JjaiVTuy5LRdnerZ39K6zObPJuxCTcdAA
9dBOH6Ena3uUh8bUmhpUi9ZAa6E119rbyB0HQTVnl6rjG/mtrKHW0l/VTE3U
AGvBYtYugS781jnVXGuvv/nOnDQ3mzhrVilqnLVuHc9rS6FptT2Ls2bCD+w9
XROaUlsX8PkiTGHNZHiId/3SGtcOxcYw6MgdO1REzpl7q3leVRGaUTvWjFu1
oxi1vAN3qU0aV+vHOeNYeWhCbfiN/dZqQm3Yo+xVh7BxuBQxMlbf8m5/WeSc
ubchacUaYC0wZ81dNagWb2I7K4TP+l6DL7XQDeqSRtXqfNbNy0cNs5bNTbXO
Gm+tN8fMtcxvnA8b2rIH2YuaebcO5ri3InLa3LZn2juNqbGdgK/P5KIn7kg5
aq6qGbXTnbN6wEzu8grMxr858DB7BuciZsaunrN6F0IDaqEx9Ro1ptbsefY+
a661dyC+DihGjbRWtnGHq/noMfYac97cfwyGwDxszC2PGcFZYRgMhXPsOZ8P
n/RtI75vqo6aWZd6jL3Gmm/tP8nzqUL0aHu1PuhLKfXS0fZw6IPthspUg/JR
I62Ve/FhX3nU9Fu1vRi5qSbUhjlsLqtptX0UG8cqI2cOpZnA2UANq2VjZuz8
Bn6L+qRdz/Cs88TyQkX0HHuPM4CzQEvq1X+w989C9Fx7rz3D3vGTvxUih8yl
G/j2D+wmRntgNz7vKiYNlqJmWDuGw4h81AxrhzXb2j0SXx6HVznjtTSTOZv5
m+8612bZnVAFxdqocdY6c8bccSZxNvEb+i3bUi/qn2q/mlAbzhDOEqt4t7Iq
erq9/U18WJoLjav1+3num4sebC+2B9mLzElzU02oDde4tpV3mwvRM+2dt2JQ
FT7ruzlkLq0ipqsrIwfMBXuyvbkvPvWBl7jDy2XxTf22DfjSpyJiYmxc0zf1
aHu1Pd5e7wziLGJOmVv2eHu9NdPaqcZuaa08arVneJYzqLOoPcpeNRmmFEIT
j6WZ1tlWjat1e6K90Rw/mXLAXHAmcDaw5ln7piRbK71zPmqqtdUaba12hu6V
ZlZn1xEpN6wpzannbk8xbU0zm7ObM46zjjXR2jg0adWebm83B81FZ1hn2Z/J
5V/axwy9OfVce68zr7OvOWquqgG1YE+1tzpDOUvZ8+x9fjO/nTXEWuI38dvY
s+3dzniX04zmrOadvbszn7NfffpvUZdqsTOOs44zrrPuFnxvrYqefCbVmI2p
R9oriyn3XeNaNak27UH2ImdkZ2V7vr3/f1A7vHE=
           "]]}]}, 
       {RGBColor[1, 0.5, 0], Opacity[0.8], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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

          "]]]}, 
       {RGBColor[0, 1, 1], Opacity[0.01], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
          "]]]}, 
       {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJw1lnmIllUUh1/nW2b5Zj51tKBwm9GgIPegIPegwGVGhYLU0YqC3GaEgtyF
BPcRClJnNChIHbUNchkNMtwNMrQcNVByGTeK3EaNInse7+2Ph/fy3v2cc3/n
VLxRN762IEmS45CGYSVJMhSmZJLkNThSnCSHIcW/NDyXSpJn4S6D78HjtB+D
07TPwGnmnILywiTpBA/ySfIvHGLuYajkXwWMY+x4uMzarXAH2uAfDvM37KHv
W5jM2BqogmqYkuUfvMyer8DnjNkGZ5lzDqqKkmQMjODfCzAL6qCNM92Fl5jz
IlSzxlhIONuDsiRZwncpNLPHLmjmLLvhEeZ0zoQ7e/en4EkYxtzhcI32VWih
fQqaueMuOM+aF+AUa7RAf/oGZIPNtJ0203b+s68TYzo7jrn9oEJbwQj2Hg4f
MPZDOKpPoJU5l53HmPI4x7n9OXs/SNOXgQZssQ5m0q6FIvYohL3Y6ntYw50/
gv2c9QD0LU2SPqXBJtpmCmMnw3xYABv59xkk9LeDvZzpO2hm7d3wKe1PUuHM
nl0f6SttqC0HwgB4h3/vQg5KUsFG2moRtlkIlazVE4Zxl6EwlzvMgw3MXQ+H
6TuSDTFlbHVpnyRdoZ6+VZngE32znjUb4TZr3IHVUA/HWetEUbCpth3LnHHw
F//uQyNrr4c6/tXCStqrIM3cFAzkjM/8H/PpELPG7lb22lIc1nAt93Tv5bRX
GJv0jYZL/GuF/fzbBzthFyxkrwWZ4CN9VR1jfzN9TTAB278KI2FUZGT0ob7U
h/ryBPxcFt6Ab8E36dvsxpiu8A1sh1XssbI4+FBfemfv3sSeW6A9Y/IwgbUm
wlDOMKQo2EBbDDBmi+ObMfbo6+u9WaMtG96Ab8Eze/a1tNd4NmLsFyjPJUlH
WMq/ZZDljJlMeKO+1bmMmQPrGNOQiz6HAs8Aw9l7GPzI2GOwh7m7jTXu/Cgc
5kyHCsMZPesc9pgNv3GW8/ATPjtWEDRILVJz1J7f+fcH7GDsdmgPHcpCTBqb
GxjzcTpojtqjRqqVv3KGM6ngQ325mjH10Ik5nbMhZowdNVAt9I36Vo15Y983
7dvO0i5MBw1VS3vRfgKuwpV00CC1aB42mQuToAZ6sWdPeJO+t6ACG/WAjlAO
V+i7rLazxuuwiTtthJvY+FZpiFFj9SR7tsB0/k2D6aw9Q+ibDg30NcIiWGis
cOat2RCjxup82gughvakOMe5s7H5ezCPNzu/JGiwWlyJ7XoWh5g0Nk/S11IS
1nRtfagvF0Qtmgm1sJmzbYLNnK0pF2LK2DoAB+EQ/w7m4hhYyZoroDd37gOD
YRA08W+L2s3Yna4DJ+EHbHQ0HTRKrXJO7zjHudpM212Ai5BiTgHcZq077kV7
efSRvipgTDuooq+6JGhoEn2gL6oYMwb6Qr9ciDljT81Ve9UstesLYu5LGMJa
g+ESa7V6L8Y8nY8+Kw0xMSmuWRVtpK2W0bccZjJnBnSg3REm064pCWf0rOfY
6yxcg+tFwSba5iJcyoWawNpAG2mrWfiorjBomtp2MPrCPdwrj0aXtQ850lzZ
g77upcEn+sY7eTf3dG9zlrnLHGAu6Bdt0wMqcsHm2l5NUVvW0V5bGnyoL73j
w7vmgi8q4lx9pK+mYqu38yHnmfsmwUQYQt9Q7UZ7dGnQKLXqJnvcgFEwOmqs
WtsNupeFmsnayZg39hu5U0NJuKN3bYu1jjWLtYtv1Ldqjm6IOc5cZ81j7bOT
OTtKQwwby2qcWmcOMZcM4uzP54NGqpVqpFqpDbSFOdncbI1grWAOM5d9xRpf
p0KN0xxzlrnLmDV2jSljazFj3k+FnG3uvh5jYWF8+zfY+8980FS1Vc1Ve80B
5gI1Rq2xJrE28U37tp3j3PKoTWq22m0O7xJjxFjZxr+tmVCDWIuMjrbXZ/pO
TVQbrYmsje5z1nupUCNYK5gjzBXWBNYG5iRzkznMXKamqW3aUFtak1qbqpFq
pTWdtZ0aqpZaM1k7mXPMPWqG2rHPGiofYsBYUOPUuspYy1lTW1urmWqnNZK1
kjWHtYc2XhxrImsja1xr3WmsNbUs5GxztzWntac5MhtrWmtba15rX3OouXRi
jOVdsbaoj7XPCdY4ng9ruvZt7n4rF2JsZ9QAtUANmBw1RW2xhreWNyeYG6wZ
VsWa1dr1SsxNavhDLc+EXGTOM/fVxVrcmsfax5rM2swcZ67Tx/ranGxu9s35
9mqj1ptTza3aWFv7Bn2L5hhzjZqj9lijWKt4R+9qDWMtYw1nLWeNvyTWNNY2
5iBzkTneXO+b9+2roWrpf15FuEs=
          "]]]}, 
       {RGBColor[1, 0.5, 0], Opacity[0.8], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwtl3to11UYh7/td9t+u+k2DYrSbRoUpE4NClI3DQrSeQkMtG0qFORlUygo
nZtQkHehIHXToCB1ajfIe5DhvAZZak4NlEznJYq8zEsU9Tw73z8e+O18z3nP
Oe9538/7rnxW05TGnCiKfoIkXElHUTdk+CMXmvKiqBHOJaLoF9jL7z2wFbbB
DGiAxdACO4qi6Gs4nY2iLliFrZXwJWu/ggF8ezSe49xkbhQlYFUqilbDBua2
Q0eGPeAxzjAYjvLtGJxk7gn4nEN/Abfzo+gW7CyIol0wHpsvwoewFl5i7RS4
wtqrUM3cMfAk34ZACWv6Qj1nbYC7zLkDtewxEbYy1gEHmNsJOYVR9ABsgs3Q
w7fbMBobY+A3xi7CNOZOhzvcpQfGYKsa5rH3XHiWb6MgwZocmIiNSZBh7zQ8
j69eSAQf6IsmxubDUGwPgVEwGhaxdiGsx2YbbMLmp0XhjJ51BXsuh9PY6IKJ
zKmFYVDlGr6th0bO2AQz2WMG1DFWnxt8pu9m4sNZsARaoZK5g+AIZz4MjxTz
rtDJmgOwC3bnBh/r6zmccS7s507fwh7W7k2HO3gXfayvl/F7KbzC3Do4BAdh
Ht8as+ENfIsbzLkJ89hjLrRxt3bIIwZzYT+x8V1O2MO9Sllbpo/1AWxhTQds
49tWOMzYERjGXkMh0odxDBlLnex1EIYzpwpSrEnDUr69B8XQpyjs6d41nGEs
7MbHu+BnOA2lUJIf7uhdt7DXZtjCWEd+uIN3+RgffZIIPtW3RVBcHHLK3PpL
H8Bh1hzKj23AHGzOLgw5Zq5N5oyToJKzDII70APbecPPkiEmjI2VjK2C2ax5
vSj4QF+4h3u9jc2F8CZnegMasDlDreAsl+E/5kTF4c19+9XYXAMjsDlcP/B7
TyacofcsxNRguMi6X2ECe9XCg5ypPwzDRhX8DtehlbVLMiGGemMpP+RSLbYm
wGW+dWfCHbyLMWasjeWMNemQU+bWctYug+WsXQFn+NYF5exRkRtiwFjwzJ7d
mDF2qmA4TMAH4wuDj/TVffa4BxuwvRHKsT0QVjB3JZxi7kkYAAMLQwwYC5fg
MmxnzbZU0FC1VJ/om1ex+RqUcqYS2MvYvlSwoa23fBO4pObAWsbWFYacrYtz
wtwwZ81dY9bY7eed4Cpj16Afdy+D+fxeABv41g63mdsDF7BxPn4D36KGO1Vn
g0aoFc2MLVIrmNsAfTlDn8KgQWrRYuY2ww7GdkILey12P+YuyAQNVAvVMLXM
GmAtuMbdryfCGTyLGqaW3eOMd+Ehvj2sjmB7dzZortp7Cxs3Y5/oGzVdbVdj
1VpzOopz1tw9w127jFHONCIdap61zzfxbY6qcelQo6xVUxibDO+w97uJ4DN9
Z82wdjjmtxH8HpkKNWBaXJOsTd8z9xjkM6cAfkQrjkM3Z7iSFzRYLa7mzjVQ
BqWZUAOthWqEWtEbwwUhJo3NCqjMhhguj2PG2KmMv/lmvp052JuLeaGWP8EZ
Hk+EHDFX+nPmfvA0Y8/AyzA1Ecb8Zo6Za8aIsWLNtfaqQWqRGtkZx7yxb8wa
u+a0uX2Bu56HI6w9mhdy0FxcBM3mBrZOxZqv9hsDxoI5aq7ag9iLtGCzNRVq
nrVvnTWwIPQk9ib3ufvfuUGT1ebp1pTC4OPuWAPVwm840z74gzP9Cef4fRb+
4fe/OaEGW4vVULVUTVabx7L3uFTQRLVRDVPLKjhLOSQgmR/O5NmsAdYCNVPt
nBr71hw0F30D38IaZ62zJ7E3MUfMFWuqtdUc2hHnmLmmJqqN1jBr2VnOdCYV
YqYszsn6uOZZ+6xZ1q7WuJarIWqJOWquWtOt7Rv59lEy+FhfW1OtrSlsJGEk
355Khpwxd9QUtaWeO9bFPYa9Rjs227JBE9VGeyB7IW1oSxvaquB3ZSZontpn
T9IW1wBrgT2UvVQKW8lsyCFzyTf2re0Z7R2r4t7GN/At1GS12Rw2l80pc0vN
UruMQWNRm9q2p7gRa7xab02yNpXEtdue0N5wHHs/lwwar9bbk9mbrWFsdTJo
qtpqDbQW2rPau26Oe0c1Sq1qjmNfn+k7exJ7EzVSrSyOa78ap9ad5K1OFIUa
b63/AF+9nwiapDaZs+auGqlW2jPaO9qD24vbQ9tL2+Pb63sH72LMGDtqktqk
JqqNyTiW7XHtda0x1hpz1Fw1B8wFz+BZ7IHthe0J7A3MIXPJHDPX1Gy12xwz
1+yR7JV+YOx4IvQQ9hL2lPaWaqhaas9h72GMGCv29Pb2LfH/Hv6P4v8q9jT2
NmrMhfh/BP9XsIZZy9zDvewZ7B3sMe01/Z/A/w3UCLVCH+vr/wHBOLeT
          "]]]}, 
       {RGBColor[0, 1, 1], Opacity[0.01], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwtl3tollUcgF/dvu3bt33zNjUovGxqUJBu06Ag70FBbk6DAstbUJC6qVCQ
d6Eg70JB6mZBQerUbpC6aZDh1GmQ4tSpgZKXqUWRl3mJoufZOX888HLe33vO
7/zu7+DZdVNquydJchJy4XwqSc5BSX6S9IWd0AjzWVsAY7JJMhoaM7yDkQVJ
UglNyDRDfl6S5MEKNlsJ63m3Dn7MSZKD0IBMPXzO8xcwEtlK6ItMv4jPN/j2
JuQhm4JRPD8N4zlzHMxCl9mwC9md8DCdJP9AP/eCBcguhAtwHv7lkv/BY5z5
aE5Y8506qVsz3+yHc9AOpexVBiXQB/Zz1gFo5HkHLENmOWQ4uwAOsvdPkEYm
H15gzxehWw+MCkfRuRVuY7tbMAmqssGm2nYde62HE3zzC1SxZzV8yrut0Mq7
Y9CBLa5BA++2wkbusCE33Nm7n0SHE9DBu+twmjPaYBAMhinI1MAQ3g2NZ3iW
e7r32cIkOQNX4RoML06Sp2BuUZLMg3Zl8oNP9e0lbHERfoc/4A10mQ0VyFTC
Vs5qyAsxZCw9wrv+UI5sBQxVF/iUtc+gjbVT8DV3+AZKOXMwrMV262A1d1gF
r7M2HXqhW094zTVoR+Ys/M3areLgU31bwlpf2IvMHugFvbNBZ3VfgW4roQ97
9oYZyM7MBJtr+1xkUnCP504Yy/O4dJBRNodvcuFZfPcM3OcuD3KDT/Xtt6x9
B3nIpuA4736GFfh2eSrEkLF0g+frqWBDbVmPD7bAZvbeAgvRcQEc4uwWmMXe
M+EV9n4VslAE7ex1riDkkLn0BGtP5gSf6Btz1FxVRllz0Fycz3MdXED2VzjD
mafhMByBOnSvzQQbaas7cBuuwNWicGfvbo6Za9YIa8UhfNECDTzXZ4JP9e1y
zloWz/RsfaSvKqASOtH1LqzhrmvT4Y7etR826g8zeTcDJkMNfMy7j2AK76am
gk/0zWT2qsmEHDVXx3PWhILgU327HtkNMIu1mVEndVuK7ZfAdJhRGGqIteQA
d/wB3uKsN2ELe9Sng4219XhsOSEvxKyxO5xYG5ENd/Au5pC5tIx3SzMhJo3N
seg6Bq6x1gHlPI+Abtiue3GIUWN1J3vvgjbWTsEcvp2bDTLKfgir4CG6PMgJ
NcRaYk2yNlkDrAXaQFtYc6w9x3huLQgxaqxqY21tTBvbu625qWAjbWWOmqvW
AGvBV9hkN1xk7RL0pPb1gCb2as4EndX9KHdohZeRnZobYt7Y14bass5YzAs1
09o5gD0GwlLeLUkHn+v7SdzxJfgENkE1tqoyNvFVCXyAzu/bZ9h7lLllDYU0
ZxbAWmTWRB/r6zns8XZxsLm2v4JNL8M0awzkaGPYBtthCTKLi0KOmqvmjLlj
TpvbfjMt6jgp6qiuLXx7OPpM3w1kbVBx6Fn2rnt8ez/2OHvddO+cDjbRNuO4
+/j8kJPmpjlpbj7Ot8PgGN8ch6PodAS2I7PDPGCPapiIzPO5wSf6xjt618nI
VkM5VMA2dPqyONzZu9eyNg+eY200DEGHsvzgQ33pmZ6tjbX1Zr7ZlA01xFpi
z7f3T0BmIpSxVynkQqow6KRuziDOIoNj73qPsxZBJ7rezYQcMVes8db6Rcgs
zoacMXfsufbeVNzbb/zWHmGvMGfaYk2yNtmT7c0zYq5rA22hjupqTbG26BN9
ow21pTk9PM5Ezkbj+GZsYeiZ9k57ZlfvLAy2s2fZu5RR1ppubd/Hc1NhiPEB
MWfMHWPUWDXnzL27yNyBvX4Dezjj++LQ8+x9Q6AszkjOSs5gzmL2WHvtPXK2
syDkqLnaO/ZCfayvrWnWtj/J3b+6hxpmLXOmSccZyFnIHm4vN2YHRh32xJgw
NswJc8MeZa/aB03pMCN2zYrosL8gzADOAvZUe6s1wdrgTOls+S42fycn9Dh7
nTNZaZzJnM2GocvQVKjB1mJjvCvWsVFjYZiRnJXsIfaSVbE2OjM4O6xBdnVR
qAHWAmc6Zzt7rL3WmdLZ0hnGWcaebe8uir3WGcBZwBnVWVWf6Btzztxzxuqa
tVJB15rYq5whG6NNtM0G1jbGnDa3rXHWuu2x1tyOvbYqzo7WKGuVMW/s/8bz
5eJQI6wV86DW2QYdb+aEmdbZ1jM8yxnLWcsZ31nfmmHtsGZaO52xVsca1RJn
SGdJa6i1VJ/oG3PS3LSH2cuuxlnAnDf37an2VnVQF3uyvdmabG22R9gr7Dn2
ntqou/8I/iuYE/viTOps6kzbEWPYWPbO3t2ab+2vjLNDWcwFY8BY6PJxUahp
5bHmWHv8p/DfwhpmLTMmm+M/hf8W/wODUbjZ
          "]]]}, 
       {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwtlnmIlVUUwL9m3nvz5o3zzGW0oHAdDQrScTQoyGVUKMg9KLDGJSjIbRQK
UscFCnIXCnIPCnJvg1xGgwx3hQx3DZJcxiWKzD2q32/O98cPPu537znnnnu2
LhOmjppSkiTJMcjAmrIkWQ2flSbJ57CjVZJshwMVSXIQPmbtIxidTZIxsIm1
jbCQPYtgfCFJxkGG7yzMQNZ02JtPkn2wirWVsIMzO6GIrEo4U54kZ2Ej/za0
CpnKXg2rKuKMZ+uQNQhmI6sxHzKUdQpOw+PIegzOcZnzmbCpxTb+LVYnZ3bA
MmQsh/nsmQfVuSTpkYs7etcWG2Aad5kK7fhuD6fgJOzXJ9CrmCRPw2S+p3h/
ZI6DkTAKluGjpXAdm26Uhg3aMhsaYS13XgO32XsH+iPreZiFrNnwD7Y+gDXY
thZuc+ZWRbyJb5NnrSwXd/Au09HVAEtYWwonK5PkBHSBrnCOf2ehCl0dYABr
/WETd9wM6/i3Fg5x9jA8g8x+0J291dCXtVrogM0d4RY2/A2X4DIsQcZi6IXM
3nCI74PQqXWSdG4dPtSXxoix0o49beEL7ry+GDKUtYK1lTAfnfNgMzq3QD9s
6wvv4Mt3YRy+qIcRMBJO4Kvj8BVB/XVJxIix4pv4Nsu5yzLogKyO3pE7HIIc
tpRBN3R3bRV38C76SF/15MwTmYgZY0cd6pqILROgXh1whO/D0Izsq7mISWPz
MlyBXaw1QZWyC5Ej5spIvkfBf9j8L+xG1/cwh7VG2IYvtlfGnbzbr+i6ADN8
c7iLznvZWPPfDfg9HzKU9Qdn/iwJGdtSn+v7+/y7l4mcMXeegiehDhsHw118
cwe2sudLGApDMhFDxlIdtg0qhA/0hTFirIxhz8vGDXfuBlnIVYRP9E05/wqZ
iJFeaQwaiz9j4zFoRudVGAx18BM2HYMtfG8uj5wwN2rR3Qe6QzUcReaRTNQU
a4symtM7eBdz0Fw8gw1n4QQxdxwmoXsyNGH7Tmhi7y4Ywp0GZ6PmWfvaEMMP
w050NcFbrL0Jq7BlNfzC93mYy5l5kEFmKayHDZURo8ZqDfSBEmQ91DpyxFyZ
hC1vQ29iosbc4sxNGAbD4YJvXxIxa+zmUt/e5uydQsisSX2u741pY1ufHE1r
orXRGDPWRqBjuLWNvVXmEHcYkY83Hpq+uW+vTnXPReccmAYN5VEzrZ3r2PMp
1CPrdRiIrEEV8Wa+3XD2jkhrvLXeGmItaUxroTlsLi/kjgsqQ4ayXuXsK9AR
Xz6SjZpmbfuGtW9LQ4e6rMHW4obUNt/At9jG2ndwGh+cKcSbNqUxZCwZo8bq
VWRfy0bOmDvWHGuPPtW3A7wT1LLWpyxqrrW3mX9XCvGGvqU11Fq6F537ipGT
5qY+1bebObupLGq0tXoFez5xL3feXxlv7tuXsFYKE7BxfOpzfT88jQVjxFix
JlmbrDnWHmuktfIgOg7Bdf5dy0ROm9tT8dWUiugx9pq77L0DA7FtUD5s1nZj
ztjLsZbNRw+zlzUj80pZ9Cx7lzlgLlxk76XKyAFzYRoyG3LhU307ERvegBex
4QUYxb/RudCp7pw+hQmsjc/Fm/v25pC5VEBXBczEtveKUROtjd052w3aQ1U+
fKbvPoQFxfDpvrQH2gvtQZ3SHDaXN6S5aQ+zl+1G1y5jDVsfhbbIaAOvGZOV
MfM4+7yPbR+URg2zlm1hbWsao8bqs/x7DmZxZib8hoyLsAkbN8Ic7jg3Fz3f
3r+ItcXQB2ry8Sa+jTrUZc+z9zmTOZtZk6xND/i+Xxo9297tG/gWY7W5GDZp
mzFkLKlT3c5kzmY9WKs2j9nTMxs139qf57s8GzOMs4w2a7t73GvNs/bpE31j
DbWWDoOX0pg2tu3R9mrf1Lc1Jo3NWnT2tRbwfRqW8L20PHpiVVrTre1T0Tkl
HzOps6kzkbPRqnQ2rE5rvz3IXmTMGXvOiM6Ka1hbXYiebm83xow1ZxpnG9/I
t7IH2guNMWNtD7Xux5LoCfaGztylSzFm2L3pDOks6YzirHIynQ3d0zmtOdYe
ZzZnN3Pe3HdmcnYyJ81NZ8aW2bEicnMPtvxQGjOCs4JvODb1qb71TXwbc8hc
MmaMHX2oL52hnKXsOZl05nP2M2fMnao0V4xxY90eaC80h8wl7+zd69LeuyDN
JXPAXPCNfCtt1FZz2ty2JlobjXFj3Z5ib7nJ91/FyAFzwZnS2dKaYm2xJ9gb
rCnWFmu0tdoznj2QztrO4M7izlj1aUwYG+aouVqT5o4znbOdM5GzkTFmrLX0
9LKoOdaelpgvj55n77Pn2Hus8dZ6a7q1/X/uHrwd
          "]]]}, 
       {RGBColor[1, 0.5, 0], Opacity[0.8], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwtlnmIllUUh1/89m8WyWXGgiJtHBUKchkNClJnNChIxyVIsHQsKChHHaGg
3KEgd6Eg98AgdRzbIPcgw91Aw12DJJcxlSJ3jXqe794/Hri8713OPefc3znd
m5pHTe6QJMkRSMO0QpJMhXOpJPkN+lUkSV8YDEPgVFmSnIRLcBnerUySd6Bf
eZL0hxfYZDicySTJWWgoJkk9TGL8BmSZk4FRfBsNczhrdjzTs49y5hEYybgR
yqEMdmPkz/ALex+GSuZ0hJ3ZJNkBVexVDXeZewc2M+draOSskdAVW6ugPp8k
QyGXS5I8zMWmOZlwhmcNiXdtZa9NUMPaJ2AR48VwifFFWM6cFdCVcReYyL8m
6MkZNZCFHGSYk4b1sAGGcUZDIdzRu+ZZkyuGO3m3P7Hlir5i/CZ8iG8/gFnM
mQ2zsH0mTMT2JjjAGfthAzZshDX4YjW08m8TTGFuM6xivDoXfKpvLzNuh/2s
2QdT2HtqMcTIWE3wDNiHzXvhOJyALtAZvsKm9ZVhzoR4hmfNZK8ZsBKbVsEA
vvWHO9h0F6ZzZgvs4dvefIiZsRsAdbCdNdtijplrA7G1DrazZgesZO8V5WGO
c71z6e6MW2Eh4wWwkPEiWMLaxfATvt6dCjlgLsznDgtgG3O3lgcf6stmxpOh
mfGUsmCjtm6D7fkQQ2N5kzm34A423YaF/FsEx+EYfEOufgtnuPNpqOFbz3yw
Sdtmwix4G5vegpXGCAbwrX/MIXNpNT5ZVQw5aC7e5OwbMAJGwkm+nYgxNJaj
sWUUbGSv1nx4M74dc87cO2jO5IJP9e0r5NjYdMg5c88cMBfMaXN7BDF+GT6H
5ZUhx81137BveWS0RQ1QC4yBsSjFAHqzZ69MuKN3LTIuwIuMX4LjrDnmWvaY
XBHejG/nNmfcgQfMuQ9rWLM2E3LK3DIHzIUcd8zCEv4tzYSYGbvn2XNwZcg5
c88379v3DfuW1TS1zRgZq9/5dx5GsbYxxsBYjGHtaKjFV70K4Q34FnrAExXB
x/p6NnPmZOMbhS382wrz1BjfIv/askEz1A5jZux6YGN3+AG2VAYbtOUaXIer
agI8iQ+egmnsMRXq2bMhF2zQFjVCrajH5qHwNOO+vk/GE+KdvJs+1bdDOHso
1LHHALWQPQuwCx/uhIc58xHo1DFJHoLtrNkBFznrAoxn79fgHnPvQqO+y4c3
cTNqpFqphqqle5i7F6qY0zUfzvCszdAGTfh2UiG8Sd/m66ydALex+VZZeKO+
1bHMHQMf4YuP4byxg4OsPQQ/YvMu+Itvf8MV7tQORb6VQXfu8ni8k3drYa9p
sJg5S+Aw40OZsMa1+lzfNzAeBoP4NxDe49v7qaChaulqzl4D4/j2KnTTh/Ar
NhyFdv5dKQQbtKUt3t0aa621Bs2Na1z7LN+egy9hHQzj2/BMuLN31wZtuYFP
/zH2+GwG9DJXYS1nfJEOmq/2r4t7XY+5ZU6am23YtAke8O1fOE2sThXDnu6d
hhR8AvOh1hoXa7q1XU1VW63B1mJrvrW/ir2rc0ET1cZTjE/nQo9gr5CKe/sm
fBtqktq0PGqNNcfaY4231p/GxjPwGeNPUyEHzAVrnLXOGLZEH+kr5zg3gf86
hJwwN2qZ2zMXNE/te4z/j8JZxufSIUbtsYewl7DGToyaqramyJkOcIC7HyyG
nG2KPYy9jDlkLn3Hnt+nQg9iL2KOmqtb4lvXx/q6D/96p0POmXvG3Njf49t9
2MmeO2KMjJU119prT2FvURdrpzGpjW/Ut+ob9a1aU6wtaoba0Q2qoYW9p6fD
m/Xt2rPZu9kT2RsNYvxMxLE+03dqtFqtZqldaoRaYY231l/g2x+Voeey91JT
1Ja5zJkHy2BpOtigLWq62n6Q8aFs6HnsfdSkupgz5o413FpuD1DqBQrBN2q8
Wm/PYe+h5ql9pRpeHvZ0b2tELtZwa/lS9lgGnZnbSS1TcyqCpo2PNc/ap0aq
lZfxaXsxaJLapMaqtdb0mqhpals3bKouBM1Wuz3Ds47F3mAgttRlw5zS3Fx4
K+ZAn5iD5qI5a+6qmWqnNf9mrClbYg9mL+ab8G24p3tPgqZs0KBxscZaa61h
1jJzytwy5819c8BcUMPV8mt8u5oKPYu9i5qqttqj2qvOj1qgz/Sdmqf22QPZ
CxljY60GqUXWKGuVPau9a6lGZkMPaC/oG/ItqclqcykGFaEnsDdQ09Q2c8rc
MgbGwjfoW1SD1eKmeHc1Wq22x7DXsGaXancm9CL2CPYK3tG7qnlqnz2zvfOs
2JtZM62d/wNhwr1j
          "]]]}, 
       {RGBColor[0, 1, 1], Opacity[0.01], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
HPYe7uFeg1ItsOez97MHtxfXx/r6f5Ddvqk=
          "]]]}, 
       {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
        GraphicsGroup3DBox[{
          Polygon3DBox[{{695, 2, 710}, {710, 2, 2390}, {691, 1, 2263}, {709, 
           2, 2317}, {979, 2, 2374}, {1939, 1, 2236}, {692, 1, 677}, {2374, 2,
            709}, {1895, 1, 692}, {2263, 1, 1939}, {2275, 1, 691}}], 
          Polygon3DBox[CompressedData["
1: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
Imqdml8We/Km2JPbm/8Pk4Ok/A==
           "]], 
          Polygon3DBox[{{1412, 1411, 2317, 2, 695}, {2390, 2, 979, 2386, 
           2387}, {2249, 2248, 2236, 1, 1895}, {677, 1, 2275, 2287, 
           2288}}]}]}, 
       {RGBColor[1, 0.5, 0], Opacity[0.8], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
          "]]]}, 
       {RGBColor[0, 1, 1], Opacity[0.01], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
WRvpA33RHm1fyL+8XRI0Rq3pH7XMPsf+B51aunE=
          "]]]}, 
       {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwtl3mwlmMYxt/3PZ3vnO875xSiXWiSOqVJkyRN0zSppEmTdoT2kGhHaFF2
7SFNWqdpTCpZh1QakxEtzGCipDENKdJgkha/X3d/XHOu53ue91nu5brvc9Xg
Mb0ezJIk2QWqgFnFSXJHmiQNwKGiJFlfniQ9WdAS7CpLki2gBbwHWMbcx6AX
vA34j7kJBfaB9wZfMje1apK8BL8HXFORJIMZPwd/FBxhfANrOsBfAA8z9xTf
57L4xm/rsGcdeCfQh7Wd+G0WvBEYz9zr7PEQvD/4jfmbGQ+FDwat4TWqJckK
+CpwNbw+j6zkbUPAJ7y1aY5z4W3A08xtYM/mWbzZty/GBjWZ6wW6sf5N9hzL
3J0gD5/Lmu5ZfOO31/sG+JWgC+M2oD68AegL/55vJsMngi/gt7P+mSxsom18
k2/rCsax93LGzeDdwHTGtUG7LGysrRvxzXT4fWAs+zVmvj28AFYwX2DcFp6B
4YULNoQvAb/ybTm//cPbfgd78mEzbVcK5hfC5/peH+vrdXyzAD4I1KqIN/iW
eWCp/ipNkk3s9Q5oAt/Hb4uZGwmGVISP9NVAcKo8INem2lababvOYChzZYxr
weuBJmVxZ+/+AJjG+h9Y0zeLGDAWvIN30aba1jWuXQpOMp7BHo3hld65LGLO
2BtuzFZEzBq77uneZ4iPF3nLe8YI7ykDG40V7cXcrcRMC/iHoG9p+EzfGQPG
wk3ETE/mLgPPE0v9sGmShU/0TQkxuQx+KThWCB/ra2PcWNcG2sIkncP9jnLn
1vBWYH9Z+FTfGhPGxkbG5VnkgLlQyfgUZ58GNxYiho3l2mAt96nLbyfhM8E2
3tOHGNgPPwD6w9/itxnwZb65JEnO8v398NZgMm+vzh7F8I7gK8Yjme8HPwu6
svdm7jA+i5w2t39kv2eZawj+5NvP+P1r+F7wgXnBmYfgP3unfOzp3saosVqN
cWNtaczmQoPUInPEXFFj1BpzzFy7lvXNWDsX1OX+x8C6NN7oWz/CxouyyCFz
aQp3qp6Gz/TdDHy6Df6y7+HbcjDbu4IuzFUyng9vDtpx1ijQCj4K/MH381iz
Hb5eH5REDpgLU0FNzhvNeRcz1wM0K46cM/fMYXN5J2teycKn+nYg+7dM40zP
3ghWw6eBlbmIaWNbTVKb1Fi1tirYWggbaIsR4CDnbWW8Br4PtMUeM9njcfgO
sIG7j2J+CfxzsJPxCsYr4VvAeMY7uP8V8MNgQT6+8dtXQT/W/sv5U7J4g285
zR1qZJHT5rY5bW6rkWrlCb7fxbd1wJosbK7tHwMTcxEzxs5dYGFx5IS5YY2w
VmhTbTsHzIbv5vu1acSwsVzKb09kUXOsPcaosWqOmCtqltpljBqr+kzf/aJ9
zQdwBH7UfMkH5NpQW+oDfbEHpMzVYzxG24JF+G4B4yfhA8Ak7j8A9E6jxlhr
PMOzjFFj1Zpl7boI7C5EjbJWjQYVudAgtehusKo4YtBYNEaNVX2ib94wp0tC
A9QCc97c3876DvAiUIXz3wf10rijd93EnvemkXPmXlXG3eATwC258JG+6gPe
hY/gt0fSyCFzyRwwF4xZY3c4d3gtjZwyt8whc0mNVWsnM780jRg0Fn2jb12o
fpWEhqvll4ADhTjTs41RY9WYNrbVZLXZnDK3vgNN8xdsnkbOmDtqnFqnBqlF
2khbmbPmrjFurG8Gw0oj5ow9a4C1YC/jYWlojFqjD/RFozQaKjVVbTVHzBVr
hLVCDVVLR3D+wTRsrK3tSexNrKHW0rfZoz38L+2TD8hPqH/wn5jvBC8BDdj/
OOPO8G9AvXz4SF/lwXVFsca1XcE5fc+4DN4dXM7ZbVk/Dn7c+M9HjbfWq+Fq
+d/8TdOIGWPHmDF2vIN3UUPUEnPO3NPm2n4S6J8LTVfbfbNv907ezTt799sY
V6QRY8aaPZa9lj2HvccwcrxhFjXcWm5PZW/lb851Jqc7ZqExao013dquBqlF
1lhrrWtca89k72SPYq9iTBlb1gRrg5qpdtpD2ktac6w9+lzfH+b3c0n4SF/Z
Q9lL+Ztzvtm3+ybfps21vTbX9qsZt0ujB7UXtec+33unUQv1ob7UJ/pGTVVb
zSFzSU1QG+wh7CXUHLVHjVKr9KG+tEZbq/Wxvq4GBhVFDBlLZ7jvt1nUYGux
/wP4v4A9i72LGqVWqcFq8adgeWlAbg2zltkj2Cuo4Wq5Z3iWmqA2mMPm8vka
WSV6CHsJNVKttMey17JHt1e3R7FXseZYe8xBc9Eew17DmmRtUjPUDjVf7Vfj
1Xp7JHsl/2fxf5f/ARnRlMs=
          "]]]}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ckq7wEYBuDf4SiKYmtYuBCKoigWSrF1AZSxOOZ7OOapzPM5xiXlGP5m
jvEOzLOV6SmLp7f3q2/1JheV5BX/CIKgkZOwIHiXjw7PpPKp38pX0ongnjKO
ySSKCrKJoYpTconjHzW0sEwHbaxRSzchOsknnh16aWaEc4a45pI9GhmgkHoS
WQwPggXmmWOWGf7yh2mmmGSCccYYJcF/HQX008AuF1wxyBnDNNHDNlsksUkf
62zQxS9WaaWdJX5TzQqx5HBCJdFkUU4kGRxRyh0/SeOFGz7skyKfeOBN37Bj
iE222GaHXfbY54BD/nPEcdj3/l9BdlOB
         "]], Line3DBox[CompressedData["
1:eJwl0s0r3wEcB/CvH1lNbcXm4eLpQlnZheJCUZSVh4niYrKprbhypzzM88Mf
wG2Mu8fiL/Bws2FsmMeNydhDXnJ4vetz+Bw+vT8p9c0VTWFBEPSyHxKGPEIU
EEkRDynhES1EU8oTXhJLOfGMscAcVfzjmj9c0UYi3/jAElPsM8knktlglXVq
SOELu2xRRxpdNJBBP2/IZIa3ZHF3ZA4dEUHQSRfdvKeHXvroZ4BBhhhmhFFy
7TeTzTtmeU4jAzzjNd2k84ptvrJDKrWssMYmn/nIAdMsM8EeSbTzm7/c8J9q
5llknAQqiKOSp5QRQyuPeUEUxTygkHDyCeNS97+44Jyf/OCMU0445ohDvnMQ
uv+ZW0YnTh4=
         "]], Line3DBox[CompressedData["
1:eJwl0ElKAmAABeBf9CKSCQoJWVBQl8i1FuhGwaZLNEAZNGCjZcM+zaZrlWWZ
WR+4+BZv8Xjw4sXV3EokhLBAiIWQFJbYpEWBBNs88kCJNM/s8soeGQ7IUmGa
I5aZZZ157uzccsM1Ta64pMEF55xxygnH1JnTX2OGKodMUWaSfSao8cIOT6Qo
0qbDFmPkuWeDRcZ5i4bwTpcPPunxxTd9fhjwy5C/6Oi/f9PiLuM=
         "]]}, 
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0bcuBWAAhuH/aANREjVRkoNESUhY1IUNh8PRu7gAvd+AkpAou3p7emfg
EcMzfMM3vdH5xcRCJISwTVd6CD9GS1IIEdpIZpBhFhllnGUmOWWaVVI5ZJZN
1jlml322yeSSa7I5J5cO8imkmFKiVFBFDT3UEaeBAZq4zQjhjnseeOSJZ154
5Y13Pvjki2+a/RM00k89MWqpppJyyiihiAI6yeOCHG64IosdDtjjhA22mOOI
NNaY4YwpVphgjCVGGCKFdpJoJfw10GmEYYYYJMEA/cTpo5cYPXSn//f9BRPx
MvU=
         "]], Line3DBox[CompressedData["
1:eJwl0bcuxWEAxuGPBf9jYWPBwEJComxKoksY3IGjOxwXoNeFhMHpRbkwvXMR
nsTwjL/lfVvim7PJihBCgrsohKgyhAGqibNALVm2WeKcIXa5ZJ8V8qxxSJp6
yqxTZIRGkozRzDETtHHKFB3M0EUPffzGQvjhmy8++eCdN1554ZknHnngnl59
N51M084kJ7QyzhFNjLJBA8MUSFCijhQHrJJjmT0u2GGQMxbZIkOMeeaoop8a
ruydIk2GLDnyFChSosw1N9xG/z/9AQ+bNWw=
         "]]}, 
       {GrayLevel[0], 
        Line3DBox[{248, 3, 244, 229, 18, 33, 48, 63, 78, 93, 108, 123, 138, 
         153, 168, 183, 198, 233, 250, 213, 246, 238, 214, 215, 216, 217, 218,
          219, 220, 221, 222, 223, 224, 225, 226, 235, 251, 227, 247, 239, 
         212, 197, 182, 167, 152, 137, 122, 107, 92, 77, 62, 47, 32, 231, 249,
          17, 245, 237, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 236, 
         248}]}, 
       {Opacity[0.5], 
        Line3DBox[{727, 2542, 2557, 1204, 742, 2512, 2572, 1234, 787, 2527, 
         1594, 2332, 1264, 817, 1609, 1294, 847, 1624, 2347, 1324, 877, 2209, 
         1654, 1864, 2179, 1894, 1879, 2224, 1669, 1912, 2251, 1897, 694, 679,
          2290, 1927, 1714, 1999, 2362, 1984, 2497, 2482, 2305, 1699, 1969, 
         1399, 1684, 952}], 
        Line3DBox[{743, 1205, 758, 1235, 788, 1265, 818, 1295, 848, 1625, 878,
          1325, 893, 1355, 908, 1340, 923, 1940, 2150, 2135, 1370, 2618, 2588,
          2603, 2573, 1715, 953, 2438, 2000, 2180, 2030, 2453, 2015, 2375, 
         968, 2363, 698, 2306, 1400, 980, 2408, 2423, 2393, 1445, 1025, 1760, 
         1475, 1055, 1805, 1490, 1085, 2120, 1520, 1130, 1550, 1160}], 
        Line3DBox[{938, 1670, 1385, 1955, 1685, 2291, 2468, 2483, 1970, 2348, 
         1985, 1700, 1913, 2276, 2264, 680, 2252, 1928, 2225, 2237, 1898, 
         1655, 2210, 1865, 1880, 2165, 1850, 1640, 2195, 863, 1310, 2333, 
         1610, 833, 1280, 1595, 803, 1250, 2318, 1580, 2513, 773, 1220, 2558, 
         2498, 728, 1190, 2543, 2528, 713}], 
        Line3DBox[{1024, 1444, 1744, 2059, 1429, 1009, 1759, 2089, 2074, 1474,
          1054, 2104, 1789, 2119, 1804, 1084, 1834, 1114, 1519, 1129, 1849, 
         1549, 1159, 1579, 1189}], 
        Line3DBox[{1174, 1564, 1144, 1534, 2134, 1099, 1504, 1819, 1069, 1489,
          1774, 1039, 1459, 2407, 2437, 2422, 994, 1414, 697, 712, 2392, 2389,
          2029, 2467, 2044, 2194, 2014, 2452, 967, 1729, 2587, 2617, 2602, 
         2632, 1384, 2149, 2164, 1954, 937, 1354, 922, 1369, 907, 1339, 892, 
         1639, 862, 1309, 832, 1279, 802, 1249, 772, 1219, 757}], 
        Line3DBox[{1175, 1565, 1145, 1535, 1835, 1115, 1505, 1100, 1820, 1070,
          1790, 2105, 1775, 2090, 1040, 1460, 2060, 2075, 1745, 995, 1415, 
         2045, 1730, 1430, 1010}], 
        Line3DBox[{2633, 3068, 2648, 3083, 2663, 3263, 3278, 3473, 3293, 3308,
          3488, 3323, 3743, 3338, 3503, 2678, 3698, 3353, 3533, 3518, 3728, 
         3653, 3668, 3548, 2738, 3848, 3863, 2753, 3833, 2783, 3128, 2798, 
         2813, 2843, 2858, 2888, 2903, 2933, 2948, 3203, 2978, 3233, 3008, 
         3248, 3053}], 
        Line3DBox[{2722, 3112, 2707, 3382, 3397, 2737, 3787, 3577, 3412, 3697,
          3127, 3592, 3727, 3607, 3427, 3802, 3442, 3622, 3772, 2782, 3832, 
         3457, 3817, 3157, 2842, 3472, 3172, 2887, 3637, 3187, 2932, 3652, 
         3202, 2977, 3232, 3007, 3037, 3052}], 
        Line3DBox[{3038, 3023, 2993, 3218, 2963, 3188, 3638, 2918, 3173, 3623,
          2873, 3158, 3458, 2828, 3143, 3803, 3443, 3818, 2768, 3758, 3608, 
         3428, 3788, 3413, 3593, 3713, 3578, 3113, 3683, 3398, 3563, 3773, 
         2723, 3383, 3368, 2693, 3098, 2708}], 
        Line3DBox[{3067, 3262, 3022, 3247, 2992, 3217, 2962, 2947, 2917, 2902,
          2872, 2857, 2827, 2812, 3142, 2797, 3847, 2767, 3877, 3862, 2752, 
         3562, 3682, 3667, 3742, 3532, 3547, 3367, 3712, 2692, 3517, 3352, 
         3757, 3337, 3502, 3322, 3307, 3487, 3292, 3277, 2677, 3097, 2662, 
         3082, 2647}], 
        Line3DBox[{714, 2529, 2544, 1191, 729, 2499, 2559, 1221, 774, 2514, 
         1581, 2319, 1251, 804, 1596, 1281, 834, 1611, 2334, 1311, 864, 2196, 
         1641, 1851, 2166, 1881, 1866, 2211, 1656, 1899, 2238, 2226, 1929, 
         2253, 681, 2265, 2277, 1914, 1701, 1986, 2349, 1971, 2484, 2469, 
         2292, 1686, 1956, 1386, 1671, 939}], 
        Line3DBox[{715, 2530, 2545, 1192, 730, 2500, 2560, 1222, 775, 2515, 
         1582, 2320, 1252, 805, 1597, 1282, 835, 1612, 2335, 1312, 865, 2197, 
         1642, 1852, 2167, 1882, 1867, 2212, 1657, 1900, 2239, 2227, 1930, 
         2254, 682, 2266, 2278, 1915, 1702, 1987, 2350, 1972, 2485, 2470, 
         2293, 1687, 1957, 1387, 1672, 940}], 
        Line3DBox[{716, 2531, 2546, 1193, 731, 2501, 2561, 1223, 776, 2516, 
         1583, 2321, 1253, 806, 1598, 1283, 836, 1613, 2336, 1313, 866, 2198, 
         1643, 1853, 2168, 1883, 1868, 2213, 1658, 1901, 2240, 2228, 1931, 
         2255, 683, 2267, 2279, 1916, 1703, 1988, 2351, 1973, 2486, 2471, 
         2294, 1688, 1958, 1388, 1673, 941}], 
        Line3DBox[{717, 2532, 2547, 1194, 732, 2502, 2562, 1224, 777, 2517, 
         1584, 2322, 1254, 807, 1599, 1284, 837, 1614, 2337, 1314, 867, 2199, 
         1644, 1854, 2169, 1884, 1869, 2214, 1659, 1902, 2241, 2229, 1932, 
         2256, 684, 2268, 2280, 1917, 1704, 1989, 2352, 1974, 2487, 2472, 
         2295, 1689, 1959, 1389, 1674, 942}], 
        Line3DBox[{718, 2533, 2548, 1195, 733, 2503, 2563, 1225, 778, 2518, 
         1585, 2323, 1255, 808, 1600, 1285, 838, 1615, 2338, 1315, 868, 2200, 
         1645, 1855, 2170, 1885, 1870, 2215, 1660, 1903, 2242, 2230, 1933, 
         2257, 685, 2269, 2281, 1918, 1705, 1990, 2353, 1975, 2488, 2473, 
         2296, 1690, 1960, 1390, 1675, 943}], 
        Line3DBox[{719, 2534, 2549, 1196, 734, 2504, 2564, 1226, 779, 2519, 
         1586, 2324, 1256, 809, 1601, 1286, 839, 1616, 2339, 1316, 869, 2201, 
         1646, 1856, 2171, 1886, 1871, 2216, 1661, 1904, 2243, 2231, 1934, 
         2258, 686, 2270, 2282, 1919, 1706, 1991, 2354, 1976, 2489, 2474, 
         2297, 1691, 1961, 1391, 1676, 944}], 
        Line3DBox[{720, 2535, 2550, 1197, 735, 2505, 2565, 1227, 780, 2520, 
         1587, 2325, 1257, 810, 1602, 1287, 840, 1617, 2340, 1317, 870, 2202, 
         1647, 1857, 2172, 1887, 1872, 2217, 1662, 1905, 2244, 2232, 1935, 
         2259, 687, 2271, 2283, 1920, 1707, 1992, 2355, 1977, 2490, 2475, 
         2298, 1692, 1962, 1392, 1677, 945}], 
        Line3DBox[{721, 2536, 2551, 1198, 736, 2506, 2566, 1228, 781, 2521, 
         1588, 2326, 1258, 811, 1603, 1288, 841, 1618, 2341, 1318, 871, 2203, 
         1648, 1858, 2173, 1888, 1873, 2218, 1663, 1906, 2245, 2233, 1936, 
         2260, 688, 2272, 2284, 1921, 1708, 1993, 2356, 1978, 2491, 2476, 
         2299, 1693, 1963, 1393, 1678, 946}], 
        Line3DBox[{722, 2537, 2552, 1199, 737, 2507, 2567, 1229, 782, 2522, 
         1589, 2327, 1259, 812, 1604, 1289, 842, 1619, 2342, 1319, 872, 2204, 
         1649, 1859, 2174, 1889, 1874, 2219, 1664, 1907, 2246, 2234, 1937, 
         2261, 689, 2273, 2285, 1922, 1709, 1994, 2357, 1979, 2492, 2477, 
         2300, 1694, 1964, 1394, 1679, 947}], 
        Line3DBox[{723, 2538, 2553, 1200, 738, 2508, 2568, 1230, 783, 2523, 
         1590, 2328, 1260, 813, 1605, 1290, 843, 1620, 2343, 1320, 873, 2205, 
         1650, 1860, 2175, 1890, 1875, 2220, 1665, 1908, 2247, 2235, 1938, 
         2262, 690, 2274, 2286, 1923, 1710, 1995, 2358, 1980, 2493, 2478, 
         2301, 1695, 1965, 1395, 1680, 948}], 
        Line3DBox[{724, 2539, 2554, 1201, 739, 2509, 2569, 1231, 784, 2524, 
         1591, 2329, 1261, 814, 1606, 1291, 844, 1621, 2344, 1321, 874, 2206, 
         1651, 1861, 2176, 1891, 1876, 2221, 1666, 1909, 2248, 2236, 1939, 
         2263, 691, 2275, 2287, 1924, 1711, 1996, 2359, 1981, 2494, 2479, 
         2302, 1696, 1966, 1396, 1681, 949}], 
        Line3DBox[{725, 2540, 2555, 1202, 740, 2510, 2570, 1232, 785, 2525, 
         1592, 2330, 1262, 815, 1607, 1292, 845, 1622, 2345, 1322, 875, 2207, 
         1652, 1862, 2177, 1892, 1877, 2222, 1667, 1910, 2249, 1895, 692, 677,
          2288, 1925, 1712, 1997, 2360, 1982, 2495, 2480, 2303, 1697, 1967, 
         1397, 1682, 950}], 
        Line3DBox[{726, 2541, 2556, 1203, 741, 2511, 2571, 1233, 786, 2526, 
         1593, 2331, 1263, 816, 1608, 1293, 846, 1623, 2346, 1323, 876, 2208, 
         1653, 1863, 2178, 1893, 1878, 2223, 1668, 1911, 2250, 1896, 693, 678,
          2289, 1926, 1713, 1998, 2361, 1983, 2496, 2481, 2304, 1698, 1968, 
         1398, 1683, 951}], 
        Line3DBox[{744, 1206, 759, 1236, 789, 1266, 819, 1296, 849, 1626, 879,
          1326, 894, 1356, 909, 1341, 924, 1941, 2151, 2136, 1371, 2619, 2589,
          2604, 2574, 1716, 954, 2439, 2001, 2181, 2031, 2454, 2016, 2376, 
         969, 2364, 699, 2307, 1401, 981, 2409, 2424, 2394, 1446, 1026, 1761, 
         1476, 1056, 1806, 1491, 1086, 2121, 1521, 1131, 1551, 1161}], 
        Line3DBox[{745, 1207, 760, 1237, 790, 1267, 820, 1297, 850, 1627, 880,
          1327, 895, 1357, 910, 1342, 925, 1942, 2152, 2137, 1372, 2620, 2590,
          2605, 2575, 1717, 955, 2440, 2002, 2182, 2032, 2455, 2017, 2377, 
         970, 2365, 700, 2308, 1402, 982, 2410, 2425, 2395, 1447, 1027, 1762, 
         1477, 1057, 1807, 1492, 1087, 2122, 1522, 1132, 1552, 1162}], 
        Line3DBox[{746, 1208, 761, 1238, 791, 1268, 821, 1298, 851, 1628, 881,
          1328, 896, 1358, 911, 1343, 926, 1943, 2153, 2138, 1373, 2621, 2591,
          2606, 2576, 1718, 956, 2441, 2003, 2183, 2033, 2456, 2018, 2378, 
         971, 2366, 701, 2309, 1403, 983, 2411, 2426, 2396, 1448, 1028, 1763, 
         1478, 1058, 1808, 1493, 1088, 2123, 1523, 1133, 1553, 1163}], 
        Line3DBox[{747, 1209, 762, 1239, 792, 1269, 822, 1299, 852, 1629, 882,
          1329, 897, 1359, 912, 1344, 927, 1944, 2154, 2139, 1374, 2622, 2592,
          2607, 2577, 1719, 957, 2442, 2004, 2184, 2034, 2457, 2019, 2379, 
         972, 2367, 702, 2310, 1404, 984, 2412, 2427, 2397, 1449, 1029, 1764, 
         1479, 1059, 1809, 1494, 1089, 2124, 1524, 1134, 1554, 1164}], 
        Line3DBox[{748, 1210, 763, 1240, 793, 1270, 823, 1300, 853, 1630, 883,
          1330, 898, 1360, 913, 1345, 928, 1945, 2155, 2140, 1375, 2623, 2593,
          2608, 2578, 1720, 958, 2443, 2005, 2185, 2035, 2458, 2020, 2380, 
         973, 2368, 703, 2311, 1405, 985, 2413, 2428, 2398, 1450, 1030, 1765, 
         1480, 1060, 1810, 1495, 1090, 2125, 1525, 1135, 1555, 1165}], 
        Line3DBox[{749, 1211, 764, 1241, 794, 1271, 824, 1301, 854, 1631, 884,
          1331, 899, 1361, 914, 1346, 929, 1946, 2156, 2141, 1376, 2624, 2594,
          2609, 2579, 1721, 959, 2444, 2006, 2186, 2036, 2459, 2021, 2381, 
         974, 2369, 704, 2312, 1406, 986, 2414, 2429, 2399, 1451, 1031, 1766, 
         1481, 1061, 1811, 1496, 1091, 2126, 1526, 1136, 1556, 1166}], 
        Line3DBox[{750, 1212, 765, 1242, 795, 1272, 825, 1302, 855, 1632, 885,
          1332, 900, 1362, 915, 1347, 930, 1947, 2157, 2142, 1377, 2625, 2595,
          2610, 2580, 1722, 960, 2445, 2007, 2187, 2037, 2460, 2022, 2382, 
         975, 2370, 705, 2313, 1407, 987, 2415, 2430, 2400, 1452, 1032, 1767, 
         1482, 1062, 1812, 1497, 1092, 2127, 1527, 1137, 1557, 1167}], 
        Line3DBox[{751, 1213, 766, 1243, 796, 1273, 826, 1303, 856, 1633, 886,
          1333, 901, 1363, 916, 1348, 931, 1948, 2158, 2143, 1378, 2626, 2596,
          2611, 2581, 1723, 961, 2446, 2008, 2188, 2038, 2461, 2023, 2383, 
         976, 2371, 706, 2314, 1408, 988, 2416, 2431, 2401, 1453, 1033, 1768, 
         1483, 1063, 1813, 1498, 1093, 2128, 1528, 1138, 1558, 1168}], 
        Line3DBox[{752, 1214, 767, 1244, 797, 1274, 827, 1304, 857, 1634, 887,
          1334, 902, 1364, 917, 1349, 932, 1949, 2159, 2144, 1379, 2627, 2597,
          2612, 2582, 1724, 962, 2447, 2009, 2189, 2039, 2462, 2024, 2384, 
         977, 2372, 707, 2315, 1409, 989, 2417, 2432, 2402, 1454, 1034, 1769, 
         1484, 1064, 1814, 1499, 1094, 2129, 1529, 1139, 1559, 1169}], 
        Line3DBox[{753, 1215, 768, 1245, 798, 1275, 828, 1305, 858, 1635, 888,
          1335, 903, 1365, 918, 1350, 933, 1950, 2160, 2145, 1380, 2628, 2598,
          2613, 2583, 1725, 963, 2448, 2010, 2190, 2040, 2463, 2025, 2385, 
         978, 2373, 708, 2316, 1410, 990, 2418, 2433, 2403, 1455, 1035, 1770, 
         1485, 1065, 1815, 1500, 1095, 2130, 1530, 1140, 1560, 1170}], 
        Line3DBox[{754, 1216, 769, 1246, 799, 1276, 829, 1306, 859, 1636, 889,
          1336, 904, 1366, 919, 1351, 934, 1951, 2161, 2146, 1381, 2629, 2599,
          2614, 2584, 1726, 964, 2449, 2011, 2191, 2041, 2464, 2026, 2386, 
         979, 2374, 709, 2317, 1411, 991, 2419, 2434, 2404, 1456, 1036, 1771, 
         1486, 1066, 1816, 1501, 1096, 2131, 1531, 1141, 1561, 1171}], 
        Line3DBox[{755, 1217, 770, 1247, 800, 1277, 830, 1307, 860, 1637, 890,
          1337, 905, 1367, 920, 1352, 935, 1952, 2162, 2147, 1382, 2630, 2600,
          2615, 2585, 1727, 965, 2450, 2012, 2192, 2042, 2465, 2027, 2387, 
         2390, 710, 695, 1412, 992, 2420, 2435, 2405, 1457, 1037, 1772, 1487, 
         1067, 1817, 1502, 1097, 2132, 1532, 1142, 1562, 1172}], 
        Line3DBox[{756, 1218, 771, 1248, 801, 1278, 831, 1308, 861, 1638, 891,
          1338, 906, 1368, 921, 1353, 936, 1953, 2163, 2148, 1383, 2631, 2601,
          2616, 2586, 1728, 966, 2451, 2013, 2193, 2043, 2466, 2028, 2388, 
         2391, 711, 696, 1413, 993, 2421, 2436, 2406, 1458, 1038, 1773, 1488, 
         1068, 1818, 1503, 1098, 2133, 1533, 1143, 1563, 1173}], 
        Line3DBox[{1011, 1431, 1731, 2046, 1416, 996, 1746, 2076, 2061, 1461, 
         1041, 2091, 1776, 2106, 1791, 1071, 1821, 1101, 1506, 1116, 1836, 
         1536, 1146, 1566, 1176}], 
        Line3DBox[{1012, 1432, 1732, 2047, 1417, 997, 1747, 2077, 2062, 1462, 
         1042, 2092, 1777, 2107, 1792, 1072, 1822, 1102, 1507, 1117, 1837, 
         1537, 1147, 1567, 1177}], 
        Line3DBox[{1013, 1433, 1733, 2048, 1418, 998, 1748, 2078, 2063, 1463, 
         1043, 2093, 1778, 2108, 1793, 1073, 1823, 1103, 1508, 1118, 1838, 
         1538, 1148, 1568, 1178}], 
        Line3DBox[{1014, 1434, 1734, 2049, 1419, 999, 1749, 2079, 2064, 1464, 
         1044, 2094, 1779, 2109, 1794, 1074, 1824, 1104, 1509, 1119, 1839, 
         1539, 1149, 1569, 1179}], 
        Line3DBox[{1015, 1435, 1735, 2050, 1420, 1000, 1750, 2080, 2065, 1465,
          1045, 2095, 1780, 2110, 1795, 1075, 1825, 1105, 1510, 1120, 1840, 
         1540, 1150, 1570, 1180}], 
        Line3DBox[{1016, 1436, 1736, 2051, 1421, 1001, 1751, 2081, 2066, 1466,
          1046, 2096, 1781, 2111, 1796, 1076, 1826, 1106, 1511, 1121, 1841, 
         1541, 1151, 1571, 1181}], 
        Line3DBox[{1017, 1437, 1737, 2052, 1422, 1002, 1752, 2082, 2067, 1467,
          1047, 2097, 1782, 2112, 1797, 1077, 1827, 1107, 1512, 1122, 1842, 
         1542, 1152, 1572, 1182}], 
        Line3DBox[{1018, 1438, 1738, 2053, 1423, 1003, 1753, 2083, 2068, 1468,
          1048, 2098, 1783, 2113, 1798, 1078, 1828, 1108, 1513, 1123, 1843, 
         1543, 1153, 1573, 1183}], 
        Line3DBox[{1019, 1439, 1739, 2054, 1424, 1004, 1754, 2084, 2069, 1469,
          1049, 2099, 1784, 2114, 1799, 1079, 1829, 1109, 1514, 1124, 1844, 
         1544, 1154, 1574, 1184}], 
        Line3DBox[{1020, 1440, 1740, 2055, 1425, 1005, 1755, 2085, 2070, 1470,
          1050, 2100, 1785, 2115, 1800, 1080, 1830, 1110, 1515, 1125, 1845, 
         1545, 1155, 1575, 1185}], 
        Line3DBox[{1021, 1441, 1741, 2056, 1426, 1006, 1756, 2086, 2071, 1471,
          1051, 2101, 1786, 2116, 1801, 1081, 1831, 1111, 1516, 1126, 1846, 
         1546, 1156, 1576, 1186}], 
        Line3DBox[{1022, 1442, 1742, 2057, 1427, 1007, 1757, 2087, 2072, 1472,
          1052, 2102, 1787, 2117, 1802, 1082, 1832, 1112, 1517, 1127, 1847, 
         1547, 1157, 1577, 1187}], 
        Line3DBox[{1023, 1443, 1743, 2058, 1428, 1008, 1758, 2088, 2073, 1473,
          1053, 2103, 1788, 2118, 1803, 1083, 1833, 1113, 1518, 1128, 1848, 
         1548, 1158, 1578, 1188}], 
        Line3DBox[{2634, 3069, 2649, 3084, 2664, 3264, 3279, 3474, 3294, 3309,
          3489, 3324, 3744, 3339, 3504, 2679, 3699, 3354, 3534, 3519, 3729, 
         3654, 3669, 3549, 2739, 3849, 3864, 2754, 3834, 2784, 3129, 2799, 
         2814, 2844, 2859, 2889, 2904, 2934, 2949, 3204, 2979, 3234, 3009, 
         3249, 3054}], 
        Line3DBox[{2635, 3070, 2650, 3085, 2665, 3265, 3280, 3475, 3295, 3310,
          3490, 3325, 3745, 3340, 3505, 2680, 3700, 3355, 3535, 3520, 3730, 
         3655, 3670, 3550, 2740, 3850, 3865, 2755, 3835, 2785, 3130, 2800, 
         2815, 2845, 2860, 2890, 2905, 2935, 2950, 3205, 2980, 3235, 3010, 
         3250, 3055}], 
        Line3DBox[{2636, 3071, 2651, 3086, 2666, 3266, 3281, 3476, 3296, 3311,
          3491, 3326, 3746, 3341, 3506, 2681, 3701, 3356, 3536, 3521, 3731, 
         3656, 3671, 3551, 2741, 3851, 3866, 2756, 3836, 2786, 3131, 2801, 
         2816, 2846, 2861, 2891, 2906, 2936, 2951, 3206, 2981, 3236, 3011, 
         3251, 3056}], 
        Line3DBox[{2637, 3072, 2652, 3087, 2667, 3267, 3282, 3477, 3297, 3312,
          3492, 3327, 3747, 3342, 3507, 2682, 3702, 3357, 3537, 3522, 3732, 
         3657, 3672, 3552, 2742, 3852, 3867, 2757, 3837, 2787, 3132, 2802, 
         2817, 2847, 2862, 2892, 2907, 2937, 2952, 3207, 2982, 3237, 3012, 
         3252, 3057}], 
        Line3DBox[{2638, 3073, 2653, 3088, 2668, 3268, 3283, 3478, 3298, 3313,
          3493, 3328, 3748, 3343, 3508, 2683, 3703, 3358, 3538, 3523, 3733, 
         3658, 3673, 3553, 2743, 3853, 3868, 2758, 3838, 2788, 3133, 2803, 
         2818, 2848, 2863, 2893, 2908, 2938, 2953, 3208, 2983, 3238, 3013, 
         3253, 3058}], 
        Line3DBox[{2639, 3074, 2654, 3089, 2669, 3269, 3284, 3479, 3299, 3314,
          3494, 3329, 3749, 3344, 3509, 2684, 3704, 3359, 3539, 3524, 3734, 
         3659, 3674, 3554, 2744, 3854, 3869, 2759, 3839, 2789, 3134, 2804, 
         2819, 2849, 2864, 2894, 2909, 2939, 2954, 3209, 2984, 3239, 3014, 
         3254, 3059}], 
        Line3DBox[{2640, 3075, 2655, 3090, 2670, 3270, 3285, 3480, 3300, 3315,
          3495, 3330, 3750, 3345, 3510, 2685, 3705, 3360, 3540, 3525, 3735, 
         3660, 3675, 3555, 2745, 3855, 3870, 2760, 3840, 2790, 3135, 2805, 
         2820, 2850, 2865, 2895, 2910, 2940, 2955, 3210, 2985, 3240, 3015, 
         3255, 3060}], 
        Line3DBox[{2641, 3076, 2656, 3091, 2671, 3271, 3286, 3481, 3301, 3316,
          3496, 3331, 3751, 3346, 3511, 2686, 3706, 3361, 3541, 3526, 3736, 
         3661, 3676, 3556, 2746, 3856, 3871, 2761, 3841, 2791, 3136, 2806, 
         2821, 2851, 2866, 2896, 2911, 2941, 2956, 3211, 2986, 3241, 3016, 
         3256, 3061}], 
        Line3DBox[{2642, 3077, 2657, 3092, 2672, 3272, 3287, 3482, 3302, 3317,
          3497, 3332, 3752, 3347, 3512, 2687, 3707, 3362, 3542, 3527, 3737, 
         3662, 3677, 3557, 2747, 3857, 3872, 2762, 3842, 2792, 3137, 2807, 
         2822, 2852, 2867, 2897, 2912, 2942, 2957, 3212, 2987, 3242, 3017, 
         3257, 3062}], 
        Line3DBox[{2643, 3078, 2658, 3093, 2673, 3273, 3288, 3483, 3303, 3318,
          3498, 3333, 3753, 3348, 3513, 2688, 3708, 3363, 3543, 3528, 3738, 
         3663, 3678, 3558, 2748, 3858, 3873, 2763, 3843, 2793, 3138, 2808, 
         2823, 2853, 2868, 2898, 2913, 2943, 2958, 3213, 2988, 3243, 3018, 
         3258, 3063}], 
        Line3DBox[{2644, 3079, 2659, 3094, 2674, 3274, 3289, 3484, 3304, 3319,
          3499, 3334, 3754, 3349, 3514, 2689, 3709, 3364, 3544, 3529, 3739, 
         3664, 3679, 3559, 2749, 3859, 3874, 2764, 3844, 2794, 3139, 2809, 
         2824, 2854, 2869, 2899, 2914, 2944, 2959, 3214, 2989, 3244, 3019, 
         3259, 3064}], 
        Line3DBox[{2645, 3080, 2660, 3095, 2675, 3275, 3290, 3485, 3305, 3320,
          3500, 3335, 3755, 3350, 3515, 2690, 3710, 3365, 3545, 3530, 3740, 
         3665, 3680, 3560, 2750, 3860, 3875, 2765, 3845, 2795, 3140, 2810, 
         2825, 2855, 2870, 2900, 2915, 2945, 2960, 3215, 2990, 3245, 3020, 
         3260, 3065}], 
        Line3DBox[{2646, 3081, 2661, 3096, 2676, 3276, 3291, 3486, 3306, 3321,
          3501, 3336, 3756, 3351, 3516, 2691, 3711, 3366, 3546, 3531, 3741, 
         3666, 3681, 3561, 2751, 3861, 3876, 2766, 3846, 2796, 3141, 2811, 
         2826, 2856, 2871, 2901, 2916, 2946, 2961, 3216, 2991, 3246, 3021, 
         3261, 3066}], 
        Line3DBox[{2709, 3099, 2694, 3369, 3384, 2724, 3774, 3564, 3399, 3684,
          3114, 3579, 3714, 3594, 3414, 3789, 3429, 3609, 3759, 2769, 3819, 
         3444, 3804, 3144, 2829, 3459, 3159, 2874, 3624, 3174, 2919, 3639, 
         3189, 2964, 3219, 2994, 3024, 3039}], 
        Line3DBox[{2710, 3100, 2695, 3370, 3385, 2725, 3775, 3565, 3400, 3685,
          3115, 3580, 3715, 3595, 3415, 3790, 3430, 3610, 3760, 2770, 3820, 
         3445, 3805, 3145, 2830, 3460, 3160, 2875, 3625, 3175, 2920, 3640, 
         3190, 2965, 3220, 2995, 3025, 3040}], 
        Line3DBox[{2711, 3101, 2696, 3371, 3386, 2726, 3776, 3566, 3401, 3686,
          3116, 3581, 3716, 3596, 3416, 3791, 3431, 3611, 3761, 2771, 3821, 
         3446, 3806, 3146, 2831, 3461, 3161, 2876, 3626, 3176, 2921, 3641, 
         3191, 2966, 3221, 2996, 3026, 3041}], 
        Line3DBox[{2712, 3102, 2697, 3372, 3387, 2727, 3777, 3567, 3402, 3687,
          3117, 3582, 3717, 3597, 3417, 3792, 3432, 3612, 3762, 2772, 3822, 
         3447, 3807, 3147, 2832, 3462, 3162, 2877, 3627, 3177, 2922, 3642, 
         3192, 2967, 3222, 2997, 3027, 3042}], 
        Line3DBox[{2713, 3103, 2698, 3373, 3388, 2728, 3778, 3568, 3403, 3688,
          3118, 3583, 3718, 3598, 3418, 3793, 3433, 3613, 3763, 2773, 3823, 
         3448, 3808, 3148, 2833, 3463, 3163, 2878, 3628, 3178, 2923, 3643, 
         3193, 2968, 3223, 2998, 3028, 3043}], 
        Line3DBox[{2714, 3104, 2699, 3374, 3389, 2729, 3779, 3569, 3404, 3689,
          3119, 3584, 3719, 3599, 3419, 3794, 3434, 3614, 3764, 2774, 3824, 
         3449, 3809, 3149, 2834, 3464, 3164, 2879, 3629, 3179, 2924, 3644, 
         3194, 2969, 3224, 2999, 3029, 3044}], 
        Line3DBox[{2715, 3105, 2700, 3375, 3390, 2730, 3780, 3570, 3405, 3690,
          3120, 3585, 3720, 3600, 3420, 3795, 3435, 3615, 3765, 2775, 3825, 
         3450, 3810, 3150, 2835, 3465, 3165, 2880, 3630, 3180, 2925, 3645, 
         3195, 2970, 3225, 3000, 3030, 3045}], 
        Line3DBox[{2716, 3106, 2701, 3376, 3391, 2731, 3781, 3571, 3406, 3691,
          3121, 3586, 3721, 3601, 3421, 3796, 3436, 3616, 3766, 2776, 3826, 
         3451, 3811, 3151, 2836, 3466, 3166, 2881, 3631, 3181, 2926, 3646, 
         3196, 2971, 3226, 3001, 3031, 3046}], 
        Line3DBox[{2717, 3107, 2702, 3377, 3392, 2732, 3782, 3572, 3407, 3692,
          3122, 3587, 3722, 3602, 3422, 3797, 3437, 3617, 3767, 2777, 3827, 
         3452, 3812, 3152, 2837, 3467, 3167, 2882, 3632, 3182, 2927, 3647, 
         3197, 2972, 3227, 3002, 3032, 3047}], 
        Line3DBox[{2718, 3108, 2703, 3378, 3393, 2733, 3783, 3573, 3408, 3693,
          3123, 3588, 3723, 3603, 3423, 3798, 3438, 3618, 3768, 2778, 3828, 
         3453, 3813, 3153, 2838, 3468, 3168, 2883, 3633, 3183, 2928, 3648, 
         3198, 2973, 3228, 3003, 3033, 3048}], 
        Line3DBox[{2719, 3109, 2704, 3379, 3394, 2734, 3784, 3574, 3409, 3694,
          3124, 3589, 3724, 3604, 3424, 3799, 3439, 3619, 3769, 2779, 3829, 
         3454, 3814, 3154, 2839, 3469, 3169, 2884, 3634, 3184, 2929, 3649, 
         3199, 2974, 3229, 3004, 3034, 3049}], 
        Line3DBox[{2720, 3110, 2705, 3380, 3395, 2735, 3785, 3575, 3410, 3695,
          3125, 3590, 3725, 3605, 3425, 3800, 3440, 3620, 3770, 2780, 3830, 
         3455, 3815, 3155, 2840, 3470, 3170, 2885, 3635, 3185, 2930, 3650, 
         3200, 2975, 3230, 3005, 3035, 3050}], 
        Line3DBox[{2721, 3111, 2706, 3381, 3396, 2736, 3786, 3576, 3411, 3696,
          3126, 3591, 3726, 3606, 3426, 3801, 3441, 3621, 3771, 2781, 3831, 
         3456, 3816, 3156, 2841, 3471, 3171, 2886, 3636, 3186, 2931, 3651, 
         3201, 2976, 3231, 3006, 3036, 
         3051}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     VertexNormals->CompressedData["
1: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
EzfQfYYvxwig71yx/+GGHmxjKJCMbntn5GDW605YfsMdEI2+NXjSYBydqYA5
Xwzdg/7k/tfoV+9zp4pyWMCDgT6lNzmdwDIzUlizFn+JbsgavWL4ZKM0OuuD
/7QG0EWU43g+okvVqlwrzO4Eqmf6+C90wbPDN9fvsgDKDqnMS7NU4vNCr8ST
P5tY0xlY5+3C/d5CQeIx9E0pj3yOnsom7CzLnOLoY3NGLlzoLQempWduZ5O2
HW9yXnF4Qbiw5on16GEGgY1JztkkMTVIUghdvsZkephKJScTFFQvx6LfC0rJ
2OkF898/PKpF38LQm7PpXTbhoebRHkRfjpdbeIl+pU1xmbRnk6iBFY0Udqx3
z7wGBb1K7ryI1Vw2efnZNIAH3d6tN9QSPbLoAe8OhhzCb0FXEM/mBR8mf3+8
tBbnzui+B6w55D+1sgZO9Flnlfqj6C2HXFhreHOI5cb0tihW3PfqNJfuRlfJ
2/+XRyKHFBwvqGZFf5zp93R1hkpEIqraHBVziEbUdEbIDi/I8LG/9R2d7qHW
sw61HDKSruawFf0051OGSnSrgfc6ojo55BxLj0wAixcsnTct4b0xDJdur5+M
aRsFt92/Irt/O0JTgVj28vVhaDleMlmEzqS/+fvgH0fwSfzwtAOdhUFhagC9
wLbr0MySI5Rv2RTwCj0oy3GKtn0U1M9fsf791xG4VnkcvNHzj9hP8aEnfw8o
Xr/iCNKWqwa66MvxUlNn0V0lbRg2/3OETONk7aPobWN5kyboObI7NNhXHYF9
fPMJZvRs5rmJIHTaX/pRPOucYNeUgtjktWGg2T0znot+8vaDgUM0TnDBWmpP
Bbo83YuxDnQlG0F+qfVOcP3xwsan6B2fDo7+Rq8RjzVTpHWC9t32i9bosmZ3
hzk7RuF5UEmBCh2Wl6v4roY+OKs7qICe6h+zcpHeCZ4MdTQeRAf1Pd9uo0fy
CJy8tcEJ/mN79WEderlv9FdP9FPnTfwMGZxATA80Ff5Sya2VKtaMpQRSRK0O
5aLHc/rqfWYp9B0Wn9iEGBPJPup/Nhzoh9OY6oTRK50GWbI5EslbkccXd6Bb
Xhd0OoAumcK0WUIgkRzLkRPdin6Ku+zAHvQDZorr82USiZm16AZGdNefbdU7
0O/dtf8hfSaR7HLV6aZDXxm4pceEXsyYO/DhciJZbalKX6Vzhdihez9p0VfG
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
g/jKZkHiE7lHeeskFHd/itFdxPPZvXvZDjvzJ/6ML8yTEFp3RvH2TwJ81Gi0
qsGe9G784WXsd+kjuoi/CLD416d1V/kscL6UVplgmgTSref2z34TII968pgt
9ugXjCwPsOv1uGwrWyLAwR3rKQi7brlV1/qWSeg8wJPWu0yAjGuf6XkqZsFu
7VxSGHZrTdejiysEMK+LuHkHu8Sjiht82LVY0hrYVgmQoG5RV4E97UCxRBbj
JHwyjLi6/y8BnrYoiu/8NAvssidnFbFv3VSbUf9HgAhjTj8b7MlPtXNrGCbh
3o8yJ4s1AnT0LwyXYnc3/2prgP0g0+qGxzoB4jW7FTkqZ6E3bfPgGP0kBPOv
BcZt4PEnVoRZYSffypmxxd7GW8v2YZMAjXWvx4uwt3wayVilm4TTHQZRrXRe
cFbh23a3dRpaZb8yWdGcgDKX4595rbmAW2ZJsxP232Pl+XYjCWjXvRaGE+su
sKPQLPTh/++ffnf2FpxPQN7pD2yWsVtY9WraY1d0DNBpX09ALyIDvnzYcIGy
t0L0tthZ26a5fDkSkfq+bZIOmy7wKP5U6W3sJeoJQ7JCiUhC4Z//ITpXGBY6
7HATO7NwUhr5SCJiqzUb/45dV2tB1PL//2vIm735VDURlZcdOZlB7wo8HP49
ZtgzTj6WUjdMRMuMD2NvMLhCuNOcvyn2QJyUvywTETFchMrP6AosnuJyJtgP
+SRmZTxKROJqamcGsZNF5EYuYbdo5bAx8k9EaRwdcaQtrnD37o7HBthntBuF
mWPxecmts4ZMrvDHsOaQHnbS6fqhooxEpJJ14iQHsytMD2t26Pz//w4rzDG3
CxMRRXdXWBN25Vom9SXWUeQnbz+bRqQi9Z/qfhfFI+EYN3PdMNsoimiOPXYL
e6PUDWsu7Jpih8/WsI+iHv9Zv0PYv3v6qHeJRcKlMdfP2RyjaPHG/eYfflT0
6fcLkafYdWRmIZJzFHnfEeAuwn4/oX7dEPvedZ8y5x2jSDBt7Yon9j12P/p3
Yn+veErh+s5RdI99e6oqdrIb//tO0Uj4Wynw+gzXKKIvOvuVCftstW5gNPaZ
x+JCB7hHEfH5O6FmXyoyuuBtaoj9jqPBU06eURTWrmUehV1H/OPhndjvPnzB
uIy9TJcj2Qj7lM78WodIJIzd3e04wjuK8vkY+/ZiN6g70ByFvUDzw3jNrlHE
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
LfwWMBt3NeLe7QlYP00RPIXuSd2TWLfHAmKdnbUm0Emif3mdXPqJKEI64DOf
BXwIFN1uYjcBslU/OHLvYz69WsllvBbgEH6nMn9mGsSVQs7SnMkmpAbEPPWW
NaGK4OT5gK72daM772w2YZKrdvYYutOHWNtc9O+Juvdunc8mmD6abduB7nd3
R9V79Kn6aGZelWxCY+l27fSSJqxv2PFkoxeerUmsv5hN6NpaB9ah/7iWb5uJ
fo22S97rUjZxbpf+1VT03S4/K9PRZ1l+tB29nE0orp7a4YNebbHCnYaeZVRu
O6aeTdjtZGk3Rf++d8UmBT3nbwhtzNVsYvlWSySg6yYMViShCzSoxlzVzCa2
zgbc4EM/P5+3MxFdaHzyyFbtbKIw5wj/8qImJLDetn6H/uPsg7pCnWzieFpj
fxu64wJbeTy6Tc80yfp6NpHeafguFz0/5TVnHDpNrvo/fr1s4uSZPvNg9Nti
7FZv0EvKw8Oa9bMJhiENcRv0vSlrxZnL0xARbupP7E4gzJUP8DaJqcO7pVza
//1CH8vZXt4EYq9ly8409FV5Q42M//3Hh/VVvgSCjcuOwxtd/P7G63R0tsfa
xbz8CYTKxU0sN//35PDRNPTdfZOOp/YmEN1bAxiOoq/VCh/533vHPA7oCSQQ
PRcYaFnQk38muaeid7xjHnMWTCAMOdxpRkTVQXR279cUdFemF+/ChRIIO7OJ
fwT6/T9BO//3s8KchvnCCYSogvpiJHr8+B+TZPT0kUCeVpEE4nls8pwDely7
emYSuoTeppY50QSC6rc4qYruVBi7lIh+3Pl2IPu+BOLHsvyYMLpg4K8z/7ua
UtuFg+IJRMfcg6FVEXVIuC4cnIA+XHB08xWJBKLdMauvDX1957XOd+jOHcGl
tpIJxKjb984sdFC/47TbdIgokE17RZc+Cl0H6lo0kshgn5F3JdFkiLgfctDy
Fnpmy2izSSIZ3Hgk9h1EzysLOExFh7/pDQ4JZOiOb179aDxEROcUrYhnjMKZ
PK5az3dkoNd933gO3fTmx3J/dHtpscrQt2R4oFr5ttFoiJDLDX48jv7Au6cw
Pp4MmX70jjfQbySdOH8pcxS4206n58SRYbeQt9IvwyFiXiqfNgN9TUnpdUUs
GeTFDrM4oMsdo61iyhqFobHJgKY3ZAhN4Prxz2CIsCwSf2SL/vi3kvNADBnC
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
YhRE
      "]], {}}, 
   {Texture[
     FormBox[
      GraphicsBox[{
        GraphicsComplexBox[CompressedData["
1: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
         "], {{{}, {}, 
           TagBox[
            TooltipBox[{
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], FontFamily -> "Arial"], 
              LineBox[CompressedData["
1:eJwd0wOfEAYAxuEue7Va1lXbsm1zC5ddl3XZ5rK11dJybbll27Zt20+9v//z
Ed7A4DZBIQGhLOB7oUIThrCEIzwRiEgkIhOFqEQjOj8Qg5j8SCxi8xNxiEs8
4pOAhCQiMUlISjICSU4KUvIzv/ArqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nI
TR7yko/8FKAghShMEYpSjOKUoCSlKE0ZyvIbv1OO8lSgIkFUojJVqEo1qlOD
mtSiNnWoSz3q04BgGtKIxjShKc1oTgta0orWhNCGtrSjPR3oSCc604WudKM7
PehJL3rTh770oz8DGMggBvMHQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlP4k7+Y
yjT+ZjozmMksZvMPc5jLPOazgIUsYjFL+Jf/WMoylrOClaxiNWv4n7WsYz0b
2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4
yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jI
Jz7zhW/n/wqYtIE2
               "], VertexColors -> Automatic], 
              LineBox[CompressedData["
1:eJwV0VdbDQAAgOFzItkNMhJ1WohQokRatK2Q0XSaQocGJRlJkpIiIdVf9Xbx
Ps93/4XCkYb+YCAQWCcootjEZqLZQgxb2cZ2drCTXewmljjiSWAPe0lkH/s5
wEGSOEQyhzlCCqmESCOdDDLJ4ijHOE42JzhJDqc4zRlyyeMs+ZzjPAUUcoEi
LnKJYi5TQilllFPBFa5SSRXV1FBLHfVc4zo3uMktGrjNHe7SyD3u84CHNNFM
C6200c4jwnTQSRfd9NDLY/p4wlOesTEvwnNeMMAgQwzzkleMMMprxnjDOG95
x3s+MMFHJvnEFJ+Z5gszfGWWOb4xz3cWWOQHP1niF8v85g9/WeEfq6yxzn9O
EjSi
               "], VertexColors -> Automatic], 
              LineBox[CompressedData["
1:eJwV0/l/DwQAxvGvjeh0FNLtiHIlQopSbiVnytGBXDk7RFKkg3LfUXKzg5nZ
Zmxjm2Huc3MNw5j7vs/e/fD+/APP6ynesU+L3rkCgUAXmcksZjOHucxjPgsI
IZQwwlnIIiJYTCRLiGIp0cQQyzLiWM4K4kkgkZWsIolkUlhNKmtYyzrSWM8G
NrKJzWxhK9vYzg52sot0MtjNHvayj/1kcoCDHCKLwxzhKNkc4zg5nOAkpzjN
Gc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7/48QFAjkIohgcpOHB8hLPh7k
IR7mER7lMfJTgIIU4nGeoDBFKMqTFOMpnuYZnuU5nucFilOCkpTiRUpThpd4
mbKUozwVqMgrVOJVKlOF16hKNarzOjV4gzepSS3e4m1q8w7vUoe61KM+DWhI
IxrzHu/ThA9oSjOa04KWtOJDWvMRH9OGtrSjPZ/wKZ/xOR3oSCe+oDNd6Eo3
uvMlPehJL3rTh758xdd8w7f04zv6M4DvGcgPDOJHfmIwQ/iZofzCr/zG7wxj
OH/wJyMYyShGM4axjGM8E5jIJCYzhb+YyjT+5h+m8y8zmMksZjOHucxjPgsI
IZQwwlnIIiJYTCRLiGIp0cQQyzLiWM4K4kkgkZWsIolkUlhNKmtYyzrSWM8G
NrKJzWxhK9vYzg52sot0MtjNHvayj/1kcoCDHCKLwxzhKNkc4zg5nOAkpzjN
Gc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7BIL9nyCCyU0e/gOifdHs
               "], VertexColors -> Automatic]}, 
             RowBox[{
               RowBox[{
                 RowBox[{
                   TagBox["S", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"7.535659314738926`*^-16", " ", 
                    TagBox["\[Epsilon]", HoldForm]}], "-", 
                    "4.281176842148333`*^-11"}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}], "+", 
                    "2.2489872871832529`*^-7"}], ")"}]}], "-", 
                    "0.0002379938401519114`"}], ")"}]}], "+", 
                    "0.059549244347758365`"}], ")"}]}], "-", 
                    "3.393021119493091`"}], ")"}]}], "+", 
                    "36.53569709016391`"}], ")"}]}], "-", 
                    "50.249990947568804`"}], ")"}]}], "+", 
                 RowBox[{
                   TagBox["\[Epsilon]", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2.364992030562556`*^-9", "-", 
                    RowBox[{"1.65924196371522`*^-13", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}], "-", 
                    "5.364225133072119`*^-6"}], ")"}]}], "+", 
                    "0.002746365997682094`"}], ")"}]}], "-", 
                    "0.3325176234286391`"}], ")"}]}], "+", 
                    "8.51507864273902`"}], ")"}]}], "-", 
                    "35.140935203292656`"}], ")"}]}], "+", 
                 "12.194427640553812`"}], "\[LongEqual]", "0"}]], 
            Annotation[#, 
             12.194427640553812` + 
              HoldForm[$CellContext`\[Epsilon]] (-35.140935203292656` + 
                HoldForm[$CellContext`\[Epsilon]] (8.51507864273902 + 
                  HoldForm[$CellContext`\[Epsilon]] (-0.3325176234286391 + 
                    HoldForm[$CellContext`\[Epsilon]] (0.002746365997682094 + 
                    HoldForm[$CellContext`\[Epsilon]] (-5.364225133072119*^-6 + \
(2.364992030562556*^-9 - 1.65924196371522*^-13 
                    HoldForm[$CellContext`\[Epsilon]]) 
                    HoldForm[$CellContext`\[Epsilon]]))))) + 
              HoldForm[$CellContext`S] (-50.249990947568804` + 
                HoldForm[$CellContext`\[Epsilon]] (36.53569709016391 + 
                  HoldForm[$CellContext`\[Epsilon]] (-3.393021119493091 + 
                    HoldForm[$CellContext`\[Epsilon]] (0.059549244347758365` + 
                    HoldForm[$CellContext`\[Epsilon]] (-0.0002379938401519114 + 
                    HoldForm[$CellContext`\[Epsilon]] (
                    2.2489872871832529`*^-7 + (-4.281176842148333*^-11 + 
                    7.535659314738926*^-16 HoldForm[$CellContext`\[Epsilon]]) 
                    HoldForm[$CellContext`\[Epsilon]])))))) == 0, 
             "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6], FontFamily -> "Arial"], 
              LineBox[CompressedData["
1:eJwNxGOAFgYAANAv23aXbVy6bF92XdZdXbqMy9rCmG1zC1tui1tuyzXUFrfa
8vvxXlBYRGh4jEAgEK24sQKBeMQnAQlJRGKSkJRkJCcFKUlFatKQlnSkJwMZ
yURmspCVbGQniBzkJBe5yUNe8pGfAhSkEIUpQlGKUZwSlKQUpSlDWYIpR3kq
UJFKhFCZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0JZRmNKcFLWlFa9rQlna0
pwMd6URnuhBGV7rRnR70pBe96UNf+tGfcCIYwEAiGcRghjCUYUQxnBGMZBSj
GcNYxjGeCUQzkUlMZgpTmcZ0ZjCTWczmEz5lDnOZx3w+43O+4Eu+4msWsJBF
LGYJS1nGclawklWsZg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYPe/mGb9nHfg5w
kO/4nkMc5ghHOcZxTnCSH/iRU5zmDGc5x3l+4mcucJFLXOYKV7nGdX7hV25w
k1vc5g53ucd9HvAbv/MHf/KQR/zF3zzmCU95xnNe8A//8pJX/Mf/vOYNb3nH
ez4QiB0IxCAmsYhNHOISj/gkICGJSEwSkpKM5KQgJalITRrSko70ZCAjmchM
FrKSjewEkYOc5CI3echLPvJTgIIUojBFKEoxilOCkpSiNGUoSzDlKE8FKlKJ
ECpThapUozo1qEktalOHutSjPg1oSCMa04SmhNKM5rSgJa1oTRva0o72dKAj
nehMF8LoSje604Oe9KI3fehLP/oTTgQDGEgkgxjMEIYyjCiGM4KRjGI0YxjL
OMYzgWgmMonJTGEqHwFOiasf
               "], VertexColors -> Automatic], 
              LineBox[CompressedData["
1:eJwNwwN3kAEAAMBvtbVse8u2sWwuu5a1Vf8iW2vZtm3btpZt3L13ETFx0bEh
QRAkOjo0CMY41nGOd4ITneRkpzjVaU53hjOd5WzjnWOCc53nfBe40EUudolL
XeZyV7jSVa52jWtd53o3uNFNbnaLW93mdne4013udo973ed+D3jQQx72iEc9
5nFPeNJTnvaMZz3neS940Ute9opXveZ1b3jTW972jne9530f+NBHPvaJT33m
c1/40kRf+do3vvWd7/3gRz/52S9+9Zvf/eFPf/nbP/71n0FYEISYxKSGGmYy
w01uClOaytSmMa3pTG8GM5rJzGYxq9nMbg5zmsvc5jGv+cxvhJEWsKCFLGwR
i1rM4pawpKUsbRnLWs7yVrCilaxsFatazerWsKa1rG2UdaxrPevbwIY2srFN
bGozm9vClraytW1sa7TtbG8HO9rJznaxq93sbg972sve9jHGvvazvwMc6CAH
O8ShDnO4scY5wpGO8j/Y1ntw
               "], VertexColors -> Automatic]}, 
             RowBox[{
               RowBox[{
                 RowBox[{
                   TagBox["S", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"5.2601039817943464`*^-11", "-", 
                    RowBox[{"7.535659314738926`*^-16", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}], "-", 
                    "3.4928217819593087`*^-7"}], ")"}]}], "+", 
                    "0.00048431255467153877`"}], ")"}]}], "-", 
                    "0.16617918856920982`"}], ")"}]}], "+", 
                    "13.716010953452912`"}], ")"}]}], "-", 
                    "224.64781248057005`"}], ")"}]}], "+", 
                    "450.43032031174425`"}], ")"}]}], "+", 
                 RowBox[{
                   TagBox["\[Epsilon]", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"3.2539818024176075`*^-9", "-", 
                    RowBox[{"1.8333925978002083`*^-13", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}], "-", 
                    "9.488302488347804`*^-6"}], ")"}]}], "+", 
                    "0.006503303086392308`"}], ")"}]}], "-", 
                    "1.108810883409416`"}], ")"}]}], "+", 
                    "42.28390685080488`"}], ")"}]}], "-", 
                    "265.81816432232154`"}], ")"}]}], "+", 
                 "117.1738489947312`"}], "\[LongEqual]", "0"}]], 
            Annotation[#, 
             117.1738489947312 + 
              HoldForm[$CellContext`\[Epsilon]] (-265.81816432232154` + 
                HoldForm[$CellContext`\[Epsilon]] (42.28390685080488 + 
                  HoldForm[$CellContext`\[Epsilon]] (-1.108810883409416 + 
                    HoldForm[$CellContext`\[Epsilon]] (0.006503303086392308 + 
                    HoldForm[$CellContext`\[Epsilon]] (-9.488302488347804*^-6 + \
(3.2539818024176075`*^-9 - 1.8333925978002083`*^-13 
                    HoldForm[$CellContext`\[Epsilon]]) 
                    HoldForm[$CellContext`\[Epsilon]]))))) + 
              HoldForm[$CellContext`S] (450.43032031174425` + 
                HoldForm[$CellContext`\[Epsilon]] (-224.64781248057005` + 
                  HoldForm[$CellContext`\[Epsilon]] (13.716010953452912` + 
                    HoldForm[$CellContext`\[Epsilon]] (-0.16617918856920982` + 
                    HoldForm[$CellContext`\[Epsilon]] (
                    0.00048431255467153877` + 
                    HoldForm[$CellContext`\[Epsilon]] \
(-3.4928217819593087`*^-7 + (5.2601039817943464`*^-11 - 
                    7.535659314738926*^-16 HoldForm[$CellContext`\[Epsilon]]) 
                    HoldForm[$CellContext`\[Epsilon]])))))) == 0, 
             "Tooltip"]& ]}}, VertexColors -> CompressedData["
1:eJztyLEJg1AUAMCHwRHS2UTc40NGiAsEQexULB3BQRwlZUiTBbKC2McxLK46
uFszPNosIqY84nJ4n5ei7N9p39by+vqmsfo86+6XvPfee++9995777333nvv
vffee++9995777333nvvvffee++9995777333nvvvffee++9995777333nvv
vffee++9995777333nvvvffee+/9Of8Pd+U34w==
          "]], {}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, AxesLabel -> {None, None}, 
        FrameLabel -> {{None, None}, {None, None}}, DisplayFunction -> 
        Identity, AspectRatio -> 1, AxesLabel -> {None, None}, 
        BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "GridLinesInFront" -> True}, PlotRange -> {{-5, 20}, {-10, 10}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}], TraditionalForm]], EdgeForm[None], 
    Polygon3DBox[{{-5, -10, -1.5}, {20, -10, -1.5}, {
      20, 10, -1.5}, {-5, 10, -1.5}},
     VertexTextureCoordinates->{{0, 0}, {1, 0}, {1, 1}, {0, 1}}]}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  Background->GrayLevel[1],
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.6},
  DisplayFunction->Identity,
  FaceGrids->{{0, 1, 0}, {-1, 0, 0}},
  FaceGridsStyle->Automatic,
  ImageSize->{476.12351112814804`, 365.3821661700535},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->All,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.5606530079269152`, -2.6805034614712606`, 1.3525026365553556`},
  ViewVertical->{-0.20111180696707373`, 0.3454200850412394, 
   0.9166455181522144}]], "Output",
 CellChangeTimes->{
  3.864993579319718*^9, {3.864993642963076*^9, 3.864993674295865*^9}, {
   3.864993733607375*^9, 3.864993800418025*^9}, {3.864993884222221*^9, 
   3.8649939173986483`*^9}},
 CellLabel->
  "Out[190]=",ExpressionUUID->"68b56c3a-3e22-42f9-9777-ecbda9d78951"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plotP", "=", 
    RowBox[{"ContourPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"z", "==", "\[Alpha]P"}], ",", 
        RowBox[{"z", "==", "\[Alpha]M"}], ",", 
        RowBox[{"z", "==", "0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", 
        RowBox[{"-", "5"}], ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"S", ",", 
        RowBox[{"-", "7"}], ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Epsilon]\>\"", ",", " ", "\"\<S\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Background", "\[Rule]", "White"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"ContourStyle", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "Blue", ",", 
           RowBox[{"Opacity", "[", "0.65", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Red", ",", ",", 
           RowBox[{"Opacity", "[", "1.0", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Cyan", ",", ",", 
           RowBox[{"Opacity", "[", "0.15", "]"}]}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Mesh", "\[Rule]", "None"}], ","}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Boxed", "->", "False"}], ","}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"FaceGrids", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Mesh", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
      RowBox[{"BoundaryStyle", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "->", 
          RowBox[{"{", 
           RowBox[{"Purple", ",", "Thick"}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], "->", 
          RowBox[{"{", 
           RowBox[{"Purple", ",", "Thick"}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}], "->", 
          RowBox[{"{", 
           RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pt", "=", 
   RowBox[{"Point", "[", 
    RowBox[{"{", 
     RowBox[{"0.4237131621171315", ",", 
      RowBox[{"-", "0.0336891534959879"}], ",", "0"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotPoint", "=", 
   RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"AbsolutePointSize", "[", "10", "]"}], ",", "Purple", ",", 
      "pt"}], "}"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "plotP", 
  RowBox[{"(*", 
   RowBox[{",", " ", "plotPoint"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"ImageSize", "->", "Large"}]}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "Infinity"}]}], "}"}]}]}], "*)"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8649822359750767`*^9, 3.8649825212133017`*^9}, {
   3.864982657815386*^9, 3.864982675709613*^9}, {3.864983235508698*^9, 
   3.864983275129622*^9}, {3.864983315539514*^9, 3.864983342770946*^9}, {
   3.864983563512084*^9, 3.864983563813168*^9}, {3.864984076058236*^9, 
   3.864984162679831*^9}, {3.864984207861273*^9, 3.864984247022616*^9}, {
   3.864984315179042*^9, 3.864984315818351*^9}, {3.864984401292039*^9, 
   3.8649844273851347`*^9}, {3.864984521904377*^9, 3.8649845444594183`*^9}, {
   3.8649845807687798`*^9, 3.8649848196189537`*^9}, {3.8649849003990507`*^9, 
   3.8649849050685053`*^9}, {3.864984968605974*^9, 3.864984992508771*^9}, {
   3.864985031167613*^9, 3.864985034733452*^9}, {3.864985073328313*^9, 
   3.864985112622179*^9}, {3.864985160798594*^9, 3.864985217887168*^9}, {
   3.8649853168656197`*^9, 3.864985368687689*^9}, {3.864985412626693*^9, 
   3.86498541669037*^9}, {3.864985452528853*^9, 3.864985504688786*^9}, {
   3.864985552707386*^9, 3.864985560352949*^9}, {3.864985606499276*^9, 
   3.86498561211338*^9}, {3.864985653203184*^9, 3.864985653329012*^9}, {
   3.8649861694390783`*^9, 3.864986169700523*^9}, {3.864987858689793*^9, 
   3.864987859302031*^9}, {3.86498789109317*^9, 3.864987979677178*^9}, {
   3.8649880530502977`*^9, 3.864988141778204*^9}, {3.864988175044867*^9, 
   3.864988175236624*^9}, {3.8649882068526363`*^9, 3.864988364340952*^9}, {
   3.864988502983749*^9, 3.8649885183251467`*^9}, 3.8649887346062326`*^9, 
   3.86498909174481*^9, {3.864989212044053*^9, 3.864989259364131*^9}, {
   3.8649895994891977`*^9, 3.8649896122367268`*^9}, {3.864989668556205*^9, 
   3.864989907554256*^9}, {3.864990078348362*^9, 3.8649902302893963`*^9}, {
   3.8649902986036043`*^9, 3.864990327701297*^9}, {3.864990747322444*^9, 
   3.864990850820496*^9}, {3.864990968047851*^9, 3.864990973970599*^9}, {
   3.8649910080271883`*^9, 3.864991013749405*^9}, {3.864991050373281*^9, 
   3.864991131845517*^9}, {3.864991172539446*^9, 3.864991194515459*^9}},
 CellLabel->
  "In[688]:=",ExpressionUUID->"e7eace6d-5693-4dc0-917b-03fa9ad504c1"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJydnXd0VdW2xkPv0nvvaAgJTQSBs1V89CrwEBAQaSogIAgoIkUQ6SDVQm9G
9MJVWkBPFBAVFZAoSA2RLoRQEgRC8nhj5Fvnjt92jvvu+ytj/MY3vjXXXGuv
vfY+a89U7PtKp/6Zw8LCTucIC8vy4O/sosU/b1e+knewavnC2UufD9w90+D2
5UEHg4PGTIjyvKrexbX7FsaNT3Gc+hafb2j58pRYn1581YiHt0QfruBFfXog
tc/W4yYPa3NoWKcJPX3+4iNqNtm2ZF5VL6zLrF2Tkm8HOrz0QcsKc476uBW/
9OSWf+ex6T9Fd4/36cUZp/zJpWd/FeeQ/j1ejkkt60049MjBK7/sNLnyRm7l
rcTQc+kvFo4NMH5xxmPxfoGunS5HHgzQX5z67ft2rCnf9aiP59ww+41HmsYH
GL/05NIzfrVLvTjHUXkjV97oY+Xhk0wvVIifcNE3jhOa1B69d8hZn4/05NIz
n7/tXfD93feu+OabOPXyp96K05q3VvzWvFU81ItTX/Fk28/T06/59OKMR5z9
Eqe/rjv6W+uD+kt/ceqVT3LFQ6489Dk2L3be/hpet943P9w6PqsnPbn03vFL
n9Z+voa3MdcnfQqUzOL05JZecdJfPOFmcObOtEe8ekVWHP8kcz7nQ27prf7W
Gxxb5emOZ33XXa+oGz/17nfRd/1KTy49fax1QJz66bcqj3599BWfXjz1UJ03
yyzzjaNPL16i6TPhlSeFexva7r4c2zW/ywO5Ne6aV+S6vphn6cmlZ7vSk1t6
jS/nj3zI5cM8W+ut1nPmU5x6a73VPCHXPOH1Lr142Oi4qBtztzk91xnFQ655
xXY1f6i3/KU31kNfnNKTS2+skz6uPCQWz/nKY4XDvKn9qs3qsLuQp/sdufLf
qtmWZV1Hh3k3vhpXs3W24k5PLv2P0TnbF7ubFtD8tLjmCdsVp17jMmx8j/J/
LQxxjQt9pCeXnvGr3ZEF/5jcscydAOctuXw2rLgT9fzK1ICuX+nJpaeP2qXe
yoPyTx/NN3LNH/pLT27pNX+Yf4tb/pqf1KtdcunZL3GOo/JPbuVf8b92bMbW
/h+HeX1KHt7/dPPSnvbb5No3/pK94fnJ+TJ5P7768Mveu+Wdnlx6xiNOf40v
fbRvCfsof9r8QCav7IXAlI/OVTS5FY/lr/WcPuKMX+2SW3mz9PKnXpzjZc1/
rTOcb9KTS8/+alzI5SP++nNPHElPr+zTi1t6jpe48kZu5UfzmVzzmeMrPbn0
HBeL67pmu+LU67om1/VLH+nJpWf8apdc6wDH0eJWfrQOU0+u8bI42xW32lUe
2K76S27pNY5s1+KWv/JPPdsVt8ZLnPdltUsuf3Jr/ui6Jrf2G9b1Yq0Plr81
vtIfbfVSwe0f1PTtu8ilv3xg+IpC30X49l3klr/6y32+9OTS00f9Ite8pY/0
5NIzfrU7eOmWToE84R73FeSaJ/SXnlx6+ljxK8/Uax5SL079v3lO9OVTcZLL
n1z9ZT4tbvkrHurVLrml17iTK8/MjzXu8iHXvOVzqPpLrv6SKx4+d6tdcunp
Y+nVL+qt/mq+0Ufxk2tc6G9xjZfx3snHlc+kFbs2FFldy3uycPErOyJC93dy
tbv11W0zun5cy7cPIZdP14nVes/oFunbh5BLTx+rXfWLcVrc6q/Gnf7ijNPi
ivPUU9HrtidG+u7j5JZecW54rmLta/WjfPdxcstfeaDePfeBS89+idPfPRfD
R5x51nVBruuL+dc6QC4fxik9ufT0UbuMRz7kun7pI852La52mU/FSW7p3XMQ
8m9x9/4B3PJ3z1PQW/sZPb+Q6zmI9wvpyaWnj56beJ+Vnlx6+ug5jnpxxmP5
6H0pud6v0sfi8jHWNx/Xe2bjOvVx6emjeDjPpSe39IqfXOPLeKw8KP/Geu7T
W9z6fUTjSK52eX/UvCKXD+/v0pNLTx+rXV1fjNPi1vWi/JArP4xT8XAd0DiS
q12uD9KTS8/5YHHlje2KU2/FL8545MPrwpqH4tTLh3orTuWH427te6313Oqv
xp1c427c931cevro+mW/tA5QL05/+TCf1nqovJFr/jD/1vyU/5fLpw07ElPc
W7HlzaFLwk8ElQdy5WHiwDIt9vxS1DuY2mrcmnpnTa5+0UecesVDrv7Kx2vz
TLHijU8GGb+49HmObRl1a0xBb/CEI+sbjLvh4iS34lEeqLe44iFXPIlvxi4/
fTqnd77G4A8LF80eq+uCXPO5zvxTx1vOe/AceHH8zsaV7gWlJ7f0GnfGY3HL
X+st9WqX3P2+hn6J09/Kj8UVf40VvTa3+DO7F3uyxPGcSx9y+SRXnORuH1vj
2+RKQ7N7F37L2fLntAJOT271S/OKXPOK/ZWeXHr6aL5RL85+Wflx6wb6pbw1
2xzR6H5SNq/N9wl535pd2OTKD7n1O4XiJHfrcKMnwmLibgY6lNuy9ck9F52e
3Mqbrjv6W9zdl+Hv1mdw63cZjRf11jjKf8mY8S+22ZUU1Dqj5xFy9zxyo/Nv
zzVKC5a4/ETRXccvOz259PTRfZN68WHDqm9svj8uePB66mtl7h41uRWnnnPp
L0695gn9xd/++OFp6emFY89+3Lbl4evJrl8Hsx6Mv7UiT+yeUgn3iz92w3Hq
1S714tSrX9RbeXbPfYfaFr874lqA5wPJ3e/46K/FFSd93HsGzDf3+zu4pbfi
dO/Vwd3zL3wsLh/eT7WekGs9Idc6xvu7xS1/a12SD7l82C+3jwKXnj5uvw29
OOeh4uQ8tK4L5Zl6ceZH7ZJb7brnHcx/ceqVH+rFGb/FlU/6i1OvflHvngsQ
j3uPgXnu3mOAq7+8TqUnd+9/4KP7AvXi7Jd8uH5aXPmkvzj1Vn7EGb97vgZX
PtmuONu1xld5YDzi1LvnLOjFmU/r/qt9BbkVj6V3z5vQizMe+bBf4tRb80T+
9HHvPTBeFle7HEerv9b8t/alip/cPediX2pxzf86Nat9smpPVu9mzKTP0tNL
u30vufteo9vhY7E1snk7KjfcOPZgcacnd89B8HHnxqEXZ7+UN3L3PjOjX+Pf
nNHr26sFXH64r7a48kOueMjVX+bTyoPWAXL3HIf8uOdQcGu/JD3nj+Xj9v/g
yg/jdN8LgLvnMvi4c/jQizOfFnfvmTG+1rhbcWp8Gaf13kP7PXL9XsZ9kcX1
Oxp9xKnX72jG+xOfj/Tk0vN9guIkt+JRHqi3uOIx3vP4zte55z5w9/wIrvHl
uVaLW/66rqlXu+TuOffvz6P69Hzvp3HR8wK5njuYf3cOGc+/7jw2uMaRz/XS
k7tzU/DR+FIvzjit5xSrv+79M/bzirNvjS03u+0Otat5Re7mFXzc79F//z7E
x608uPNjf/8eyTpn6DtvqflpnGfzcel57tHimudsV5x6zXPqxRmPfDjPdX/h
uThx6t17WujFjXOevngUJ8/XKU5yS6988tydxenP9//GuUefXpx5cO+7wOVP
bq1L7vka3Mq/e+/69+ckfeMof+qtdq39j9YB3vfFeb+2uPueFP7i1GtdJdf6
Rh/3XQ+49Izfei/kzuP9/XOE7/2V+67h758LfD5ax6gX5/5Z+eT6Jk69O/eC
fa87VwMuPfOjfJK7c1Pwced5wN33O4jfeg/pzjXhuVKceneeCnpxPj9aXONl
PFf63uvqPkhuxS+98bzsi0d6xiNOvTv/ifnmvt/BfLPiV36M533ffkPzivtJ
tw5A785pYz646x16cfrLh/Nf8RvPoW5+doyaWve3/AWdnlx6+rjzitCLM05r
XVL+eX25fSDWPYu77xDh7/aZ0Ku/xvOgz8d9//j3z4m++K11THkg1/pA7s6X
Is9W3hSn8dwa+Dln2E87slX0/T5Lrnmr7yuLTDu4rG/dfE4v7v366/edCuZz
+r7T169bcLyy735Erv62q1Rr6R+PVfatt+SWXu2S67pIOXrjQunWlXz3EXLp
mQfWf1B/xfeMe+xw75qVfb+H0l+cebDyJv+4TF7fmG5VfPsKcunpo3apV57J
lWfGL/2k8Rc/Xf7flXzzlvnh98Xi0jNOzWeOozjjtLiuO/qLc3wVJ7nbL72Q
O8ejdyr4fvenXvvhO7k71m6aq5zvd39y934P/trHUi/OdrXfpp51LZrVf/t8
zbCQDznrWogrTs5z7c/JtX/m/JGeXHr2S3pytz/HusT6POLS5+/a+MunK5Xz
nZ8h1/XCfOp5gZz1alYcmN043667Tk8uPect67FIz7o34laces7iOFrzQXrm
2eLqV/fPkuc3KVTR9/6BXPcd5ln6qiurt2z7uG+e+65HXb/0Ed/0+uiULl3D
fc+z5JrnOv/cNXin69xASC++stDO5/M2COmVt79eXDr/6ui7rl1y1jEQt/ql
dYz90vpDbum1/pOzvpDmD+sIiVOv+Fm/SFzxMM+aP+Q8r648s16HuPT00Xzu
2u6HbxvceMT3foPcisedU4XencsF5zl8xSlOf3deFD7uHDu49PS3fKx5qzzw
fq3x4n3Z4prn9BHn/Vqc65uuC3JdF7xfu/eo4NKzXenJrfVH+yjOf3H2l/VP
hlQ6fuvJa3lNrnbpI95mZJtMTzVJDfC7HnJdj7eaLz9U5fd7AX7XQ866HPxu
kVzXNdsVp7/ys6T0jZXZR90L8HsccitOy1/3NfqwvgG/Cya38il9nzvPzP3o
xfsBfn9Kzt+D+N0ouaVX/Oovv5+i3n3vBq7ri/2SntzSK37mXz7k8uG4uPOH
GZzfSZFznvD7LPq784TQW+26714xju47VnDps/60rs9b2UJc8ZT57NTU5k+H
+b6TJbfqw0hv1ZP59vXhVx6ul8VX74vc0mtcGI84+6VxIde4FOn02bXfa/vr
8JBbeuWN3Mq/+kXu3g8b9Xb+07o6twq0yNpwQBZfnTRy1tvh98jk0vO5Rvdf
ctYh1HMK6yKKS08fd/4hQ3+h0f5XR3TJ5zjvm/Ih1z6Hz3HSk0vP+7j05JZe
+yXGYz0nap9DzvqQygPrK4pLz34p/+TKJ9tlvVONl9VfPcexv+Jcb937Z6yH
1jps6d37bayTFrf83ft/6Nkuv6dmv6z9j/ud6Ozm+AIHKvvO7TBv1nhZ4+vO
v8Hf4u73656tPny0jW+/6uPSc9wVP7ni/2FgVPs1s+v4vn8k13rb8fN9h94Y
UccbVG5A7VOHQ3py6emj9fn5l3InpKfX9Tb9VaXpmlxhTk8u/blMhQtnSYjy
eg7vNLJoMI9bz9muOPW6r1Fvcatd8UIr+u0cmS/SV7+FnN/jD273ZaD1/sK+
798zJwe6PBVT2OnnRO6pNm9dlK9eB7n0bJff+6tdK/8aR/bX4hovxqPrkVzX
F32kJ5eePlofqBenXusM8yO+q+EH07Is8tdRIWf9Co2X5cM6HtKL87rQ+HJc
xKlXnNSLMz/WexLl33h/5erqPLajyeis1UJ6cunpwzpC0ot3zhzMdXhjlK9O
C8fR1ZfA+wdX5wRccRrvK3xxKm/krHek+FnXSNzKs647co0v43R1NsAtvauL
Am7Nf9bZ0PpgXdfWuqfxoo84rwv5kKtf5JaP4vxscbYx6afDfXVIyFmn60r/
cYOn1Qq9NyCXnj6Kh3rW5eB7jHZrR7auN6emr24P/VnXS/7i1LvvttAu64zx
fQ65Fb+VT/d7Gfrl3oOB67qjj/Tklt6994O/OOeJ/Mnlz/ksn6l3hyYnhUX6
6oNxPRenXv7cVyhv5Nb9Qj5c/637iOKhvzjvF/Ihl57+iod6q79W/MoDfcSp
1z6WXPtYtdv4UJ/sickhPbm179XzI+ORnlx63r/0/EWu50rel6Unl57xW+2K
00ec/dXzAv3F2V+LK89zG4XXOb/AN098/uKKM6pK25ZVz+RxPoxf+ed1qryR
sx6I7kesUyEuPX2UN+qt/Os5mj7iXH/ULjnrn6hdy0fxkFvzSj6MX3km17iQ
axzJNU+YB+nJpTfWZx9nfaTf1jd65JkTbp305c3yZz0l6cW5T1PeuL9iPSvd
r8Xpw+cpzX/r9zhLb+WT9aDUL+s6Un+N9dyXN9bdYh0Ycs1z3selJ2e9L9af
oZ51z1hHiHqLKw/k6q+xP/FxjSPH3Xp+sd6TKD9cP8WpV944jtKTW/cX5Yfc
GhfljdyaJ6yLxe8+2C/Fw/jFl5x9P65U5iy+/xtFzu8Qk9ZuXduo+jWnJ5f+
Ypfy6yvXTQ7w/A856xIMey9/vXev3nfnZ8ilz56aY0+j3vl8/0+HXPnXuVb+
nx1y9x008uDqbqG/4sf6194YHpHP93+L6C9e++786Gc+K+6rp0ROH/1/DelL
/2N9uTYLi/vqO9FH840+rLMk7v7fyqQff3ticWi8WG/hu4hS01/8+L47H0W9
4idnfYZxfSMffaTifddf8SrfVYlv2f9+0BpfzRNy1gvyhq+8M/Yf15yeXHp9
Rzasr1dtzxh/PStxxcM8W1z5oY8131ivif9Pjdz9bgsfcc5PjTu5q2+WkZ8N
x/Z3vLcs0enJpY8+0H1BmXt5ff8/i3pxtqv5PLjdnl15Dmb2/R8r9ovfm+t6
tHzULrmru4j5ac1/1h2KS204M/fJVHd9cT6zzhj+P45vPvB7YXHFSa52uQ5Y
/uLb9zW906zU1QDrroS9cnZpzk5XAvzuUt9fbPqi4bNV8v3u5hW5q3Myu3P2
gb8eD7JeDTnr9kxr3Se7d+6y05O7727g4+oOgbvf8REn6/mIS888qF3qxSuM
+XL7zKY3Azy/R275u/r84KwL1G/PtdoXd6Q5Pbn0bNfKm8aReWadmQmth6f8
3viGO89APb/3kZ7fE0nP76GkZ30q6VknSnp+PyU9v5NacezEEwtTkl275NT/
NfLC4lH/THbnCtTu0XNvtIn567rjbJd1ruTP757E1S/eL1h3SHprXFh3SHrW
HZKedYfcOtB0WL33Ej5x60aNxV1+eTvpD7c+NH96/KM99hX31WviOqP4OQ/5
XXaJO1lPbaid5uO7et1957tRab56X4rfur6s/MiH+bE465jJh3WWNO6ssyQ9
6yxJz3pKatfirMMjf9ZZkp51lqRnHSHF4+r9nlzePLHZsSDvy+TMw9Firbu/
NeRPp9c62aF1/kyryx4zufu/TjX/nDbqi6NB7kPoz7o66q98eF+TntyKx9LL
n/PNmudWPln3SfcRcbYrH3K1O27NSxejV4XaVZzk1jyUD/2l5/xR3siVN7ar
/Qa5+7+xFZZ2m5gQatfan7D+5LTa7R/b3znV6cWjFjdLuLwk1enZLutTKX7W
g9J8Y70m6V2dYehZD0rzk3WlxC29Nc9dHQBcL6wHpfns6gxAr3iot8ZL7ebs
U2vv0Rm3AzyHRq55u7HuxIUx1W8HeA6NXHr6aD5TL0695jP14v1mHr+Vcu12
gOfZyC297i9sV/yvY9UeHd87JcDzfuTKJ+OUnlx6+igPjFN5JpeePsoDuZVP
q7+u3juem6znLM03+rg69lg/rXWV9am0rlrcmp+Kh1zxM04rfuk5TzS+5Nb1
JX9y+XN8pSe39IqHXPHwPLD05NLzfLL05JZeceqcIX+/ILf8Nc+pV7vk0rNf
rq51Rh0S/n7K89uW3opT48V4xBmPxZUfxqP5T26dD7f0ul6oF2e/WKeFv6/R
R5w+8mc80vN5RM9Zvee++E3f+OK+OmnUs85Y2KLYba/mjnXPZXwOsvRql3or
Hj1vkrvvqjLqULHuCjnroSke1nMQZ72IpMk7O6T2TnJ6cktvxcm6cGpXnNcF
32spb6w7d3T/S+OfHvRH0PLh+y75qF88z6z5Q+7ex+IctavLCi49fdzvKdCL
U+9+l4FevPG1ZiMuFgid05YPueIkd+/tcT1anOfb+bskuaVnf/m7J7+L0fM4
uZ7HuQ5Y3/tYer1nYH4UP9uVnvFrvpG7+qsZ48jfPcmlp4/uF+SuLi58rPuL
Na/ce3Vw+TM/0pNb8ZDz+25y5YH+Frf2aRovcs0T7tOkJ5eePppX1Ivz9035
k8uf+y6Ly5/7QOnJLb3iIdd9jf0VZzwW13pLrvWc7UpPbul1P2WcFrf8dR+h
Xu12zhHX/8PdKXwucD78DprzQfnhuFvzxMqn+sX3S+oXuft/x/gdwf3fZHDp
6cM6lt2SD0Q2n5ru9OJhPfb+PuCHdKf3vFx7T/c/6Z7L3P8/BWcduQLl+m1e
m3rEV+9LXPoWxaY3+vHdP/m+yBe/+w43I868j5w7niMtzce/mHNsSvUn0311
z/R+TP7MmxWn+z+n6K/F5c9x5+9u8pee+1i+z9f+h/XN9HsxufZprKcqH3Hq
NZ+pF2ecrl5iRp00/n5Hznp9Lcp9u+5E6SSnJ5ee7bp6Vtivsk6XfMR5nVpc
40uu8SLXfOO6IR/jPYOPWz6sx8vfYclZd1HnIlh3UfmRXued3PuxMUWWHBjY
wp07IpfevTeDnlx6994JenKd92O74vQXp4/ade+10C659O5cE/Tkapc+4tTr
XCL7Jc5+ibNfOm9JH3H6iNNH/oxfnPHLh3px6pVP97se8kkuvftdEnpy5Zk+
4tTL3/1uDn9y6d05HOjJ3TlV+IhTrzwzfnHGrzxTL069fBiPOOORD/Xi1Ov/
RXIeinMeinMeDhozIcrzqvp8xOkjTh/5c36Kc37Kh3px6vW9OeMUZ5zijFN1
b+gjTh9x+sif8YszfvlQL0698sb5Js75prxRL069fDjfxDnf5EO9OPXKA+MR
ZzzKA/Xi1MuH8YgzHvlQL0691h/3vhfrD7n07ntS6Mm1LtFHnHr5u+8f4U8u
vfueEXpytUsfceq1jjF+ccavdYx6cerlw3jEGY98qBenXvlx3yEiP+TSu+8x
oSdX3ugjTr383fca8CeX3n2vAT252qWPOPXKM+MXZ/zKM/Xi1MuH8YgzHvlQ
L0691jHON3HON61j1ItTLx/ON3HON/lQL0691jHGI854tI5RL069fBiPOOOR
D/Xi1CsPnA/inA/KA/Xi1MuH80Gc80E+1ItTrzwwHnHGozxQL069fBiPOOOR
D/Xi1Ot9Avc54tzniHOfo/cV9BGnjzh95M/9jzj3P/KhXpx6PV8zTnHGKc44
9V6LPuL0EaeP/Bm/OOOXD/Xi1Ctv3C/5zqMib9SLUy8f7pfEuV+SD/XufRf0
ygPjEWc87rwr9OLUy4fxiDMed/4NeveeFnq9V+Q8Eec8Eec80ftS+ojTR5w+
8uf8Eef8kQ/14tTr/B7jFGec4oxT5/HoI04fcfrIn/GLM375UC9OvfLG+eb+
jwbmm/u/HtCLUy8fzjdxzjf5UC9OvfLAeMQZj/JAvTj18mE84oxHPtSLU691
hvsZce5ntM5QL069fLifEed+Rj7Ui1OvdYbxiDMe9zsR9OLUy4fxiDMe+VAv
Tr3ywP2MOPczygP14tTLh/sZce5n5EO9OPXKA+MRZzzKA/Xi1MuH8YgzHvlQ
L0691gHOB3HOB60D1ItTLx/OB3HOB/lQL0691gHGI854tA5QL069fBiPOOOR
D/Xi1CsPnA/inA/KA/Xi1MuH80Gc80E+1ItTrzwwHnHGozxQL069fBiPOOOR
D/Xi1PP/DIrz/9m5vP2H9Yetern/17q77rtC/B89xcP/xyfO/+cozv9LSM78
8P8tir+cJzL5nzvyxCZcHzNyRuCGu1+fyH8mKu5cMe/tiTGNBj10Jji8eXLV
N97YFLx3c/ikElmKe+Mmvj12+fZ4dx6g7b4GrXJsK+69f6j468M7nXQ+CcH+
ax9NKuu9c+ZIkwGbY9z9+r3UoV8PvpbNC3utYuYsi0P7tBMRuWrVW/9dYM+4
8vtmTdjk/Ounvbrsr+rZvAtbm2w/ejS036sb88fwlOM5vfaTLk0tXS20H9t3
u110jSEP1u3pc6OvZino+KU2635779WC3uMH0jZPnhXqb+6uA3JceCefd/n9
sXPbNAvtZ3z11TN421Vp+a7+a33yDO6r0w4f3zrP+ucZ3FePGuO1rFLOIW2b
3XD5zOlFrsodcTUwMuN7QHFfneoM/vGcc5899HxK4OEGi/YWiA7tb7PNjj80
qcaDfRXG5fmYWZlWzrwdYP5938Vn8B9+evStuCblvbVfzN5ZtuyPjv8880iP
Kc3CvFNdd6fkOVHExfNRdMW4RkvTA2fnfbPyxDcFfNdpvpSIjt0W5/F+mFAw
/qMZhwLk5XKNqnN48++B5M67v14/415gU8eSf/18KpPpcy6pR+lDP3zj81mb
af0XdW++F4jpcGzw5Gxpgfafvn6z7Ixc5rrx7+ppW/rXTpY/fnh2mPfgyf6n
r7KWNP2t9eT/W0f9/xq/2q24sO8nmytl8ro2XLK7zicVfOtM+Un1Hp++p5Lj
E96JWln1tzBvSnSpQ6NqlXV833t50tZ+W8zLVmZq1+1Vz7jvyHqVz1/fC0sI
9ouLP163wKnQdYf/Jyheo+SvTXeuvhts9Wzyqe+KXXKc/8dQ/L8GVC/fYcjh
wISsQyaGP/Sa4y1i8s6dVfZ6oEj9FvsbzTrjePYiR15eMKZAbNw7E+dsOXTT
91yj/58onuvd8MTBg9OCnyU+dP9s4mXH00c3rNb+TvbYhEc3dkh/JSkU/7Ji
WwLXi3mX41qVunYl3p2D2puYrfSpmWmBhbmTt3d4LVRnifPzpw+f2fRn8I8g
9TovSq48PzQz8lqWAsW9guW+KfT1/HgXD/+/s3jFvQ2e/u+qpb2cQ8fmnnTr
m6B1Hd3u069nzg93+vjlGvE7B9c94uNPbn7qoVXPnvbxGk/c+WVoqZ+DI3K3
/urs49m8T66fbtpyUGid6dd3+dR3DmX1uv+5Oj59VOg9AP8voVuHE09M7DAj
pxd9ekqBDlNyOD5+YZdaZeIfXHVFXsmz6Hxo3aubEre1XNYC3qWIXwa+Hn7b
9bdriflD7yx70M+VvzZrVzKT07/Yo8LXS/+rsLdu5to5S7MlOv3Ign9M7ljm
ju/9z8Jed56rd+J2oO2vN9tuaJDseO/BRb/PsuBe4Ndvn1h8tXHo/vJBZLmD
z5ZODbz+Rr1n40+F1ofWGfedygdbFUkNL+f40oz7y0t/NktI7hG6v3z3Tcu4
SntTAw13L7iZZUJRx/fmHl6t/tj7gSHz2n0wsHzB/3j9sdYNi7t6BayHoPtg
lrq9xhQqHNtz+8yUKQOTfc/77nv8DO77Dj2D767/3bDp+7LFDn376+Uj/vcc
YQZvfPfS1Oij+wM1dlX/5d2UDcGeH28ZmO2txOD08svT2zdLD+ybHLy+vlxo
nfd9v5PBb6x5JXvHfJm9863+ceDHy/ed/555P9wY/691YDL4poKDWowbmRLY
mvRu2QVv5nfzp02J1IG9myUHsk4O3K0+P7RvmRAZtqJx/duBxT0eXjC7YhHH
27fZtfr6+w/4V/3O5BtRInRd8HvJDO6rG6Dr5eMGCcv+tW6PngtSZh9+7cjN
wJUqJYdlzp3m9NOenf/Ui+Oye3nTogccmhHKZ5fxLSJbnr4Z6H+pYeO5Ny46
3v7y8HrnKscFF3UrOm7n3KPO59icgXcHRcUFny26aHyD6Ued/slXw38+nCct
uLx7hwvh+y87vnrtlLZpDat6u+v/48b1gSmBzFq3G5V+eVuZSl6dbckDp+Y+
7/Txsc/8uWNvhNe0UNMG+1KLufFKyjr2fPymiAc+FZ8sv7mYuy8fyLzqhfoT
w736OdbGluiU3+nb5dm4ptfKWt77pxY/9GLV0L6u68RqvWd0i/S/B3iuYu1r
9f2/h556Knrd9sRI3/489YVyCRU3R3hzmq8okuefxdx3YZnaVS7d7wG/0P/k
gHsP+L1GLxQse/VKMLHjvNvB7OHe/phK11dfz+t8/piY+sb8HjW8RG/dN4dz
Z3H8dPfTjb+KqOz21cpbx53lbsw+Udm3f/bVV8/gvvrqGXzuhWnFbhWM9H7Z
dmHxjzGhfamv/rDuy6zfq3yyfmAGnzf10tz9D8Yl8cqni1IiQ3m78lC2gt2n
V/Y21rg5vmWTJDfuVd5pMefymore4LeOZ9mQ/w/HV414eEv04Qq+eb7pt5O3
ej4c4d2rV+arrnuL+OLkfpvj1fjjgk1LdPo6UOTikPLnAzW96Gpf3Cr0dUFz
vj0ze3rfX1aeDZD/c8aeHJ2/vOLjb3balefqFxcDbLfVuQO7X0s+6uPJPQcP
f+LAQZ9P9R+67dg2Oz5Q6mivx4vUD/cOHxn60sC40P5/dcSThe7djvD6Thww
oHJi6LnjzNjobncaRHpVns2xdMVXofvLrNHT0woWj/LOtHo3aXhKaL93ZtPy
F3rERHpNh4zJtai6Pc9nvDSyaXrueB8PtpnyyPfXjvh4wo0jc+vVvujj22qt
u1Cy3Fkfb5n0V7HXZ33lu460//lgR8JL2RMf9g4NuHVp6Q85XZx9js2Lnbff
/7v/1XcX37v7QQ3vwJo5z249Fbq+upwoMLhn9ure5LaFb43rku7m1YiaTbYt
mec/1xQsPG9i356VvCab2g95OhBa/6cXaTN96+jKXtvkckmRLxR1vHvy4PHH
Iqp4MYt3l7owt5Tjvv+Dqfv7vJwfHO1Tzvt8fOcXdtZJdeut7/8X67mM/0dD
18UL2zrnK1/Hy5otc+7TzbI73j/vqEWLS0Z5W94sOvbwqtBz2Wd570z5dqP/
3NGnR8oU2pka7q0YtTLXywmh+RP11nOJW0pHeCfeK7T6XMnQfsZXRx3zZ3bG
+N6a+e3gWo8fCl5eP65wkQ7h3uS03tFP5QjNw6I/TWi7rnwlL1ii5Z8Rj+Zz
617M299U+mJEHe/yY00S6h4O9Tcx6cygS6treUsqdGv1+PeFHf8fnzRriw==

    "], {{
      {RGBColor[0, 0, 1], Opacity[0.65], Dashing[{Small, Small}], EdgeForm[
       None], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1:eJxNmgn4VtP2x895aTAPiUxpMielkkKTlFCSSKhUpkwpQ4pIiJSpopIoSdGg
WUTGUK6/4RqueSZTZpnu9V8f+3Oe9/09z/fZv73XsNdeZ79nWN9dt/+g7ueX
svirkmUbZQn0Nw48Gv/cEXje9jn/XxtYHnjI/orAw4E1tssdOybQLfBU4Bnl
T9uu1d9x6k0JPOs8qwNTA4sCjwVuCKwMPKmvp9VdpP0TgceV0T7qfLfra4p6
iwM99L0gsDAwPNb5f3nEE5gW/7+Yp/4lWRp7PvBI6LUOtAkMzdLYmsCS6Hct
JfmDgRNKaWyxLeOrjJ24bgqb49UlR8vM4VLz1CcwITAuT/FhN9n1LFPe13Uv
dJ6F+lti7pfqu4fzt3GtzP2guZyk32djbGa0cwMP2Of/mwLzAzcHblF+q5in
/ERlvR2bFrhbO9r7SilHD6g7J3B/4E7izFN/lv3pgbsC9zo2rULG/zO1maXv
e/T/eIzN1vf1gTGub66+iHds4Db3wtWsPU992vHKJrtH7rA/Uf1JtlMcm+De
GaPfScY9w5jwd3Oe9G40Tzebo3GBkwPXBOoFRrm2u1zTydqcErguMNp5Rhv3
WH3cqt+WgVaBgwMHBpoFWgSuIm+xR+8KXB7/v5WnsXOVnU3cITuPdWep/49u
4I7ASOUjtUGvc+CywJXicmXD7aM7ItAxcGngfPun2T8iMEwfb+TJvpCdHugU
eD1P8jP1SyxXRHu4vs5ybGqgn3ZnBIYEBgYuCFwSGODYUNsLAxdzHcPuviz1
0b1IDFZOe1uW9AY63yDj7mxMFziG7jmllLOzs5RH+jdHe6prK2Ic5ppuVvfc
LMV9pnMMcB0DzfXZ+r7WPcL176+/AV7vM8LHmVm6H3QP9BKHBtqyf7K0n9hL
JznWLnBFlvYishFZ+l3SP7aU7hOH6O8Qfd2Qpd8wetzbegaOtq0RsrpZuv8x
1qWU7mHH6oMx5LWzdH/voaxpYOcY2yVL98IP8+SPtc7M017v63qIvUNgfoy3
j/bIwKw8jR2l7HD3VyevE310O4rDlNM+kCc9fjd9s5TH1sbeVLv786RLDg40
D+Ag89hc3WbasT7Wg6yleUa3hfPQ9snSfG20P8R9xF5mz+GLfKD3dMy/PPBQ
4IAY3yfQROwS2DXQOLAVeQzUcqx2YP/Ajsp3sUVn78B+gUb6a6S8kTbovRnz
/Rb4T+D3wC+BPWJ891Lq8/9e+sIH/UdifGVgz/i/obK3o/+vPD1H5wU25Mn3
diGrGdg+sE3g7hjbNtoG7JNSuifWV15XzAidewJ14v8J0U7Pkx5jM7W/S/kM
W3Rqmo/dSikWYiVO+tjUMX+TY2xKnvK3s3HRbu3/5GJ311TbMexrmPearuPB
wK15yv2defK7vfMTF/6mqPdr4N3AU4EtS+lla/PAZqXU5/9vQ/ZjYH3guzyN
fZ8nbKF8trIFjv0V7f+0o/04cF+e/KJbNdpqgT/j/41LqV+y/3fgv4HcMXwV
Mv4nxo2V4fsj/W8S/Sr6+jL677g24s2N+Y/Ap4GvAj9p96n76yvzwb772X33
iGNPuXfWK/tZX79r96V6xP2DMa13DnS/yVOe1pujrwNz1fss8Ilr+6/5mqsN
e/aLwDrn+NT+V/r4Xr/DAkMDwwM7+PtkT7wW/Q/ydF97OfBv+2CbSOW2gWXx
/5OBxeoxxv2UNb+fJzntE+q9GmjIfSJL/mjxRa7fU5fnKr8z9uxbtuzbawKv
BG4IvKQvfPCOgPxF5VcouzFPa+B98XXzgV/uSQvzdF9aaIzEz7sy96y1+nrB
MfQWBVbn6X35uTw9S+ivyNO7JjbPVMhXO46Plc5ZxD1W3YfUeyywKk/vgIvt
LwkszVMel2nzsmtaou7D+l6q/xXKHjbXj+qL/fG5136RcywxT7tn6Xrwe54a
mCNGBq7O0/OK3xz7jmfOXPOI7pXq3a8cGd8qfEfx/n5H9Eepd4v+uIbc57jH
jM/Tve/2PL3Dci+cbv+2wOg8vYPynLzPOCZod22e7k3T8jQPdhO1/dg1f+o8
c5x/onajbccErrO9xuszzhzfpOwGc3+97Y3GdL26IwINspTHKcYy1TmuU++y
PP220L00cEmefm+j7F9ZseZJ5ulyY8KuUZbmuFwfV2gzzPyPd31j9Ns4SzZN
4v8OgYvEgMBpjl3o2JDA+YHTA4MCFwQuDvS07aXdyYFTtDvd/isxR/9o6wUO
D5wdOK/CV09tTgz0DrQJDFTvfHXRax8YHDhMDDFG5Oca02DnwO6YQNNAs0BH
19Rfv+doc2bgt4jv90D3+P8Mx+oH+nDNAn0DpwbOCjS03U+7HwLfZcnuD/sn
mo+TWFOW/OG/8IWPk53vTHPU0/X3MQd9jbefMfc3pnrKTzKmfuYOu07hc0Pg
5yyt+wDX3th8dTDGA6P9MNoTlNM/LtAlcGSgm7lDfqwtdl0DLeP/46Ptwrts
Xh7rHGilj67aH6U963yN+3jg9cDRjGVJr5gP3eox1jNLsWxii7xOluT46ak9
soPdE6yNWI4wjt2yZIdNu0Bb9ToFDnWskfbkpnmghXvkpSy17Fns2rifsGtt
n7h7mONW+mtvHrEnt52dr526+1fsxebqkseDWEuW0EhdrlsTY3o5S7G8Ss0m
8FBgRaCXe3aDPlq5nj0Cewf2CezlPqVfN7BrYCfySY4Cuwc2t91C7Bmo5dge
Ff19Azvqo7b2O2u/WWDjQJVA1cDXEVMebaliPnRZQz1jeTtLLfL1WZLjB/ku
6hwV4/8N/C9LcexjHMgbGMdWgW0DNQJb2t868E2W5t8kUM24kG/jOrDZQd3t
2HvKGfs2S3ER06aurVhPdX1WMS/428jcVVGvmrrrsrQmfHyZpTY3lm2MdTPt
kbFHGnvt/wz9d3jfCXyVpZyypt28rlybztH/yRz9Gvg+8IG//yzkP2YJf1bo
/W0+6f9VMfZR4BPvZa/5O+2gPbrkuqFz/+AeR+8w5/vR/fiLe3KDMf1sTP8J
vKX8O2P9PEt5+dpY3jWO750fm8+ylEf0vsjSXllnrB8HPg28kaX9xHV703a9
8q/Ued/5PjY3H5jf95zjfed70zjfcr73XOvLFXl5Q9131HvP2N/Tz7/9vb7t
et53Xp7BPON5br8Y/TGB2YFugWOzdE9cniXZksDEwPOBF+yje39ghmP/Ethw
X+B+wbOa5wbyNcpmqsf9Y25gdWBe4JbAec7B2LWBZwMXBUYF1tofHXjOeNfq
Y4FjD2p/sfMhv1p/c5xnvnHTfyCwzHZV4BHbxwOLAwsDK+0/GnjClrHHxDOB
JwNP2T6tfJGyecZNjA873yPGscA5ZruOOeaO/C41lsXOucKxh413fkWMDzrf
Ute2zFgfM67pXr8Z5mOk+Z2l7J4s1ebGB+61P8NrRW2Suvzdgnr9ZYHzbQdp
M0F/l6uH/NbA2MCNWarr3eocjFGPG5elGgz1zin2qc+xF25zDJubHJuo/Y3O
h3yy/s4xlguU3eTahmWpjnZVYIgt+4k9cmHgevtXmhvaK8wRoJZ3jfmiHa0N
+3KMsYxzvsHON8Q4BjvH2ebjHHMGt3GpsYxwzkGOYXOe9kWMQ5wP+VDn4PfJ
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
mWdzTWN8WtmivHyWfzvl2wf+H0nmI9k=
           "]],
          Annotation[#, "Charting`Private`Tag$73153#1"]& ]],
        Lighting->Automatic]}, 
      {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1:eJxVnHn8l1MWx+v3fB+EsitkGKNGqMiSIkrFEEkIZS0qkZJ9xp4lIrtMSJjs
Y4sikRJJi/adiEp7qLSIOW/3/bx+v/nj83q+dz/33HPPc+855/n+tWOPtleW
VapU6fm8UqUsnmsi8UtgVWBkqVKljwOfBLJApcA2PqdH5WqmeVYNNI28bQLN
Ah9GenhgROCYSDcKHBto4vO4wIQYo3KW2o2Oep8Gxtjms8DngVcCLwZeD9zj
81+BX6Ptu/HcNksYEL+3y1IfX9rP+4H7A++JBwJDA+vKUnp9PGeVpfH/ElgR
v/eJZ03TzGPfwAGBBoHDA/v7rB1YEvW/DxyRJSyK30fGc1lZKmPOh9q+TpbK
dg40lB+0OSpwSKC+dXlWd7zDArtZTptqgeaOs5f9kd4h0CLQVx71CSwvS3Ng
Pi2t10LeM+bxgaOztDasSWPpPsbyIx1zlOsAX78IjA9MKCXe31dKfH8y8Hzg
34E7AjcF7g48Fng08Hjg4cDNgVsD/QL/CTxo2UOW32se8+hvv/T5TuAR+7sz
8ERgUOCFwMuBwfY3WFkBrykr4EZlhrpvWA+8at0h9gVdbwfecswnnMeTytZT
8SzF83b7Y54zA9MCswJzAlPNm19KMj1DWR4bGOdeGmX5ZMunyONx8nmufcyz
vymO8VXgo1Lalzw/dK+wBk+XEn3Q+6w0D5KPz9n3F+4N6j0TGOh+uNf1ZD+Q
Zm99bN/Qdb886uf6vOIaHaccIV8nBv4ROCkwL9rPCUwLfBWYHpgS2BjYFNgc
+D2wJfCHGB+YGPg2MN92yP7u7ocdAzUCe7gPdjFvYdSbHfgh8E1ZGnu++5K8
RY4/IzAzMFlapjoeOmiSmGVf3zn+ZPuaZh8859rXTtKyZ5b2Ijpjb/cbOuOv
War7h+PMcd7kHRxlBwXqZokHGYpX5IGts3Ie0f7rwALntrYsrQ86j3Yl28A/
2qNPy7IkryV1A3yC3lrqrb9LLzTuF1gsP9BZe5v3N3XV3vJ6F/NYg6qBKo7z
W1l6ZspCQ3UN75H10sq7ZHVZyusVZd0DVwYuDFwc6Bi4INDG9DmWXRQ4NdA2
0No2PQI9A6coa7Q5M3BW4IRAK2WR8qttc03gukD7wBmBLoGugcsCpwUuDXR2
jEtM028n63ayvKtjnmZeN8c+OXC5z1bug9bWO1C+s+ZnO7dzsySLk5Q3eL+w
gsyuUG6nKLML5d86ebq0LK3ZMt/Va5SLH5XZxfa73P5mKIOMx3tof+mCFx3k
3Xny7ALncYJ8XBltfnb88y2/0PJTnSvtTzd9kPJVL3BD4Fp5v32WaERuZqv7
pvoOQZfwzjopcE6gXWDPwN6BfQJbB9Yhz+bVDPwlsFVgQ5bKzw3UCxwT2Bdd
jHyjI7OU3i1Qo5Ty9lJ336W+PBpdFjg+UDdwRaB74HT7bR9oGegVuMq630W/
v7Cu1u1luwMCPQIH2Vd3+6XuWngfv/8WqBXYQ1qYz/go291574S+Zv/Fc8fA
LoHqvDcib3JgmqDeDPMmmp6bpTnv5hi1peNAaTrY/na1z0nWZWzG+zJLZbT7
u/MpeEedCVmikXU5M7Al0r9L+x7SP0PaGWcH0/yuZrqKYG7bBuoE6kvflfKv
Z2Bslvg9JJ5HxvPQUuIf8nGE6UMC5wUaBE4LdHDdWgVONH1x4JLApaZPcF1b
W492nQIXBC6y7q9Zkq/LA8vi9wr0VPxuYb2zA90qlG8O/KbsMx7yzxmuSymd
Fxl7K/m1OFAWv3+M53Lbkb4w0MzxLzJNX+c7J+SQ/jpKL2epWwK3Ba4NnBq4
rpTOJv8sJRm/LHB1oHOgdymdz+40j36vCXS1HXXh99tZ4jl5baxL3g3x/DxL
8/7dOfM+gVbm3Vwam5SS3LOWveTFpcpLZ8fsYtn1jnm9a36D5c2d59eB6aWk
L1g35KBhKe1z5OaowGb4Ck2BSnGP2RTP3wI14nf1PJ3pdonn7qZ3zVN6tzzV
o/1Pgb9Eeo/AXmLPQM3APqZ3ytO7dkkpvaO56/wQvxeX0nmqt7wlb5H5/Kb+
glJ6H3Pmyn0usIyzWx/b/+h6Lg1M9LksUDnG3jGwJn7/EdgvfpfMq+Q8tskT
D6rEc7vAivj9QWCH+L11YFuxleXfRVm1PJ0rF0g7Z8YNgY2WVc3TuZtzOuNl
eeL12lKi5Wd5nzv2vvJpR581pY/nH67PwlIa+3v7+E3+Q2NxV8gdewfpfVh5
X+ETHtVTFurLb2jnrDtWnnFXObaUdB76G717WCnpNdqhS9CR6BL0yKFiP8vQ
8bRDD7VX5ppY3sC+6ttHXWURPdso0LaU5B6ZP7mU3m3oGvYoeged08Yne5uz
IG3OEGeVko7hSR/sN/QZuo890DTQuJTeXU0cm3QL041FI+t8E1heSntpfeAX
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
6etAx8FnhbxXtg/+l4Ex8AcV/p//AaieHNA=
           "]],
          Annotation[#, "Charting`Private`Tag$73153#2"]& ]],
        Lighting->Automatic]}, 
      {RGBColor[0, 1, 1], Thickness[Large], Opacity[0.15], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1: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
N9+591r7Hn3zrMMYjYiOfky+Y62/QC56z7qfXtDr6Hg0+UJ9cx0/qI/4EMcP
2CNcWd/jQ489nMp7BnapWGRPjzp3gf0t0feIdRijIYfLtcK1ovfXuzY0L5oa
bY3mRn+j69HjTzj3cccr9K10nxg/lUrtv9q56PpV+uDjjpfvfM/KRb1nnPsn
a6/W97R1VqdSr6+V7z7rPy8Xva9xD+jlReeiwdfpW+V4jb58T2D8nD3ClXU8
vpesDd9y9539ek0unqcNzqWXV83fkMp7wsvu+1DP/HX5sibF8mxu9Jw4c/Qk
Ohu9h+7O9wO0NO8oGn+Tvo2pvA/k+8EbqdTvm+RCIy5zHVnrL0vlfQDfFrk2
W/tN86hzqv1tNQ43Ghp9jabeYX9woOWnO873AXwfeP689zv1kbddvm3yvZ9K
/Y5F639kbeZmrb81lfcBfB/KDccufeTtdh6+ve4Bz35b9W8bNXVSozfxHlCl
Fl/vs8CYfHz73BvGjb0HNGqg4znnau8K8LFuvoV872rV/tSreAfgWWhqfqXB
PaGmwX2DmnXy5TtKrb23VuNnrb/dvvJ9oIVavKVz8x2gpfq+jfGs7zuoy9up
0/d4HuxXZ+OdRJ291MvdscF9gBjvPe8/Oqib87gDfAKZDu3o
           "]],
          Annotation[#, "Charting`Private`Tag$73153#3"]& ]],
        Lighting->Automatic]}, {}, {}, {}, {}, {}, {}}, {
      {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJwt0L1KggEYBeCvJlv9xbYwyDLRnPKHoJYCaymXXIogVJJ00T1J9CLqMqSp
MNy8DZvCazCfoeFZzjucw7vz0Ll+3giC4IYcefqCFwa888b2pjtZDsmwR5oC
CSJESbHLK0NGjPnkiynfzJjzwYQ76pxSpEzDnkeaXFJlxR8LfvhlyZadIRJE
iRMjQpgkGQ7YJ0uTe+rc0qNLmydanFDhnAtqXOk7o0SFYwoc/f9xDaM+IEM=

        "]], 
       Line3DBox[{134, 132, 135, 604, 653, 655, 685, 678, 674, 673, 672, 681, 
        679, 446, 444, 448, 477, 475, 488, 486, 485, 497, 511, 519, 517, 520, 
        521, 516, 515, 526, 522, 422, 420, 586, 587, 638, 622, 608, 610, 630, 
        631, 627, 628, 629, 166, 164, 165, 162, 163, 206, 184, 185, 186, 191, 
        192, 194, 195, 193, 196, 177, 175, 199, 134}]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], 
       Line3DBox[{733, 734, 736, 737, 744, 745, 826, 827, 829, 831, 837, 836, 
        783, 785, 794, 1396, 1408, 1405, 1404, 1403, 897, 899, 895, 855, 857, 
        934, 933, 930, 932, 931, 929, 928, 873, 872, 870, 869, 868, 1433, 
        1421, 1420, 1419, 1446, 1445, 1450, 1451, 1448, 1437, 1435, 1375, 
        1374, 1376, 1409, 1197, 1192, 1191, 1203, 1207, 1208, 757, 754, 753, 
        916, 914, 938, 939, 941, 942, 943, 944, 910, 911, 912, 922, 774, 
        733}], 
       Line3DBox[{790, 788, 819, 816, 817, 809, 810, 812, 813, 1107, 1111, 
        1131, 1004, 1005, 1006, 1007, 995, 996, 997, 988, 990, 1036, 1034, 
        1040, 1047, 1044, 970, 972, 1055, 1053, 1054, 1052, 1051, 1057, 985, 
        983, 951, 950, 966, 1144, 1136, 1135, 1064, 1063, 1075, 1074, 1116, 
        1076, 1077, 1112, 1096, 1098, 1102, 1100, 1141, 1128, 790}], 
       Line3DBox[{1240, 1241, 1242, 1243, 1498, 1502, 1504, 1494, 1487, 1489, 
        1522, 1525, 1477, 1475, 1478, 1469, 1468, 1482, 1467, 1461, 1460, 
        1503, 1328, 1327, 1326, 1335, 1336, 1359, 1358, 1357, 1356, 1354, 
        1348, 1350, 1342, 1302, 1298, 1300, 1316, 1315, 1306, 1305, 1309, 
        1310, 1311, 1312, 1281, 1268, 1269, 1271, 1248, 1250, 1262, 1263, 
        1246, 1245, 1240}]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], 
       Line3DBox[{1533, 1535, 1537, 1542, 1544, 1558, 1560, 1564, 1566, 1614, 
        1616, 1620, 1622, 1634, 1636, 1640, 1642, 1641, 1644, 1650, 1652, 
        1674, 1676, 1682, 1684, 1778, 1780, 1786, 1788, 1810, 1812, 1818, 
        1820, 1819, 1816, 1815, 1804, 1803, 1800, 1799, 1756, 1755, 1752, 
        1751, 1740, 1739, 1736, 1735, 1734, 1731, 1724, 1721, 1698, 1695, 
        1688, 1685, 1590, 1587, 1580, 1577, 1550, 1547, 1538, 1532, 
        1533}]}, {}, {}, {}, {}, 
      {RGBColor[0.5, 0, 0.5], Thickness[Large], 
       Line3DBox[{1827, 1824, 1920, 1873, 1826, 1876, 1877, 1868, 1825, 1921, 
        1872, 1923, 1874, 1875, 1823, 1863, 1862, 1865, 1866, 1900, 1903, 
        1901, 1902, 1894, 1895, 1893, 1896}], 
       Line3DBox[{1836, 1892, 1835, 1881}], Line3DBox[{1922, 1869, 1870}], 
       Line3DBox[{1929, 1840}], 
       Line3DBox[{1992, 1957, 1989, 1990, 1987, 1988, 2011, 1991, 1956, 1974, 
        1980, 1979, 1981, 1976, 1978, 1977, 1950}]}, 
      {RGBColor[0.5, 0, 0.5], Thickness[Large], 
       Line3DBox[{1889, 1888, 1834, 1891, 1890, 1884, 1883, 1882, 1944, 1886, 
        1885, 1887, 1943, 1913, 1912, 1864, 1828, 1867, 1829, 1861, 1822, 
        1860, 1821, 1871, 1830, 1880, 1833, 1878, 1831, 1879, 1832}], 
       Line3DBox[{1954, 1985, 1955, 1986, 1953, 1984, 1952, 1983, 1949, 1972, 
        1973, 1975, 1951, 1982, 1958, 1993, 1994, 1995, 1959, 1996, 1997, 
        1947, 1969, 1948, 1970, 1971, 1859, 1838, 1899, 1837, 1897, 1898, 
        1911, 1844, 1909, 1845, 1910, 1842, 1907, 1908, 1843, 1839, 1904, 
        1841, 1905, 1906}]}, {}, 
      {RGBColor[0.5, 0, 0.5], Thickness[Large], 
       Line3DBox[{1849, 1917, 1846, 1914, 1848, 1916, 1847, 1915, 1850, 1918, 
        1851, 1919, 1854, 1930, 1931, 1932, 1933, 1942, 1940, 1858, 1939, 
        2002, 2003, 2013, 1998, 1960, 1999, 1961, 2000, 2001}], 
       Line3DBox[{1926, 1925, 1852, 1928, 1946, 1924, 1945, 1853, 1927, 1941, 
        1935, 1855, 1934, 1856, 1936, 1857, 1937, 1938}], 
       Line3DBox[{1962, 2004, 2014, 2005, 1963, 2007, 2006, 1964, 2015, 2010, 
        2009, 1966, 2008, 1965, 1968, 2012, 1967}]}}},
    VertexNormals->CompressedData["
1:eJztm3k01tsX/3WbRTPNkeZB023SdErSXIY0KNGoKJmVpEmicEORqEQizSTN
J1Nz7m1SKUMh08OjiYrqZ63vPs93/Xa/vZ7c75+/5/nHWq+11/vss88+5+xz
Pke3ZeuNVv6hpKSU01hJqX7tX73qcW+adn7Bkk27L998rIxvci76WT3ElB/r
PviPRw+zWM2VcU/cDSX80IOnQyTvF/ApYJ8E9q5gH07YGxeOGGYXksHORXT9
OLGijB80aDYmvcsibgT8POKTCX92p8+q7rA3m6msWvnTu4uEdw/ekVPyegH3
RFwLeAThj+hXNfDDwIW+shydMLDXJfychPhm4EYoDmHQXwcdnQmL2TM2rZ3T
FtNB5dxidmvXrupmJHcCPh34EuBU3Kj+4nER/swjOB53oU+NL9YR3Jnw34Xo
L5WHlI4XkQ/U+FI6Jsj/Q+C/IREfe9CZATrmoIP1lwKn8gfPo8Ny8g3H54ic
eTcRdFKQDuUnNU9xf4U9FR87wr6ucaD6Rc0XL2LcKX2xnqiCvaac/KHWpfHb
DDutaZvPZrxfmbihpIhf6BBxPaFm/i88DnjVlgEFaqZ5rIvdCbPxbsW8cE+2
tnuvBbwSeFfgxcAp+3GE/oi/V5q49S1iX1U3+7atzuez9OpFeOyfx4cD/wZ8
DvBhiM8G7kPEAfNuwHF+ivUzCvg3xCl9ah2g7Cn9Sd0PtV0Xm820+hbtXaIu
4Vea7VZ7mrmAH0f2Qv+89fNtSp2LWern+5J5GXl8Wo5xXrLaPB4HPAVxMb7T
UfypfBgJcf5CjAseL8ofeTwN8S+QP50hf4qIvBKcyn954/67+6zYL87CvA6F
eT0fcbyPiPluBvM9y3+36ljjZ+zW5vtGL/uXc/VeVp+utzYj9y+qnqHanUbs
7zMIjvsVAjrZyM/24GcOwfWRvvCT8kezx/79Iz5IuZ+T5uW7Z0+zE1cv6Tx9
Zyjje4DHAB+WEHi1+VcpL3888P7ZVlGs559PY3f0mS3jxYjffWQ/oHeulJ8Z
eOKbs89FFt7hXoJqpckvPAI41a6wPw72h8H+xgTVvYavpfx8oXWcc1Yie1Zz
fXePZya/9CsG9cub6FcJ8j9L1ahdzo5yvk46xfWR3hPmPFztuueTZb9wJ+A6
ZUO+nwuV8rhRczWzq1JYyMiquL8+L5Lxc8CDgQudtaDjgHQSwf4g2Is4nEPx
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
cf0iGTdEHOu8QzpGyJ6q28W6dAmd16h5h9dVvB4uIs6D+Dwr7JcTOssJnYvE
ufiqnHVV7AtU3Kj1SvD+6P5ExHkWxHkrxFm0W0SsV++QP+03WBnE3itmnrvT
U7Uq3rJXBWxJoooXya97G64NM5Aw744vPxn/ncXaXKly9B+9ky/b4N5q7CwJ
e2W94bnW6yzWNfWJ67lJO/mpHMfeqyrLWYbh5/OL+vzDdHq3djOwdJfxl8BH
A780sejxyGHltY2ta5Pb7RnTV1/Ub8uxbTJugXgi4lORvdCZAtw/cJBXg1gJ
63XRZ90Ru9cs+0Xnrl/Pe/C9wAcAzwGuDnHYBXHIhDiI/mZBfzWhv0uHXo8+
1bd2vdgeuS3N7Bkzueav1/j8Npl+f6SP4zMSxScDxSdgyOPz6uZStrWtcuns
MXeZasayLuYeriT/tzrbEfdH/ueC//V0j94yvyxhOs11B6/68zUL6LQ4vvlx
D1l8XkB8OkN8cNxwnlD5gMcd+9mc8L85ioPQHwf6eHxx/mN+6kd6xJWEYmbd
k7l7qOQxh2O7L65S9+IdwH4H2L8E+9uBhlv3PMtn6Rpttd5PLWL+m7Z2edtr
zy98H/DToG8F+nagfwvs/wH7ALCn2sX2ot0VXL3f5tv5zGZTXOyXuUXsj/kp
7wy19/BlwG2BNwSO7esBx3k+F/J8GXBd4MbAAyF/uqN5h+djFnAR/52oX9S4
4HWpNaxLgvsAbwv85FLHV3GSfLY1WWVJveFFzKFm++jHXff8wh2Bp0I8H0E8
90M8U4A/RuNyfLhO28DkfNbPzSa378IiNtbySYjS0D08Cnh/4OOAi7x1hbxt
BnlL2VMc+yPyCo+vbByB26F8aI/y6gXEGefbc+B/RjS9vjGnmKlmtZ1x8slb
lhVxoEazvhcfDlwF8RMQZw+IswvE2UZ585c79QvYXd81JV81i5ipZ5hVufoe
rkasw5ROVXB81cZJUu6asEJjzoz7XPkPa+tHC51kfDNwVeBxpZttJ2hJ+f1d
3W5uDnjI51hKEn9UOfHebpetJnarPSfetGbjIx/y7lH3AmwbOPOr4y47HL+e
z3oe2em9yKyISY9ffXh2xB4Z74H4ZeC9gVcAp9Yf0a8dKA+p/oq83QbcGdnv
QFzkzwCUP5HAtYGPB0719xrqbzlwEecNRPydEO8LcfZHcaY4pT+52mboDi8p
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
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Epsilon]\"", TraditionalForm], 
    FormBox["\"S\"", TraditionalForm], None},
  Background->GrayLevel[1],
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 1},
  Boxed->False,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{386.16082119635035`, 372.00286272746104`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-5, 20}, {-7, 10}, {-1, 1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.22817640045471116`, -0.03162090862800438, 
   3.3759347814217424`},
  ViewVertical->{-0.20752971869709158`, 0.7834792625667791, 
   0.58574026751225}]], "Output",
 CellChangeTimes->{
  3.8649840563252296`*^9, {3.864984089195907*^9, 3.864984163001163*^9}, 
   3.864984208723666*^9, 3.864984249215981*^9, 3.8649843168884974`*^9, {
   3.864984402884349*^9, 3.864984430784882*^9}, {3.86498452338383*^9, 
   3.864984545144951*^9}, {3.864984581338612*^9, 3.864984620355199*^9}, 
   3.8649846521841803`*^9, {3.864984695690258*^9, 3.8649847869710283`*^9}, 
   3.864984820123601*^9, 3.864984908022606*^9, 3.864984993045829*^9, 
   3.864985035855466*^9, {3.864985102623879*^9, 3.864985114839443*^9}, {
   3.8649851619482183`*^9, 3.864985218368492*^9}, {3.86498531962212*^9, 
   3.8649853406370163`*^9}, 3.864985378748088*^9, {3.86498541349651*^9, 
   3.864985417737178*^9}, {3.864985490040584*^9, 3.864985506002195*^9}, 
   3.864985574842358*^9, {3.864985607285266*^9, 3.864985612422619*^9}, 
   3.864985653798059*^9, 3.86498617025457*^9, 3.864987865193201*^9, {
   3.864987914083498*^9, 3.864987993371232*^9}, {3.864988076336667*^9, 
   3.864988096123144*^9}, {3.864988126933896*^9, 3.8649881423217077`*^9}, {
   3.864988191874167*^9, 3.86498822480303*^9}, {3.864988279717411*^9, 
   3.864988365139351*^9}, {3.864988504146188*^9, 3.864988519057288*^9}, 
   3.864988736368476*^9, {3.864989092322373*^9, 3.8649891003177147`*^9}, {
   3.864989217866864*^9, 3.864989260046653*^9}, 3.86498973727389*^9, {
   3.864989783527432*^9, 3.864989825359947*^9}, {3.864989856538062*^9, 
   3.8649899083981733`*^9}, {3.864990092428393*^9, 3.864990154203705*^9}, {
   3.8649903032522078`*^9, 3.864990328521896*^9}, {3.86499081298518*^9, 
   3.864990851321477*^9}, {3.8649909691898327`*^9, 3.8649909775231524`*^9}, 
   3.86499101510462*^9, {3.8649910581747103`*^9, 3.864991132264102*^9}, {
   3.86499117354464*^9, 3.864991195392976*^9}},
 CellLabel->
  "Out[691]=",ExpressionUUID->"a0a047ce-5395-4b5f-bb6b-dd2097d3dfdf"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Spectrum (most generic quartic potential, large coef attempt for better \
accuracy) (ONGOING)\
\>", "Subsection",
 CellChangeTimes->{{3.864274692548676*^9, 3.864274722704041*^9}, {
  3.8643140153087*^9, 3.864314015970899*^9}, {3.8643185685023603`*^9, 
  3.864318578479597*^9}, {3.86547802492369*^9, 
  3.8654780400757313`*^9}},ExpressionUUID->"5d8f18f6-cbb9-42da-8b94-\
ca28dd81eefe"],

Cell[CellGroupData[{

Cell["Setup ODE", "Subsubsection",
 CellChangeTimes->{{3.864531502129651*^9, 3.8645315040934896`*^9}, {
  3.8650494206630898`*^9, 
  3.865049423238859*^9}},ExpressionUUID->"76e45dcf-6dab-4005-872e-\
fe05bf6b29fa"],

Cell[TextData[{
 "Let us now generalize the above story to the following more generic quartic \
potential.\nNotation: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["H", "2"], "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["m", "1"], "+", 
       SubscriptBox["m", "2"]}], 
      RowBox[{
       SubscriptBox["m", "1"], 
       SubscriptBox["m", "2"]}]], 
     FractionBox[
      SuperscriptBox["hbar", "2"], "2"]}]}], TraditionalForm]],ExpressionUUID->
  "c3a3916a-e5d2-4654-93ba-4f5d9affb306"],
 "\nThe couplings in the potential A, \[Beta], \[Gamma], \[Lambda] are fixed \
according to the multipolar expansion in terms of the masses, charges and \
frequencies of the pair of QDOs."
}], "Text",
 CellChangeTimes->{{3.864274820517263*^9, 3.86427483221453*^9}, {
  3.864275377289834*^9, 3.864275399449318*^9}, {3.8642867086502132`*^9, 
  3.864286761195252*^9}, {3.864358765330817*^9, 
  3.864358823738635*^9}},ExpressionUUID->"c4f60cd2-e612-4426-9287-\
d1637a9abfbb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GENERIC", " ", "COMMENT", " ", "ABOUT", " ", "THIS", " ", 
   RowBox[{"SECTION", ":", " ", 
    RowBox[{
    "contrary", " ", "to", " ", "the", " ", "case", " ", "of", " ", "an", " ",
      "even", " ", "potential"}]}]}], ",", " ", 
  RowBox[{
  "one", " ", "here", " ", "has", " ", "to", " ", "keep", " ", "track", " ", 
   "of", " ", "both", " ", "the", " ", "positive", " ", "x", " ", "and", " ", 
   "the", " ", "negative", " ", "x", " ", "solutions"}]}]], "Text",
 CellChangeTimes->{{3.8643119982628927`*^9, 
  3.864312056801162*^9}},ExpressionUUID->"86e0a609-e888-4532-b631-\
0ad7f3b17281"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"A", " ", "z"}], " ", "+", 
   RowBox[{"\[Beta]", " ", 
    SuperscriptBox["z", "2"]}], "+", 
   RowBox[{"\[Gamma]", " ", 
    SuperscriptBox["z", "3"]}], "+", 
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", 
    SuperscriptBox["z", "4"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq", "[", "\[Psi]_", "]"}], ":=", 
   RowBox[{"z", "\[Function]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "''"}], "[", "z", "]"}], "+", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Epsilon]", "-", 
        RowBox[{"V", "[", "z", "]"}]}], 
       RowBox[{
        SuperscriptBox["H", "2"], " "}]], 
      RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.864035526701899*^9, 3.864035567764186*^9}, {
   3.86403565956774*^9, 3.864035667256592*^9}, {3.864115016484351*^9, 
   3.864115017418898*^9}, {3.8641152422780733`*^9, 3.864115267812194*^9}, {
   3.864115649334899*^9, 3.864115655364806*^9}, 3.864115695927232*^9, 
   3.864116018567485*^9, 3.864117086684123*^9, {3.8641181148079357`*^9, 
   3.864118115933967*^9}, {3.864118242001134*^9, 3.86411825792118*^9}, 
   3.8641990306553793`*^9, 3.8642010609833183`*^9, 3.86420237395303*^9, {
   3.864205586724691*^9, 3.864205587664859*^9}, 3.8642078236374598`*^9, {
   3.864208608819233*^9, 3.864208610930963*^9}, {3.864269777597616*^9, 
   3.864269777795177*^9}, {3.8642708672924137`*^9, 3.8642708773561974`*^9}, {
   3.8642754046018677`*^9, 3.864275412761997*^9}, {3.8642866904537773`*^9, 
   3.8642867029554768`*^9}, {3.864286770795536*^9, 3.864286800475404*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"8716592a-4808-4f62-a364-cb113877122b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"latexCouplings", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "->", "\[Alpha]"}], ",", 
     RowBox[{"\[Lambda]", "->", 
      SqrtBox["\[Delta]"]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"physicalCouplings", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", "q2"}], "+", 
          RowBox[{"m2", " ", "q1"}]}], 
         RowBox[{"m1", "+", "m2"}]]}], "\[Tau]"}]}], ",", 
     RowBox[{"\[Beta]", "->", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]], 
        FractionBox[
         RowBox[{"2", " ", "q1", " ", "q2"}], 
         SuperscriptBox["r", "3"]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         RowBox[{"m1", "+", "m2"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", 
           SuperscriptBox["\[Omega]2", "2"]}], "+", 
          RowBox[{"m2", " ", 
           SuperscriptBox["\[Omega]1", "2"]}]}], 
         RowBox[{"m1", "+", "m2"}]]}]}]}], ",", 
     RowBox[{"\[Gamma]", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]]}], 
       FractionBox[
        RowBox[{"3", " ", "q1", " ", "q2"}], 
        SuperscriptBox["r", "4"]]}]}], ",", 
     RowBox[{"\[Delta]", "->", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "m1", " ", "m2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            SuperscriptBox["m1", "2"]}], "+", 
           RowBox[{"3", "m1", " ", "m2"}], "+", 
           RowBox[{"2", 
            SuperscriptBox["m2", "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"m1", "+", "m2"}], ")"}], "4"]], 
       FractionBox[
        RowBox[{"q1", " ", "q2"}], 
        SuperscriptBox["r", "5"]]}]}], ",", 
     RowBox[{"H", "->", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"m1", "+", "m2"}], 
         RowBox[{"m1", " ", "m2"}]], 
        FractionBox[
         SuperscriptBox["HBAR", "2"], "2"]}]]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"latexCouplingsExplicit", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "->", "alpha"}], ",", 
     RowBox[{"\[Lambda]", "->", 
      SqrtBox["delta"]}], ",", " ", 
     RowBox[{"\[Beta]", "->", "beta"}], ",", " ", 
     RowBox[{"\[Gamma]", "->", "gamma"}], ",", 
     RowBox[{"\[Delta]", "->", "delta"}], ",", " ", 
     RowBox[{"\[Epsilon]", "->", "epsilon"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"physicalCouplingsExplicit", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alpha", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", "q2"}], "+", 
          RowBox[{"m2", " ", "q1"}]}], 
         RowBox[{"m1", "+", "m2"}]]}], "tau"}]}], ",", 
     RowBox[{"beta", "->", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]], 
        FractionBox[
         RowBox[{"2", " ", "q1", " ", "q2"}], 
         SuperscriptBox["r", "3"]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         RowBox[{"m1", "+", "m2"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", 
           SuperscriptBox["omega2", "2"]}], "+", 
          RowBox[{"m2", " ", 
           SuperscriptBox["omega1", "2"]}]}], 
         RowBox[{"m1", "+", "m2"}]]}]}]}], ",", 
     RowBox[{"gamma", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]]}], 
       FractionBox[
        RowBox[{"3", " ", "q1", " ", "q2"}], 
        SuperscriptBox["r", "4"]]}]}], ",", 
     RowBox[{"delta", "->", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "m1", " ", "m2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            SuperscriptBox["m1", "2"]}], "+", 
           RowBox[{"3", "m1", " ", "m2"}], "+", 
           RowBox[{"2", 
            SuperscriptBox["m2", "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"m1", "+", "m2"}], ")"}], "4"]], 
       FractionBox[
        RowBox[{"q1", " ", "q2"}], 
        SuperscriptBox["r", "5"]]}]}], ",", 
     RowBox[{"H", "->", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"m1", "+", "m2"}], 
         RowBox[{"m1", " ", "m2"}]], 
        FractionBox[
         SuperscriptBox["HBAR", "2"], "2"]}]]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"HHrule", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "->", "0.6099"}], ",", 
     RowBox[{"m2", "->", "0.6099"}], ",", 
     RowBox[{"q1", "->", "0.7080"}], ",", 
     RowBox[{"q2", "->", "0.7080"}], ",", 
     RowBox[{"\[Omega]1", "->", "0.4273"}], ",", 
     RowBox[{"\[Omega]2", "->", "0.4273"}], ",", 
     RowBox[{"HBAR", "->", "1"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"HHruleExplicit", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "->", "0.6099"}], ",", 
     RowBox[{"m2", "->", "0.6099"}], ",", 
     RowBox[{"q1", "->", "0.7080"}], ",", 
     RowBox[{"q2", "->", "0.7080"}], ",", 
     RowBox[{"omega1", "->", "0.4273"}], ",", 
     RowBox[{"omega2", "->", "0.4273"}], ",", 
     RowBox[{"HBAR", "->", "1"}]}], "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.864396217362211*^9, 3.864396265512763*^9}, {
   3.864396367069921*^9, 3.864396374568042*^9}, {3.8643965649153843`*^9, 
   3.864396581585636*^9}, 3.86439912153622*^9, {3.8643996969927397`*^9, 
   3.8643999795681963`*^9}, {3.86452602030055*^9, 3.864526085408793*^9}, {
   3.864526130561105*^9, 3.8645261509441347`*^9}, {3.865049396727646*^9, 
   3.865049412695977*^9}, {3.865049648425116*^9, 3.86504964903269*^9}, {
   3.865148568949938*^9, 3.865148576738531*^9}, {3.865148612159862*^9, 
   3.8651486614068403`*^9}, {3.8651492537286177`*^9, 3.865149269712734*^9}, {
   3.865406992721068*^9, 3.865406993097678*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"22b6f66b-9283-41f4-b9fa-dc18c8c83244"],

Cell["\<\
Now we need to find the correct change of variable for the active variable \
\[Psi], for this, let us get inspiration from the analytical solution \
provided by Mathematica:\
\>", "Text",
 CellChangeTimes->{{3.864275423626759*^9, 
  3.864275481754038*^9}},ExpressionUUID->"34f0458a-8332-4c64-b4d7-\
da29ea59b482"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"eq", "[", "\[Psi]", "]"}], "[", "z", "]"}], "==", "0"}], ",", 
    RowBox[{"\[Psi]", "[", "z", "]"}], ",", "z"}], "]"}], "//", 
  "PowerExpand"}]], "Input",
 CellChangeTimes->{{3.8642754848765173`*^9, 3.8642755082360373`*^9}, {
  3.864275949123186*^9, 3.864275950754225*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"14c571b9-5a30-4c13-8ab6-99f80e44b233"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Psi]", "[", "z", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3"}], " ", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{"6", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Beta]"}], "+", 
               RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
             SuperscriptBox["\[Lambda]", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["z", "2"], " ", 
             SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
         RowBox[{"24", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "3"]}]]}]], " ", 
      TemplateBox[{"2"},
       "C"], " ", 
      RowBox[{"HeunT", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Gamma]", "4"], "-", 
           RowBox[{"8", " ", "\[Beta]", " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "-", 
           RowBox[{"32", " ", "H", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "5"]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Beta]", "2"], "+", 
              RowBox[{"4", " ", "\[Epsilon]", " ", 
               SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}]}], 
          RowBox[{"64", " ", 
           SuperscriptBox["H", "2"], " ", 
           SuperscriptBox["\[Lambda]", "6"]}]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "\[Lambda]"}], "H"]}], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], "-", 
           RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"8", " ", "A", " ", 
            SuperscriptBox["\[Lambda]", "4"]}]}], 
          RowBox[{"8", " ", 
           SuperscriptBox["H", "2"], " ", 
           SuperscriptBox["\[Lambda]", "4"]}]]}], ",", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"4", " ", "\[Beta]", " ", 
           SuperscriptBox["\[Lambda]", "2"]}]}], 
         RowBox[{"4", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "3"]}]], ",", 
        RowBox[{"-", 
         FractionBox["\[Gamma]", 
          RowBox[{"H", " ", "\[Lambda]"}]]}], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", "\[Lambda]"}], "H"]}], ",", "z"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"z", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SuperscriptBox["\[Gamma]", "2"]}], "+", 
           RowBox[{"6", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Beta]"}], "+", 
              RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["z", "2"], " ", 
            SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
        RowBox[{"24", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "3"]}]]], " ", 
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"HeunT", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Gamma]", "4"], "-", 
           RowBox[{"8", " ", "\[Beta]", " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"32", " ", "H", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "5"]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Beta]", "2"], "+", 
              RowBox[{"4", " ", "\[Epsilon]", " ", 
               SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}]}], 
          RowBox[{"64", " ", 
           SuperscriptBox["H", "2"], " ", 
           SuperscriptBox["\[Lambda]", "6"]}]]}], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], "-", 
           RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{"A", "-", 
              RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
          RowBox[{"8", " ", 
           SuperscriptBox["H", "2"], " ", 
           SuperscriptBox["\[Lambda]", "4"]}]]}], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], "-", 
           RowBox[{"4", " ", "\[Beta]", " ", 
            SuperscriptBox["\[Lambda]", "2"]}]}], 
          RowBox[{"4", " ", "H", " ", 
           SuperscriptBox["\[Lambda]", "3"]}]]}], ",", 
        FractionBox["\[Gamma]", 
         RowBox[{"H", " ", "\[Lambda]"}]], ",", 
        FractionBox[
         RowBox[{"2", " ", "\[Lambda]"}], "H"], ",", "z"}], "]"}]}]}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.864275505072137*^9, 3.864275520794508*^9}, 
   3.8642759513363037`*^9, 3.8642868069716597`*^9, 3.864312218853105*^9, 
   3.864317506247504*^9, 3.864358620510544*^9, 3.864396277422563*^9, 
   3.864398377095174*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"b810cdec-689a-4665-867c-c221eda17292"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3"}], " ", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{"6", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Beta]"}], "+", 
               RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
             SuperscriptBox["\[Lambda]", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["z", "2"], " ", 
             SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
         RowBox[{"24", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "3"]}]]}]], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Beta]", "->", "1"}], ",", 
        RowBox[{"\[Gamma]", "->", "0"}], ",", 
        RowBox[{"H", "->", "1"}]}], "}"}]}], ")"}], "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["z", 
        RowBox[{"2", " ", "\[Lambda]"}]]}], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["z", "3"], " ", "\[Lambda]"}], "3"]}]]}], "//", 
   "PowerExpand"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8642755327791977`*^9, 3.864275587996393*^9}, 
   3.864275957522493*^9, {3.864286816515222*^9, 3.864286820666658*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"ce0ec7a3-93ca-446e-8fcf-829b7add4d56"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.8642755453939857`*^9, 3.864275588348443*^9}, 
   3.864275958047332*^9, 3.864286821522951*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"b7f987d4-aaf2-4635-9321-6984d208522a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"z", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "+", 
         RowBox[{"6", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Beta]"}], "+", 
            RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["z", "2"], " ", 
          SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
      RowBox[{"24", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "3"]}]]}], ",", "z"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"z", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{"6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Beta]"}], "+", 
           RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["z", "2"], " ", 
         SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
     RowBox[{"24", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "3"]}]], ",", "z"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864275685859309*^9, 3.864275687575535*^9}, 
   3.864275960581841*^9, 3.8642868320653667`*^9, {3.8643589506879377`*^9, 
   3.8643589909237423`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"8b41d6dc-e8ea-42b7-b6d6-d52d0da30a84"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "2"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "3"]}]], ",", 
   RowBox[{"-", 
    FractionBox["\[Gamma]", 
     RowBox[{"4", " ", "H", " ", "\[Lambda]"}]]}], ",", 
   RowBox[{"-", 
    FractionBox["\[Lambda]", 
     RowBox[{"3", " ", "H"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.86427568824868*^9, 3.864275961517703*^9, 3.864286832679997*^9, {
   3.8643589530376472`*^9, 3.864358991352721*^9}, 3.864398379384306*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"266b7a72-023e-4e01-8292-1167b49bd439"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "2"], "-", 
      RowBox[{"4", " ", "\[Beta]", " ", 
       SuperscriptBox["\[Lambda]", "2"]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "3"]}]]}], ",", 
   FractionBox["\[Gamma]", 
    RowBox[{"4", " ", "H", " ", "\[Lambda]"}]], ",", 
   FractionBox["\[Lambda]", 
    RowBox[{"3", " ", "H"}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.86427568824868*^9, 3.864275961517703*^9, 3.864286832679997*^9, {
   3.8643589530376472`*^9, 3.864358991352721*^9}, 3.864398379403253*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"c5901c06-e4ba-4bd9-9645-59f7829af344"]
}, Open  ]],

Cell[TextData[{
 "So now we have the exponential change of variable.\nRemains the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "+", "1"}], ")"}], 
    RowBox[{"some", " ", "power"}]], TraditionalForm]],ExpressionUUID->
  "6c672dd7-a89e-4073-84c8-3d5a92c5262f"],
 " to fix. Let us call the generic power \[Mu]"
}], "Text",
 CellChangeTimes->{{3.864275595259122*^9, 
  3.864275672684463*^9}},ExpressionUUID->"7cc8ac70-05cb-4458-b8ed-\
528c02599576"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq2Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3"}], " ", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{"6", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Beta]"}], "+", 
               RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
             SuperscriptBox["\[Lambda]", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["z", "2"], " ", 
             SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
         RowBox[{"24", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "3"]}]]}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "+", "1"}], ")"}], "\[Mu]"]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"z", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "3"}], " ", 
               SuperscriptBox["\[Gamma]", "2"]}], "+", 
              RowBox[{"6", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[Beta]"}], "+", 
                 RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
               SuperscriptBox["\[Lambda]", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["z", "2"], " ", 
               SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
           RowBox[{"24", " ", "H", " ", 
            SuperscriptBox["\[Lambda]", "3"]}]]}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"z", "+", "1"}], ")"}], "\[Mu]"], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"z", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SuperscriptBox["\[Gamma]", "2"]}], "+", 
           RowBox[{"6", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Beta]"}], "+", 
              RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["z", "2"], " ", 
            SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
        RowBox[{"24", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "3"]}]]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "z"}], "+", "1"}], ")"}], "\[Mu]"]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"z", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], " ", 
              SuperscriptBox["\[Gamma]", "2"]}], "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Beta]"}], "+", 
                RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
              SuperscriptBox["\[Lambda]", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["z", "2"], " ", 
              SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
          RowBox[{"24", " ", "H", " ", 
           SuperscriptBox["\[Lambda]", "3"]}]]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "z"}], "+", "1"}], ")"}], "\[Mu]"], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.864118163342272*^9, 3.864118163421801*^9}, {
   3.8641182338242292`*^9, 3.8641182794537277`*^9}, {3.864118309938342*^9, 
   3.8641183532169247`*^9}, {3.864118384770278*^9, 3.864118397361452*^9}, {
   3.86419901804711*^9, 3.864199020958868*^9}, 3.864199267933145*^9, {
   3.864199361245159*^9, 3.864199363388564*^9}, 3.864201067883738*^9, {
   3.8642023845592937`*^9, 3.8642023977426434`*^9}, {3.864202740227565*^9, 
   3.864202750578661*^9}, {3.864203210996903*^9, 3.864203221267009*^9}, {
   3.864203261029221*^9, 3.864203279172521*^9}, {3.864204269612*^9, 
   3.864204278153284*^9}, {3.864204353340111*^9, 3.864204375658196*^9}, {
   3.8642046023818207`*^9, 3.864204606220006*^9}, {3.86420559214673*^9, 
   3.864205635889922*^9}, 3.8642069206506863`*^9, 3.8642069619650087`*^9, {
   3.864269780717699*^9, 3.864269784781036*^9}, {3.8642756794382143`*^9, 
   3.8642757264933233`*^9}, {3.8642759668761806`*^9, 3.86427598791363*^9}, {
   3.864286840898326*^9, 3.864286843151375*^9}, {3.864312073767428*^9, 
   3.864312114422969*^9}, {3.864312160160754*^9, 3.864312176013809*^9}, {
   3.86431242063426*^9, 3.864312427109799*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"0631a375-e03a-4cef-8055-2c4ec9836ace"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "''"}], "[", "z", "]"}]}], "]"}], "/.", 
    RowBox[{"\[Mu]", "->", "0"}]}], "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
         RowBox[{
          RowBox[{"w", "'"}], "[", "z", "]"}]}], "]"}], "/.", 
       RowBox[{"\[Mu]", "->", "0"}]}], "/.", "latexCouplings"}], "//", 
     "FullSimplify"}], ",", "z"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
         RowBox[{"w", "[", "z", "]"}]}], "]"}], "/.", 
       RowBox[{"\[Mu]", "->", "0"}]}], "/.", "latexCouplings"}], "//", 
     "FullSimplify"}], ",", "z"}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864396826760911*^9, 3.864396966083762*^9}, {
  3.864397122289941*^9, 3.864397129270009*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"ca45fe7d-f694-4058-952b-4ce6bba188f5"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.8643968320367727`*^9, 3.864396859312842*^9}, {
   3.864396890635481*^9, 3.8643968999014683`*^9}, {3.8643969381990967`*^9, 
   3.864396966537038*^9}, {3.864397123840867*^9, 3.86439712960247*^9}, 
   3.864398385354786*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"573e0228-e412-4a04-964f-f971ee46a052"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "2"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", "\[Delta]"}]}], 
    RowBox[{"4", " ", "k", " ", 
     SuperscriptBox["\[Delta]", 
      RowBox[{"3", "/", "2"}]]}]], ",", 
   RowBox[{"-", 
    FractionBox["\[Gamma]", 
     RowBox[{"k", " ", 
      SqrtBox["\[Delta]"]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox["\[Delta]"]}], "k"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8643968320367727`*^9, 3.864396859312842*^9}, {
   3.864396890635481*^9, 3.8643968999014683`*^9}, {3.8643969381990967`*^9, 
   3.864396966537038*^9}, {3.864397123840867*^9, 3.86439712960247*^9}, 
   3.8643983853568077`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"85ca19df-3eea-4866-b9bf-9080f3acbce7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "4"], "-", 
     RowBox[{"8", " ", "\[Beta]", " ", 
      SuperscriptBox["\[Gamma]", "2"], " ", "\[Delta]"}], "-", 
     RowBox[{"32", " ", "k", " ", "\[Gamma]", " ", 
      SuperscriptBox["\[Delta]", 
       RowBox[{"5", "/", "2"}]]}], "+", 
     RowBox[{"16", " ", 
      SuperscriptBox["\[Delta]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Beta]", "2"], "+", 
        RowBox[{"4", " ", "\[Delta]", " ", "\[Epsilon]"}]}], ")"}]}]}], 
    RowBox[{"64", " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox["\[Delta]", "3"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", "\[Delta]"}], "+", 
      RowBox[{"8", " ", "\[Alpha]", " ", 
       SuperscriptBox["\[Delta]", "2"]}], "+", 
      RowBox[{"16", " ", "k", " ", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"5", "/", "2"}]]}]}], 
     RowBox[{"8", " ", 
      SuperscriptBox["k", "2"], " ", 
      SuperscriptBox["\[Delta]", "2"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8643968320367727`*^9, 3.864396859312842*^9}, {
   3.864396890635481*^9, 3.8643968999014683`*^9}, {3.8643969381990967`*^9, 
   3.864396966537038*^9}, {3.864397123840867*^9, 3.86439712960247*^9}, 
   3.8643983853837557`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"cc0db7ea-4bce-4676-9411-635bf9a0210f"]
}, Open  ]],

Cell["\<\
We perform a change of passive variable to move to the [0,1] segment\
\>", "Text",
 CellChangeTimes->{{3.864274950694655*^9, 
  3.864274983848119*^9}},ExpressionUUID->"273e22f1-51fa-423d-9062-\
c458647ed927"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "==", 
      FractionBox["z", 
       RowBox[{"z", "+", "1"}]]}], "}"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "==", 
      FractionBox[
       RowBox[{"-", "z"}], 
       RowBox[{
        RowBox[{"-", "z"}], "+", "1"}]]}], "}"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864202530337821*^9, 3.8642025455519876`*^9}, {
   3.864203679909642*^9, 3.864203695046502*^9}, {3.8643125792997847`*^9, 
   3.864312584998733*^9}, 3.864312739399147*^9, 3.864312846895759*^9, {
   3.864313227672843*^9, 3.8643132302920513`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"ecbc9680-5b04-401e-89bd-ba968397c10a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["x", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.864203689655448*^9, 3.864203695378886*^9}, 
   3.864269792992223*^9, 3.8642746682788057`*^9, 3.864312585566846*^9, 
   3.8643127402473993`*^9, 3.864312853051523*^9, 3.864313274121306*^9, 
   3.864317519201784*^9, 3.864358623939385*^9, 3.864398387368374*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"0ae24ab5-39f9-4f92-9a06-336808020e2b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    FractionBox["x", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.864203689655448*^9, 3.864203695378886*^9}, 
   3.864269792992223*^9, 3.8642746682788057`*^9, 3.864312585566846*^9, 
   3.8643127402473993`*^9, 3.864312853051523*^9, 3.864313274121306*^9, 
   3.864317519201784*^9, 3.864358623939385*^9, 3.864398387390162*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"c6d0bd37-0f49-4096-92e4-73d8d236ac9a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq3Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox["#1", 
            RowBox[{"#1", "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{"1", "-", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Minus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox[
            RowBox[{"-", "#1"}], 
            RowBox[{
             RowBox[{"-", "#1"}], "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}]}], "Input",
 CellChangeTimes->{{3.864203669237536*^9, 3.864203704773901*^9}, {
   3.86420374226264*^9, 3.864203743862155*^9}, 3.864206662091394*^9, 
   3.864206908747628*^9, {3.864206958892559*^9, 3.864206981146277*^9}, 
   3.864312121357253*^9, {3.8643121835475197`*^9, 3.8643121837888403`*^9}, {
   3.86431223160461*^9, 3.8643122468096533`*^9}, {3.864312635132743*^9, 
   3.864312642965464*^9}, {3.8643127437881927`*^9, 3.8643127515382442`*^9}, {
   3.864312859386508*^9, 3.86431288216315*^9}, {3.864313285147183*^9, 
   3.8643132933196983`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"73f78e8b-4871-4dc0-bdf9-b92902b4b274"],

Cell["\<\
Now we need to fix the power \[Mu] in order for the coefficient of w[x] to be \
a polynomial in x\
\>", "Text",
 CellChangeTimes->{{3.8642760369276342`*^9, 
  3.8642760992304163`*^9}},ExpressionUUID->"d5895c6a-696f-4098-9fd7-\
9be6c7b5d4e6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
    RowBox[{"w", "[", "x", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
    RowBox[{"w", "[", "x", "]"}]}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864276203478758*^9, 3.8642762449628353`*^9}, {
   3.864276415361682*^9, 3.864276443868231*^9}, 3.864312127163787*^9, {
   3.864312262542098*^9, 3.8643122664867067`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"c3426dae-2d24-40b1-9ff1-5c8e53f26068"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"64", " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
    SuperscriptBox["\[Lambda]", "6"]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
     SuperscriptBox["\[Gamma]", "4"]}], "+", 
    RowBox[{"8", " ", "x", " ", 
     SuperscriptBox["\[Gamma]", "3"], " ", 
     SuperscriptBox["\[Lambda]", "2"]}], "-", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
     SuperscriptBox["\[Gamma]", "2"], " ", 
     SuperscriptBox["\[Lambda]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"\[Beta]", "+", 
       RowBox[{"2", " ", "H", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Lambda]", " ", 
        "\[Mu]"}]}], ")"}]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["\[Lambda]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       RowBox[{"4", " ", "H", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", "\[Beta]", " ", 
        "\[Lambda]", " ", "\[Mu]"}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Epsilon]"}], "+", 
          RowBox[{"x", " ", 
           RowBox[{"(", 
            RowBox[{"A", "+", "\[Epsilon]", "+", 
             RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}], "+", 
          RowBox[{"H", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "H"}], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["x", "2"], " ", "\[Lambda]"}]}], ")"}], " ", 
           "\[Mu]"}], "+", 
          RowBox[{
           SuperscriptBox["H", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], "-", 
    RowBox[{"32", " ", "\[Gamma]", " ", 
     SuperscriptBox["\[Lambda]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "H"}], " ", "\[Lambda]"}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{"\[Beta]", "+", 
          RowBox[{"H", " ", "\[Lambda]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.86427621846246*^9, 3.864276245125049*^9}, {
   3.864276419853499*^9, 3.864276444262329*^9}, 3.864286853987031*^9, 
   3.864312268584391*^9, 3.864312444627284*^9, 3.8643126484910307`*^9, 
   3.864312763725235*^9, {3.864312868911336*^9, 3.8643128850649652`*^9}, 
   3.864313297462576*^9, 3.864317640173773*^9, 3.864358629893512*^9, 
   3.864398393670128*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"f6c50f27-07d4-4abe-be00-115c58a0689e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"64", " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
    SuperscriptBox["\[Lambda]", "6"]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
     SuperscriptBox["\[Gamma]", "4"]}], "-", 
    RowBox[{"8", " ", "x", " ", 
     SuperscriptBox["\[Gamma]", "3"], " ", 
     SuperscriptBox["\[Lambda]", "2"]}], "-", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
     SuperscriptBox["\[Gamma]", "2"], " ", 
     SuperscriptBox["\[Lambda]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"\[Beta]", "+", 
       RowBox[{"2", " ", "H", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Lambda]", " ", 
        "\[Mu]"}]}], ")"}]}], "+", 
    RowBox[{"32", " ", "\[Gamma]", " ", 
     SuperscriptBox["\[Lambda]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "H"}], " ", "\[Lambda]"}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{"\[Beta]", "+", 
          RowBox[{"H", " ", "\[Lambda]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["\[Lambda]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       RowBox[{"4", " ", "H", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", "\[Beta]", " ", 
        "\[Lambda]", " ", "\[Mu]"}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "A"}], " ", "x"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Epsilon]"}], "+", 
          RowBox[{"H", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "x", " ", "\[Lambda]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "H"}], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["x", "2"], " ", "\[Lambda]"}]}], ")"}], " ", 
              "\[Mu]"}], "+", 
             RowBox[{"H", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
      ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.86427621846246*^9, 3.864276245125049*^9}, {
   3.864276419853499*^9, 3.864276444262329*^9}, 3.864286853987031*^9, 
   3.864312268584391*^9, 3.864312444627284*^9, 3.8643126484910307`*^9, 
   3.864312763725235*^9, {3.864312868911336*^9, 3.8643128850649652`*^9}, 
   3.864313297462576*^9, 3.864317640173773*^9, 3.864358629893512*^9, 
   3.864398394326879*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"bd0b5b1f-1741-4a0f-a230-794339884bf7"]
}, Open  ]],

Cell["\[Mu] should be such that -1+x divides the above numerator", "Text",
 CellChangeTimes->{{3.8642771359749947`*^9, 
  3.864277156949697*^9}},ExpressionUUID->"ede75923-0c49-40b1-aaef-\
c0e264c3544d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"muPlus", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PolynomialRemainder", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "4"]}], "+", 
           RowBox[{"8", " ", "x", " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "-", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            SuperscriptBox["\[Lambda]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Beta]", "+", 
              RowBox[{"2", " ", "H", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Lambda]", " ",
                "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              RowBox[{"4", " ", "H", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", "\[Beta]",
                " ", "\[Lambda]", " ", "\[Mu]"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Lambda]", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[Epsilon]"}], "+", 
                 RowBox[{"x", " ", 
                  RowBox[{"(", 
                   RowBox[{"A", "+", "\[Epsilon]", "+", 
                    RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}], "+", 
                 RowBox[{"H", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "H"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["x", "2"], " ", "\[Lambda]"}]}], ")"}], 
                  " ", "\[Mu]"}], "+", 
                 RowBox[{
                  SuperscriptBox["H", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], "-", 
           RowBox[{"32", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "H"}], " ", "\[Lambda]"}], "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{"\[Beta]", "+", 
                 RowBox[{"H", " ", "\[Lambda]", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Mu]"}]}], 
                   ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], ",", "x"}], "]"}], "==", 
       "0"}], ",", "\[Mu]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"muMinus", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PolynomialRemainder", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "4"]}], "-", 
           RowBox[{"8", " ", "x", " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "-", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            SuperscriptBox["\[Lambda]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Beta]", "+", 
              RowBox[{"2", " ", "H", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Lambda]", " ",
                "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"32", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "H"}], " ", "\[Lambda]"}], "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{"\[Beta]", "+", 
                 RowBox[{"H", " ", "\[Lambda]", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Mu]"}]}], 
                   ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              RowBox[{"4", " ", "H", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", "\[Beta]",
                " ", "\[Lambda]", " ", "\[Mu]"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Lambda]", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "A"}], " ", "x"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
                  "\[Epsilon]"}], "+", 
                 RowBox[{"H", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "x", " ", "\[Lambda]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "H"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["x", "2"], " ", "\[Lambda]"}]}], ")"}], 
                    " ", "\[Mu]"}], "+", 
                    RowBox[{"H", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
                    SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], ",", "x"}], "]"}], "==", 
       "0"}], ",", "\[Mu]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.8642764896009493`*^9, 3.864276567089525*^9}, {
   3.8642766664189796`*^9, 3.864276682947541*^9}, {3.864276958083522*^9, 
   3.864276974100775*^9}, {3.8642770336545763`*^9, 3.864277069237823*^9}, 
   3.864277164783778*^9, {3.8642868998673153`*^9, 3.864286933564728*^9}, {
   3.864312131851811*^9, 3.864312133268993*^9}, {3.8643122805726643`*^9, 
   3.86431232866*^9}, {3.864312901364444*^9, 3.864312936476317*^9}, {
   3.8643131849495573`*^9, 3.864313191041491*^9}, {3.8643133098870573`*^9, 
   3.8643133194317093`*^9}, {3.864317648225321*^9, 3.864317658506645*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"66c85af3-c782-4565-aa1d-47f8ea720185"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Gamma]", "3"], "-", 
    RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
     SuperscriptBox["\[Lambda]", "2"]}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["\[Lambda]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{"A", "+", 
       RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
   RowBox[{"16", " ", "H", " ", 
    SuperscriptBox["\[Lambda]", "5"]}]]}]], "Output",
 CellChangeTimes->{
  3.864277165089775*^9, 3.864286937877316*^9, 3.864312340829945*^9, {
   3.8643129171184063`*^9, 3.864312938922553*^9}, 3.864313192078261*^9, 
   3.864313320569648*^9, 3.864317660725588*^9, 3.8643586318566103`*^9, 
   3.8643983949426727`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"372117e6-db7d-498a-a612-c9c20d75765a"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[Gamma]", "3"], "-", 
   RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "+", 
   RowBox[{"8", " ", 
    SuperscriptBox["\[Lambda]", "4"], " ", 
    RowBox[{"(", 
     RowBox[{"A", "-", 
      RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
  RowBox[{"16", " ", "H", " ", 
   SuperscriptBox["\[Lambda]", "5"]}]]], "Output",
 CellChangeTimes->{
  3.864277165089775*^9, 3.864286937877316*^9, 3.864312340829945*^9, {
   3.8643129171184063`*^9, 3.864312938922553*^9}, 3.864313192078261*^9, 
   3.864313320569648*^9, 3.864317660725588*^9, 3.8643586318566103`*^9, 
   3.8643983949586906`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"1c5e8143-ced5-4ff3-98d0-02879b1fe8e8"]
}, Open  ]],

Cell["\<\
Let us check that we recover the result when there is no cubic coupling and \
the quadratic coupling is unity\
\>", "Text",
 CellChangeTimes->{{3.864277168293796*^9, 
  3.864277217334004*^9}},ExpressionUUID->"9db713be-bbb1-4940-8772-\
4456eb25b883"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"muPlus", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]", "->", "1"}], ",", 
     RowBox[{"\[Gamma]", "->", "0"}], ",", 
     RowBox[{"H", "->", "1"}]}], "}"}]}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"muMinus", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]", "->", "1"}], ",", 
     RowBox[{"\[Gamma]", "->", "0"}], ",", 
     RowBox[{"H", "->", "1"}]}], "}"}]}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864277071238452*^9, 3.864277092886804*^9}, {
  3.864286945404324*^9, 3.864286947049967*^9}, {3.86431236195774*^9, 
  3.864312369611364*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"bc235086-12fc-4994-a998-5a0b524cf5fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "-", 
  FractionBox["A", 
   RowBox[{"2", " ", "\[Lambda]"}]]}]], "Output",
 CellChangeTimes->{{3.864277071886488*^9, 3.864277093232448*^9}, 
   3.864286947721074*^9, 3.8643123713891277`*^9, 3.864313327058065*^9, 
   3.86431766496283*^9, 3.86435863571774*^9, 3.864398398081375*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"366ebf0f-0adf-4f47-aed3-cc9cf84bf063"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  FractionBox["A", 
   RowBox[{"2", " ", "\[Lambda]"}]]}]], "Output",
 CellChangeTimes->{{3.864277071886488*^9, 3.864277093232448*^9}, 
   3.864286947721074*^9, 3.8643123713891277`*^9, 3.864313327058065*^9, 
   3.86431766496283*^9, 3.86435863571774*^9, 3.8643983980831747`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"725612f0-568a-46dd-9738-44ebda10bf01"]
}, Open  ]],

Cell["\<\
That is a great success. So now we can perform the change of variable \
explicitly.\
\>", "Text",
 CellChangeTimes->{{3.864277224998146*^9, 
  3.8642772574782133`*^9}},ExpressionUUID->"bf164106-5181-489b-9c99-\
b14bfb20f685"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"A", " ", "z"}], " ", "+", 
   RowBox[{"\[Beta]", " ", 
    SuperscriptBox["z", "2"]}], "+", 
   RowBox[{"\[Gamma]", " ", 
    SuperscriptBox["z", "3"]}], "+", 
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", 
    SuperscriptBox["z", "4"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq", "[", "\[Psi]_", "]"}], ":=", 
   RowBox[{"z", "\[Function]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "''"}], "[", "z", "]"}], "+", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Epsilon]", "-", 
        RowBox[{"V", "[", "z", "]"}]}], 
       RowBox[{
        SuperscriptBox["H", "2"], " "}]], 
      RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3"}], " ", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{"6", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Beta]"}], "+", 
               RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
             SuperscriptBox["\[Lambda]", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["z", "2"], " ", 
             SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
         RowBox[{"24", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "3"]}]]}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "+", "1"}], ")"}], 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Gamma]", "3"], "-", 
          RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[Lambda]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"A", "+", 
             RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
         RowBox[{"16", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "5"]}]]}]]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"z", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "3"}], " ", 
               SuperscriptBox["\[Gamma]", "2"]}], "+", 
              RowBox[{"6", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[Beta]"}], "+", 
                 RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
               SuperscriptBox["\[Lambda]", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["z", "2"], " ", 
               SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
           RowBox[{"24", " ", "H", " ", 
            SuperscriptBox["\[Lambda]", "3"]}]]}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"z", "+", "1"}], ")"}], 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], "-", 
            RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
             SuperscriptBox["\[Lambda]", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["\[Lambda]", "4"], " ", 
             RowBox[{"(", 
              RowBox[{"A", "+", 
               RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
           RowBox[{"16", " ", "H", " ", 
            SuperscriptBox["\[Lambda]", "5"]}]]}]], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"z", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SuperscriptBox["\[Gamma]", "2"]}], "+", 
           RowBox[{"6", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Beta]"}], "+", 
              RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["z", "2"], " ", 
            SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
        RowBox[{"24", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "3"]}]]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "z"}], "+", "1"}], ")"}], 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "3"], "-", 
         RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["\[Lambda]", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"A", "-", 
            RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
        RowBox[{"16", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}]]]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"z", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], " ", 
              SuperscriptBox["\[Gamma]", "2"]}], "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Beta]"}], "+", 
                RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
              SuperscriptBox["\[Lambda]", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["z", "2"], " ", 
              SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
          RowBox[{"24", " ", "H", " ", 
           SuperscriptBox["\[Lambda]", "3"]}]]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "z"}], "+", "1"}], ")"}], 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], "-", 
           RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{"A", "-", 
              RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
          RowBox[{"16", " ", "H", " ", 
           SuperscriptBox["\[Lambda]", "5"]}]]], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox["#1", 
            RowBox[{"#1", "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{"1", "-", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Minus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox[
            RowBox[{"-", "#1"}], 
            RowBox[{
             RowBox[{"-", "#1"}], "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}]}], "Code",
 CellChangeTimes->{{3.864035526701899*^9, 3.864035567764186*^9}, {
   3.86403565956774*^9, 3.864035667256592*^9}, {3.864115016484351*^9, 
   3.864115017418898*^9}, {3.8641152422780733`*^9, 3.864115267812194*^9}, {
   3.864115649334899*^9, 3.864115655364806*^9}, 3.864115695927232*^9, 
   3.864116018567485*^9, 3.864117086684123*^9, {3.8641181148079357`*^9, 
   3.864118115933967*^9}, {3.864118242001134*^9, 3.86411825792118*^9}, 
   3.8641990306553793`*^9, 3.8642010609833183`*^9, 3.86420237395303*^9, {
   3.864205586724691*^9, 3.864205587664859*^9}, 3.8642078236374598`*^9, {
   3.864208608819233*^9, 3.864208610930963*^9}, {3.864269777597616*^9, 
   3.864269777795177*^9}, {3.8642708672924137`*^9, 3.8642708773561974`*^9}, {
   3.8642754046018677`*^9, 3.864275412761997*^9}, {3.8642772909887466`*^9, 
   3.86427732148457*^9}, {3.864277363257691*^9, 3.8642773643954773`*^9}, 
   3.864286339687099*^9, {3.864286963090498*^9, 3.864286991152171*^9}, {
   3.864312401282723*^9, 3.8643124124651127`*^9}, {3.864313334376279*^9, 
   3.864313408970352*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"b2adbbb0-0081-4326-9d08-72a59d316472"]
}, Closed]],

Cell[CellGroupData[{

Cell["Setup recurrence", "Subsubsection",
 CellChangeTimes->{{3.864531519695738*^9, 
  3.864531522493395*^9}},ExpressionUUID->"58821a6b-968e-4781-81b3-\
846d307176d6"],

Cell["\<\
The coefficients of the ODE are simple polynomials now. Let us extract and \
name the coefficients of those polynomials\
\>", "Text",
 CellChangeTimes->{{3.864274994666313*^9, 
  3.864275028944138*^9}},ExpressionUUID->"504815e2-d235-4f65-ba16-\
20e1acb79d3a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "''"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "'"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{"w", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864277353595161*^9, 3.8642773853036823`*^9}, {
  3.864313419531303*^9, 3.864313425651647*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"52329dfb-11eb-409f-be56-79ad72318368"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "4"}], ",", "6", ",", 
   RowBox[{"-", "4"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.864317683945923*^9, 
   3.864358640844207*^9, 3.8643984051989737`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"8c99a041-e8fd-4f85-8dcb-748e065783f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"2", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"32", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "-", 
     RowBox[{"4", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "+", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"3", " ", 
       SuperscriptBox["\[Gamma]", "3"]}], "-", 
      RowBox[{"2", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "A"}], "+", "\[Beta]", "-", "\[Gamma]"}], ")"}], 
       " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"96", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "+", 
      RowBox[{"16", " ", 
       SuperscriptBox["\[Lambda]", "6"]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Lambda]", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"A", "+", 
        RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.864317683945923*^9, 
   3.864358640844207*^9, 3.8643984053394737`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"42dbfc74-4e1f-4bbc-8a1f-294a8a288b61"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"256", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "6"], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "A"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"48", " ", "H", " ", 
       SuperscriptBox["\[Gamma]", "3"], " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "-", 
      RowBox[{"32", " ", 
       RowBox[{"(", 
        RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "6"]}], "-", 
      RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "7"]}], "+", 
      RowBox[{"64", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", "+", "\[Beta]"}], ")"}], "2"], " ", 
       SuperscriptBox["\[Lambda]", "8"]}], "+", 
      RowBox[{"128", " ", "H", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "A"}], "+", 
         RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "9"]}], "+", 
      RowBox[{"256", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]}], ")"}]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"A", "+", "\[Beta]", "-", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "4"]}], "+", 
        RowBox[{"32", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}], "+", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Lambda]", "6"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Lambda]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"A", "+", 
           RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"128", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.864317683945923*^9, 
   3.864358640844207*^9, 3.864398405504036*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"2470c4a2-4209-4796-842e-73ba42787d5e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"2", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"32", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "-", 
     RowBox[{"4", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "+", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"3", " ", 
       SuperscriptBox["\[Gamma]", "3"]}], "-", 
      RowBox[{"2", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "A"}], "+", "\[Beta]", "-", "\[Gamma]"}], ")"}], 
       " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"96", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "+", 
      RowBox[{"16", " ", 
       SuperscriptBox["\[Lambda]", "6"]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Lambda]", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"A", "+", 
        RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"256", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "6"], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "A"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"48", " ", "H", " ", 
       SuperscriptBox["\[Gamma]", "3"], " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "-", 
      RowBox[{"32", " ", 
       RowBox[{"(", 
        RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "6"]}], "-", 
      RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "7"]}], "+", 
      RowBox[{"64", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", "+", "\[Beta]"}], ")"}], "2"], " ", 
       SuperscriptBox["\[Lambda]", "8"]}], "+", 
      RowBox[{"128", " ", "H", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "A"}], "+", 
         RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "9"]}], "+", 
      RowBox[{"256", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"128", " ", 
       SuperscriptBox["H", "2"], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"A", "+", "\[Beta]", "-", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "4"]}], "+", 
        RowBox[{"32", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}], "+", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Lambda]", "6"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Lambda]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"A", "+", 
           RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
       ")"}]}]}]}]}], ";", 
  RowBox[{"l", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]]}], ";"}]}], "Code",
 CellChangeTimes->{{3.8642697470308247`*^9, 3.8642697719328527`*^9}, {
   3.8642698050613003`*^9, 3.864269809694182*^9}, {3.864269920748795*^9, 
   3.864269997090382*^9}, 3.864270965722127*^9, {3.864277396585041*^9, 
   3.8642774445072193`*^9}, {3.864287010818693*^9, 3.864287054480163*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"e91ecacc-44ca-422e-8409-6213c577956c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "/.", "latexCouplings"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.8643990506629972`*^9, 3.864399079726974*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"0c7035e9-332b-47fb-8095-2b0bc7ef2f12"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Gamma]", "3"], "-", 
    RowBox[{"2", " ", "\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
     "\[Delta]"}], "+", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}], " ", 
     SuperscriptBox["\[Delta]", "2"]}], "+", 
    RowBox[{"32", " ", "H", " ", 
     SuperscriptBox["\[Delta]", 
      RowBox[{"5", "/", "2"}]]}]}], 
   RowBox[{"8", " ", "H", " ", 
    SuperscriptBox["\[Delta]", 
     RowBox[{"5", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.864400756374359*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"c1d1cd34-87c7-45e2-b82a-247bc353946c"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"3", " ", 
    SuperscriptBox["\[Gamma]", "3"]}], "-", 
   RowBox[{"4", " ", "\[Gamma]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
    "\[Delta]"}], "+", 
   RowBox[{"8", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "\[Alpha]"}], "+", 
      RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
    SuperscriptBox["\[Delta]", "2"]}], "+", 
   RowBox[{"96", " ", "H", " ", 
    SuperscriptBox["\[Delta]", 
     RowBox[{"5", "/", "2"}]]}]}], 
  RowBox[{"8", " ", "H", " ", 
   SuperscriptBox["\[Delta]", 
    RowBox[{"5", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.864400756399481*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"f03d713a-06ff-417f-9523-7580422769fa"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"3", " ", 
     SuperscriptBox["\[Gamma]", "3"]}], "-", 
    RowBox[{"2", " ", "\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"6", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
     "\[Delta]"}], "+", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "\[Alpha]"}], "+", "\[Beta]", "-", "\[Gamma]"}], 
      ")"}], " ", 
     SuperscriptBox["\[Delta]", "2"]}], "+", 
    RowBox[{"96", " ", "H", " ", 
     SuperscriptBox["\[Delta]", 
      RowBox[{"5", "/", "2"}]]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["\[Delta]", "3"]}]}], 
   RowBox[{"8", " ", "H", " ", 
    SuperscriptBox["\[Delta]", 
     RowBox[{"5", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.8644007564350147`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"1612d864-e0a4-4b51-9d42-c33a761c8d0d"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[Gamma]", "3"], "-", 
   RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", "\[Delta]"}], "+", 
   RowBox[{"8", " ", 
    RowBox[{"(", 
     RowBox[{"\[Alpha]", "+", 
      RowBox[{"4", " ", "H", " ", 
       SqrtBox["\[Delta]"]}]}], ")"}], " ", 
    SuperscriptBox["\[Delta]", "2"]}]}], 
  RowBox[{"8", " ", "H", " ", 
   SuperscriptBox["\[Delta]", 
    RowBox[{"5", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.86440075644879*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"da882435-2612-4f8d-8622-107b4d157d83"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"256", " ", 
    SuperscriptBox["H", "2"], " ", 
    SuperscriptBox["\[Delta]", "5"]}]], 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[Gamma]", "6"], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Gamma]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
     "\[Delta]"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Gamma]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "\[Alpha]"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}],
      " ", 
     SuperscriptBox["\[Delta]", "2"]}], "+", 
    RowBox[{"48", " ", "H", " ", 
     SuperscriptBox["\[Gamma]", "3"], " ", 
     SuperscriptBox["\[Delta]", 
      RowBox[{"5", "/", "2"}]]}], "-", 
    RowBox[{"32", " ", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
     SuperscriptBox["\[Delta]", "3"]}], "-", 
    RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
     SuperscriptBox["\[Delta]", 
      RowBox[{"7", "/", "2"}]]}], "+", 
    RowBox[{"64", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}], "2"], " ", 
     SuperscriptBox["\[Delta]", "4"]}], "+", 
    RowBox[{"128", " ", "H", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "\[Alpha]"}], "+", 
       RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
     SuperscriptBox["\[Delta]", 
      RowBox[{"9", "/", "2"}]]}], "+", 
    RowBox[{"256", " ", 
     SuperscriptBox["\[Delta]", "5"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.864400756585198*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"147d6ff8-9e8f-47e6-9a7e-37c495086eda"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", "\[Delta]"}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "+", 
         RowBox[{"2", " ", "H", " ", 
          SqrtBox["\[Delta]"]}]}], ")"}], " ", 
       SuperscriptBox["\[Delta]", "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", "\[Delta]"}], "-", 
      RowBox[{"4", " ", "\[Gamma]", " ", "\[Delta]", " ", 
       RowBox[{"(", 
        RowBox[{"\[Beta]", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}], ")"}]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[Delta]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "+", "\[Beta]", "+", 
         RowBox[{"4", " ", "H", " ", 
          SqrtBox["\[Delta]"]}], "+", 
         RowBox[{"2", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], 
   RowBox[{"128", " ", 
    SuperscriptBox["H", "2"], " ", 
    SuperscriptBox["\[Delta]", "5"]}]]}]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.8644007566702538`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"fd1983ff-6520-4ede-9c91-71fd1abafa21"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", "\[Delta]"}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"\[Alpha]", "+", 
        RowBox[{"2", " ", "H", " ", 
         SqrtBox["\[Delta]"]}]}], ")"}], " ", 
      SuperscriptBox["\[Delta]", "2"]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", "\[Delta]"}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"\[Alpha]", "+", 
        RowBox[{"4", " ", "H", " ", 
         SqrtBox["\[Delta]"]}]}], ")"}], " ", 
      SuperscriptBox["\[Delta]", "2"]}]}], ")"}]}], 
  RowBox[{"256", " ", 
   SuperscriptBox["H", "2"], " ", 
   SuperscriptBox["\[Delta]", "5"]}]]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.8644007566826143`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"e6d4e8f2-3d5a-414f-9919-88dccc8ea074"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "''"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "'"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{"w", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864277353595161*^9, 3.8642773853036823`*^9}, {
  3.864313419531303*^9, 3.864313454870009*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"8513fb4e-bfaf-4464-9e44-6be2e1c3dc01"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "4"}], ",", "6", ",", 
   RowBox[{"-", "4"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.864317698224139*^9, 3.864358644440229*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"70ebd94b-0951-4c14-8119-0ca2238bad73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"32", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "-", 
     RowBox[{"4", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "+", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "-", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], 
       ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}], "-", 
     RowBox[{"16", " ", 
      SuperscriptBox["\[Lambda]", "6"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[Lambda]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"A", "-", 
         RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.864317698224139*^9, 3.864358644621873*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"29cd83c6-cc66-4611-992e-4136837a7c8b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"256", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "6"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Beta]", "2"]}], "-", 
         RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "A"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "-", 
      RowBox[{"48", " ", "H", " ", 
       SuperscriptBox["\[Gamma]", "3"], " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "-", 
      RowBox[{"32", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "A"}], "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "6"]}], "-", 
      RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "7"]}], "+", 
      RowBox[{"64", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", "-", "\[Beta]"}], ")"}], "2"], " ", 
       SuperscriptBox["\[Lambda]", "8"]}], "+", 
      RowBox[{"128", " ", "H", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "A"}], "+", 
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "9"]}], "+", 
      RowBox[{"256", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]}], ")"}]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "+", 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
         " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "4"]}], "-", 
        RowBox[{"32", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Lambda]", "6"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Lambda]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"A", "-", 
           RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"128", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.864317698224139*^9, 3.8643586448405027`*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"defa58c7-ce57-4398-86f6-0d93167f42df"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bb", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dd", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ff", "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"32", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gg", "=", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "-", 
     RowBox[{"4", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "+", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hh", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "-", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], 
       ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}], "-", 
     RowBox[{"16", " ", 
      SuperscriptBox["\[Lambda]", "6"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ii", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[Lambda]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"A", "-", 
         RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jj", "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"256", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "6"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Beta]", "2"]}], "-", 
         RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "A"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "-", 
      RowBox[{"48", " ", "H", " ", 
       SuperscriptBox["\[Gamma]", "3"], " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "-", 
      RowBox[{"32", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "A"}], "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "6"]}], "-", 
      RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "7"]}], "+", 
      RowBox[{"64", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", "-", "\[Beta]"}], ")"}], "2"], " ", 
       SuperscriptBox["\[Lambda]", "8"]}], "+", 
      RowBox[{"128", " ", "H", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "A"}], "+", 
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "9"]}], "+", 
      RowBox[{"256", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kk", "=", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"128", " ", 
       SuperscriptBox["H", "2"], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "+", 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
         " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "4"]}], "-", 
        RowBox[{"32", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Lambda]", "6"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Lambda]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"A", "-", 
           RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
       ")"}]}]}]}]}], ";", 
  RowBox[{"ll", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]]}], ";"}]}], "Code",
 CellChangeTimes->{{3.8642697470308247`*^9, 3.8642697719328527`*^9}, {
   3.8642698050613003`*^9, 3.864269809694182*^9}, {3.864269920748795*^9, 
   3.864269997090382*^9}, 3.864270965722127*^9, {3.864277396585041*^9, 
   3.8642774445072193`*^9}, {3.864287010818693*^9, 3.864287054480163*^9}, {
   3.864313470139778*^9, 3.864313555327423*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"40ee0742-061b-4caf-a5e5-1618cdcb71eb"],

Cell[TextData[{
 "Ansatz for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"w", 
     RowBox[{"(", "x", ")"}]}], "=", 
    RowBox[{"\[Sum]", 
     RowBox[{
      SubscriptBox["\[Alpha]", "n"], 
      SuperscriptBox["x", "n"]}]}]}], TraditionalForm]],ExpressionUUID->
  "25c28d3d-7189-44e6-87b9-d2b55b2cd6c5"],
 ", we get the following difference equations, exactly the same as in the \
previous section because it is for generic coefficients abcdefghijkl"
}], "Text",
 CellChangeTimes->{{3.8642750419140577`*^9, 3.864275053063743*^9}, {
  3.864275110366568*^9, 3.8642751370634737`*^9}, {3.864277463032014*^9, 
  3.864277495417461*^9}},ExpressionUUID->"8530c2b5-0b31-4c3d-9248-\
24fc062cd236"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"diffEqPlus", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"n", "+", "2"}], ")"}], "a", " ", 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "+", "2"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "b"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "f"}]}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "+", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "n", " ", "c"}], "+", 
      RowBox[{"n", " ", "g"}], "+", "j"}], ")"}], 
    SubscriptBox["\[Alpha]", "n"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "d"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "h"}], "+", "k"}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "-", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "3"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "e"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "i"}], "+", "l"}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "-", "2"}]]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffEqMinus", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"n", "+", "2"}], ")"}], "aa", " ", 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "+", "2"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "bb"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "ff"}]}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "+", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "n", " ", "cc"}], "+", 
      RowBox[{"n", " ", "gg"}], "+", "jj"}], ")"}], 
    SubscriptBox["\[Delta]", "n"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "dd"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "hh"}], "+", "kk"}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "-", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "3"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "ee"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "ii"}], "+", "ll"}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "-", "2"}]]}]}]}]}], "Code",
 CellChangeTimes->{{3.864270018911315*^9, 3.8642702462416697`*^9}, {
  3.8642705156994133`*^9, 3.8642705159562902`*^9}, {3.864313518020338*^9, 
  3.864313519482671*^9}, {3.864313560863084*^9, 3.864313611425284*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"e813d606-ac25-4754-b425-520c9291316a"],

Cell[TextData[{
 "Now we need to generalize the choice of initial conditions C0 and C1 in \
order to be able to extract the even level energy spectrum, and in particular \
the ground state energy.\nLet us recall that for the previous potential (\
\[Gamma]->0, \[Beta]->1), we had C0=1 and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C1", "=", 
    RowBox[{"1", "+", 
     FractionBox["1", 
      RowBox[{"2", "\[Lambda]"}]]}]}], TraditionalForm]],ExpressionUUID->
  "4cca7bcc-5626-4c96-a8e5-af281c5e096c"],
 "."
}], "Text",
 CellChangeTimes->{{3.864275145180252*^9, 3.864275191066702*^9}, {
  3.864277514040395*^9, 3.86427757220188*^9}, {3.8642777223928633`*^9, 
  3.8642778004261217`*^9}, {3.8642862975920963`*^9, 
  3.864286314556131*^9}},ExpressionUUID->"23a8d7fa-344f-4d24-9ce5-\
9a183f1f4740"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"psiPlus", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"z", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "+", 
         RowBox[{"6", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Beta]"}], "+", 
            RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["z", "2"], " ", 
          SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
      RowBox[{"24", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "3"]}]]}], "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "+", "1"}], ")"}], 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]]}]], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Alpha]", "0"], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], 
      FractionBox["z", 
       RowBox[{"z", "+", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["z", 
         RowBox[{"z", "+", "1"}]], ")"}], "2"]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiMinus", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Exp", "[", 
    FractionBox[
     RowBox[{"z", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{"6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Beta]"}], "+", 
           RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["z", "2"], " ", 
         SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
     RowBox[{"24", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "3"]}]], "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "z"}], "+", "1"}], ")"}], 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[Gamma]", "3"]}], "+", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "A"}], "+", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]]}]], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Delta]", "0"], "+", 
     RowBox[{
      SubscriptBox["\[Delta]", "1"], 
      FractionBox[
       RowBox[{"-", "z"}], 
       RowBox[{
        RowBox[{"-", "z"}], "+", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[Delta]", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"-", "z"}], 
         RowBox[{
          RowBox[{"-", "z"}], "+", "1"}]], ")"}], "2"]}]}], 
    ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.864286324723585*^9, 3.864286433353557*^9}, {
   3.8642889704779167`*^9, 3.8642890116523952`*^9}, 3.8642890470751457`*^9, {
   3.864289083251052*^9, 3.86428912995544*^9}, {3.864289237638175*^9, 
   3.864289254868375*^9}, {3.864313707915181*^9, 3.864313713541687*^9}, {
   3.864313881883119*^9, 3.864313887220744*^9}, {3.864317721805814*^9, 
   3.864317725550482*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"3e39cc86-01e5-41ad-96af-e61c54275e68"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"psiPlus", "'"}], "[", "0", "]"}], "/.", "rule"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"psiMinus", "'"}], "[", "0", "]"}], "/.", "rule"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.8642864434371567`*^9, 3.864286462633073*^9}, {
  3.864289139123407*^9, 3.864289156917902*^9}, {3.864289223876636*^9, 
  3.864289228321069*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"54b4cf9e-447e-40e9-8b05-9eb9991a0806"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "A", "+", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
     SubscriptBox["\[Alpha]", "0"]}], 
    RowBox[{"2", " ", "\[Lambda]"}]]}], "+", 
  SubscriptBox["\[Alpha]", "1"]}]], "Output",
 CellChangeTimes->{{3.864286450123785*^9, 3.8642864630254097`*^9}, 
   3.864287064388155*^9, {3.864289140413212*^9, 3.864289159117506*^9}, {
   3.8642892288595867`*^9, 3.864289258649302*^9}, 3.86431389030669*^9, 
   3.864317732172204*^9, 3.8643586500678988`*^9, 3.864446550293253*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"dd182506-37b7-4d12-b698-be4ecd93af2b"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "A", "+", 
      RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
    SubscriptBox["\[Delta]", "0"]}], 
   RowBox[{"2", " ", "\[Lambda]"}]], "-", 
  SubscriptBox["\[Delta]", "1"]}]], "Output",
 CellChangeTimes->{{3.864286450123785*^9, 3.8642864630254097`*^9}, 
   3.864287064388155*^9, {3.864289140413212*^9, 3.864289159117506*^9}, {
   3.8642892288595867`*^9, 3.864289258649302*^9}, 3.86431389030669*^9, 
   3.864317732172204*^9, 3.8643586500678988`*^9, 3.864446550307499*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"dc700082-c425-4081-a392-aabf1c9c309e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"psiPlus", "'"}], "[", "0", "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"psiMinus", "'"}], "[", "0", "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.86428941613244*^9, 3.864289417586679*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"63280f58-8812-48a3-bb21-8a1677d3cc56"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"2", " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "4"]}], "+", 
       RowBox[{"16", " ", "H", " ", 
        SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
     SubscriptBox["\[Alpha]", "0"]}], 
    RowBox[{"16", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], "+", 
  SubscriptBox["\[Alpha]", "1"]}]], "Output",
 CellChangeTimes->{3.864289418474496*^9, 3.864317827419479*^9, 
  3.8643586517049227`*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"43e55992-1a9c-4d1f-a9c0-244f08ad93aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "+", 
       RowBox[{"2", " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
        " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "4"]}], "-", 
       RowBox[{"16", " ", "H", " ", 
        SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
     SubscriptBox["\[Delta]", "0"]}], 
    RowBox[{"16", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], "-", 
  SubscriptBox["\[Delta]", "1"]}]], "Output",
 CellChangeTimes->{3.864289418474496*^9, 3.864317827419479*^9, 
  3.864358651786807*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"d4d86003-1648-4636-889a-312a9f6886f6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"C0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"C1", "=", 
   RowBox[{"S", "+", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Gamma]", "3"], "-", 
         RowBox[{"2", " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          RowBox[{"(", 
           RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "4"]}], "+", 
         RowBox[{"16", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
       SubscriptBox["\[Alpha]", "0"]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]], "C0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CC0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CC1", "=", 
   RowBox[{
    RowBox[{"-", "S"}], "-", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Gamma]", "3"], "+", 
         RowBox[{"2", " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
          " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          RowBox[{"(", 
           RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "4"]}], "-", 
         RowBox[{"16", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "0"]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]], "CC0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialEqPlus", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Alpha]", "0"], "-", "C0"}], ",", 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], "-", "C1"}], ",", 
     RowBox[{
      RowBox[{"2", "a", " ", 
       SubscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"f", " ", 
       SubscriptBox["\[Alpha]", "1"]}], "+", 
      RowBox[{"j", " ", 
       SubscriptBox["\[Alpha]", "0"]}]}], ",", 
     RowBox[{
      RowBox[{"6", "a", " ", 
       SubscriptBox["\[Alpha]", "3"]}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"b", "+", "f"}], ")"}], 
       SubscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"g", "+", "j"}], ")"}], 
       SubscriptBox["\[Alpha]", "1"]}], "+", 
      RowBox[{"k", " ", 
       SubscriptBox["\[Alpha]", "0"]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialEqMinus", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Delta]", "0"], "-", "CC0"}], ",", 
     RowBox[{
      SubscriptBox["\[Delta]", "1"], "-", "CC1"}], ",", 
     RowBox[{
      RowBox[{"2", "aa", " ", 
       SubscriptBox["\[Delta]", "2"]}], "+", 
      RowBox[{"ff", " ", 
       SubscriptBox["\[Delta]", "1"]}], "+", 
      RowBox[{"jj", " ", 
       SubscriptBox["\[Delta]", "0"]}]}], ",", 
     RowBox[{
      RowBox[{"6", "aa", " ", 
       SubscriptBox["\[Delta]", "3"]}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"bb", "+", "ff"}], ")"}], 
       SubscriptBox["\[Delta]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"gg", "+", "jj"}], ")"}], 
       SubscriptBox["\[Delta]", "1"]}], "+", 
      RowBox[{"kk", " ", 
       SubscriptBox["\[Delta]", "0"]}]}]}], "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.864270380769575*^9, 3.864270544385949*^9}, {
  3.864270681732925*^9, 3.8642707092690983`*^9}, {3.864277584361083*^9, 
  3.864277623001809*^9}, {3.864277788826624*^9, 3.864277805818914*^9}, {
  3.8643148390180197`*^9, 3.864314996387719*^9}, {3.864315370805738*^9, 
  3.864315370870441*^9}, {3.8643154226625013`*^9, 3.864315422935775*^9}, {
  3.8643161033803577`*^9, 3.8643161147858477`*^9}, {3.864316764706365*^9, 
  3.864316769043502*^9}, {3.864316802577961*^9, 3.864316820537896*^9}, {
  3.8643179116870728`*^9, 3.864317931324974*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"6610b9dd-b003-4f98-80b4-11b7bfa9228d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Solve recurrence", "Subsubsection",
 CellChangeTimes->{{3.864531533293716*^9, 
  3.8645315366840963`*^9}},ExpressionUUID->"b133e440-d45a-4d8d-bfc4-\
7e9e62229c82"],

Cell["\<\
We solve for the coefficients of the series expansion for a large value of n\
\>", "Text",
 CellChangeTimes->{{3.8642751963474607`*^9, 
  3.8642752191768208`*^9}},ExpressionUUID->"0857bb21-f510-47d4-94e6-\
4866c95d7840"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nmax", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]largePlus", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"initialEqPlus", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"diffEqPlus", "[", "n", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "2", ",", 
              RowBox[{"Nmax", "-", "2"}]}], "}"}]}], "]"}]}], "]"}], "==", 
        "0"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["\[Alpha]", "m"], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"Nmax", "+", "1"}], ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]largeMinus", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"initialEqMinus", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"diffEqMinus", "[", "n", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "2", ",", 
              RowBox[{"Nmax", "-", "2"}]}], "}"}]}], "]"}]}], "]"}], "==", 
        "0"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["\[Delta]", "m"], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"Nmax", "+", "1"}], ",", "2"}], "]"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->CompressedData["
1:eJwd0FtIk3EcxvHXOYJm2RK6UFERRYdikail2GhTgtRoqQlzrWgpZWKLZUhQ
aJpi5nlhnvBQppalLi08MaW8cb7aEPGUoSWJythATL1os//zu3j4XH8fX402
MV3AcVwEGywyhBnzTRaZ5wg/DutLt5bgWGDPDzike/MLSryubsGoCZsNOma0
BzDxy464gLmdZCdzcwQxMHXXSh5+7J4ARb4TSnjt1vc16HFqlmzLfFZRyzwT
tqmHyea5d3CuzP89PJuWNQalVToyeN96v45ZY03PhmH7an6BWVqVRq64C1Rr
zAZXEelqmu2AnFDTCUdEtTwMV6RMwYSsoQ2YszNKbvjZL/5htl8QxkHNoQdP
4HntQ7JmpsMA3Vr3+uB06AszVJ4uJ1dDRF2b+KXxK7mt2pyCKbU28vV1xcAB
s0X+fBjKmhbjnCYtsupml3hoWf2sgnfyR8nkV45cWB8jzIMhNa162Lvxlvwb
Pd8Ej9uXyRbPoG8wtSycnHRLuylgnvQpJ397lWTCLO9KckqqrIQvC9Sk64ql
Gc5420jxI0cflK4L+qFGH1kXxJRUnCNNR3raYHfGJ5K/0TUIx1v6SENJqBVy
zpFkklEj/cAMiOXk0OmubhEe9MiXoMu/vV1Y3S7Yg+vFPnaY0BBAFg1ECz8y
g4vjyVhFVAqUWmWkRGyshn7OIXqYrDPJ59H1c47UafOewv6qXvLSQuG9ZfQe
qyB9M5RmOBxxm+wM4BodzMuFYlJiPnqim7fIslUe5Eqgwh/67KpJfpC/Ymba
jdPkfyIw6rY=
  "],
 CellLabel->"In[50]:=",ExpressionUUID->"19af6b72-96c4-4d5a-bcaa-87d57d7db5dc"],

Cell["\<\
Check that we recover the result for the simpler potential.
The first method we use is by numerically solving for S and \[Epsilon] using \
the vanishing of the positive and negative coefficients. With proper \
initialization, it gives us the ground state energy.\
\>", "Text",
 CellChangeTimes->{{3.864275243849395*^9, 3.864275278617496*^9}, {
  3.864317968659535*^9, 3.864317980809977*^9}, {3.8650114424388237`*^9, 
  3.865011498854601*^9}},ExpressionUUID->"56ca6554-5f0e-4357-8670-\
8c07329f12b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Alpha]largePlus", ",", "\[Alpha]largeMinus"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", "->", "1"}], ",", 
      RowBox[{"A", "->", "1.0"}], ",", 
      RowBox[{"\[Gamma]", "->", "0"}], ",", 
      RowBox[{"H", "->", "1"}], ",", 
      RowBox[{"\[Beta]", "->", "1"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1.0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", 
       RowBox[{"-", "10"}]}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.864272516042613*^9, 3.864272581235248*^9}, {
   3.864272630956184*^9, 3.864272652997024*^9}, {3.8643152302549*^9, 
   3.864315334743429*^9}, {3.864315388282217*^9, 3.864315388370914*^9}, {
   3.864315478660943*^9, 3.864315500630616*^9}, {3.8643161278235292`*^9, 
   3.8643161552456636`*^9}, {3.864316829844284*^9, 3.864316829982398*^9}, {
   3.864317021269602*^9, 3.864317096679879*^9}, {3.864317220413212*^9, 
   3.864317231961761*^9}, 3.864317298780168*^9, {3.864317334566575*^9, 
   3.864317342387321*^9}, {3.864318011281124*^9, 3.864318026607298*^9}, {
   3.8648152350966997`*^9, 3.864815235334029*^9}, {3.8648152886433153`*^9, 
   3.864815290182455*^9}, {3.864815350419099*^9, 3.864815350530383*^9}, 
   3.864815457195801*^9, {3.864815506360507*^9, 3.864815507751213*^9}, {
   3.864815553078826*^9, 3.864815562151266*^9}, {3.864877208457326*^9, 
   3.864877213672748*^9}, {3.864879694782627*^9, 3.86487977377365*^9}, {
   3.864880429843172*^9, 3.8648804334743853`*^9}, {3.86488125389849*^9, 
   3.8648812893362513`*^9}, {3.864882149792671*^9, 3.864882160029595*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"0d46d52a-75da-4a09-8805-6c18ea7f5ae4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Epsilon]", "\[Rule]", "1.2984329350142854`"}], ",", 
   RowBox[{"S", "\[Rule]", 
    RowBox[{"-", "0.3184263445999832`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864272582474341*^9, 3.864272653692486*^9}, 
   3.8642727233006563`*^9, {3.864315296586309*^9, 3.864315344630843*^9}, {
   3.864315378405192*^9, 3.864315417696125*^9}, {3.864315457418236*^9, 
   3.864315501130307*^9}, {3.864316143990018*^9, 3.864316155816534*^9}, {
   3.864316791724887*^9, 3.8643168537145967`*^9}, {3.8643170232770653`*^9, 
   3.864317097691369*^9}, {3.86431722205857*^9, 3.864317232530428*^9}, 
   3.864317299287344*^9, {3.864317335018508*^9, 3.8643173428797483`*^9}, 
   3.86431806306894*^9, 3.86481515433778*^9, 3.864815276172928*^9, 
   3.864815330930966*^9, 3.864815395054429*^9, 3.864815497476426*^9, 
   3.864815548890336*^9, 3.864815603244605*^9, 3.86487730937459*^9, 
   3.864879622209888*^9, {3.864879666309824*^9, 3.8648797755261183`*^9}, 
   3.864880435816009*^9, 3.864880958222632*^9, 3.864881094787812*^9, 
   3.8648811347803373`*^9, 3.864881225823657*^9, {3.86488125997513*^9, 
   3.864881292611203*^9}, {3.864882154639968*^9, 3.864882160641786*^9}, 
   3.864882628543458*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"1d8e6b72-5616-4f28-9999-20e1179556ec"]
}, Open  ]],

Cell["\<\
The second method we use is much more efficient. It consists in solving for S \
using one of the two equations (it so happens that the dependence on S is \
just linear), and plug it back in the other equation. This gives us a \
rational function of \[Epsilon], the vanishing of which being ensured by the \
vanishing of its numerator. The numerator is a polynomial of a given degree, \
hence giving us access to quite a nice number of energy levels in addition to \
the ground state energy.
The first levels fit perfectly with the paper of Lay and Bay. The discrepancy \
in the other levels is probably due to the fact that one has to take further \
coefficients in the series expansions.\
\>", "Text",
 CellChangeTimes->{{3.86501150286266*^9, 
  3.865011702989729*^9}},ExpressionUUID->"13ec2ba5-f196-4e1b-bcf0-\
f98caff32f4e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]Plus", "=", 
   RowBox[{"\[Alpha]largePlus", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", "->", "1"}], ",", 
      RowBox[{"A", "->", "1.0"}], ",", 
      RowBox[{"\[Gamma]", "->", "0"}], ",", 
      RowBox[{"H", "->", "1"}], ",", 
      RowBox[{"\[Beta]", "->", "1"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]Minus", "=", 
   RowBox[{"\[Alpha]largeMinus", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", "->", "1"}], ",", 
      RowBox[{"A", "->", "1.0"}], ",", 
      RowBox[{"\[Gamma]", "->", "0"}], ",", 
      RowBox[{"H", "->", "1"}], ",", 
      RowBox[{"\[Beta]", "->", "1"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rational", "=", 
   RowBox[{"\[Alpha]Plus", "/.", 
    RowBox[{"S", "->", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"\[Alpha]Minus", "==", "0"}], ",", "S"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"num", "=", 
   RowBox[{
    RowBox[{"rational", "//", "Together"}], "//", "Numerator"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"num", "==", "0"}], ",", "\[Epsilon]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.865011272214334*^9, 3.865011354066938*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"824f27f2-9a0d-486a-bf78-a6a08910f6fc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "1.2992147129802176`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "4.6160637724680225`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "8.651623464456057`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "13.182833863900498`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "17.58224004199639`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "22.715954340228716`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "32.41631230403714`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "51.033468160772486`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "83.37846751786722`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "137.24488050178743`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "225.62131502075422`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "370.6120813282369`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "611.6022773809508`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "1023.5986676023903`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "1763.3015603665547`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "3204.136581818244`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "6430.560228813639`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "15821.910315675828`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "66870.54810843477`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.865011359625132*^9, 3.865048399976865*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"3e3728ca-9041-49b1-82e3-9de5ac8f203f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Export everything needed for python", "Subsubsection",
 CellChangeTimes->{{3.865049129318329*^9, 3.865049139510181*^9}, {
  3.8650493503723793`*^9, 
  3.865049370406671*^9}},ExpressionUUID->"05ca1112-a18a-451d-ac3a-\
44d21e64189e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "saveDir", "=", 
   "\"\</home/sarkis/git_repositories/Quartic-Potential/archived/output_\
mathematica/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<plusNumerator.py\>\""}], ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]largePlus", "/.", "latexCouplingsExplicit"}], "//", 
       "Together"}], "//", "Numerator"}], ",", " ", "FortranForm"}], "]"}], 
   ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<plusDenominator.py\>\""}], ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]largePlus", "/.", "latexCouplingsExplicit"}], "//", 
       "Together"}], "//", "Denominator"}], ",", " ", "FortranForm"}], "]"}], 
   ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<minusNumerator.py\>\""}], ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]largeMinus", "/.", "latexCouplingsExplicit"}], "//", 
       "Together"}], "//", "Numerator"}], ",", " ", "FortranForm"}], "]"}], 
   ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<minusDenominator.py\>\""}], ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]largeMinus", "/.", "latexCouplingsExplicit"}], "//", 
       "Together"}], "//", "Denominator"}], ",", " ", "FortranForm"}], "]"}], 
   ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.865049542818655*^9},ExpressionUUID->"ea7b627e-f0fa-4023-bbe8-\
4fcb47ba7469"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]Plus", "=", 
   RowBox[{"\[Alpha]largePlus", "/.", "latexCouplingsExplicit"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]Minus", "=", 
   RowBox[{"\[Alpha]largeMinus", "/.", "latexCouplingsExplicit"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[51]:=",ExpressionUUID->"cce4d38a-3d93-472f-b424-44790ddfeacb"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"Level", "[", 
     RowBox[{"\[Alpha]Minus", ",", 
      RowBox[{"-", "5"}]}], "]"}], "//", "Tally"}], "//", 
   RowBox[{"MaximalBy", "[", "Last", "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.86505475240481*^9, 3.865054766475773*^9}, 
   3.865058517834971*^9},ExpressionUUID->"1d73198c-88c4-42a3-acd2-\
d61f7c72725d"],

Cell["\<\
The equation for S is just linear, so to help mathematica let\
\[CloseCurlyQuote]s just extract the coefficients and solve manually\
\>", "Text",
 CellChangeTimes->{{3.865058524939623*^9, 
  3.865058560660483*^9}},ExpressionUUID->"b3561cdf-e1f7-4d0c-a6ab-\
d3bf9f2c3482"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coefS", "=", 
   RowBox[{"CoefficientList", "[", 
    RowBox[{"\[Alpha]Minus", ",", "S"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865055020831924*^9, 3.8650550257140303`*^9}, {
  3.865057742084869*^9, 3.865057773988196*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"7035df7f-87fc-4a63-9cdf-5bacd4bf6ebe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "coefS", "]"}]], "Input",
 CellChangeTimes->{{3.865058327368753*^9, 3.865058351923066*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"88bf156b-5c9a-4c1c-a54b-c63cad4574b5"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.8650583377595654`*^9, 3.865058352680169*^9}},
 CellLabel->"Out[90]=",ExpressionUUID->"f1943563-42db-457d-8ab2-2cd5d3f24ac2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"solS", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"coefS", "[", 
      RowBox[{"[", "1", "]"}], "]"}], 
     RowBox[{"coefS", "[", 
      RowBox[{"[", "2", "]"}], "]"}]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865058388936252*^9, 3.8650584117160997`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"20e42d28-fd2e-49f1-b6e6-94c44ea88c40"],

Cell["We plug back in the other equation", "Text",
 CellChangeTimes->{{3.86506779724603*^9, 
  3.865067802862265*^9}},ExpressionUUID->"626eb5a6-876b-4794-9b41-\
843cc36d7883"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rational", "=", 
   RowBox[{"\[Alpha]Plus", "/.", 
    RowBox[{"S", "->", "solS"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865058489476781*^9, 3.865058490468895*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"6a8d5f0d-034e-439c-a9b6-17610af72ae3"],

Cell["\<\
Put in fraction form (this take A LOT of time, a few hours for Nmax=20)\
\>", "Text",
 CellChangeTimes->{{3.865067810638118*^9, 
  3.86506783393408*^9}},ExpressionUUID->"ecc9ce45-22c5-4ea6-bfa3-\
3790d99e1223"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rational2", "=", " ", 
   RowBox[{"rational", "//", "Together"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865058567866859*^9, 3.8650585914946737`*^9}, 
   3.865058762596073*^9, {3.86505896233062*^9, 3.865058975175508*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"d5e83bcb-0b95-409c-a276-0012a6d26e10"],

Cell["\<\
Extract the numerator and denominator separately and save them both in \
mathematica notebooks and in text files in python format\
\>", "Text",
 CellChangeTimes->{{3.865067848686243*^9, 
  3.8650678804945307`*^9}},ExpressionUUID->"3a2db931-aca7-4a0d-be56-\
2b47fb73e376"],

Cell[BoxData[
 RowBox[{
  RowBox[{"num", "=", 
   RowBox[{"rational2", "//", "Numerator"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8650648751010723`*^9, 3.865064894281478*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"d3fc73eb-28bf-4618-b574-42997c610290"],

Cell[BoxData[
 RowBox[{
  RowBox[{"den", "=", 
   RowBox[{"rational2", "//", "Denominator"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865065921810235*^9, 3.865065930708765*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"ba937acf-7763-4ea9-bd11-acf107e46312"],

Cell[BoxData[
 RowBox[{"num", ">>", 
  "\"\</home/sarkis/git_repositories/Quartic-Potential/mathematica/\
rationalNumerator_N50.m\>\""}]], "Input",
 CellChangeTimes->{{3.8049956481827393`*^9, 3.80499572195166*^9}, {
   3.804995829955764*^9, 3.804995859025194*^9}, 3.8130286138999243`*^9, {
   3.8130286915868*^9, 3.813028737791086*^9}, {3.813029052533731*^9, 
   3.813029066013687*^9}, {3.813029156597683*^9, 3.813029157915803*^9}, {
   3.8650676462182817`*^9, 3.865067647210259*^9}, {3.86506768304077*^9, 
   3.8650676986504393`*^9}, {3.865067750844502*^9, 3.865067752058529*^9}, {
   3.865478184953177*^9, 
   3.865478185144741*^9}},ExpressionUUID->"1765eada-93f2-4adb-adad-\
ca0c3fe1b0c3"],

Cell[BoxData[
 RowBox[{"den", ">>", 
  "\"\</home/sarkis/git_repositories/Quartic-Potential/mathematica/\
rationalDenominator_N50.m\>\""}]], "Input",
 CellChangeTimes->{{3.865067737674655*^9, 3.865067747866434*^9}, {
  3.865478189737076*^9, 
  3.8654781898808413`*^9}},ExpressionUUID->"18a245f1-fdd9-45cb-9d62-\
42f26fa6d0e2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "saveDir", "=", 
   "\"\</home/sarkis/git_repositories/Quartic-Potential/archived/output_\
mathematica/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_N50.py\>\""}], ",", 
   RowBox[{"ToString", "[", 
    RowBox[{"num", ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_N50.py\>\""}], ",", 
   RowBox[{"ToString", "[", 
    RowBox[{"den", ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.865048925529873*^9, 3.865048954938983*^9}, {
   3.865049055388707*^9, 3.8650490767941303`*^9}, {3.865058582518388*^9, 
   3.8650585830777273`*^9}, {3.865058666146372*^9, 3.865058667970311*^9}, 
   3.865064965713005*^9, {3.865065910875408*^9, 3.865065950178067*^9}, {
   3.865478212041217*^9, 
   3.865478222536738*^9}},ExpressionUUID->"1682c1a9-e65a-4150-96ab-\
e4ec27ef5153"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica/rationalNumerator.py\"\>"], "Output",
 CellChangeTimes->{3.865065872298984*^9, 3.865065924263405*^9, 
  3.8650659588139467`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"e55c704b-7f35-40f8-ab20-6ab0983b248e"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica/rationalDenominator.py\"\>"], "Output",
 CellChangeTimes->{3.865065872298984*^9, 3.865065924263405*^9, 
  3.865065959284857*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"8e388d32-61ac-4c6c-b2c2-36deaa8480ba"]
}, Open  ]],

Cell["\<\
We double check that no errors occurred during the computation\
\>", "Text",
 CellChangeTimes->{{3.8650678878226013`*^9, 
  3.865067912062971*^9}},ExpressionUUID->"89a9d3de-408a-4f5a-8d94-\
1e675616178b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"specialNum", "=", 
   RowBox[{"num", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"delta", "->", "1"}], ",", 
      RowBox[{"alpha", "->", "1.0"}], ",", 
      RowBox[{"gamma", "->", "0"}], ",", 
      RowBox[{"H", "->", "1"}], ",", 
      RowBox[{"beta", "->", "1"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865066048404996*^9, 3.8650660610933113`*^9}, {
  3.865066095797245*^9, 3.865066111141767*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"60f7287c-f81d-4222-8c2a-e6ca15d39cdc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"specialNum", "==", "0"}], ",", "epsilon"}], "]"}]], "Input",
 CellChangeTimes->{{3.865066118586887*^9, 3.86506612757345*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"11f18c39-1403-4fff-85f2-58a007b317f2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1.2992147129802134`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "4.616063772468295`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "8.651623464453854`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "13.182833863903042`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "17.58224004202428`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "22.715954340155275`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "32.41631230411431`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "51.033468160703684`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "83.37846751791798`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "137.24488050176112`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "225.62131502077713`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "370.6120813282067`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "611.6022773810004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1023.5986676022744`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1763.3015603667457`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "3204.1365818181494`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "6430.5602288136715`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "15821.910315675823`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "66870.5481084348`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.865066131339369*^9, 3.865148502075282*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"aeb1ff54-41a0-41f2-aec4-663edd22d675"]
}, Open  ]],

Cell["\<\
Exporting separately the coefficients of the \[Epsilon] polynomial to help \
numpy\
\>", "Text",
 CellChangeTimes->{{3.86506858641536*^9, 3.8650685987353907`*^9}, {
  3.865068982645403*^9, 3.865068989221512*^9}, {3.8650696229826527`*^9, 
  3.8650696445693398`*^9}},ExpressionUUID->"2ed99a13-5349-4252-982e-\
0f0e93a2789d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"num", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sarkis/git_repositories/Quartic-Potential/mathematica/\
rationalNumerator_N20.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"den", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sarkis/git_repositories/Quartic-Potential/mathematica/\
rationalDenominator_N20.m\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8650686585939207`*^9, 3.8650686858116617`*^9}, {
  3.865069541434374*^9, 3.865069556263504*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"6c8f1141-d4b9-49db-b7b2-c663c7cdd1f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HHNum", "=", 
   RowBox[{
    RowBox[{"num", "/.", "physicalCouplingsExplicit"}], "/.", 
    "HHruleExplicit"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8651488024506407`*^9, 3.8651488702051573`*^9}, {
  3.865149289267313*^9, 3.865149289827015*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"9a4f90c8-6eea-41c8-a98c-8cb61760196e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"numnum", "=", 
   RowBox[{"HHNum", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "->", "4"}], ",", 
      RowBox[{"tau", "->", "0"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.86514938589338*^9, 3.865149402160404*^9}, {
  3.865149668620867*^9, 3.865149699534534*^9}, {3.865149746150929*^9, 
  3.8651497506267347`*^9}, {3.865151205248459*^9, 3.8651512233920317`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"bc8c0990-f38e-4e5b-881e-ee8dfd56eda5"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"-\\\", \
FractionBox[\\\"7.150739521176802`*^-26\\\", \
\\\"92938556779861441424878906134368785008203762603712153690985741207246291072\
525273346573019656009771911862420236887060815653411577846556606736926911318899\
664111435677527966242121417900614643608554389949736396964825379234294179867505\
50981868377179113018825281909088399455148533430091776\\\"]}]\\) is too small \
to represent as a normalized machine number; precision may be lost.\"", 2, 
   144, 19, 29173448080933174315, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.865149673604875*^9, 3.865149701574894*^9}, 
   3.865149752823126*^9, 3.865151208085746*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"f9dc4bf2-8118-4832-93cb-cd0386298dc3"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"-\\\", \
FractionBox[\\\"2.0822268309535958`*^-29\\\", \
\\\"23234639194965360356219726533592196252050940650928038422746435301811572768\
131318336643254914002442977965605059221765203913352894461639151684231727829724\
916027858919381991560530354475153660902138597487434099241206344808573544966876\
37745467094294778254706320477272099863787133357522944\\\"]}]\\) is too small \
to represent as a normalized machine number; precision may be lost.\"", 2, 
   144, 20, 29173448080933174315, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.865149673604875*^9, 3.865149701574894*^9}, 
   3.865149752823126*^9, 3.8651512082558107`*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"6aa2d518-5a86-485e-8434-0f75fb2c43c7"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"-\\\", \
FractionBox[\\\"4.539014684195623`*^-27\\\", \
\\\"58086597987413400890549316333980490630127351627320096056866088254528931920\
328295841608137285006107444914012648054413009783382236154097879210579319574312\
290069647298454978901325886187884152255346493718585248103015862021433862417190\
9436366773573694563676580119318024965946783339380736\\\"]}]\\) is too small \
to represent as a normalized machine number; precision may be lost.\"", 2, 
   144, 21, 29173448080933174315, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.865149673604875*^9, 3.865149701574894*^9}, 
   3.865149752823126*^9, 3.865151208426754*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"86ecfc99-2c78-4136-a3a8-472a2d677322"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 144, 22, 29173448080933174315, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.865149673604875*^9, 3.865149701574894*^9}, 
   3.865149752823126*^9, 3.8651512087824087`*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"0ab1d1cb-36d9-47e8-8bb8-30810812c48d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["numnum"], "Input",
 CellChangeTimes->{{3.865151181872993*^9, 3.8651511841872663`*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"8bbef9ba-5ba9-44d4-9217-1c2025723a74"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.439230486448272`*^-233"}], "+", 
  RowBox[{"7.656654540465346`*^-233", " ", "epsilon"}], "-", 
  RowBox[{"1.0068600049901385`*^-232", " ", 
   SuperscriptBox["epsilon", "2"]}], "+", 
  RowBox[{"4.8303055269738525`*^-233", " ", 
   SuperscriptBox["epsilon", "3"]}], "-", 
  RowBox[{"9.94731565442056`*^-234", " ", 
   SuperscriptBox["epsilon", "4"]}], "+", 
  RowBox[{"9.677467829763631`*^-235", " ", 
   SuperscriptBox["epsilon", "5"]}], "-", 
  RowBox[{"4.752635368798825`*^-236", " ", 
   SuperscriptBox["epsilon", "6"]}], "+", 
  RowBox[{"1.237301980747617`*^-237", " ", 
   SuperscriptBox["epsilon", "7"]}], "-", 
  RowBox[{"1.7711448897345287`*^-239", " ", 
   SuperscriptBox["epsilon", "8"]}], "+", 
  RowBox[{"1.4315821035699726`*^-241", " ", 
   SuperscriptBox["epsilon", "9"]}], "-", 
  RowBox[{"6.65177355316783`*^-244", " ", 
   SuperscriptBox["epsilon", "10"]}], "+", 
  RowBox[{"1.7940787213812595`*^-246", " ", 
   SuperscriptBox["epsilon", "11"]}], "-", 
  RowBox[{"2.8126968600057786`*^-249", " ", 
   SuperscriptBox["epsilon", "12"]}], "+", 
  RowBox[{"2.542823237885046`*^-252", " ", 
   SuperscriptBox["epsilon", "13"]}], "-", 
  RowBox[{"1.300010230356939`*^-255", " ", 
   SuperscriptBox["epsilon", "14"]}], "+", 
  RowBox[{"3.628153820600475`*^-259", " ", 
   SuperscriptBox["epsilon", "15"]}], "-", 
  RowBox[{"5.208408329024474`*^-263", " ", 
   SuperscriptBox["epsilon", "16"]}], "+", 
  RowBox[{"3.473753577266576`*^-267", " ", 
   SuperscriptBox["epsilon", "17"]}], "-", 
  RowBox[{"8.893389222376271`*^-272", " ", 
   SuperscriptBox["epsilon", "18"]}], "+", 
  RowBox[{"5.566578556616262`*^-277", " ", 
   SuperscriptBox["epsilon", "19"]}]}]], "Output",
 CellChangeTimes->{{3.865151184509548*^9, 3.8651512124420137`*^9}},
 CellLabel->
  "Out[145]=",ExpressionUUID->"3a7c4699-ed27-40ef-a766-765161dceca4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"numnum", "==", "0"}], ",", "epsilon"}], "]"}]], "Input",
 CellChangeTimes->{{3.8651494288528357`*^9, 3.865149437632782*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"c189c6e9-bd2c-426f-91b7-77c62bb7c5c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "0.2750548597357799`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1.0496928151530274`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "2.6126229456166707`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "5.8565582051639895`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "12.17227576537034`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "23.743107284420468`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "43.97667882501939`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "78.17561942584265`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "134.64608391000831`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "226.6084059875146`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "375.6487420900405`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "618.318369546829`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1019.6651507167073`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1703.5369176455347`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "2928.673141959294`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "5311.72455291152`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "10643.687017429367`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "26157.652115736622`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "110475.98969782532`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.865149438458359*^9, {3.865149686185192*^9, 3.865149711051893*^9}, {
   3.8651497605457363`*^9, 3.865149765402261*^9}, {3.865151200649691*^9, 
   3.865151215431389*^9}},
 CellLabel->
  "Out[146]=",ExpressionUUID->"45061856-5f18-4425-a7c0-ff64164139ab"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"specialNum", "=", 
   RowBox[{"num", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"delta", "->", "1"}], ",", 
      RowBox[{"alpha", "->", "1.0"}], ",", 
      RowBox[{"gamma", "->", "0"}], ",", 
      RowBox[{"H", "->", "1"}], ",", 
      RowBox[{"beta", "->", "1"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865066048404996*^9, 3.8650660610933113`*^9}, {
  3.865066095797245*^9, 3.865066111141767*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"5f080140-20bd-4f01-a3a9-a4dba665da9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"specialNum", "==", "0"}], ",", "epsilon"}], "]"}]], "Input",
 CellChangeTimes->{{3.865066118586887*^9, 3.86506612757345*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"c3c33a2f-c13c-47fd-84f9-c1d1d6f7fe90"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1.2992147129802134`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "4.616063772468295`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "8.651623464453854`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "13.182833863903042`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "17.58224004202428`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "22.715954340155275`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "32.41631230411431`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "51.033468160703684`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "83.37846751791798`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "137.24488050176112`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "225.62131502077713`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "370.6120813282067`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "611.6022773810004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1023.5986676022744`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1763.3015603667457`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "3204.1365818181494`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "6430.5602288136715`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "15821.910315675823`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "66870.5481084348`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.865066131339369*^9, 3.865148502075282*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"6f39c24a-4288-4e63-887e-51357e43aca1"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"listNum", "=", 
   RowBox[{"CoefficientList", "[", 
    RowBox[{"num", ",", "epsilon"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listDen", "=", 
   RowBox[{"CoefficientList", "[", 
    RowBox[{"den", ",", "epsilon"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.86506989404906*^9, 3.8650699083376923`*^9}, {
  3.865071686553843*^9, 3.865071692212829*^9}, {3.8650717245177*^9, 
  3.865071738229124*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"7a1250a4-97e8-4386-a15f-3d7c49865961"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Length", "[", "listNum", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "listDen", "]"}]}], "Input",
 CellChangeTimes->{{3.865071831002026*^9, 3.8650718439126*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"3e44edec-71c9-4c48-9801-9c0e6527fcbd"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{{3.865071835280501*^9, 3.865071844214357*^9}, 
   3.865148481811997*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"59d38ee7-accc-4a62-be8b-ad3ae3128a27"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{{3.865071835280501*^9, 3.865071844214357*^9}, 
   3.865148481813334*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"ef5b1d05-2142-4223-a0d9-df7b98012317"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "saveDir", "=", 
   "\"\</home/sarkis/git_repositories/Quartic-Potential/archived/output_\
mathematica_coefficients/numerator/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_0.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_1.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_2.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_3.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_4.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_5.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_6.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "7", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_7.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "8", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_8.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "9", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_9.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "10", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_10.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_11.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "12", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_12.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "13", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_13.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "14", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_14.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "15", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_15.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "16", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_16.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "17", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_17.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "18", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_18.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "19", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_19.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "20", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.865071716133852*^9, 3.8650717204229918`*^9}, {
  3.865071767846192*^9, 3.86507189729142*^9}, {3.865071934694552*^9, 
  3.8650719385685663`*^9}, {3.865072084733864*^9, 3.8650721194004707`*^9}, {
  3.865072159682582*^9, 3.8650721637259398`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"5a77f658-6d71-4632-8bc8-a426a57d6e70"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_0.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072258732958*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"6a55fca0-08a0-495f-a0ff-8674e1bbbada"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_1.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072259953915*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"33887616-de83-40ba-bffa-ccb0eddda092"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_2.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072260967979*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"a5a7f728-6168-4540-8219-cc7384ed07a5"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_3.py\
\"\>"], "Output",
 CellChangeTimes->{3.8650722617644444`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"d94b213b-e3fb-451f-b168-71ce67e938cf"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_4.py\
\"\>"], "Output",
 CellChangeTimes->{3.8650722623929253`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"075b3752-5f02-49b0-9f7b-31564bc30d57"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_5.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072262878223*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"026d9a07-fc11-447e-97e5-91b8a2562290"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_6.py\
\"\>"], "Output",
 CellChangeTimes->{3.8650722632369757`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"7c8ae483-aa5f-44e9-a439-fff3fa8c3305"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_7.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072263525201*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"06344004-6656-460f-b245-7865b6cf25c8"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_8.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072263725746*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"44645c9a-0d6c-4344-9b30-387b818249d2"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_9.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072263883136*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"1ba3969b-9d1f-4d43-90fe-72259df30921"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_10.\
py\"\>"], "Output",
 CellChangeTimes->{3.865072264001464*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"2935d503-ccee-47e0-8137-a93e69a387db"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_11.\
py\"\>"], "Output",
 CellChangeTimes->{3.865072264067236*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"30f58e48-f7e9-4cf9-b629-4bb81381c21b"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_12.\
py\"\>"], "Output",
 CellChangeTimes->{3.8650722641101017`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"1afa6e3b-e7ef-4265-a56f-23a07f75ce8f"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_13.\
py\"\>"], "Output",
 CellChangeTimes->{3.8650722641355743`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"b05f0200-0cb5-43a8-8687-5be559bece9a"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_14.\
py\"\>"], "Output",
 CellChangeTimes->{3.865072264157556*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"5e3ac3c0-716e-44e4-912d-7ebb7e6f9552"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_15.\
py\"\>"], "Output",
 CellChangeTimes->{3.8650722641804657`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"bdfafb1d-3a03-49bb-aa00-a6da07f23fa1"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_16.\
py\"\>"], "Output",
 CellChangeTimes->{3.8650722641822863`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"aa3adf3f-3033-4560-a208-c0f4f3dce636"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_17.\
py\"\>"], "Output",
 CellChangeTimes->{3.865072264183524*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"d1844e84-5050-42ed-8329-49fe63fa2f99"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_18.\
py\"\>"], "Output",
 CellChangeTimes->{3.865072264184795*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"ec7f69a0-4270-4222-b957-01d526521564"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_19.\
py\"\>"], "Output",
 CellChangeTimes->{3.865072264186121*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"fcea5427-8ded-410b-a503-f7f572439596"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "saveDir", "=", 
   "\"\</home/sarkis/git_repositories/Quartic-Potential/archived/output_\
mathematica_coefficients/denominator/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_0.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_1.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_2.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_3.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_4.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_5.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_6.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "7", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_7.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "8", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_8.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "9", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_9.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "10", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.865072171496413*^9, 3.865072251001671*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"006d20aa-36d1-4fd8-879d-2eb5d08624fb"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
0.py\"\>"], "Output",
 CellChangeTimes->{3.8650722644295197`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"6d860b65-4f34-451a-a5cd-5aa4066bf9c4"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
1.py\"\>"], "Output",
 CellChangeTimes->{3.865072264595069*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"c614ee16-e34c-4943-b45c-0d8dbc624f58"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
2.py\"\>"], "Output",
 CellChangeTimes->{3.865072264685749*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"40ce4bcc-1b4e-44fe-999c-0f09231228b7"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
3.py\"\>"], "Output",
 CellChangeTimes->{3.8650722647397537`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"9e56d4b8-8c0c-432f-899f-c65b45d1d9bb"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
4.py\"\>"], "Output",
 CellChangeTimes->{3.86507226476867*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"b63c4a27-f75f-4c3d-bfb2-8d1ceb38e3be"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
5.py\"\>"], "Output",
 CellChangeTimes->{3.865072264789915*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"4e509a9f-98e9-4663-b886-720f4824e17d"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
6.py\"\>"], "Output",
 CellChangeTimes->{3.8650722647921343`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"85791f80-21f3-4b91-9378-f52a45d35ae6"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
7.py\"\>"], "Output",
 CellChangeTimes->{3.865072264809712*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"8619841b-8935-4ccd-acde-fc259bb1f97a"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
8.py\"\>"], "Output",
 CellChangeTimes->{3.865072264811531*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"d4da6ddc-5025-48d1-8494-a3792a391be5"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
9.py\"\>"], "Output",
 CellChangeTimes->{3.865072264812826*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"21903c38-c752-46b3-94d1-bd42c9a3b140"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting for paper", "Subsubsection",
 CellChangeTimes->{{3.8649914369811077`*^9, 
  3.8649914401650047`*^9}},ExpressionUUID->"65417e59-df0e-4141-b4c1-\
4991b567cb40"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"latexCouplings", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "->", "\[Alpha]"}], ",", 
     RowBox[{"\[Lambda]", "->", 
      SqrtBox["\[Delta]"]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"physicalCouplings", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", "q2"}], "+", 
          RowBox[{"m2", " ", "q1"}]}], 
         RowBox[{"m1", "+", "m2"}]]}], "\[Tau]"}]}], ",", 
     RowBox[{"\[Beta]", "->", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]], 
        FractionBox[
         RowBox[{"2", " ", "q1", " ", "q2"}], 
         SuperscriptBox["r", "3"]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         RowBox[{"m1", "+", "m2"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", 
           SuperscriptBox["\[Omega]2", "2"]}], "+", 
          RowBox[{"m2", " ", 
           SuperscriptBox["\[Omega]1", "2"]}]}], 
         RowBox[{"m1", "+", "m2"}]]}]}]}], ",", 
     RowBox[{"\[Gamma]", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]]}], 
       FractionBox[
        RowBox[{"3", " ", "q1", " ", "q2"}], 
        SuperscriptBox["r", "4"]]}]}], ",", 
     RowBox[{"\[Delta]", "->", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "m1", " ", "m2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            SuperscriptBox["m1", "2"]}], "+", 
           RowBox[{"3", "m1", " ", "m2"}], "+", 
           RowBox[{"2", 
            SuperscriptBox["m2", "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"m1", "+", "m2"}], ")"}], "4"]], 
       FractionBox[
        RowBox[{"q1", " ", "q2"}], 
        SuperscriptBox["r", "5"]]}]}], ",", 
     RowBox[{"H", "->", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"m1", "+", "m2"}], 
         RowBox[{"m1", " ", "m2"}]], 
        FractionBox[
         SuperscriptBox["HBAR", "2"], "2"]}]]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"latexCouplingsExplicit", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "->", "alpha"}], ",", 
     RowBox[{"\[Lambda]", "->", 
      SqrtBox["delta"]}], ",", " ", 
     RowBox[{"\[Beta]", "->", "beta"}], ",", " ", 
     RowBox[{"\[Gamma]", "->", "gamma"}], ",", 
     RowBox[{"\[Delta]", "->", "delta"}], ",", " ", 
     RowBox[{"\[Epsilon]", "->", "epsilon"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"physicalCouplingsExplicit", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alpha", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", "q2"}], "+", 
          RowBox[{"m2", " ", "q1"}]}], 
         RowBox[{"m1", "+", "m2"}]]}], "tau"}]}], ",", 
     RowBox[{"beta", "->", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]], 
        FractionBox[
         RowBox[{"2", " ", "q1", " ", "q2"}], 
         SuperscriptBox["r", "3"]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         RowBox[{"m1", "+", "m2"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", 
           SuperscriptBox["omega2", "2"]}], "+", 
          RowBox[{"m2", " ", 
           SuperscriptBox["omega1", "2"]}]}], 
         RowBox[{"m1", "+", "m2"}]]}]}]}], ",", 
     RowBox[{"gamma", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]]}], 
       FractionBox[
        RowBox[{"3", " ", "q1", " ", "q2"}], 
        SuperscriptBox["r", "4"]]}]}], ",", 
     RowBox[{"delta", "->", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "m1", " ", "m2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            SuperscriptBox["m1", "2"]}], "+", 
           RowBox[{"3", "m1", " ", "m2"}], "+", 
           RowBox[{"2", 
            SuperscriptBox["m2", "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"m1", "+", "m2"}], ")"}], "4"]], 
       FractionBox[
        RowBox[{"q1", " ", "q2"}], 
        SuperscriptBox["r", "5"]]}]}], ",", 
     RowBox[{"H", "->", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"m1", "+", "m2"}], 
         RowBox[{"m1", " ", "m2"}]], 
        FractionBox[
         SuperscriptBox["HBAR", "2"], "2"]}]]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"HHrule", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "->", "0.6099"}], ",", 
     RowBox[{"m2", "->", "0.6099"}], ",", 
     RowBox[{"q1", "->", "0.7080"}], ",", 
     RowBox[{"q2", "->", "0.7080"}], ",", 
     RowBox[{"\[Omega]1", "->", "0.4273"}], ",", 
     RowBox[{"\[Omega]2", "->", "0.4273"}], ",", 
     RowBox[{"HBAR", "->", "1"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"HHruleExplicit", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "->", "0.6099"}], ",", 
     RowBox[{"m2", "->", "0.6099"}], ",", 
     RowBox[{"q1", "->", "0.7080"}], ",", 
     RowBox[{"q2", "->", "0.7080"}], ",", 
     RowBox[{"omega1", "->", "0.4273"}], ",", 
     RowBox[{"omega2", "->", "0.4273"}], ",", 
     RowBox[{"HBAR", "->", "1"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.86540698405575*^9, 3.865406984409531*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"5227cacf-359f-4d4d-9799-e5ce19fea6cc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]Plus", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]largePlus", "/.", "latexCouplings"}], "/.", 
     "physicalCouplings"}], "/.", "HHrule"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]Minus", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]largeMinus", "/.", "latexCouplings"}], "/.", 
     "physicalCouplings"}], "/.", "HHrule"}]}], ";"}]}], "Input",
 CellLabel->"In[72]:=",ExpressionUUID->"aeefee44-e715-4cde-b3a4-d193a609d9d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rational", "=", 
   RowBox[{
    RowBox[{"\[Alpha]Plus", "/.", 
     RowBox[{"S", "->", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"\[Alpha]Minus", "==", "0"}], ",", "S"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Tau]", "->", "0"}], ",", 
      RowBox[{"r", "->", "10"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865007107644417*^9, 3.865007116808415*^9}, {
  3.8650071663123503`*^9, 3.865007168501062*^9}, {3.865008221510722*^9, 
  3.865008221602228*^9}, {3.8650083440854807`*^9, 3.8650083939438257`*^9}, {
  3.865008443846773*^9, 3.8650084769169703`*^9}, {3.865008512749763*^9, 
  3.865008513030899*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"900f808d-d171-483b-8cf5-68cf2fd92b53"],

Cell[BoxData[
 RowBox[{
  RowBox[{"num", "=", 
   RowBox[{
    RowBox[{"rational", "//", "Together"}], "//", "Numerator"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.86500692344523*^9, 3.865006941961009*^9}, {
  3.865006982843453*^9, 3.865006994576399*^9}, {3.8650070534528627`*^9, 
  3.865007055234913*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"b2580e84-c204-429a-b20b-4b528f7810b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"num", "==", "0"}], ",", "\[Epsilon]"}], "]"}]], "Input",
 CellChangeTimes->{{3.865007197643188*^9, 3.865007207060359*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"bac1c2fb-ca27-4fee-936d-f6aee639913e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "22.286019682678024`"}], "-", 
      RowBox[{"20.68774583279195`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "22.286019682678024`"}], "+", 
      RowBox[{"20.68774583279195`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", 
     RowBox[{"18.72888087805439`", "\[VeryThinSpace]", "-", 
      RowBox[{"49.75104659929728`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", 
     RowBox[{"18.72888087805439`", "\[VeryThinSpace]", "+", 
      RowBox[{"49.75104659929728`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", 
     RowBox[{"86.89216343033333`", "\[VeryThinSpace]", "-", 
      RowBox[{"34.57260457616983`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", 
     RowBox[{"86.89216343033333`", "\[VeryThinSpace]", "+", 
      RowBox[{"34.57260457616983`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "148.50536792945695`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "273.7813300606355`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "540.9922299091687`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "1142.0413612388807`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "2576.937398942562`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "6294.343342370951`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "18081.8439141469`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "84530.23892255237`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.865007207770591*^9, 3.865008239182199*^9, {3.865008331411027*^9, 
   3.865008407382365*^9}, 3.865008456247333*^9, 3.865008490184958*^9, 
   3.865008526606431*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"e7d3195a-906e-490b-94ac-c4549885b27a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]P", "=", 
   RowBox[{
    RowBox[{"\[Alpha]Plus", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Tau]", "->", "0"}], ",", 
       RowBox[{"r", "->", "4"}]}], "}"}]}], "//", "FullSimplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]M", "=", 
   RowBox[{
    RowBox[{"\[Alpha]Minus", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Tau]", "->", "0"}], ",", 
       RowBox[{"r", "->", "4"}]}], "}"}]}], "//", "FullSimplify"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[58]:=",ExpressionUUID->"cc682451-5a88-4dbc-bdda-0b5e2407d2a8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FP", "[", 
   RowBox[{"\[Epsilon]_", ",", "S_"}], "]"}], ":=", 
  RowBox[{"\[Alpha]P", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Symbol", "[", "\"\<\[Epsilon]\>\"", "]"}], "->", 
      "\[Epsilon]"}], ",", 
     RowBox[{
      RowBox[{"Symbol", "[", "\"\<S\>\"", "]"}], "->", "S"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FM", "[", 
   RowBox[{"\[Epsilon]_", ",", "S_"}], "]"}], ":=", 
  RowBox[{"\[Alpha]M", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Symbol", "[", "\"\<\[Epsilon]\>\"", "]"}], "->", 
      "\[Epsilon]"}], ",", 
     RowBox[{
      RowBox[{"Symbol", "[", "\"\<S\>\"", "]"}], "->", "S"}]}], 
    "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.864998621164598*^9, 3.8649987041773653`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"e187eca8-d981-46a8-9b75-66a84a9c6655"],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", "\[Epsilon]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"FP", "[", 
     RowBox[{"\[Epsilon]", ",", "S"}], "]"}], "/.", 
    RowBox[{"S", "->", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FM", "[", 
          RowBox[{"\[Epsilon]", ",", "S"}], "]"}], "==", "0"}], ",", "S"}], 
       "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.865002444242592*^9, 3.8650025865101147`*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"2756292c-3f4a-4ed1-bb03-aff04ba70484"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"FM", "[", 
       RowBox[{"\[Epsilon]", ",", "S"}], "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{"FP", "[", 
       RowBox[{"\[Epsilon]", ",", "S"}], "]"}], "==", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", 
     RowBox[{"-", "10"}], ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"S", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "->", "None"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<\[Epsilon]\>\"", ",", "Black", ",", "30"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<S\>\"", ",", "Black", ",", "30"}], "]"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Latin Modern Roman\>\""}], ",", 
      RowBox[{"FontSize", "\[Rule]", "25"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"25", ",", "Black", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ContourStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", 
        RowBox[{"Darker", "[", 
         RowBox[{"Green", ",", "0.8"}], "]"}], ",", 
        RowBox[{"Opacity", "[", "0.6", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", 
        RowBox[{"Darker", "[", 
         RowBox[{"Red", ",", "0.4"}], "]"}], ",", 
        RowBox[{"Opacity", "[", "0.6", "]"}]}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Purple", ",", 
      RowBox[{"PointSize", "@", "Large"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"1.9", ",", "3.8"}], "}"}], "]"}], ",", "Purple", ",", 
      RowBox[{"PointSize", "@", "Large"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0.4", ",", "0"}], "}"}], "]"}], ",", "Purple", ",", 
      RowBox[{"PointSize", "@", "Large"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"14.83", ",", "5.66"}], "}"}], "]"}], ",", "Purple", ",", 
      RowBox[{"PointSize", "@", "Large"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"5.69", ",", 
         RowBox[{"-", "0.51"}]}], "}"}], "]"}], ",", "Purple", ",", 
      RowBox[{"PointSize", "@", "Large"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"34.6", ",", 
         RowBox[{"-", "1.55"}]}], "}"}], "]"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Background", "\[Rule]", "White"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQrTf5ZNLj028cnwnWp4LoRapyLSC66inDdBDNIHt6
Noi+kJ2yFETbKOusBNFKfg6bQPQXxyXbQPQbjs9g+saxB/tAtMGNvcdBdNL+
sOYnQNpsfdJMEK2zevU8EG3Ld24JiO7ZvXEjiH4bmrcbROcsuJ31DEi//9xR
AKIDun57PQfSHCphLSD6jHpOL4j2X5ffB6JZJlQtBtHZlpLrQLTcS4vNIDrr
sBuY9lE+vhtEbynS3QuiJ51+exBEc6WnHAXRkvxrToPoPc1KF0C0+9d12i+A
9EYuG2MQfchZ9QiIlvnBeBREAwCEK7rE
  "],
 CellLabel->"In[62]:=",ExpressionUUID->"f6945032-efbd-4fb9-8e29-c7c8366aba15"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
dYs+qLRqf2TD/weuYThA
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0., 0.19999999999999996`, 0.], Thickness[Large], Opacity[
        0.6], 
        StyleBox[{
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
           126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
           139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 
           152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
           165, 166, 167, 168, 169, 170}], LineBox[CompressedData["
1:eJwN0NNBBQAAAMCXbbvXSI3QAPXbTtm2bdu23X3cAhcsqygtDwkEApVUUU0N
tdRRTwONNNFMC6200U4HnXTRTQ+99NHPAIMMMcwIo4wxzgSTTDHNDLPMMc8C
iyyxzAqrrLHOBptssc0Ou+yxzwGHHHHMCaeccc4Fl1xxzQ233HHPA4888cwL
r7zxzgeffPHND7/8EZAbQihhhBNBJFFEE0MsccSTQCJJJJNCKmmkk0EmWWST
Qy555FNAIUUUE6SEf7bfS1s=
           "]], LineBox[CompressedData["
1:eJwV0FN3kAEAgOFvi3+jk5aNtWW7ltvSwvKybRsLyy3btm27lm33dPGc816/
6WLjozqGBEGQTHqRgYxkIjNhZCEr2chODnKSi9zkIS/5yE8BClKIwoRThAgi
KUoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5pEUYva1KEu9ahPAxoSTQyN
aEwTmtKMWJrTgpa0Io7WtKEt7WhPB/5Pi6cTnelCV7rRnR70pBe96UNf+tGf
AQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcwkgVnMZg5zSWQe
81nAQhaxmCUsJYllLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd9
7OcABznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5wl3vc
5wEPecRjnpDMU57xnBe85BWvecNb3vGeD3zkE5/5wle+8Z0f/OQXv/nDX4LQ
IAghlBSkJBWpSUNa/gHpPIDa
           "]]},
         FontFamily->"Latin Modern Roman",
         FontSize->25]},
       RowBox[{
         RowBox[{
           RowBox[{"16.690512562234368`", "\[VeryThinSpace]"}], "+", 
           RowBox[{
             TagBox["\[Epsilon]", HoldForm], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "64.64229475379511`"}], "+", 
                 RowBox[{
                   TagBox["\[Epsilon]", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"23.274701120121268`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.4357266425934954`"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.0192655399199428`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.00006190224352549722`"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"4.514860551625962`*^-8", "-", 
                    RowBox[{"5.253244336233911`*^-12", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
             TagBox["S", HoldForm], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "61.39785582164369`"}], "+", 
                 RowBox[{
                   TagBox["\[Epsilon]", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"63.30999038870587`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "9.057099140098906`"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.2553721163204712`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.0016705922143569042`"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"2.60571150480496`*^-6", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "8.218142900456068`*^-10"}], "+", 
                    RowBox[{"2.4005503662081683`*^-14", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], "\[Equal]", 
         "0"}]],
      Annotation[#, 
       16.690512562234368` + 
        HoldForm[$CellContext`\[Epsilon]] (-64.64229475379511 + 
          HoldForm[$CellContext`\[Epsilon]] (23.274701120121268` + 
            HoldForm[$CellContext`\[Epsilon]] (-1.4357266425934954` + 
              HoldForm[$CellContext`\[Epsilon]] (0.0192655399199428 + 
                HoldForm[$CellContext`\[Epsilon]] (-0.00006190224352549722 + (
                    4.514860551625962*^-8 - 5.253244336233911*^-12 
                    HoldForm[$CellContext`\[Epsilon]]) 
                   HoldForm[$CellContext`\[Epsilon]]))))) + 
        HoldForm[$CellContext`S] (-61.39785582164369 + 
          HoldForm[$CellContext`\[Epsilon]] (63.30999038870587 + 
            HoldForm[$CellContext`\[Epsilon]] (-9.057099140098906 + 
              HoldForm[$CellContext`\[Epsilon]] (0.2553721163204712 + 
                HoldForm[$CellContext`\[Epsilon]] (-0.0016705922143569042` + 
                  HoldForm[$CellContext`\[Epsilon]] (
                    2.60571150480496*^-6 + (-8.218142900456068*^-10 + 
                    2.4005503662081683`*^-14 
                    HoldForm[$CellContext`\[Epsilon]]) 
                    HoldForm[$CellContext`\[Epsilon]])))))) == 0, 
       "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {RGBColor[0.6, 0., 0.], Thickness[Large], Opacity[0.6], 
        StyleBox[{LineBox[CompressedData["
1:eJwNw2dbjQEAANCXb1ZGRpRx7ZERKiNb2Rqydwiha0XZESEzo4jK3iEkMyTE
n3LO85xQVjgjt0UQBI22ahkErW1jW9sZYXs72NFORtrZLna1m1F2t4fRxtjT
Xva2jyH72s/+DnCggxzsEIc6zFiHO8KRjjLO0Y5xrPEmmOg4xzvBiSY5yclO
carTnO4MZ5psirOc7RznOs/5LnChqaaZboaLzHSxS1zqMpe7wpWucrVrXOs6
15vlBje6yWw3u8Wt5rjN7e4w17A73eVu97jXPPe533wLPOBBD3nYIx71mIUe
94RFnvSUxZ72jGct8ZznveBFL3nZUq941Wtet8xyb3jTCm9520qrrPaOd73n
fR/40Ec+9olPfeZzX1jjS1/52lrf+NZ31vneej/40U9+9otfbfCb3/1hoz9t
8pe//WOzf/3nf910VLs=
           "]], 
          LineBox[{716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
            728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 
           741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 
           754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 
           767, 768, 769, 770, 771}], LineBox[CompressedData["
1:eJwNwwc3kAEAAMCvlwZFUiQZGS0tDZGVbBIltDRItFCSkEgSisgOkX/a3XuX
3NJV17ktCIINQ7YHwQ53usvdhhrmHvcaboT7jHS/UR7woNHGeMhYDxvnEeNN
MNEkj5psiqmmeczjnvCkp0z3tGc86znPm+EFL3rJy2Z6xSyzvWqOueaZb4HX
LPS6RRZbYqllllthpVXesNqb1ljrLW9b5x3rbbDRu97zvg98aJOPfOwTn9ps
i89s9blttvvCl77ytW/ssNMu3/rObt/b4wd7/Wif/Q74yUE/O+SwXxzxq6N+
c8zvjjvhpD/86ZTT/nLGWX8757wLLrrksiv+cdU11/3rhpv+c8v/TVQ3Fw==

           "]]},
         FontFamily->"Latin Modern Roman",
         FontSize->25]},
       RowBox[{
         RowBox[{
           RowBox[{"268.39524046856945`", "\[VeryThinSpace]"}], "+", 
           RowBox[{
             TagBox["\[Epsilon]", HoldForm], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "778.1447050402614`"}], "+", 
                 RowBox[{
                   TagBox["\[Epsilon]", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"170.80885907842625`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6.503293853173094`"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.057136986172952556`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.00012739932283046778`"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"6.767918961719378`*^-8", "-", 
                    RowBox[{"5.963615477359369`*^-12", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
             TagBox["S", HoldForm], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"901.1582993016734`", "\[VeryThinSpace]"}], "+", 
                 RowBox[{
                   TagBox["\[Epsilon]", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "598.4922517363444`"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"51.88491703469251`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.9287706963526848`"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.004099779491094447`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "4.552055702359152`*^-6"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.0674088645973745`*^-9", "-", 
                    RowBox[{"2.4005503662081683`*^-14", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], "\[Equal]", 
         "0"}]],
      Annotation[#, 
       268.39524046856945` + 
        HoldForm[$CellContext`\[Epsilon]] (-778.1447050402614 + 
          HoldForm[$CellContext`\[Epsilon]] (170.80885907842625` + 
            HoldForm[$CellContext`\[Epsilon]] (-6.503293853173094 + 
              HoldForm[$CellContext`\[Epsilon]] (0.057136986172952556` + 
                HoldForm[$CellContext`\[Epsilon]] (-0.00012739932283046778` + \
(6.767918961719378*^-8 - 5.963615477359369*^-12 
                    HoldForm[$CellContext`\[Epsilon]]) 
                   HoldForm[$CellContext`\[Epsilon]]))))) + 
        HoldForm[$CellContext`S] (901.1582993016734 + 
          HoldForm[$CellContext`\[Epsilon]] (-598.4922517363444 + 
            HoldForm[$CellContext`\[Epsilon]] (51.88491703469251 + 
              HoldForm[$CellContext`\[Epsilon]] (-0.9287706963526848 + 
                HoldForm[$CellContext`\[Epsilon]] (0.004099779491094447 + 
                  HoldForm[$CellContext`\[Epsilon]] (-4.552055702359152*^-6 + \
(1.0674088645973745`*^-9 - 2.4005503662081683`*^-14 
                    HoldForm[$CellContext`\[Epsilon]]) 
                    HoldForm[$CellContext`\[Epsilon]])))))) == 0, 
       "Tooltip"]& ]}], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  Background->GrayLevel[1],
  BaseStyle->{
    GrayLevel[0], FontFamily -> "Latin Modern Roman", FontSize -> 25},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[0.5, 0, 0.5], 
    PointSize[Large], 
    PointBox[{1.9, 3.8}], 
    RGBColor[0.5, 0, 0.5], 
    PointSize[Large], 
    PointBox[{0.4, 0}], 
    RGBColor[0.5, 0, 0.5], 
    PointSize[Large], 
    PointBox[{14.83, 5.66}], 
    RGBColor[0.5, 0, 0.5], 
    PointSize[Large], 
    PointBox[{5.69, -0.51}], 
    RGBColor[0.5, 0, 0.5], 
    PointSize[Large], 
    PointBox[{34.6, -1.55}]},
  Frame->{True, True},
  FrameLabel->{{
     FormBox[
      StyleBox["\"S\"", 
       GrayLevel[0], 30, StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox["\"\[Epsilon]\"", 
       GrayLevel[0], 30, StripOnInput -> False], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  LabelStyle->Directive[25, 
    GrayLevel[0], FontFamily -> "Times"],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-10, 20}, {-10, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8650006117510147`*^9, 3.865000995100832*^9}, {
   3.865001069195051*^9, 3.8650010759612226`*^9}, 3.865001275975718*^9, {
   3.8650013083241653`*^9, 3.86500132925404*^9}, 3.865001370970562*^9, {
   3.865001440923731*^9, 3.8650014498111143`*^9}, {3.86500148894179*^9, 
   3.8650015155361643`*^9}, {3.865001567426333*^9, 3.8650016013743668`*^9}, {
   3.8650016378491793`*^9, 3.865001650030106*^9}, {3.86500233404529*^9, 
   3.865002394545395*^9}, 3.865003560449058*^9, 3.8654077532300873`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"2a42cfc0-d7e4-495a-b657-63f683a3d18e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rm", "=", 
   RowBox[{"-", "5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rM", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pm", "=", 
   RowBox[{"-", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pM", "=", "10"}], ";"}]}], "Input",
 CellChangeTimes->{{3.864993423636203*^9, 3.8649934340332537`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"8bdb3f4e-c98c-484d-827a-d89bc33f1b06"],

Cell[BoxData[
 RowBox[{
  RowBox[{"contourPotentialPlot1", "=", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"FM", "[", 
         RowBox[{"\[Epsilon]", ",", "S"}], "]"}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{"FP", "[", 
         RowBox[{"\[Epsilon]", ",", "S"}], "]"}], "==", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "rm", ",", "rM"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", "pm", ",", "pM"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"Contours", "\[Rule]", "15"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotPoints", "->", "50"}], ",", 
     RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
     RowBox[{"Frame", "\[Rule]", "False"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.864993463218747*^9, 3.864993489879678*^9}, {
  3.864994010521727*^9, 3.864994041893669*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"720aa313-1542-4a0c-9c46-aea84638bb76"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"level", "=", 
  RowBox[{"-", "1.5"}]}]], "Input",
 CellChangeTimes->{{3.864993505988164*^9, 3.864993507664818*^9}, {
  3.8649937860212*^9, 3.864993798105344*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"d1e01704-8953-43d1-8d01-34eefc588458"],

Cell[BoxData[
 RowBox[{"-", "1.5`"}]], "Output",
 CellChangeTimes->{
  3.86499350792962*^9, {3.864993786418323*^9, 3.864993798517879*^9}},
 CellLabel->
  "Out[172]=",ExpressionUUID->"58d23423-c45a-4cba-9e70-2291f9c57be0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"potential1", "=", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FM", "[", 
        RowBox[{"\[Epsilon]", ",", "S"}], "]"}], ",", 
       RowBox[{"FP", "[", 
        RowBox[{"\[Epsilon]", ",", "S"}], "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "rm", ",", "rM"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", "pm", ",", "pM"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], ",", "1"}], "}"}]}], ",", 
     RowBox[{"ClippingStyle", "\[Rule]", "None"}], ",", 
     RowBox[{"MeshFunctions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"#3", "&"}], "}"}]}], ",", 
     RowBox[{"Mesh", "\[Rule]", "15"}], ",", 
     RowBox[{"MeshStyle", "\[Rule]", 
      RowBox[{"Opacity", "[", ".5", "]"}]}], ",", 
     RowBox[{"MeshShading", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", ".3", "]"}], ",", "Blue"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", ".8", "]"}], ",", "Orange"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", ".01", "]"}], ",", "Cyan"}], "}"}]}], 
       "}"}]}], ",", 
     RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.864993551308247*^9, 3.8649935568629227`*^9}, {
  3.864993665788474*^9, 3.8649936710382423`*^9}, {3.864993880258629*^9, 
  3.864993915876451*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"3e92b3fd-b6d8-473f-8d00-a1c76c6108a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FM", "[", 
      RowBox[{"\[Epsilon]", ",", "S"}], "]"}], ",", 
     RowBox[{"FP", "[", 
      RowBox[{"\[Epsilon]", ",", "S"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "rm", ",", "rM"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"S", ",", "pm", ",", "pM"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "500"}], ",", "500"}], "}"}]}], ",", 
   RowBox[{"ClippingStyle", "\[Rule]", "None"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"#3", "&"}], "}"}]}], ",", 
   RowBox[{"Mesh", "\[Rule]", "15"}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", 
    RowBox[{"Opacity", "[", ".5", "]"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "\"\<Rainbow\>\"", "]"}], ",", 
      RowBox[{"Directive", "[", "\"\<TemperatureMap\>\"", "]"}]}], "}"}]}], 
   ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.864994199101231*^9, 3.8649943958182573`*^9}, {
  3.864994503029675*^9, 3.8649945042232513`*^9}, {3.8649945395478773`*^9, 
  3.864994540921068*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"a2d51122-7349-4cc0-becc-b421fa1d885f"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
t18s9qZgnoIOTYnmaZILQzHfQIexzSF63un+2C/ws/vjlvuSw8IxTrDvio5q
ftIZgXUD5ouEjOblwtpQzBPwM8j+78iA27E4LlAn554/sVg+YSXGb9CnA0st
drvExr1jsV3gXrKeKts+RCEX/NeQEHma4zB1JpvOT8i3d1OrEpws/VE3iEdo
y/n0oYvo6xTw4g65EbOGR/XrPwzzx1kv+suil3HUP3POehLs34kYvi+UjUF7
qGMrP+2s0QoNJMBBn+kB7j83mPev6zjrVfATNrGCb8KqcArWXf3X0/5/+fhg
3cXkUJ+ZnHsdRXPGdRw59zqK6V+Bh/f9VHk49zqK2a4OD4f1D5PDumXgOE15
+D998PshzDgt/4PLUX31Xp3bD0dnJgedmRx0ZnLQmclB54H9K/Dwvp8qDwed
B25Xh4eDzkwOOg8cpykPB50HjtPyP7gcBfcvTJ2ZHHRmctCZyZn3R0ydB/av
wMNBZyYHnQduV4eHg85MDjoPHKcpDwedB47T8j+4HAXrTKbOTA46MznozOTM
+02mzgP7V+DhoDOTg84Dt6vDw0FnJgedB47TlIeDzgPHafkfXI6CdTtTZyYH
nZkcdGZy5v07U+eB/SvwcNCZyUHngdvV4eGgM5ODzgPHacrDQeeB47T8Dy5H
wX0QU2cmB52ZHHRmcuZ+CFPngf0r8PC+nyoPB50HbleHh4POTA46DxynKQ8H
nQeO0/I/OL3Pw+Xn/+3zcOvQymZy0JnJmftCTJ0H9q/Aw0FnJgedB25Xh4eD
zkwOOg8cpykPB50HjtPyPzis695NZOrM5NzrOpoz98eYOjM5c3+M278CD+/7
qfJw5v4Yd7s6PJx7XUdz7nUdM05THs69rmPGafkfXI6CfQAuPxydmRx0ZnLQ
mcmZ+4Hc8UvycNCZyft+qjycua/I3a4ODwedmRx0HjhOUx4OOg8cp+V/cDkK
9lWYOjM56MzkoDOTM/dLmToP7F+Bh4POTA46D9yuDg9n7tMydR44TlMeDjoP
HKflf3A5CvZ7mTozOejM5KAzkzP3mZk6D+xfgYeDzkwOOg/crg4PB52ZnLnv
zdR5QH04Og8cp+V/cDkK9smZOjM56MzkoDOTM/fnmToP7F+Bh4POTA46D9yu
Dg8HnZmc+byAqfOA+nB0HjhOy//gchQ8d2DqzOSgM5ODzkzOfK7B1Hlg/wo8
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
AdTjWnY=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFnHn8VVP3x++93XumL19RUVJSKSlzhoxlaCINSEIqZaooQklFMqtkTI+h
kIwhyTxmJmQmQ8/D85jnIbPf5+2zvH5/7Nded5199tlnn73X8Flr342GHzfg
2EqpVFo7KZUaqP68KJXGifGh6g3KpdKdKv3Fbx/0g6IH6fpi0QNKbrM4+Nuq
XqIyWnRr1berDBbds2L+E6I/yc3/Iy2V2qm+Q+UB8burvl9lguivctObZKVS
B9V3Rf87qF6qMqxk/t0qQ0V/qvb9VP9X7bcL/pP63abie2lTr/fZmTa1UmlT
8Rro2n7cK7os+l7RvdRmH9X/Vj99RCfi76O6idqURN+j6i3dv5fqV8Wvac4O
Ej2ucH+/ld3nNxrPA6K/Vp2LX1M5WPy+apeKbp+4Lfc8JP4moitBty37uY+J
LmscD6v+RfUf4ldjzPupn0x0feZ+uJdv8S3PU328xjip7DG8o99N1O4p1S1y
f69bmXfmRPUtQTcLfv+gbw7+ctU30E70e0Hvwjzmvvcj1Y1UL4g2DVXfxloR
/aGudVP9mp6fMRaV6/S7TvWN0U99PGt30Y2Df6vopqpvYg2Jbqn3Wyh675K/
xcJ41h6ah0Gq31T9u+p54l+rev+K6a2i/aK49zuN50HRx2o8/xO9p3hfaq66
iHdPrJkvxB/DM3OvsaXBn1K4zWfiv68yX/R7ql/kneK9PtCavpla/f8n93p7
RfRzqcf1ouh/i7+T6JdEv1B2P1xrpjFfG/08H30yPx+o/daqX9Y4XxPvIRUN
pfSr+lyqunnhOfyFedHvJ8S/RvVZuu/X+lJphuifVB+mNTde9HS131htv1A5
pOS996Xow9i/ura96q1Ub0cR/ajG+V9d/7nsa9z3edy7Sep1navvHQq3eUm8
VoX304aqvxfvB/ayfk9gXlR3Ev8Wtbtc9EWic9FXi95adKG++oj+U7yRmpOi
4vG1Ljz+nfRevVUmie7PfIu/mdpMVb2H+Kewz8R/UHQf3fei6jaF6YNE91U5
VW2uUH2V7rtS5RCVLPHeRwZsoXG+JLoPfSTuc8/M/XylfnqJt6+eMVH8fUR3
0rUXRe+l9muor69ZY/q9Ur+3UL1Y13sxbvF7qH5G984X/wXxx4i3KmTmONX/
Vjm5ZFn7QezHM6qaX9Wnq95D/a+r0oE5Ulmv4vXRVfU6Kq1ED9U41bQ0WGtm
oOg68Q9QfZSe9674Y3Ovefgv6PcRZffznegr1eZb1cPUfoRKI/FnqZ+RotcX
f7jqtdTmcdF7iz482sBvEmPYSNcuUJsvGLue1b/ia/AHhOzqr7pxZp2wkeiD
4lsjq5EB7/0jZ2reR+ynG4KPnFip8m7Zsmd9lfdDj7wf89Y+6vdjDg/TMxry
rRlvEfJG32G9wvumieoOGs9y0RsjVwrrw7dV/6k+Plbprd87Fq7fQ4aUvTf2
QNYhC5GP0S/9v66xT9D6OFP0ARr/jyoPsx9YFxrLK/Gt10Vmlrzu39C9PVW/
q3s3rPhdkYcf6/du7Hddb61nHy/6RI3lPf3uhV7KLBcbhWzcSdfWKVsWddcY
jhavC3Oo9i1FnyP+z4n35e3qe7Se1Tzk9q1q00b19eLfLHpD0eep/XG8q8qJ
+n0xc6h7ZqvGgGgh/uKSdUiz0B2f6v6uqv+tPuaozSS+sa51KTxfjQvLuSzk
3qtqvy37Qu0/Vdlf9Gd67leiDxD9uegVatMZGSnejxp/e9G31SyTk7Jl7Lrq
tyJ6WWY9gg7BPjhQm6K76uNUdy4sJ5GXA6vW6WNUP63fO8LXvXvpdxd0kerm
Gvta6qsB30/PbSf+LXru66LXYz5Fz9M9c0T/Jt5uGs/2attc9em6t7fKiWWv
LdZYR7U9Tbyx4u1ZtqxB5mwj/g6ZZdSBiWUKsmVzbKGQY4PF65p772IjnS7+
K6K70afGfyF7SPceoXEfoPaHqz5U7XuI7qZ6tq6drzazVB+fmr5Q9MjEMm0P
9XOO6DNEHyr6R7U5UPQfeseDxT+B9SX+v9TfN8gM5lfPmKt6d9V/qs3mou+t
WbajN54WfafotqIv0b2fJl5XV4n/38Rrcq7oK9RmXdEn860T09PFf0T8zUTP
F3+RyjzRT4p3BeMQvVT0AyqdRF8t3rLUY7hW9G2Zx/aE3j1LrdeeUp8zREs1
lpaj2zO/x9Nq00vfZUXZ369jYl23c2p5h9xrqLZjVd5nntX+kbJ1M3r5fPW7
NnPFs8QYLP73oh9X/YbKkND56P489PzzsQd21nOXqW6q+yer/w9V35O7L/pc
rHpq2TKEZ89R/28ix1Ufr/arxBuP3ld5TPxTsA/jXsZ1WWH+L7ntteUhK55S
/bbKMJWng25WsrxdHuOs6d4jxEt177Ya56vinabf36MXRV+Y24Zn3rCfmsf6
v5x9qbI5z9Vkn1r2fDFXvDv2E/ZgtbAtfa7anqT+3xLvU/2eqv4/Uj1R/G9E
byT+BaKnld2GuepZtZ07RXVaeGys8176vVL8o1Wv1u860Ter/im+2bjM3+MJ
5LiuraHfI1T/pfq83M/imd9mtv3xWerQ/ezf8F/QOdhOd4XOwU9ZS2360o/a
JLr3cNG/Z7ab7it5PX2d2X77XW1+rvf8ME8DwkfAV8A3wY7CxsJ/wr9CX9bl
nnPmvnnVe3NQ1fYp/g/26mYaw6HoFrVtW7GPgX/xSdnvhQ6bEWsPPdtAz3tO
9OPqc/+q5dxo1U1177Nl2wano/NUn6o+/1RZh3Hllovci43yZWabfOPU/bPO
sW/nq/9nRPPhsTWahr1xRqw51lul8LPKqs9nvsQ7jXVV8b20Z20+Fe2nBc06
qerj7i96ZG6bDDnWVX0crHGcLnqEeKNF91ebw9RmoK5NE3+Y6CPF30f8AWFb
7i16X+yW3PxB1Kntzx7qZ4jKZNH7i38le1L0YF0fllg3ttJYLtGYLw6Zf0TF
upNrp6aWyUfk1v/jwgYYnFjm/1Bv2xQaPbB3Yp94mubkROSv2p+g6+eJPlT0
ueKfnJtmj2yi8jQyHFmLDyJ+O9X76/duordi/ybmb4w/mNuvxjdsjW8i+sDC
+msv0Q1F91T7Y5CB4nVU2VX8LVRvhk0gfnvsbpXDyl4bF9RMT0IGJG7fiXlC
14o+RvQgtRkk+mD1v2/iOd+bb5G7zSjVLeqsH3vr+h6JbZ5teI7m89CY29MZ
N7aBrl9YWIZNzb1Ong6ZdpX4I1VfrXq15ndj1qnqmRXbMIfr2hq6NhR5pfqK
wry5qi+qeL1iI09Xv9uwTvF7NP41RJ+gOUgT4xzHYVMUbjtP9czcMhPZiVxD
vrVPLVuOQeahh4OP/NtQ9I7sT3R1xWPetGT/aUTZttrC3D4+2AK+4KSQpQNr
5oMB3ByybhS2RMUyt4g9wF4Yous35eYfhF6u2Z+g0bcqp4h/fW5ZepLoa2gr
ejRjSCyL8FvwWa5W/yeXvQdWBB/5f5banYvs1b1nij6n5DV/XW56/8x2GPbY
Vqq3SfzurXLvWWyV09C34r+nNuPEX5ZYxzHnSxP7MkfTT+619Cj36vdb4g9V
/Xtim2FpzWugn8a6oSbmPv1eLf4Ctbld5RfRd6q+RvzPRM9U22nqazj7VPQS
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
pdAR+ED8DwzrpEfhM7yPir+DLv4fJHbChw==
            "]], Polygon3DBox[CompressedData["
1:eJxFnAfYl+P7xp/n6/vMt95CykpTKCskWxmhIVRGRkOUmZ0QZSUzVHZEISN7
z5AUIpEdRVsJlc3//Djv3/E/jvc63uve47nHdZ3XdX+b9R982OmVKIquq0aR
/qLmRRSdrv9vi1qIH63IzspwqWik+O3TKDpZaTvGUbR3FkVjFR4jOlf8eaLe
eRQdJbpWcdeJ3hFNFx2fRNEA0RDVcb7K9hL1F/+e8k5QfbuLZog/W/St+GFK
Pzpx2bdF/RPXcYiou+j1Moqmlk6bJuqXOM8ixS0snYe8T6tP26i+lqInxG+n
vNuK9hS/l+go5alR2jeiyYxd7X8t/gK1/7PCJ4quUvh60UXKv6A2iuaL3hfN
EvVU+jClXSk6SemHhnbp2xuiK8RfLrpZaWNIV/2XKu8o0WkKX6XydZhLhUeK
f1B0ocKviM7IPY6DRa+VHvMWSh+svNNFW4r/TX04Q/O4saiFxlVfZd5Q2g4q
30Dp76jMdNG7ovdEM0rHwb8v2l+0n+hP9eUvUXvRzqJmqqu56FvV/4HqO1N0
uMK/q/5XxfcX/SZ+F7XRXtRK/BaiEerHLkq7W3Sp+MeUdrH6cq7Wz2ClH6C6
O4l2V117iL5S/V+KponeDvyOKrdZ1XFf1zoPadNF16q+U1TfB6JVqu9v1fUc
31fhJUqrq3Ad0buas/cS8zWimYnj3uDbiBLFpaJ/VWaEyi5SHSNUXyvFbS76
VfSbKFf6dkr/UJSGufpX/OCK5+xV0V0qGynuVeZe4fEEFX5d4StVfpD4taK3
lLZGcUcr/XnR2tx9K0UzEvexvvJvr7yni24uTDeJ6hVO+1b0D9+XNSu+VnVM
Fd9W+Xuob9sr7ljN3VlVl/tK9JfS7xXNVDtnMfdKayk6T/O/X9Xfaq2oYdVz
zLeeEXnuqYO6jqm6Dzvo/wFK6yQ6oupveIb4dyJ/29HKc2qYr19y78s6SksY
s/JuqPQ3xZ8iaiT+NNWxv/h1GLP4xoXPHs6gTcVvW7gv9Km1+Baqc6b4Dsq/
s8IPKfybwncp/LnCc0W/K7yF6JPCa/Jd8R1jr1XKtBM1z11X26rHQh8Or3pt
7i/aLfUara/D4UrOPtEazcd5yjNEdY1XuG/VefcT7Zq6TKvCc8GctBTfrPBe
Zc82EX89+0NlrxINrHpvdxO9WnqPzwhnJmflCaKXxb8k6iO+r2iZ+tBJ5ZqI
eip+vOgu0QXqw4WiO8TfLqpRv+vU+Mzm7N6JNsV/pzFPYT5Ey1XfePXpYI3n
EoXvFN9SdbQQrRT9KFqs9haJ5og+Fo1Vnn1i3wEHqp2LlWeYaIL4e0VLlWeJ
6H7xD4hOZb+KJoqfJBonft/Y37+zwpdkroOy94luVh/7q68LlOcC8XemHhNj
qSs6Wf0/SXSs5uo4UTvluVn5x4huq3qOlD2qG3nuTlLcl5HnnLlvJupXcRnK
jhINj9zmmKrroC7uvBuq3s87R75DXhO/VmO7LvKaYG28rfH8ofAdommFx8td
wZ0xqPA35lu3r/iOHaE6hoseVN8mi15IvS+OUb+PFT0mvo3ylaKXwtwvFH0U
vkHTsD84f3dk/6rMvqIFmovvRJuH9Xa8qJ3SOyltf9GXSvuqdN59RPNLlzkg
cR7SvhZdpr5dKnpIZR+mf6XvNu64Z0vf9TeLzsl855OXMTEWynD/c7dxxx2e
O+9NorMzlxmXWmZAVhgi6qr+zgr7pbviD0zcJ/oyT/S9xryb5qKV6HrWuvJ3
4z5R/n6p52YPpbWueo76qc2+og/Fzxbdqjy3iM5XW0Mz8/SBtoljn1wb7u9M
/OWZ54CxPyJqproGKe1sURdkibC/B7CmlH5F5jLkfVR0gvJ/zvrT9/6i9Fx3
FH1bes4PSjxGxvYN36zWMgWyxAei05V2mmgksgH3kOp7UfUdIloPWUhlTlLd
J4tmhruduJnhjp+qOl4XfS76gvuTO5bzQXVemJj/UjQ0cdy81HlIuwgqfBdu
jAwk/lLFbSC+seh75XtVdb4imiv6VPRN6jooO4x1hczAuSD+ksR9eU30WegT
/KuhLHHU+Z1oROK23hP/rujl0A5yBXPPN2gp/kfFbSt+c9FK8YtLy3zIXMhe
r6nsNloLNaIOic/OF0XHJT5DXwx7jr12XJBJjw/x5EV2/L70uYzs9YTavFNt
bS96LHde5MwXQr20sTfnd+q2u4jvLHpTdbxVOi934POh3a6J85A2TfSxaDOt
5yeZ38xn/oDQb84vvuHWGktt1d/2A8XNSj2PzO3mir9C5W/lfhN/segL1VWr
9XGJ+A9TlyEv5TsHOb+e0oeLeT/1nL8SvgvyCvIAMtw7rBGNeUFkGe4PpV2t
MjtXLMMjy9MmbXMnnlv1HcxdXBW9qfqu15huirxeP9RYByde46ztUcjE4jdV
eoPI66af6jg0dhvXcM+VlpW6icqwVhaIhideM/CsOdYacU+JfzLMM/fqcPW/
CbIGY8g9TtbWJ2ENM5fvh3XNnP6p9jpwt6sPFxeu64nwXanz0jzIiow5rHn6
zhjYC0erz1uofCvRFVWXfTz1mqCOfVT/ySr7rPL/EeTLTFSIStF3mddCY+VZ
EfSX2xReI5qQ+w7hLuEbD+IuU33rKbyB6E6ln6zwJhXLU3uJH6867hI9wJ0j
ukF5rs8972MTywTIBtyBzcWfojKbKryXwouUPoo8otuRLUId45S2JHLdN6qu
0aJx4m8R/ZD4rOLM+ld5f9KcrmJeFf+X6A7qEk3gzuf8VdlSlIly0QeKeyDI
z7twtiW+f+/n/kW+FlViy9TrlO7TGKXNj9zX6xKfXctFL2g+hyIPK++nyDgq
O1JldqtY33tKaaMU3l3hDRW+mvMqyO/M93OcxUpvovRHFF6g8q8rbkfxE5Gp
S8vj96rujZTnJaW/qfSdIut0c9CDlWcvpS1E/lXeqZnboO7nRdNE7ZQ2SfQu
30fhTcT/wB2jsqu0dn7kDkWHTMyvFN2YOA5+hWh04rjrVWZvtddU5e9W+JWg
/zKHufhHuatEE5U2SXSvqAVrS2Xa1Dg/+sxq7nvu4qDvbK70RP2/LuhfzRT+
WePbW+l/KXxaxefX8szyNDrCiszyGrI/OsBzqeN+EC0LeX9Rfb1Vfl5kfXc1
caJVrB3RJqp/sdL/ib1fLiw8l+uJrlXFizLL7rS5RPzHiWVbZNz5Cj+V+a7g
zvhH7T+WGQtgTv5KXWaxaGHmuvZW3F6pdU70nz3FN65aJ0U3Haj+nKC+/BR5
v5GXPF8GPXWB6niM+195PlFftlP+bUW/Kc/vyEGF1x6Yw7lKb6a0Fcpbav4a
qL4NU8sWyBgbKryu6DjxfRiz+C1VcKLyNlf4Se5m5W8gaqi0Rrl5ZD9kQOK2
Cvl/ob9qa93U9YHfNCyMg+whqqv4WlET5b+j4jHeVVonRTedrTwfieYqDsCI
M6pDaZ2aPKTNyaxzEwf/segD8bNEX4j/MvMaqoo6lV5b2yhua1E9tV2f76G8
B7N3+V6Kv1J5dlR73dm/pXV2dPenle8Z0ZPhfFwpmpxYD0NXBLPYTuPfObVs
iYy5FfofsmFk/XE/pbVW+H2Fd1d4J4WfURsnVixfHpQa70JXQWfZozAmAjay
qco1Fu2muF0LY0pgS+1zt0Hd+4t2RGdGZxK/b5CbkYXPRwYLdTUVbZK7zj1F
syPrqwek1q/RQ9sqfofcOiZjZGzbiz5Sf09Vf59QmT1L5yUPaZR5SnEDlN5F
6aeX7iO6Gzocfd9a4ZMi68gbKHyYwoeKOoHViA5TXFflPVt0jOJ7pM5D2oGi
AUrvqbTLwfNS42E9OHNZZ6l56qAscc+rDwPVn0GiTbXWxoBBcZao/WdoTzRX
/GGqbyD7RXQW96rij8n9Tfg26AAtuKuZA4UPVLir0vZTeI7CnRXuxrdjvKIj
FH9k7jpPTI3D0RaYHNjcIsUt5vuENmnrWNGZrB/GIr6PaGzmMuRdIhonvoPO
hr3BW8RfK7oGHER0I7oemIzGN0J9OhpdKYTPV3jvgJNek1qHQJcAMyUO/krO
T83d4RrLUNFIzn10CpXfSuWfSBx3Jd+wcF7qujq1DkOd8KNS62nEDVX5LcEe
VL6J2j9D4ZYKv6Lwn7nPxymi+5EZEp+f7DH21kPIyZnl4VWiz9TeRqnPLM6q
jXLjpWC7yIdXpMYAwAKGBz1xVNBr5iju49T61NaFcZcDwn7fRv0ZovqvKK0n
omdeoLwXih5B71f6eUo/XuE3dOY20Nx3FN0TZApki7VK+zXk78N+Vn8eDvIC
ssxSpS1L/a2u5t4N3+xu7n/RfdyRolvRGRkz96KojepoLfpEZeeKLk6tO6JD
Dg19ZY+zt+kzOia65kXih6XmGRNjIY4y5BkW6iq0J3LRCL4ZZWhP/X8Lnazw
3KEbfpR6DsmL3jo8dRnu/2XoEqLrxLcpjJuBUYFVcc5snBtX266w3DY26G3I
0pcrrUvVa5q1TRqyIrI5eW4Nch5yOLoba561v55opOKvTIx5s0fYK+QdF+R0
yiwKd+1KZJkgwyC3oIOiR94Z5Dnky5G5ZZSJQc5B9rk/yC3wyEY3hzooi/zN
miUPaT+llv+ZC+bk6tzfkDao+yrwCdGKcH+Myd23pyLrZPTxB8UtFzVVfDPR
asX9ImqeGSf7FpmKuza2vPw9+0D8jaKZmt+NQzr4/mKlb6hvUhtbxm1UWgZC
FlqltJ8S48/PKK0p7eeWYZBluouWJr5DuUs/504VfaM86ynvRNE39Cd3X0aL
Zqj9NYn7TF9bhraeZu/HbvNX0drEMtmKMManQjpjb5L5rmc+lqF/5JZNJ2lN
tta62yzz3YO+slRpkdr8l7tK8TtmHsOK3Jg6Y+NbI6uCQ/DN+5eW1xexn+FF
G4FFKe+8IM91CPLx+qyd3PoFMtYizv7Ec4u8vZ7SP1VcffEbq39vip+VWXdA
Hvs4N/65Yew6GittQ1Ejyok+y6y/dA/yI+nII+iefEO+5bO5sQDOwOfEv5AZ
+wMDfDK3PoG+gc58lfhHFfdIbpz6YfSb3LYubF4f5hYEL1Rf7xH9q/z1VF9t
ZpkJ2Ym+NRTNDX2cnFn/4vy9Pfe5hX6N/nNu7vGjH+2n8Kcqf2rVuiD6/ClV
Yz5gP9jNsK2hv4LdgDvPTM2DBYFBEwdPGfISh05Jfcjcnym+nsIZspHCtaX1
cLAfMAX0anRy4uDRtcF40NvBJMAm4MlDGnGjw1nMWM7LfYcSBz9EdGHAI5jj
IYXPaM7qcYq/RXRRyEPa+aLnwLDAIkTDcsuUyJbLY+MJrRXeSlQjvk5qnnRk
UOI20fe5Rd/mYoUvSS0zIDtguztd1E18V8JKO517UPnHVoypH6O2Gyk8Osjf
DWssMyE7DeLOTi2TIJucobrOzFwHdfUT3190cO42iB+c2gbXi7Ou1ra5Tmrj
oNj2hW1y46ldkLlUtkfmNmjrOPF9MufZWrR/4bLUhR1hXq3rRG5EtuyGXaBw
GraGnarOMziMk74dnxkvOU/jW6r2R7HPFf5R/amDjIKMrLybprYr7iJqIn6z
1Do/uv8m4jcWtctsdwRj7Sxqmht77ZpZNkVG7ZTangMmCBa4eZDBkZvbp8Zj
aYs6qYs2Y835JerLfuAh4Cy5cYaGytNI1EX9TZReiOqxNzPbT48RtVH6+rnv
3nYq3za1fWoX8c+LNlDaEpU/S2XZyuA8OwS5++DUePbfSj9f6ccr/22l8fvd
xI8TvS/+CLV3eGadAd1hN9Guop1E7VgbpXUTdBTm82nRn+KvUdx01jdnkugB
xT+I/Kb8kyPfCY+Lfzy3Pezq2PaJ3wrb1r9V3FlKu587VvSm4t8qrBP/mVoG
RBb8ObMeXlHcOsx/ZuwKDGtU4TR09Th1HuzDrcH/NOZY/N+ivzgzladtIOzH
W8dOA99jL/4galra7rpW9I/OhH8T28Pn+VqJHihskyUPaRh6yLtG9HfiMsh2
YH1gfsh4jO1X1mbsMaKTopsuQIbhnMuNVYJZTuPcVTgVf3dse+n7IXyt6J3C
/goJ9j/CSt9AfV7I3R/7PgfD4a7izpqd+M4iDMYzR+Ge2GhirzHW2+eiz0Qb
hHMePftD0TfIXOjSSpuZ+16oz90fyjQM99Zy9alNbJsQ6/HTcFd8hUyV+E4j
Dn5eYgzk79QyPbL9R6FN2pof9Hbi4JkjMDuwuzXhuzCHzCU2V+41MIO64dzk
LF2t9PpKO0p51hTGwdkb53AGslcSp70MhqL0sYo7RvxU9kTAzClD3tWic3Jj
PUcr/ZzCeBG+ER+LcqWfkhtLOVLhM1gfpX0NwKsfDToRuhE2RmyNk9A3Y58J
nA3sUfYqZyZnJzbeAWDaVdv3eqm/R1C38n/O2VZ4LRK3CixDeS5T2uXs8SLY
/ILNE1vg76X7RF+miA4UHQAeoH7vK5pQGDsHQ/9A/JGcCaJDRIeiR6vPx2TW
WQcGQjdG5yWtb+EwOvMhue255yh8p/pztPibcmO0yOHI7pORTyrWidCfwMLr
eiv9h4mfKqZHbB26b2bi3kCPJg2euwSdmjh8XgZl1vPR/eEHZtb5iZsWvinf
ck1p+x39u0U0S3wD7G/YRrFXhLEfLuoe5uBRbDuxMaAp4rcS/aTwDgofpfSd
RMdV7fOA78MJopGRvwnfhjuBuwEdE10THwCwFTCWPXL7A4AFgQlx3oK5kM6d
w93T7n9nceG8exa+S84QNa7xeurNXIvuL40RgRUNjm0fp43dc/vI0Db2c9LA
mJ5W/ltK2xrAp28V/6TSh4t/i/NR/DLFLS1tR8AWkdR4rTE+5JE5pbFXMFjk
MTCYy8P89s6MbyEbICPsVxgfv0z8VeRX3k9FG0WWka4GWyiMpXwU8Ansmax9
1vtpSvu0tO8LmPC+6NO5sVDuOO66v0RDKrahIA+sm1k+vwDMssY657ZBJ0U3
/ad0GvI1utRGzLPqfk50cel0bBHIyGz0XsrTk3sk4GpggmCDrOmHxO+g8eyq
8FhRB+XbrHD4Be6YwhgR41slOjgzRgdW1znIHuzNzmH9s0dJY33MjJwHGzt2
c77LcrBb0Q9ghso7MDeGuHu43zsq/4/h/ENGWFXaDlwJYWSHBzj/Kt6vTWu8
3vuKn6/y65b2Z7kjtr6BLXJW8D1bGHwD4Leo2ga+MNiQZ4U0fDdOVB9O4B4X
/0ut+fbK26fquA9DmcXBb2NusI2dqHUyMLGdljj4QYlttsTBn5TY5wTfk1r1
vV6NbbzkIe1k0ZDUfka0S19+x79IbfcWpRrbaKVtWbVPEr5Jvyr9ZPxiqrbv
nqI66lZtA8UWiv/FCeIvEv0h/l3OOGQdMIPcPnD4wh1Vtd2JNmgLHzl85aYr
z9u5/cLwFXtd6VfG9hEZLH55rX1segY5e4X4blX3ib7dlVuWByMHKwdTAltC
5kf2B9MClwEHAQ/5odZ19gqy+1+sWb4teFvhPmyvuntV3bdWyLBVzxFz9TAY
v/jtRKtTzwlz071qWzhxpIGBgYVhb2J/s6evAdtLPSfMBba4acizuX3O8D2b
HdYA335p8BngG/LtmHv87qaFOVke1hDr5kjVeZTovtK+aL00/oml/R7xU8TH
EF9DbGTYyg4P6aTh5zQ95JmqOl4XnaG2zkzsx4CtGJ0WXI44wvg8TA3tUdcR
2JMTEzw2OPzhsM/Rl79VvoJ+lhkrZI89WNr/iLObONI4szm7v1VcffHPa24O
U7ghGLXC40WHij+kYnsIPpP4ToLzXieKSmOxPZQ+Qfw9pXnquDvkxS8DnJEy
yEroFuiYyEwnKq1/bAzkBOZMc/uOqEvQK/EPPSm2zRF7Iv55b4dvwdqaWesy
XYOe+G6Ig0d35NvhS4nPGN9wdfiGfLveovfEt6jaxwZfGzBXsNe+4b79D++N
rXOge7xcGrsHw38ufEt8194O33RNuOv5pnyvU5AV0B+0N9YJxN3FHU3ai6V9
jPAtor56wd8OHyvOludC2kul2+6buv1x3P+ZfWo4U5eEe5KzeX7gOaORuZC9
zlffh+bG9bEl4COErxCYPtg+Pjj44vD9WTsnxv5+rCHCAxW+vLAN89nUPmjY
Ns/Mbc/Dhrm2sL0aX1BsqNhbY9XRNvL8VcQPUP7jc98bK0vz/XPfIcRhh1iY
2kaOrRw7A3HwdybGRcB6wEjBpcExl0TGhCZlxqTBprHZYw9/Wen/hv6/lrhN
7h7uIPqCTI1s/XpsfRAMHSwdDBgs+OyQPhIZXfxpijtVtBZdTXR3blsx431Z
ZdfJ3F6byH62+CxgS8emjv/c5vq+96rx+0RbiP+6MHaEjjWvMEYGVoYfyRei
e3P7puKT8mZmmzm2c3QYdBl46scGSBx9eEk0Pnff0AnQDdZlP6PrhT7SN3yB
GcM5QX9nbMwZ88v5w1yCEf+HQ3NWZNZfkP/RSc8SU0flP4uNgeAvckNpLKSf
4kaXtjGgh+KDMT7QkvD9SGOOL8ttd2Duf0+M/YIBYwf/I3EcPLZxfDLxzQST
/iEQWC2YLmlguoTBcLFrf5IbCwQTnJsbYyYPadi+10+ti6OTV5Q+IzO+yfdA
910s2iS2jXE2umtqf2j8Ac4s7ROdlPZhwZflIJU/kDOXc6S0fXGHoO+CrYAR
gxVjQ/6kNKa8WejvUuTV1L7MUxXeLbMPDPkfRccu7FONb8ivop05exLvLc6o
T5WeqnxzsISK7Z34C/QJ8u4bhc8AzoKtlbYNd3dh/RMfkKtC3M8K14ucF9yR
PcdewxY0rLC8jo8F9pWLQv3TYvuPDwllyHsb6zWzLzIYDFjM9MT9Zz8Umd9Q
YIvfKbY/NDIAskAj0Vs6j7bL7OuJjv9e4Tj8qpBhyLs6t+8781U39/c5SnwL
xdUUxqTBpsErvkRfRdZVuBnyPrps6vLLRFuqre/RXyJ/84VhDw5VX3pUvTcj
9rfKvKhxvJTYbxTfUnzm8J2bpPwTC58R7Kel4WwGG0OH4b3FRbFlrmdSYypg
K2DI4OHYLLBdNIrtbwPGBdaFDzt4O3Z0fOPxkWedYVMnDp61ByYFNsX7gGpp
zB/sf7LoO6VdUdh3iP0wNfeZyNnIGf9Cbv8OfKm488eH+5y74J3Y9zs2HWw7
G8e2P7C/6sX2uTpJ6beXAesT3RF0BO4hdDd808DYwFDATrANxJmxOdYH/oXo
DOgOYIT4i4MREkan4D0O8w/+AqY1MfeaZm0j8+FfhE5HmDWJ/yY6ELoQmOWm
4S4EGwFDZx9wpnO2o3PiD8Udx3xwhr+SW4dEl/wPUyiMUYBV4HP4WuE+3Jd7
TdA3/Ha/CmsBv0zOj8Miy+jI6qznMbExQt6PYHPG9jwmrG8wAdpDh325sJ/s
1/+rS/Rh4bldFtm/aQPdIa0jY+xg7fjc8L2/FzUAy1L9hfhJjFll5+deW7Hy
H1Taro3tDxvgzxrD8tS+Y8hkIwrbFLAtzBb/UWH7E9/+cdHSwnbmNaJHVc8U
0eOJbTPcx/j7YHOkr7eIHlJ/hhe+G6aLruH8Tm1Pw+drQthTYGt8Y+YTexF7
A/vefJWdnBvnZc6Z++8TY72Tlf2rzDYh2kdn5P0DNnvGyNh+CQSPzx64EH3E
N+mx0HdsoCvDfcp7KfyZ9ols08S2uX7VvsD4BG8r/j7u6MKY16DA46uAzwJx
2EiwleCjMDIQ6eBVpGGzw3aHzxx46QD0RYUPiO0vgQ8BvgT4hJ6a2d+Etwpg
ZhPCWcNbLd5sceZgM8R2CKYKTorPCb4nYOxg7fg8cd6erPzbpMb0wfZ5k4J/
1R2FfV3weTk0YFBgUbeJbi/+Pw6evL2DHgQmATZBW5QHT6JNfGDoA20fCb5R
Y9kVGfaVoBug86DroCPwJgJ/o9sqxpfalX47xJnF2YV/5G+xMWew50tL+5Lg
U3JZacxgfpi/Ywv74PfK/SYP33x0HHSd9txhhWUYZJlXY+O1d4SxYYPAFnF7
GPsuueO2FL2ovJ1EHQrjoS/FfrMGPs+dz91fV3xtYd+3X7hbIq+z7UO4SdgP
vLcDCwYTPpP1Uti3lTrBV8GjGB9trhS/Xum3IcPZ/4XfiCwI6wPfYXR4dHn8
m48u7f+ELLBE6U+K36z0Xcebscal7fFg99x5c7X+eovqVywv9g35l8Z+s8X9
uEfpurhDdyvts4fvHpgV/hm9FFdTMeYEFnVY4rcAvAlAzu+ROK5/0AN408Db
hl2rflfYM3Ee0pDPW6JDRq7z8NK2cfwhD4q8zsGn14ns791bafvnxq7AcPup
Pzuhk8X2f0R+7pgb2wMzBjvme1L/gWF+sYFgC+EMmpL7/kcWR+ZA9sA+ci9n
VWx5nTlkLlEoDiydB9kFmYGy2CEPFR2S2q8MLIi3Z2BQYELYKP/Lk9qvDB+G
iUEemJ3bxoitET8s/MCwuSDLINM8lVt/oC+c8Zz12CixVTatWo/Gpjkv6NTo
ydSFbRWfLur8NuSZEfRm3sth+0EGxtbPGc9Z3yr2+wv2BHubPc5eAaMFq53L
eZ7YNwj5ERsUehj64WuxZR7el2IfYa+BAT0uvmPhvcqZl6ls+9Ky7QMq30B8
w9J7vX1keeWfwrIm9zv+r6wZ1g4YIFhgq9LYJt+UtUMYe+zQyHgnNnBs4ci8
5xW+g6YH+QF/6Y1rjK9j70a//rWwbogOiL8q7wGmhvLnBnkb38IpCi8urGOx
d9hDfUr7YOCLwRgYC/6jf4vvEVn+5/xqiy6huC6qqys6RcUyKbIp++0P8Q8p
/6al1xhrrSv6NVh9qK9n0F/wr/8n7E9kXWwE2ApWxvYXRD/rWDFGDVb9e2F7
VZeK7U/Yo+A/Uf5S/BaqI6vY33lwaby7W8U+9/je15T2He9aMX6PfQ9bMucF
bz3B90lDR6wT9BXOQnwe8X3Ef/PP2DIS+tXlpfvLN+iTWl/g23Pm4w/P+95B
kW3W2K6xsWJrZQ6YC97HItv3RnxILeMg63CGMV+dS5cdFPSrugp/ERujeDG3
/xC+7rwB4C3AwaXHP1Bxu7JPS/PEHVbaXgGWiU89vvW8P8AWgc6JPIz/xXfi
96zYvoC94T9etH6N5TG+JT72+NrTv6mR10A38TeVlp3weby5tP/jAOoPYdLh
Vyvu4cxnPmc/b1yOTHyGsx7BAAiPqzqdO2Ks+GFVn52coXWqfmPLO9ezVO7s
0mcq6dxJ3E34K62vcIOK8Trsr/gC9FP6H9yRrKnYMtP6YT9/F9v/Hn11mfKf
hj5XsX0DH3rWFvPJXGP/IA2fP3z/Lgjzjc/mhaX9bb4M+4Hz8drcfaFPvBfA
XwDfi9Mjv+WnT/QNH098PVcUtoVwPnB/s6eoq7HSTy3t78VeYj3h3817FL4l
3xRff/y92LusWfyNOaM4qxgzY8cfjfrYs7uX9n/lfGsb5BPeSPBWgjXH2uM+
GhHkF3xjwVzBXlsHfYw9x/zw5oD1jP842AMYBO9lsGeC5eIziv2HM2hKuN9/
yo1RkB97VZK6DG9t8EGnro6p3+rwZucc1lbmO4e7Bj9gdGbuG2z+7yd+b/5Y
bIyB+tn/2O7wR+L9CH6d+H1ix8SWy3sJdHF08msKv0EhPxgCWMJCdOjY3xT/
qSfCfuH8KUrrkwdXfObgP3KP8nevWEdBV8EeATZNHP79vBfkruK9wLYBb8Ne
wRsA3g7gZ4rfKTZabLVgcGBxN1Tsn4Q9Cv9qbJjg5bcUPps/Em0ivmWNsT0w
vFbidy/sS8752ry0DyttUDe24Y0yn8XILE+U1snRzfmezAdvxHkrzvcErwBP
Iswb8huQRat+a82b3Rurvi/nxLYJI9/yHmhmbB0cfIs3a/i6Ecf7IOwtb8Se
U+aW3wygfTAC8A9wqxOZq9jrApsLPHHYYu4pLFsiYyJ7csdz11Mn9hv00aaR
vxH6PjIpsumccJ/jo4CvAjIA+HCrgH/eL2pRY58/fP/urtg++kfqtzi8yXkq
8Xt5sCHebPAWhDOTs5M3Rdh31q3x23Qw89tS+7Dht9Ym87sKfBjwZcBmhu2M
9yLgSeB9//PHwTeHdyOk1Q3vxvErxhcZH058OfHxxtcb+ze6ye2izWqMxyMr
4COHPz9xpGETx98K/Zy1BZ4AFo3+y9rF5t8gtFUTfJhpEx8AfAG4o8FP8WHA
NnoXd3CNbWv4PuNjjI2N9Ykug46A/IBP6qQwv1vX+H0TYXRsdG3eaPJWkzeI
vEXETwzfM95g8BYDezXfApsLv8dBm7SNzzn+fOy/5mE/8baGvY6vNz4L7Hn6
Njv1b37QR/Yge5HvB8iMjZfxgKfwfpn3o7xV5c33Y6Fvr6R+A0wfGQNjYc3w
3oc8U1K/Oe0QxlCv6jevjK1FyM+Yec/FnmXv4vOCvgcmAjbCncT9xB67vjCG
y95jD7OXkUGQRfBLHJz5DQFvCfBRJA6etwboO9w1yJjoJ21yy5qENw/3Dboi
dx72d3Q8dD1krjdUvnfh9YO8g29H29L6Cjovui8+YfiG4TPF72XsiHxU+g0d
b+lmlcZqkbk/KO0Djy88NiVsS/zmBnVRJ7oQ9pgZsX9DA3kH+x3YHjIF7yme
CePnTMM/A5sytuWHY+Oh4KPw+HCjL4K/ImtxJ/D7I2DUYNX4ION/y5sW3rbQ
JvYfMBz0GzAbsBswKbAp7gDugp7oiLlxFLCVy1K/A8CGhr0M+QHfCPRLfBvA
NME28Wnm9xwoC7YCxkIdzBG6H+Nn7vBnZD3y5oy3Z8jbRwd5EnkL/BtsHB9a
fGlZ27xV6lV4jXMnfRK+H/oL9nNkK3ywwHN/z6ybct7zdg+ZAtmCN0jo37wf
5S0quABv4+DBAsAEiMPHBF8T/YueVn1pjbFA3hjhX0WfGoXvTV/L0B/Od/QZ
ZEBkQeoDa/g/jgSbVg==
            "]], Polygon3DBox[CompressedData["
1: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
67hHf8qRK+D/4jA2xA==
            "]]},
          Annotation[#, "Charting`Private`Tag$78053#1"]& ]],
        Lighting->"Neutral"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
KA==
            "]], Polygon3DBox[CompressedData["
1:eJxFmwf41uP3x799e77W8xmPEolKVEgSGipSGclq2JK0qbSUhuzsyIgQkkop
oVS2kj2yCUllFZWy+Qn/96vzdv2v63lf13nOvcfn3Oc+59x1eg7uMqi8rKys
ZqGsTL+yFsWyskOEE4WOQiuhpdBJ6CyMF24QJmRlZTcLy/KysreEk8U7RXg7
Dx70qcL1ynOd8JTwdBZ53xROKkaZk0R3EY5KysqOFgYI/YWPlPaxkJbKyhLh
dPHOEA51n+hLF+E64Vr6pbpvFN7Jow+0fRrtOw9pN2XRd3jQjOF+YYrQW7w+
wrt51EHZ04WmaruJ0EJ5WgrvK+094QylnSlkpegjfTtTWKQ8C4XHhQXCDmlZ
2fbCJmGz8KR4TwgPCjOFj8Xbo6KsbDfhLNVzq3i3CINU92BhnvCMFuYr4RO1
+0EefaDtrsbDSltViLSbPA+PCo95jRjnPGF+FmvZwmvLmh4s3j/aAJ8JPYox
NuaAsTNGxn6wcEgWc8DeaC6c4D3ymPC02n5CuJd59h652eOY4Hl/zH24Q2il
sf6l/OWl6Ctr94j7/JPK/ih8IawSBmlOzxc+Ef2psFbz9a1QTXl3Fl5SX18U
dhGqm14q7Gze/Sr7o9r6THhF/98QXheeEf9Z4TXRrwpPiX46iTwvC1OSKNtR
9InCvWrrvizK/Ky6Pi9EXScIxwuTlXZPFnVTJ3XRxtmiu7Ef2VPCSvW9jsb/
i8r/T/8f1f8vNffzhXM0vhfEWyLsJFQzvVioat4TwiJhB6Hosb7gvIx5nur7
SnW9KVwi+l3hO9GPCF1E/yv8A199e0/4W/QW4W3R7wjlGkMloULYRijLogx5
30+iLGXI+67XZqCwvBhr1D2PMTPW04V+wvMa6wvCuaJ/UZ6fhdXCmmLMLXPI
3DHHpP3ktSfPr8UoQ94vhR20Z7YXTlGbpyaxVzYLK71nNgk/CCuEz4vRN2QK
soQ+dmdNhN5qs08eeTcKn7nMZtfxues8J48xMZYzhHOSqIOyfYWB6vMA4Syh
m9CVb1PoqDydklj7s5CH3gNniddV6CG6p+t8SnPzbCHaom/dhF559PH8LNqg
7rOFapr7nYTuos/hG0iDB91DqC56F6Gn6F5Z0OQhDR510wfapg1ka1E4LQkZ
u1BjXiDcL0wV3kGmC88Kzwm7K+9uwh5CHaFmKXjQewqHCYcKPWhD2FV0Ze33
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
            "]], Polygon3DBox[CompressedData["
1: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
eQ==
            "]]},
          Annotation[#, "Charting`Private`Tag$78053#2"]& ]],
        Lighting->"Neutral"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1: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
mHOzl3vd0+sh1uuZ5fqmk9yLvf4Pql6guQ==
           "]],
          Annotation[#, "Charting`Private`Tag$78053#3"]& ]],
        Lighting->"Neutral"]}, {}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl02VTFlEYBuBFxA8o2EUpdncXIG0LqKCAiCKKCnZ3K92INdaM+Qv8F+pH
259gzThjXC/uvNc+s8/ue5+zu2cTS6tyKsMCm112RFcJXkYHQWT3IJhITybT
m8UsoR9JJLOcFAYwlYGsYSk5pJLLMQazjmmkM4T5xvti3M984iMfeM873pLl
mvAeQdCNMAL+6v/hNxu0YmXlU0AMe9nIPuK4zCYucZFC9lNEMQc4yGbmMoqF
jKPBeNXGaFSbaKaFVtpop4Ma13SqN7nFbe5Qq//LMz0pq4wOtnGUE4xmHoc4
TAmdNNJEIrO5QX1oPlzhKiO4RgvNHGcL1bRznSOUsp2t1DCeu+ZWZ26P1Ic8
4D73qNd/oT7nGU95wmManHvjfl7zigmyFjE29D4ZwwJGModMhjOLYWSQwEzi
Q+tK5hKSSKZMfowaSxzxJDCM9c599c6/8Z0f/CRTf6isGWygiumsZw+V5LGb
XVzgHOdJYxBrWc0qKljJCvozhb70IZpJRIWyjF3BTnZQzvaIriUalKibKaaI
QvyC4kjHFNKnm3WqKSpYZneWNlrJZid1lFPLDrI4zRlO0Ytw/8+XV0CUzByZ
ueThMEhRl5JKGulkhJ5b6PuK+P/t/wMRTWjA
        "]]}, 
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0+VWVFEYgOE9AwMoCEp32600mJfgJXgBej1KqoCF3a1gd3djdxcgPix/
POvd8605sc/MKVu6fMmySAihn8XJIfREQ6hKC6GaGmqpo54GGmliU3wIj+jh
N49JiYVQTB75jGEG05lJKoO+N1eHtErHMo7AM7MjZFg/1+NkWb/SU7zhHO+5
RG5KCDlkk0UmGaTTax8d7rOdNlppoZmVrOCyc3zgPPWuU0cDCcTIJp44MokS
IZ1qhh03R/9qmu7UIi2kgFJ2mM3WPzpLB7RRd+k8raWGpz7vZg/76ecAhzhK
Ly84wWnO8JYLfOQqefadTwGFFFFMCaWUUU4FlfR5Rp2eQxfdXHOOK1zkHWd5
zUle0scxDnOQfexlO9t4wlaa7GejbiDJOpccEpnAWvOJ2qX3+coa7vKZVdym
jRu0MMr9JZFIAjHiiSNKhMBwqt+DIQYZoNnx12nlFu3cpINP3GE1X7hHJ98o
c4/lPLDuZpL1T63U8SQzmhK2mE/VaVQwhclsNv/Fen6M7MPsoX5n3ch/wDs3
nwUsZFHy//fwHw+BdL4=
        "]]}, 
      {GrayLevel[0], 
       Line3DBox[{1030, 785, 1026, 1011, 800, 815, 830, 845, 860, 875, 890, 
        905, 920, 935, 950, 965, 980, 1015, 1032, 995, 1028, 1020, 996, 997, 
        998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1017, 
        1033, 1009, 1029, 1021, 994, 979, 964, 949, 934, 919, 904, 889, 874, 
        859, 844, 829, 814, 1013, 1031, 799, 1027, 1019, 798, 797, 796, 795, 
        794, 793, 792, 791, 790, 789, 788, 787, 786, 1018, 1030}]}, 
      {Opacity[0.5], 
       Line3DBox[{1353, 2783, 1342, 1710, 1343, 1726, 1390, 1928, 1747, 1414, 
        1941, 1768, 2181, 2179, 1951, 1956, 2199, 2514, 1465, 2213, 2499, 
        2220, 2218, 2521, 3779, 2246, 1804, 1483, 2003, 1506}], 
       Line3DBox[{1364, 2148, 2798, 2800, 2799, 2469, 2157, 2807, 2810, 2808, 
        2477, 2168, 2604, 2171, 2423, 2425, 2175, 2429, 2701, 2702, 1439, 
        2512, 2715, 2714, 2713, 2813, 2203, 2657, 2204, 2663, 2718, 2717, 
        2847, 2205, 2716, 2857, 1440, 1771, 2433, 2434, 2662, 2661, 2658, 
        2659, 1753, 2178, 1399, 1732, 1398, 1733, 1377, 1720, 1372}], 
       Line3DBox[{1370, 2656, 1368, 2651, 2415, 2496, 1717, 1369, 2473, 2161, 
        2550, 2568, 2547, 2160, 2472, 2471, 2543, 2544, 2414, 2650, 1365, 
        2777, 2648}], 
       Line3DBox[{1382, 3797, 3772, 1739, 1400, 1738, 1405, 1759, 1427, 1776, 
        1446, 1966, 1787, 2208, 2207, 1980, 1982, 2238, 1996, 1491, 1811, 
        1492, 2017, 1513, 1820, 1514, 1835, 1547, 1833, 1549, 1852, 1579, 
        1851, 1580, 2325, 2085, 2087, 2360, 2108, 2110, 2747, 2742, 2745, 
        1664, 2823, 2827, 1690}], 
       Line3DBox[{1500, 2006, 1814, 2265, 2014, 2586, 2735, 2736, 2270, 2619, 
        2271, 2015, 2257, 2575, 2574, 1509, 2530, 2258, 2525, 2526, 2254, 
        1994, 2524, 2230, 2231, 2503, 2228, 1978, 2520, 1456, 1785, 2607, 
        1960, 1438, 1770, 1947, 1417, 1750, 2603, 1934, 2768, 1393, 1729, 
        2805, 2757, 1356, 1714, 2794, 2786, 1347}], 
       Line3DBox[{1527, 2029, 2027, 1521, 2024, 2022, 1519, 2771, 1496, 2622, 
        2666, 2665, 2261, 2262, 2242, 2563, 1480, 2438, 1988, 2612, 1987, 
        2210, 3823, 3822, 3831, 3821, 1448, 2194, 1432, 1764, 1410, 1744, 
        3777, 3802, 1387}], 
       Line3DBox[{1533, 2037, 1531, 3824, 1571, 3832, 2310, 3833, 1574, 2676, 
        1601, 2674, 2319, 2450, 2352, 2356, 2456, 1624, 3826, 1893, 1654, 
        1906, 1680}], 
       Line3DBox[{1567, 2059, 2056, 1558, 2305, 1844, 2054, 2300, 1840, 1556, 
        2070, 2337, 2335, 1857, 1588, 2090, 2372, 1872, 2377, 2375, 2114, 
        2117, 2401, 2134, 2138, 1677, 1926, 1696, 1917, 1697}], 
       Line3DBox[{1600, 2078, 2074, 2350, 2346, 1860, 1593, 2095, 2381, 2099, 
        3787, 2126, 1647, 1891, 1650, 2139, 2144, 3792, 3816, 1702, 1920, 
        1704}], Line3DBox[{1688, 1913, 1662, 1897, 2388, 1630, 1880, 1627, 
        2107, 2359, 2086, 2084, 2324, 2064, 2635, 2063, 2644, 2293, 2294, 
        2592, 2591, 1546, 2046, 1512, 1818, 1511, 1819, 1490, 1810, 1489, 
        1995, 1477, 1799, 1476, 1979, 2206, 1968, 1965, 1445, 1775, 1426, 
        1758, 1404, 1737, 1381, 1724, 1376}], 
       Line3DBox[{1694, 1915, 2831, 1689, 2833, 2493, 2405, 2820, 2403, 2822, 
        2491, 2492, 2510, 2461, 1633, 2848, 2727, 2728, 1869, 2454, 1610, 
        2845, 2365, 2846, 2366, 2817, 2725, 2726, 2576, 2367, 2331, 2455, 
        1611, 2690, 2691, 2688, 1883, 1636, 2398, 1668, 2132, 2467, 2408, 
        2412, 1701}], 
       Line3DBox[{1695, 1916, 2406, 1669, 1900, 2399, 2464, 2578, 2463, 2567, 
        2369, 2397, 2577, 2733, 2734, 2693, 2694, 2687, 2730, 2729, 1635, 
        2732, 2731, 2840, 2396, 2849, 2395, 2462, 2460, 1882, 1634, 2404, 
        2465, 2511, 2495, 2494, 2834, 3829, 2832, 3830, 3834}], 
       Line3DBox[{2649, 2778, 2149, 2413, 1716, 1366, 2545, 1394, 2418, 2549, 
        2548, 2480, 2569, 2481, 2556, 2555, 1419, 2557, 2482, 2695, 2483, 
        2497, 2419, 1397, 2551, 2474, 2155, 2416, 2152, 2655, 2652}], 
       Line3DBox[{2882, 4096, 2876, 2898, 3298, 3309, 3906, 3625, 3435, 3325, 
        3493, 3121, 3439, 3532, 3444, 3449, 3337, 3567, 3574, 3131, 2941, 
        3689, 3692, 3677, 3144, 2983, 4101, 3153, 3011, 4155, 3043, 4131, 
        4184, 4137, 4143, 4219, 4205, 4212, 3976, 4088, 3998}], 
       Line3DBox[{3090, 3199, 3082, 3192, 3069, 3184, 4172, 3046, 3171, 4158, 
        3014, 3156, 4104, 2986, 3147, 3680, 3349, 3695, 2944, 3577, 3466, 
        3340, 3644, 2935, 3715, 2908, 3496, 3328, 3520, 3425, 3432, 3312, 
        3301, 2901, 4045, 3894}], 
       Line3DBox[{3108, 3217, 3989, 4079, 3967, 4064, 3952, 3059, 3040, 3166, 
        3940, 3933, 3926, 3921, 3140, 2969, 2931, 3916, 3739, 3737, 2923, 
        3421, 2891, 3483, 3392, 3407, 2886, 3510, 2869, 3115, 3583, 3281, 
        3592, 3884, 4039, 3257, 3369, 3367, 3244, 3229, 3876, 4033, 3861, 
        4018, 3846}], 
       Line3DBox[{3771, 1711, 1344, 1727, 1391, 1929, 1748, 1415, 1938, 1942, 
        2180, 1952, 3778, 1780, 1451, 1973, 2214, 2500, 2221, 2219, 2522, 
        3780, 2247, 1805, 1484, 2004, 1507}], 
       Line3DBox[{3794, 3813, 3789, 3809, 1678, 3812, 3788, 2127, 2123, 3784, 
        3806, 1620, 3818, 3781, 3803, 1597}], 
       Line3DBox[{3835, 4007, 3850, 4022, 3865, 3218, 3233, 3356, 3246, 2861, 
        3109, 2862, 4090, 3549, 4190, 3110, 2863, 3603, 3605, 3558, 3564, 
        3396, 3395, 3524, 3909, 3628, 3632, 4191, 3620, 3618, 3901, 3304, 
        3293, 2893, 2871, 4091, 2877}], 
       Line3DBox[{3900, 4051, 2907, 3318, 4055, 3431, 3519, 3492, 3502, 4149, 
        3642, 3639, 3651, 3464, 3347, 4198, 3355, 4199, 3475, 3478, 4110, 
        3162, 3020, 4164, 3177, 3052, 4178, 3190, 3075, 3198, 3088, 3205, 
        3096}], Line3DBox[{3993, 4083, 3971, 4207, 4200, 4214, 4138, 4132, 
        4179, 4126, 4121, 4165, 4116, 4111, 4150, 3710, 4100, 3684, 4099, 
        3699, 3470, 3662, 3474, 4189, 4188, 3542, 2945, 3674, 4097, 3668, 
        4098, 3734, 2947, 3769, 3721, 3757, 3723, 2951, 2973, 2992, 4056, 
        2993, 3003, 3021, 3029, 3178, 3062, 3076, 3956, 4068, 3978, 3206, 
        3097}], Line3DBox[{4006, 4003, 3992, 4082, 3970, 4067, 3955, 4057, 
        3945, 3944, 3943, 3936, 3929, 3924, 3143, 2972, 2934, 3919, 3742, 
        3891, 3889, 3390, 4187, 4186, 4146, 3579, 3586, 3590, 3588, 3887, 
        4042, 3260, 3882, 4038, 3232, 3879, 4036, 3864, 4021, 3849}], 
       Line3DBox[{1345, 2784, 2792, 1712, 1354, 2755, 2803, 2802, 2809, 2478, 
        2169, 2605, 2172, 2424, 2174, 2176, 2186, 1962, 2608, 1963, 2706, 
        2707, 2705, 1457, 2560, 2721, 2720, 2719, 2232, 2664, 2233, 1471, 
        2236, 2837, 2839, 2838, 2855, 2853, 2856, 1458, 2860, 2858, 2189, 
        2435, 2188, 2660, 1423, 1754, 1422, 1755, 1401, 1734, 1378, 1721, 
        1373}], Line3DBox[{1346, 2785, 2793, 1713, 1355, 2756, 2804, 1728, 
        1392, 2766, 2767, 2602, 1749, 1416, 1946, 1769, 1437, 1959, 2606, 
        1784, 1455, 2519, 1470, 2708, 2229, 2562, 2561, 2234, 2573, 2235, 
        2528, 2527, 1488, 2723, 2724, 2722, 1472, 1794, 2436, 2237, 1795, 
        1473, 1797, 1460, 2852, 2854, 2851, 2859, 1442, 1772, 1441, 1773, 
        1424, 1756, 1402, 1735, 1379, 1722, 1374}], 
       Line3DBox[{1348, 2787, 2795, 1715, 1357, 2750, 2758, 2762, 1930, 1935, 
        2165, 1943, 1948, 2183, 1957, 1961, 2202, 2517, 2518, 2225, 2223, 
        1793, 1468, 1993, 2253, 2504, 2256, 2255, 2529, 1508, 2012, 2009, 
        2268, 2266, 1815, 2007, 1501}], 
       Line3DBox[{1349, 2779, 2788, 1358, 2751, 2759, 2763, 1931, 1936, 2166, 
        1944, 1949, 2184, 1958, 1452, 1781, 1453, 1976, 2224, 2501, 2502, 
        1469, 2227, 1992, 2252, 2249, 1806, 1486, 2010, 1497, 2267, 1816, 
        2008, 1502}], 
       Line3DBox[{1350, 2780, 2789, 1359, 2752, 2760, 2764, 1932, 1937, 2167, 
        1945, 1433, 1765, 1434, 1953, 1782, 1454, 2201, 1974, 2215, 1977, 
        2226, 2523, 1485, 2250, 1807, 1487, 2011, 1498, 2005, 2000, 1503}], 
       Line3DBox[{1351, 2781, 2790, 1360, 2753, 2761, 2765, 1933, 1411, 1745, 
        1412, 1939, 1766, 1435, 1954, 1783, 2200, 2197, 2515, 1975, 2216, 
        2211, 1791, 1466, 1990, 2251, 1808, 1991, 2244, 1802, 1481, 2001, 
        1504}], Line3DBox[{1352, 2782, 2791, 1361, 2754, 1388, 1725, 1389, 
        1927, 1746, 1413, 1940, 1767, 1436, 2182, 1950, 1955, 2198, 2513, 
        2516, 2217, 2212, 1792, 1467, 2222, 1989, 2248, 2245, 1803, 1482, 
        2002, 1505}], 
       Line3DBox[{1362, 2146, 2796, 2150, 2470, 1367, 2546, 2158, 2417, 1730, 
        1395, 2553, 2710, 2709, 2570, 2422, 2173, 2487, 2698, 1751, 2835, 
        2699, 2700, 2488, 2498, 2427, 1420, 2558, 2484, 2164, 2420, 2162, 
        2552, 2475, 2476, 1718, 2153, 2653}], 
       Line3DBox[{1363, 2147, 2797, 2151, 2801, 2468, 2156, 2806, 2159, 2479, 
        1396, 2554, 2170, 2421, 2696, 2697, 1418, 2571, 2712, 2711, 2572, 
        2430, 2811, 2185, 2812, 2703, 2704, 2431, 2836, 2432, 2187, 2489, 
        1421, 1752, 2426, 2428, 2177, 2559, 2485, 2486, 1731, 2163, 1371, 
        1719, 2154, 2654}], 
       Line3DBox[{1375, 1723, 1380, 1736, 1403, 1757, 1425, 1774, 1444, 1964, 
        1459, 1786, 1461, 1798, 1474, 1796, 1475, 2259, 2440, 2439, 1809, 
        2850, 2815, 2816, 2814, 2016, 1510, 2667, 2272, 2505, 2274, 2669, 
        2273, 2633, 1544, 2632, 2589, 2590, 1832, 1545, 2636, 2637, 2634, 
        1850, 1578, 2081, 1867, 1605, 2103, 1879, 1629, 2387, 1896, 1661, 
        1912, 1687}], 
       Line3DBox[{1383, 3798, 3773, 1740, 1406, 1760, 1428, 2190, 1443, 1777, 
        1447, 1967, 1788, 1462, 1981, 1800, 1478, 2239, 1997, 1998, 2260, 
        2531, 1515, 2275, 1821, 1516, 2047, 1551, 1836, 1548, 1834, 1550, 
        1853, 1582, 2361, 1606, 1868, 1607, 2109, 2599, 2841, 2749, 2748, 
        2743, 2746, 1665, 2824, 2828, 1691}], 
       Line3DBox[{1384, 3799, 3774, 1741, 1407, 1761, 1429, 2191, 2195, 2196, 
        1969, 1972, 2209, 1983, 1986, 2240, 2614, 2615, 2580, 2617, 2579, 
        1812, 1493, 2018, 2276, 2506, 2278, 2277, 2537, 1554, 2295, 1838, 
        2048, 1552, 1837, 1553, 2326, 1581, 1854, 1583, 2362, 2363, 2594, 
        2692, 1631, 2600, 2842, 1881, 1632, 2844, 2744, 2818, 1898, 1666, 
        2825, 2829, 1692}], 
       Line3DBox[{1385, 3800, 3775, 1742, 1408, 1762, 1430, 2192, 1778, 1449, 
        1970, 1789, 1463, 1984, 2610, 1801, 1479, 2616, 1999, 2581, 2583, 
        2584, 1494, 2532, 2533, 2280, 2507, 2279, 2769, 2770, 2621, 1822, 
        2281, 2773, 2774, 2624, 1823, 2282, 2025, 1825, 2284, 2031, 1828, 
        1525}], Line3DBox[{1386, 3801, 3776, 1743, 1409, 1763, 1431, 2193, 
        1779, 1450, 1971, 1790, 1464, 1985, 2611, 2609, 2613, 2437, 2241, 
        2582, 2243, 2263, 1495, 2534, 1517, 2019, 2623, 2020, 2772, 1518, 
        2021, 2023, 1520, 2026, 2028, 1526}], 
       Line3DBox[{1523, 1826, 1528, 2057, 1559, 2053, 2051, 2302, 2301, 1841, 
        1557, 2071, 1587, 2336, 2509, 2339, 2338, 2647, 2089, 2597, 2091, 
        2376, 2115, 1637, 1884, 1638, 2129, 1901, 1670, 2409, 1918, 1698}], 
       Line3DBox[{1524, 1827, 2030, 2283, 1824, 1522, 2052, 1555, 2050, 2625, 
        2049, 2297, 2296, 1839, 2508, 2299, 2672, 2298, 2539, 2069, 2333, 
        2332, 1856, 1586, 2645, 2646, 2596, 2598, 1870, 1612, 2112, 1885, 
        1639, 2130, 1902, 1671, 2410, 1919, 1699}], 
       Line3DBox[{1534, 2038, 1532, 3825, 1572, 2307, 2630, 2308, 2313, 2311, 
        2565, 2446, 2316, 2675, 2320, 2451, 2452, 2353, 1876, 1625, 3827, 
        1894, 1655, 1679, 1681}], 
       Line3DBox[{1535, 2039, 1829, 2285, 2775, 2627, 2631, 2309, 2314, 2312, 
        2566, 2447, 2449, 2317, 2678, 1864, 1602, 2354, 1877, 1626, 3828, 
        1653, 2389, 1656, 1907, 1682}], 
       Line3DBox[{1536, 2040, 1830, 2286, 2776, 2043, 2628, 1541, 2673, 1573, 
        2315, 2291, 2448, 1576, 2684, 2318, 2679, 1865, 1603, 2355, 1623, 
        2104, 2457, 2383, 2390, 1657, 1908, 1683}], 
       Line3DBox[{1537, 2032, 2035, 1529, 2287, 2044, 2629, 1831, 2441, 2564, 
        2443, 2445, 2290, 2638, 1849, 1577, 2682, 2683, 2680, 2677, 2082, 
        2357, 2100, 2105, 2458, 2384, 2391, 1658, 1909, 1684}], 
       Line3DBox[{1538, 2033, 2036, 1530, 2041, 2587, 2042, 2626, 1540, 2442, 
        2288, 2444, 1543, 2671, 1575, 2639, 2642, 2641, 2321, 2079, 2681, 
        2083, 2358, 2101, 2106, 2459, 2385, 2392, 1659, 1910, 1685}], 
       Line3DBox[{1539, 2034, 1499, 1813, 2264, 2013, 2585, 2737, 1817, 2269, 
        2618, 2620, 2588, 2668, 2738, 2739, 2670, 1542, 2535, 2289, 2045, 
        2536, 2292, 2061, 2640, 2062, 2643, 2322, 2323, 2080, 1866, 1604, 
        2102, 1878, 1628, 2386, 1895, 1660, 1911, 1686}], 
       Line3DBox[{1562, 1845, 1568, 2075, 2351, 2347, 1861, 1594, 2096, 2382, 
        2378, 1873, 1616, 2121, 1892, 1651, 2140, 2145, 3793, 3817, 1703, 
        1921, 1705}], 
       Line3DBox[{1563, 1846, 1569, 2076, 1591, 2348, 1862, 1595, 2097, 1614, 
        2379, 1874, 1617, 2118, 2122, 1652, 2141, 1672, 1903, 1673, 1922, 
        1706}], Line3DBox[{1564, 1847, 1570, 2077, 1592, 2349, 1863, 1596, 
        2098, 1615, 2380, 1875, 1618, 2119, 1640, 1886, 1642, 2135, 1904, 
        1674, 1923, 1707}], 
       Line3DBox[{1565, 1848, 2060, 2303, 1842, 1560, 2072, 2342, 2340, 1858, 
        1590, 2345, 2092, 2373, 2094, 1619, 2120, 1641, 1887, 1643, 2136, 
        1905, 1675, 1924, 1708}], 
       Line3DBox[{1566, 2058, 2055, 2306, 2304, 1843, 1561, 2073, 1589, 2341, 
        1859, 2344, 2343, 2093, 2374, 2371, 1871, 1613, 2116, 1888, 1644, 
        2402, 2133, 2137, 1676, 1925, 1709}], 
       Line3DBox[{1598, 3804, 3782, 3819, 1621, 3807, 3785, 2124, 1645, 1889, 
        1648, 2142, 3810, 3790, 3814, 3795}], 
       Line3DBox[{1599, 3805, 3783, 3820, 1622, 3808, 3786, 2125, 1646, 1890, 
        1649, 2143, 3811, 3791, 3815, 3796}], 
       Line3DBox[{1693, 1914, 2830, 2826, 1667, 1899, 2819, 2843, 1663, 2821, 
        2490, 2394, 2601, 2393, 2595, 1609, 2741, 2740, 2453, 1608, 2364, 
        1584, 1855, 2327, 2328, 2065, 2066, 1585, 2067, 2593, 2068, 2330, 
        2685, 2329, 2686, 2538, 2334, 2540, 2541, 2368, 2088, 2542, 2370, 
        2111, 2689, 2113, 2400, 2128, 2131, 2466, 2407, 2411, 1700}], 
       Line3DBox[{2878, 4092, 2872, 2894, 3294, 3305, 3902, 3619, 3621, 4192, 
        3633, 3629, 3910, 3525, 3526, 3397, 3531, 2883, 3117, 3565, 3559, 
        3606, 3604, 2864, 3111, 3548, 3597, 3550, 3271, 3370, 3261, 3247, 
        3357, 3234, 3219, 3866, 4023, 3851, 4008, 3836}], 
       Line3DBox[{2879, 4093, 2873, 2895, 3295, 3306, 3903, 3622, 3319, 4193, 
        3322, 3630, 3911, 3527, 3330, 3398, 3331, 3530, 3547, 3529, 2884, 
        3118, 3557, 3615, 3560, 3612, 3607, 3382, 3594, 3598, 3551, 3272, 
        3371, 3262, 3248, 3358, 3235, 3220, 3867, 4024, 3852, 4009, 3837}], 
       Line3DBox[{2880, 4094, 2874, 2896, 3296, 3307, 3904, 3623, 3320, 4194, 
        3323, 3631, 3912, 3528, 3443, 3332, 3447, 3503, 2912, 3634, 2939, 
        3657, 3571, 3661, 3659, 3473, 3698, 3702, 3687, 3709, 3705, 4153, 
        4114, 4119, 4168, 4124, 4129, 4182, 4135, 4141, 4217, 4203, 4210, 
        3974, 4086, 3996}], 
       Line3DBox[{2881, 4095, 2875, 2897, 3297, 3308, 3905, 3624, 3321, 4195, 
        3324, 3442, 3438, 3535, 3333, 3448, 3504, 2913, 3635, 3636, 3566, 
        3573, 3130, 2940, 3688, 3691, 3676, 3675, 3706, 4154, 4115, 4120, 
        4169, 4125, 4130, 4183, 4136, 4142, 4218, 4204, 4211, 3975, 4087, 
        3997}], Line3DBox[{3091, 3200, 3083, 3193, 3070, 3185, 4173, 3047, 
        3172, 4159, 3015, 3157, 4105, 2987, 3148, 3681, 3350, 3467, 3459, 
        3653, 3341, 3645, 2936, 3716, 2909, 3497, 3329, 3521, 3426, 3433, 
        3313, 3302, 2902, 4046, 3895}], 
       Line3DBox[{3092, 3201, 3084, 3194, 3071, 3186, 4174, 3048, 3173, 4160, 
        3016, 3158, 4106, 2988, 3149, 3682, 3351, 3468, 3460, 3654, 3342, 
        3646, 2937, 3717, 2910, 3498, 3522, 3515, 3427, 3434, 3314, 3303, 
        2903, 4047, 3896}], 
       Line3DBox[{3093, 3202, 3085, 3195, 3072, 3187, 4175, 3049, 3174, 4161, 
        3017, 3159, 4107, 2989, 3150, 3683, 3352, 3469, 3461, 3648, 3652, 
        3647, 2938, 3718, 2911, 3499, 3523, 3516, 3428, 4052, 3315, 2904, 
        4048, 3897}], 
       Line3DBox[{3094, 3203, 3086, 3196, 3073, 3188, 4176, 3050, 3175, 4162, 
        3018, 3160, 4108, 2990, 3476, 3353, 4196, 3345, 3462, 3649, 3637, 
        3640, 4147, 3500, 3490, 3517, 3429, 4053, 3316, 2905, 4049, 3898}], 
       Line3DBox[{3095, 3204, 3087, 3197, 3074, 3189, 4177, 3051, 3176, 4163, 
        3019, 3161, 4109, 2991, 3477, 3354, 4197, 3346, 3463, 3650, 3638, 
        3641, 4148, 3501, 3491, 3518, 3430, 4054, 3317, 2906, 4050, 3899}], 
       Line3DBox[{3098, 3207, 3979, 4069, 3957, 3077, 3063, 3179, 3030, 3022, 
        3004, 2994, 2974, 2959, 3132, 2952, 3724, 3758, 3722, 3770, 2948, 
        3731, 3735, 3669, 3672, 3671, 2946, 3541, 3543, 3720, 3719, 3343, 
        3569, 3344, 3663, 3471, 3696, 3700, 3685, 3707, 3703, 4151, 4112, 
        4117, 4166, 4122, 4127, 4180, 4133, 4139, 4215, 4201, 4208, 3972, 
        4084, 3994}], 
       Line3DBox[{3099, 3208, 3980, 4070, 3958, 3078, 3064, 3180, 3031, 3023, 
        3005, 2995, 2975, 2960, 3133, 2953, 3725, 3759, 3765, 3763, 2949, 
        3732, 3736, 3670, 3673, 3664, 3711, 3451, 3124, 3507, 3458, 3540, 
        3457, 3655, 3656, 3570, 3660, 3658, 3472, 3697, 3701, 3686, 3708, 
        3704, 4152, 4113, 4118, 4167, 4123, 4128, 4181, 4134, 4140, 4216, 
        4202, 4209, 3973, 4085, 3995}], 
       Line3DBox[{3100, 3209, 3981, 4071, 3959, 3079, 3065, 3181, 3032, 3024, 
        3006, 2996, 2976, 2961, 3134, 2954, 3726, 3760, 3766, 3764, 2950, 
        3733, 2925, 3665, 3714, 3712, 3452, 3505, 3454, 3334, 3413, 3536, 
        3410, 3614, 3616, 3561, 3613, 3608, 3383, 3595, 3599, 3552, 3273, 
        3372, 3263, 3249, 3359, 3236, 3221, 3868, 4025, 3853, 4010, 3838}], 
       Line3DBox[{3101, 3210, 3982, 4072, 3960, 3080, 3066, 3182, 3033, 3025, 
        3007, 2997, 2977, 2962, 3135, 2955, 3727, 3761, 3767, 3750, 3743, 
        2916, 3125, 3666, 3423, 3713, 3453, 3506, 3455, 3335, 3414, 3537, 
        3411, 3617, 3291, 3562, 3286, 3609, 3384, 3596, 3600, 3553, 3274, 
        3373, 3264, 3250, 3360, 3237, 3222, 3869, 4026, 3854, 4011, 3839}], 
       Line3DBox[{3102, 3211, 3983, 4073, 3961, 4058, 3946, 3053, 3034, 3026, 
        3008, 2998, 2978, 2963, 3136, 2956, 3728, 3762, 3768, 3751, 3744, 
        2917, 3126, 3667, 3424, 3456, 2914, 3538, 2888, 3412, 3292, 3563, 
        3287, 3610, 3385, 3601, 3283, 3554, 3275, 3374, 3265, 3251, 3361, 
        3238, 3223, 3870, 4027, 3855, 4012, 3840}], 
       Line3DBox[{3103, 3212, 3984, 4074, 3962, 4059, 3947, 3054, 3035, 3027, 
        3009, 2999, 2979, 2964, 3137, 2957, 3729, 2926, 3752, 3745, 2918, 
        3416, 3486, 3415, 2915, 3539, 2889, 3119, 3402, 3288, 3388, 3611, 
        3386, 3602, 3284, 3555, 3276, 3375, 3266, 3252, 3362, 3239, 3224, 
        3871, 4028, 3856, 4013, 3841}], 
       Line3DBox[{3104, 3213, 3985, 4075, 3963, 4060, 3948, 3055, 3036, 3028, 
        3010, 3000, 2980, 2965, 3138, 2958, 3730, 2927, 3753, 3746, 2919, 
        3417, 3487, 3479, 3544, 3399, 3403, 3289, 3513, 2865, 3387, 3285, 
        3556, 3277, 3376, 3267, 3253, 3363, 3240, 3225, 3872, 4029, 3857, 
        4014, 3842}], 
       Line3DBox[{3105, 3214, 3986, 4076, 3964, 4061, 3949, 3056, 3037, 3163, 
        3937, 3930, 3151, 3001, 2981, 2966, 2928, 3913, 3127, 3754, 3747, 
        2920, 3418, 3488, 3480, 3545, 3400, 3404, 3290, 3514, 2866, 3112, 
        3580, 3278, 3380, 3377, 3268, 3254, 3364, 3241, 3226, 3873, 4030, 
        3858, 4015, 3843}], 
       Line3DBox[{3106, 3215, 3987, 4077, 3965, 4062, 3950, 3057, 3038, 3164, 
        3938, 3931, 3152, 3002, 2982, 2967, 2929, 3914, 3128, 3755, 3748, 
        2921, 3419, 3489, 3481, 3546, 3401, 3405, 3512, 3508, 2867, 3113, 
        3581, 3279, 3381, 3378, 3269, 3255, 3365, 3242, 3227, 3874, 4031, 
        3859, 4016, 3844}], 
       Line3DBox[{3107, 3216, 3988, 4078, 3966, 4063, 3951, 3058, 3039, 3165, 
        3939, 3932, 3925, 3920, 3139, 2968, 2930, 3915, 3129, 3756, 3749, 
        2922, 3420, 2890, 3482, 3391, 3406, 2885, 3509, 2868, 3114, 3582, 
        3280, 3591, 3883, 3379, 3270, 3256, 3366, 3243, 3228, 3875, 4032, 
        3860, 4017, 3845}], 
       Line3DBox[{3847, 4019, 3862, 4034, 3877, 3230, 3245, 3368, 3880, 3258, 
        4040, 3885, 3593, 3282, 3584, 3116, 2870, 3511, 2887, 3408, 3393, 
        3484, 2892, 3422, 2924, 3738, 3740, 3917, 2932, 2970, 3141, 3922, 
        3927, 3934, 3941, 3167, 3041, 3060, 3953, 4065, 3968, 4080, 3990, 
        4001, 4004}], 
       Line3DBox[{3848, 4020, 3863, 4035, 3878, 3231, 4037, 3881, 3259, 4041, 
        3886, 3587, 3589, 3585, 3578, 4145, 4185, 3389, 3409, 3394, 3485, 
        3120, 3888, 3890, 3741, 3918, 2933, 2971, 3142, 3923, 3928, 3935, 
        3942, 3168, 3042, 3061, 3954, 4066, 3969, 4081, 3991, 4002, 4005}], 
       Line3DBox[{3892, 4043, 2899, 3299, 3310, 3907, 3626, 3436, 3326, 3494, 
        3122, 3440, 3533, 3445, 3450, 3338, 3568, 3572, 3575, 2942, 3690, 
        3693, 3678, 3145, 2984, 4102, 3154, 3012, 4156, 3169, 3044, 4170, 
        3067, 4144, 4220, 4206, 4213, 3977, 4089, 3999}], 
       Line3DBox[{3893, 4044, 2900, 3300, 3311, 3908, 3627, 3437, 3327, 3495, 
        3123, 3441, 3534, 3446, 3336, 3643, 3339, 3465, 3576, 2943, 3694, 
        3348, 3679, 3146, 2985, 4103, 3155, 3013, 4157, 3170, 3045, 4171, 
        3183, 3068, 3191, 3081, 3089, 
        4000}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
    VertexNormals->CompressedData["
1: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
qckecIm99jU6xuV6j/WWPPwPgmeE1w==
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{380.310078585008, 275.6698500833151},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-5., 20.}, {-10., 10.}, {-500., 500.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.4709376818560106, 3.0620741820791544`, 1.360852454622632},
  ViewVertical->{-0.0611335397662024, -0.3974951272521825, 
   0.9155655706318503}]], "Output",
 CellChangeTimes->{{3.864994199689621*^9, 3.864994364285956*^9}, 
   3.864994396130711*^9, 3.864994504717518*^9, 3.864994542112433*^9},
 CellLabel->
  "Out[214]=",ExpressionUUID->"d91477da-d9b2-4be2-8d6e-66fd99ce41fd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"gr", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Texture", "[", "contourPotentialPlot1", "]"}], ",", 
       RowBox[{"EdgeForm", "[", "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rm", ",", "pm", ",", "level"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"rM", ",", "pm", ",", "level"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"rM", ",", "pM", ",", "level"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"rm", ",", "pM", ",", "level"}], "}"}]}], "}"}], ",", 
         RowBox[{"VertexTextureCoordinates", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
     RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", "Black"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.864993575045636*^9, 3.864993576502808*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"d6a74aa0-c9f7-4611-b13c-69faade65e0f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"potential1", ",", "gr", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"BoxRatios", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0.6"}], "}"}]}], ",", 
   RowBox[{"FaceGrids", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Back", ",", "Left"}], "}"}]}], ",", 
   RowBox[{"Background", "->", "White"}], ",", 
   RowBox[{"ImageSize", "->", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.864993563701008*^9, 3.864993593873316*^9}, {
  3.864993636915388*^9, 3.864993655209297*^9}, {3.864993732992659*^9, 
  3.864993773749105*^9}, {3.8649941850416594`*^9, 3.8649941855102262`*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"73098d3f-a4cb-4f38-99c7-c373209a4337"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1:eJx03XlcTN//B/BKmxbSrrQnVJREsr1viGylbAmVpUSWLCFLthBComxll50o
GZE7jYykjUlNCBMqKiZSU9Pyuz4+59zf90wf//R4PL0eZ+68utvcOfdmsWCl
T5CCnJxc7+5ycl2Ynxz9ne2r3paA3D//Pj/yfvx2bImoEiwnvrsdZy1PZXh0
M//zkzv2zawm+6p/c7rcvz+t//0pJ7fibfryt+ldZfz+8j//0UiTzvnH0euy
PjHOesKf1yP93Z/hl3eX8b/j68v433+mMt57wp8XsJTxv69rI+Mr/3lf/WT8
6J/4hP7/sZyOMv5PP0Oc/mM5nf/Ddbn/LK61xf+Ow/RMOuqZdNQz6ahn0lHP
nY+vL+N//5nKOOq589e1kXHUM+mo586X01HGUc+dL6fzf7gu95+Xiesl0zPp
qGfSUc+ko55JRz13Pr6+jKOeSUc9d/66NjKOeiYd9dz5cjrKOOq58+V0/g/X
5ab/fX8yPZOOeiYd9Uw66pl01HPn4+vLOOqZdNRz569rI+OoZ9JRz50vp6OM
o547X07n/3Bdrsc/y9VDpmfSUc+ko55JRz2TjnrufHx9GUc9k4567vx1bWQc
9Uw66rnz5XSUcdRz58vp/B+uy0375/0py/RMOuqZdNQz6ahn0lHPnY+vL+N/
/5nKOOq589e1kXHUM+mo586X01HGUc+dL6fzf7gu987/nEewPZOOeiYd9Uw6
6pl01HPn4+vLOOqZdNRz569rI+OoZ9JRz50vp6OMo547X07n/3B0XiccQfZM
+v+e17H+v+d1rP/veR3r/3teR46vL+N//5nK+P+e15GvayPj/3tex/r/nteR
y+ko4/97Xkcup/N/uC43829/8D/jMD2TjnomHfVMOuqZdNRz5+Pry/jff6Yy
jnru/HVtZBz1TDrqufPldJRx1HPny+n8H67Lzfi7P6HInklHPZOOeiYd9Uw6
6rnz8fVlHPVMOuq589e1kXHUM+mo586X01HGUc+dL6fzf7gud9Lf46NMz6Sj
nklHPZOOeiYd9dz5+PoyjnomHfXc+evayDjqmXTUc+fL6SjjqOfOl9P5P1yX
++B/9otsz6SjnklHPZOOeiYd9dz5+PoyjnomHfXc+evayDjqmXTUc+fL6Sjj
qOfOl9P5P1yX2+fv5xeZnklHPZOOeiYd9Uw66rnz8fVlHPVMOuq589e1kXHU
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
pR/Y48iebhPeS/2VqLOzo0bGDfyJ81ndXhdcvC7HvT232OWGuBbnn5YrnIvM
lOOubF6bG3O/FudX6v2+nxreRIfVdtcY94r9fWkIgscWOTTRoffiHqxZwP6+
dt8e817sLIGb7dUfYizN8fqgOLpx8V0TCWSs0S12NUcuhjV3HaqGKknAcHGu
KCzbGOdDrjj6NNU0QZrCsY4tz41x/qqZfMeqjRKgvds/1Cmy16XN8xpHbA+W
wPHNjsE/FNjr0ufvJh+Vuy6BjRHdJR5x7PWNn83NiS4JpIuhZHDd3s1LJaDu
aBSbvpy9XjH17FsXfR/SxbAkatB3dS+032fPB1w4T3Uv7CddDNHaTdetJ+hQ
3IXZp4Iuc9j9MPLNHi99b93F+5/VNbf8Gxq0KYni8LfhJSk4/9T/V/7srjpU
YvX4At+oqzj/Yn1f0/vBupTiHrHipYN5OB+xP5a3x0KXWmUYM3rHhac4381M
+N3PH503o+8pimj/Ac7j+gaSLoYzC6e2ml1QJOZFF9Gnq3mPR1wiXQzrNDwe
RyoqEfN7i+geg0f9UlchXQxKd0u51y+qEvP6imi9PgG9Iq+TLgb0veTomnM9
AqPr8ftFrvloQn1kVD1+v39/6nKvri4NU3/DHkeQn3ZIbwsuZY8j6PvNxnnP
fwyPqMJ55PNPKIevWFZF5PWp/Bk856HtH4m8PjVkpsusUn0Rzt8M6dNldia6
/ojmfRXRN58e0U3LJp35nDgpvP9Y+WZiHlcR7XFjziP9Bgnh7HV7rTWbT9aH
ZOA88skPcjwKCx7gPPoerubw5CKzDvY4jvxpr+XcfXXscZzbEDh8+vDeFLk8
gsXJzgkjSRdDyEeNwNKnbcT8qCK6OM5tfVUm6WJA39u6cuW+jQ9vweMj/6U4
4/CcZS14/ACua6vKJnJeUxHtN3uc+Mhm0sXQ8v37HqGgg5hHVETbHErm2haQ
zuwP//2+2PPSPBPfJHb/j/zqph6p04+z+/9037gcR4kdRY6vu4rZWJpJZ85z
no2uXbJZjphnwnxurbmo5ryRdDGg76m7qicOSbNiP1ciT0l7eHazOfu50ju9
R7fiFHI+TBHt81ZEJdwhXQxuoHA36oMcMR+jiHZcMrZdWE66GPLaayaGFQ6Q
yY8VDh3Vs4h05vjY1tVjmDE576KIfn6pdUphT9KZzwUW97R63nCQyZfMfXHk
loyj9UeeehV+RXXqbTaP5/EmxKTNy2bzMR5fP56aTs5PKKKX+/uoV/mQzmwv
G7gTE/uT8wGY9bn54owPMs4cL0r3eG0oU6SO+JoFDR3NHr88RmSs2PdWkRrU
o8K/wI09fkH7xBuHxyhRkRN2hsR5s8fTA4IPod3HKVHna1681fZmj6cB6nEP
5VfrcDdKRG819Nj9W9POjJiYMB1uwMaFNxZosfu3RVbiT+OP5oKhzap3nKTH
OK/er0N7YtgLuJz+c969kZk4/61QYmZdbUqpto/vKBzyDG+PB6NvTi6rMKUG
v+Wun36bj7dHu/2CaVUBrWDb5q5oGclet4lUnfdp+4xWiFzwKaw5gr1u83zX
i/3J0zrg0aVRt7QPsNdR4wrPJRVN7oA7VYV30vaz11E70iNvfFkgR5267bTh
9wF2fd485lrt7EA5Kr9K66k4hl2fp3WbJ3xYJEfZiq7YcsPY9TP3bcPhtAI5
inviy1rxSnb91M95Wxla2J+aucZ+1Li77HWVV8oLgxcX9ad2Xnx5QZjKXldx
NRNNWMCst+M3bdk8w5Jd3xafmp1y20Ce2tkijW23YNe3BeV0Vq2DA7VKzUTN
Kom9jpoxdEYE7ehAvSgUOqw9zV5HHRF6656KgSN10lze1jOcvY56YGk//wWM
93oQ5/IhnL2OOsxv/tp19kqUv/3NiD2/2euizz8NkJo4KFG9eX2urW9gr4sG
9555xkZBiZoTbpk8ejH7/cukdeYjfzLH8akO1JfAEPb7F6fNVwd9qVWiZo9J
/nm3nr2Oat7SFOcnVqKele/Omypmr6OuSOqrFMxTomY62syf0qaN8442/a72
5CtRYfkxK3PatXH+pGpj/pHpKlSvZpW+4hnsdVf3QYrf985WoezVFnaTeLPX
XXuaTtXLnalCNYxpt1lcxH7/Mv5wOCdtjgq1Vflr95nF7PcvPccVNu01U6M+
R/Rb/CmR/X7E1985/35vNWrigZvvi8+x34/0vFkeK1VQ4kbdzFsffu073l5C
30mXHuxQ5NaP7X888sx3vL24bO3z8mSkHPciNzerYFsdzu+N0Jy7a7scV0nZ
9FXE+jqc9y254dq2ooo+k3Sun6FAhPP1chvfRG+poq31jo0Of8aePxw4NHJF
lPl3cMraGlXxrRxvj6XFdYF7JtRBN0e5EVVx7/D26PLt9soXh3/BMNvfRVn7
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
kB5L93V88HH6MNJTILIrb8rVoaQzx8GK3Iy2IaTnge0jQR+fwaQLYFv8u6PJ
g0gXQsmKL/LSgaSXg73H9xVejqSLYIdF09sLAwhneha2dHhI7Ml8JQwoVk2f
bEfmqyHqZg+rc/3IPHPestso9ncfMl8HKn4PY67I3E/Bpymat6VGxjl0hHXu
igFupMfSd/e+DFgl4ylQ8104NU3GeWA9/aNbk4znwbwHVU7DRpMugATTH1Zb
ZFwIhTsbdbkyXg6qX9uUuowhXQRunkpN7qQzPW9M1aiOlslXQqqhbtkLmXw1
1G4xzu0mc79JDVh/snzoTTrTc+AJW8WMAvJ+Ez7da3Bg6dU80jm0sCj+2olc
0pnj4LIXW/bmkJ4CU1XlvSP4pPNA4+IQ6yXZpOdBDixr8uWRLoCdb8/lenBJ
F8Ko9aVJQx+TXg4t2pqr+j4iXQTpt0aPNcwgnOl51cQNBqocMl8J9pU3vzXd
I/PVUL39U2ZVKpmvgYsmPQ+X3iHzdWD2OeWI4SnyPh0+vW6sTkiwjHPo/Ivh
I9JkPJa2VhJqKSSSngIbg4Z98ZJxHrx8mvggScbzoK9Nx4EaGRdA5O75C1yT
SBdCceWTIXtkvBzsxtuov5ZxZr9xOfqD5WnC/+w3VGpSw0j/s98ImRL9WCZf
Dbtybs/VkLm/qQbe9dUe6Ec60/M3Q3W3IkPyvic+LayrijPRJ51D83nZn5fq
kB5Lpx47N4SjRXoKnF0WGa3UjXQeHHSb88ZHnfQ82Kw/1P6sKukCWFKjG1mn
RLoQZnLrC4d1Ib0cxsYXWETLkS4Cp6XX17xuI+7nYno2g+inllLyPq9K0NAN
MgiTkHnmOFjttiTzN5lnjoOZpg/VfpH5Oth6xKRkyD3yvjA+beFzP+eIjHPo
J1reD8UyHksHFX67OSWd9BRQORh19pqM8+DqZNMjKvdJz4NJ6pxdi2ScOa97
7r0hS8aFcCi6Zqkph/RyGDh+17xNMi6CYiWzqULSmZ7XZXNGD35A5ivBcKfP
4DjSmZ4futX2+SGTrwF/ud1Gk8n77Jiev4aPfj8ki7yfjk9Pf2oG3pmkc2ha
t+1M6APSY2nbRW/kdt8jPQXiU+/PP3uHdB7IdYnnZdwkPQ9CfVZbvb5KugBK
znlF/bhEuhDc6u2/dD1PejncoNTGWZ8mXQSGsVXJo04SzvS880O2yuwEMl8J
3wecD1kTR+arwS9y6/MDB8l8DfDz59pe2Ufm6/D9iV9tHs6tX4HmvfPx/Ynb
Pi7o2g3fH8zBbnBSLd02FHks9lvT7i4YvwR5Ch7fXdOv+6LFyHnY3/HlH20L
Qp6Hfc22qyFJC5ELsKsN89bLmI9ciP3cL0lWSQDycuxDb55d8WsechH2wmAP
Y625Wrhn5MHm4mf2fihfib2t7NjaCb4oX4396BGwCJ6J8jXYbadU5e+YjvJ1
YBpdMXGlHHn/Jp/e0Cu+QlmedOb8OWX8xtMyHkvbu7f0GKJAegrsLrtxNV/G
efBxeYBbUBfS82CYgnZZq4wL4EhCdthRRdKFUGu7XtVeiXTmcwrd7+wTGRfB
2WnvXOYoE8703Fx1sPAn6X+u+212W7xPhcxXww2thnYLVTJfA8qXkhMekL4N
zcc0pWa/eKn2shjd98rH82pyYzd2DCtEzsE+fKZVw8XnyGOx3zDOq+6WjTwF
j28iWlu+4TFyHvaDySavKjjI87DLLePzJ6ciF2BfNXDlw/SbyIXYKxoNUsyv
IC/HPv0R9+K+88hF2Pnbl5xoSPzXmZ6Ru4zXPuh/DOUrsV/ReLgj53ALvr6K
3OjVwvVOMS34+irymGMayxJ3t+Drq/dEvbUWR5L3C/Npr4eTu+/aRjqH/nZ0
TbcLO0iPpaNWnNTMiiI9BUw9sjQ+7CadBw8sqtXboknPg+nSburG+0kXwPfi
wWquB0gXQvStuV1nHSK9HKyid6qGHyZdBI/nX1M5coRwpmff4S+V78ST+Ur4
qStRKjxG5qvhwHdTpboTZL4G+ua4K6onkvk6fJ/148sSm89CdB8QH99nfUGs
Ore6FDkHe7Rrz8O1JchjsS/f0Y8vfo08BY/v88JV2lCMnIfdRXeiY7MAeR72
XvP8gtpeIRdgl0teelIeuxD75+8bC5VeIi/H/txlv6JaEXIR9lvbTrl2K/yN
vy9AHvf8+grtApSvxL5O+9EF/XyUr8Y+Z06e0CgP5WuwUxffaZq9QPk6QPeb
7x5Rf8zgtQD3jNxQ9bzux3oB7hn5NYHP4SvdinHPyEec6dJtlV0x7hl5wdK0
fa4exbhn5IFDglQUgopxz8h/yutH5W4vxj0jj8rnyx05XYx7Rq5/Yv2WOQ+L
cc/Iryzq22IlLMY9Ix/mWLautqEY94w8T7r3V1qP17hn5P7PhoVtGfAa94z8
R1xNrfuk17hn5Nv8E5d0C3mNe0bfs9z+0W5UdgzdL8+nkScYxZWYXETOwb7F
vXfcghTksdgXhnGmXH6EPAWPP/HUpK61Och52B3577MdXyPPw25Qv2pbuAi5
AHubsdKIjDrkQuyfxx1vam9GXo49d5Vd6hhl9vsU5HcSH6+I1ma/T0F+7Jm3
bb4p+32KZll9pGkG+RwDZnsfvnqpBU06h5Ym/ZxhnU16LL1abo1bn+ekp8DX
Bb/s/8yf/F/nQeDTNYb9BaTnQWmfhi6OQtIF4Llv7Q+nctKFwK9teDO4gvRy
GOkVzh9aRboI0u78vjO8lnCmH3vddUmj6sl8JVxc1xjt1kjmq8G4bN3asVIy
XwPPk6S3reSI5z8w62HCwB/bGr6Qz3ng06lvVjbckXEOXbRTvHiljMfSdfar
3trLeAqoldR7fvtMOg/6bF3NuyzjeTC276/BQTIugPkv11y1lHEhRG5s6PXx
E+nlcNIqPDZJxkWQnve7yxzS/5z3hq9bbyiTrwSxadO31+RzMJieNXLW+x+R
eT4Gc/xaJXk5VSZfh5+bIQrMtRfosts78tRpqeU2uuz2jnzXuMSDG3XY7R35
LNddUKDNbu/I+9mvEFtos9s7cqnprHPhPdjtHXl+D8rnuRa7vSM/o9ivi4kW
u70jD2vqkRbWnd3ekY/+1rIouxtyEXbd8k96hsiZnpF/Kczjh2qifCX2dN69
9bQGyldjj753uq8OcqZn5H5X9pQFq6N8HeyNEo4tu00+V4RPX0mYf6FrKukc
+tmVb/LD0kmPpSsz1gQufUB6Cijmtz4++Yh0Hlh92GXygiY9D0bXd9ss5ZEu
gMAux9/Y8Uln1mc9C9e5z0kvh6Q+147F5JEugkeugxofFRLO9Pxm0qPpda/I
fCVI5rmnmpSQ+WowCCvo4VlG5mtgyI5ZYZHvyHwdfFNMXrdf5jktfNpA8d2N
vjLOocd20f70lEd6LB2m4NFzoYynQKJ8pJecjPPguVzarqQs0vOgsePrw2Ey
zhy/Osx+lnJJF4Jn+4y+4TJeDpva9vtry7gIrrRmHb1NE870XCxtyp1M+p/P
F9L+8t8ek/lq6N+y0GUP6UzPfs0nllvL5Oug7/1Ng60ekc+x4dP79JzfRzwm
nUPXrqndXcQlPZb2fHXRoc8T0lMgxXGecMtT0nmgfUhve/Ez0vNgbV1+P7tc
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
ZTSBzUoLK2035AKwiYj1NuE0QXza5kdHsDPrs0mOT/y9JlBsKZ2hNxp5ORTx
OqZppjbBGhj0IwG7CC4tdpmxK6UJKqIORhuO0cE9b9RYObPtZhN45361OImc
6dnrTvKs8OtNwO3u/tB4LMpXg/XM9751V5rAYcbZ6UnImZ6bW/T8gpKb4PRJ
aZ0per400/PI4SWzzaKsqMKVfUy24OdL8+nVBinLgxkf/y53oTp2Dn35197t
NxmnPVZcOzELeSz9rnBhfAPjLvd61PfBngI9boy8OnyXFXXb4p5L+kzkPBgX
bZC5g/E+B30jx2LPg02L6oueM36mRZr9agZyAaRQLz5r7baiDBafUZ+PXQhf
el2SzGL8kGC0z4/pyMvBqDlS4wzjKlTl8S3YReD12te8kvGtN/Z+UEf+Z97F
HSfn/nusqCbD/jYnp6F8JTw4oOGxlvGVu4qW9UXO9Px9SeWch4xX1a9JTfdB
+RqwGsddqRBtRQX4G7SMRc70PGBD+6Ka0kbgfHoy0XQlev4Dn+aYweq5xY3g
Oaz8+r4w5Bx69LOtW/OLGuFzbKNG0yrksfSLFdyYUfmNsLGq+4qFa5CnwHR9
+ZO3nzeC1qh+hYVrkfPgfabbZXN+IyQfHe04Yh3yPAgJ2pF2mNcII2rmHL6y
HrkA6jWeZCnQjfDKLfynbgRyIWxM61K45mEjhBw/OG37RuTloDh37LvP9xuh
/fvltLpNyEVwsMuurzPSGuGoe5ae3xZ13LPB9aeN/JRG6Jf4Zh0/EuUr4ayP
suLQm43w+OevUqdtKF8Nti3jely92gjTJ2i6ntmO8jWQdm6PqVFyI3w7Y3NS
fSfK18GyL9EvNJItqKOVeWnzC9Fzy/l0+YiAr0GMzwvZFT22ADmH9jw6WIVm
3ObbyLl98pHH0nSNem/DyxbUj9BGB7U85CngOKZi9CrGOXW3utTlIufBuZOc
wFzGt69cXFr4HHkeaP88GGl1xYKaWG92/W4OcgHsnBCUuJlxnTXCyPhn+O9V
QsPZ4RmvGX/XEOuzgY+8HIIkPYQDrlpQl9ZNsJnzFLkISryqf+9hfIVEvmVk
dlfc8/jLj3VEjA/dmJFv/gTlK4HTfnTgsGsWlELr6nNdeCjP9Dwz1OsI4y+2
2IVXclG+BhJvui2vZfxoxyeP5zTK14HCqMOxJwJMKG3t7pPuvUPPe+fTw3er
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
5wEM27Dq0bw2yBxSMDOlL/I8uDjyTebA+W0wVFEveH4/5ALo6jZC7fKiNrj7
ck64ti1yIawYe3pmr5A2sD9zPuoJ9nIQjJe7cDi0DS4v+3pkrR1yEQydtOCH
8so2sBzmeKG3vRbuOckze/jm1W2QqLL+bglypmcFH5vo+vA20H+dmbWnP8pX
Q/CM6OLgiDY4fF7x5dABKF8Dub7fzN9tbgONsEkfvyJnevZZq1r71tiRire4
fuK8KduzVnmWCs34PLWE3uNM2Z4L3DdZnWe8969td76asD0fuOUMuxivexs6
8oAJ2/Nkg+9+IYzfy5753NGE7Vlt2+V1kxjfctNtRnEvtuec6sC4AYyPTbAX
re/F9rzH2+hWD8Y1thosN+7F9jwuQ/C8wciRKl6s0PzYmO1Z0erAl1LGT02t
i1pgzPbM2z9O/iHjC1yFWsrGbM/bGzp6nWbc1vJJ4lUjtmdq3oOh2xn/qXar
7xQjtuf2p6unL2L8wa/jaeKebM+PBtiHjWd827ud1NGebM9vxD+HGAS3QoA3
Z6ziLfQcWj5t6isyiwtpBYGTMbUTO4deQBeqaoa2wnjdyOEKt5HH0sk2j+v3
LG+Fh78/DtmOPQW+HbjxRiGsFRxKxzjJpSDnwYDfJ59sWd0KFzjJ/bdiz2M+
7O+9IVnbCgYnu/Zrxy6A9Cfr49esb4X9m5ZZb7mDXAgttsGR3yNaoWNuoVkr
9nIYFTd98ZLNrbBmlJPxprvIRbCjefTUz5GtUGUWr9+CnOmZHzjQNWB7K8yR
l/SISEX5SlDLMbN8s7MVCiv8NCXImZ69HLqpz9jdCmOyM1XXp6E8s39OaP1V
GN0K9y+ZKzYi//O5+1pSiNcXKZxcpq1nOgn9XSfmvO7mzpmjqqQw/+yaHtux
c2jHlCVj+3+VQt/iYs3P2GNp7VQvp141UvihMkRtPP77UCnQcG+wuXqdFNKH
H1O+hp0HJRzjbi3fpbBlpURBcwryPOA8lG+tFkth7IXZHSuxC+Dk46qvpT+l
oF6aIX2FXQibs/JL+Q1SeKXWSzLYE3k5zMtOfXqvUQrHR21pOI5dBKOenUi9
KJGC/+r3YinyP88nyd167kiLFHonQ52/F8oz+438oEM7WqVQW3b2axZypudP
hZO2rGqXwl1NhUpr/PezaiD71cDQQLlW2OC2sGIPcqbnm+vie+7bZk8dneL3
w9ub7Xm239nIaYyvnaZ0uGUq27PSqOufejE+fXaK04WpbM93LNI9KrfaU84B
c4onTWV7nqeUdfM247pByusavNieu359oR3BeMPSOwZJXmzP9/JK1o9mvDhs
7gN3L7bn+Smid+qMp61TmfPdk+1Z82it2+tIZvk3321N+H89P1jflHya8bU7
5p2G/9dz0BwFjRDGp0erUtVT2J57gOaqgYw7H0wVxU5he860NCxp2cIs/1H/
na5T2J6XKFsNz2a84UTX3hWT2Z71vvU/e4Dx4jNp/H2T2Z5fRx2J73ZECnmB
pepP8N8j49MKFdOMLx6VgslSlxM12Dn0ANA955oghRVrjtnoRiCPpeckFtsU
HpMCvbkpdQT2FIhuPnpj0QkpaO2e5RaEnfmcMnOGU8tJZns5dL/gAPY8+Jiq
xzmUyKwnxw3mpmMXgGaPkpG9T0uhy/n1X99jF8KwFQlPMs5IYfr10nUqG5GX
Q/CLmROmnpNCcpqLoiN2EcT1NSj8cl4Kksxjh32RMz3Tu0qnb7oohQnPmky3
43wl1FYce6OVzGzvRbNuXMX5ajCkfAOTL/9Zz++7vsL5GhibZFg5/KoURn0y
eNaC83XQE350Ucq1owKiHtr3xn/HjU/PObs1rvS5HdVqNmL9u0/IOXSSvJbF
NcZPPHyUdQR7LP1hwdnbmxkfMmukxiTsKWCR7TjKi3HBz8yZCth5sLB3Vp4F
42EHR517UIE8Dy7t9p7TkGNHadrSNWHYBVBVJfrKZ/zaUxjSF7sQbCes3nCC
8fHzuds+iJCXM/tDBZVljH9upV4kYBfBLfUj8aMY33E8S88TOdNz/TIr6x6M
mzmPDlTC+UpwLki9++mZHfWokHft0UeUr4Z1DmPd0hn3Cx3zew1ypmdObHFh
NOMS5Wyww/k6yB+1JmDeTCmEfx/RxcyTnSfzfa9o/71ZUnjK013h5snOk+n+
2oujOVsKesdqhQs92XkyjuaPPwf5SSEoNHvMbk92nox3qH2Px3OkcA8Sb13x
ZOfJrE4/OVJ/nhSUdNf2fOHJzpM5Kt916Qp/KcyonhRV58nOk7k3eX0CP0AK
lx5Z/ejuxc6TKTn2hWc6Xwq/Y6WznbzYeTKSimk/1i2QgnuQIHu6FztPxmgA
z7hwoRTiXa87rPdi58kMj3D06BMkhS+aO0+e8GLnyczNPr12a7AUhlT4KT3y
YufJRHbXPFe6WAq7053C3nux82TO+m3Kd1gihZJ9am/lprLzZNpHJofcV7Kj
GmfQC8Px3w3k0+EfVCP2M25ZenmkD3YOXbstdG8A456+sQYO2GPphZYFJwYx
vrFsQ706dub8+YnjNRXGk/3mv6h2QM4D76AjGW8V7ahXbydceoqdOa9Tbsy9
zXj7XKet57ELAK74vt3JuO17o9lbsQshfcLDmlmMzwzoMmgu9nLoX2PSasf4
jo81Gq7YRXAxZpuGHOO35hdX6iFneu414FOv4i521JuKR9yf+O8kVsLRQvf+
VxhXXnTpZCFypmf1VVdGbmZ80JcDa2/gfA3s0Fb3nMp4YPA6z704Xwd5lTZL
udwmuLvh2Sb59ez3sHeGNMaq0f9H1p2HQ/X+/wNHSGVLkq0NaRNaSOvraBUl
ShutQpYUkpSlDW3KtKlEm0hSTYihdJgsqUnLFFNRRsWEsWVff6f393Pf53ed
ua7PPz0+z8vV+zmn+8xx3+e+O2BEY9Of+wH0PGx0REGmQ04H+Ltqb1wTQM/D
BpVe+n7jWQd8/ra4sHs/PQ+73dBF7k9WB5iv8Z4Vv5+eh10aMNNoJqcDrryK
vmOzn56HnVIoszYkowM6F+aqtvrT87AqGh8PFqV3wKanf0Jj/el52FbX27eG
p3VA9tQR4iX+9Dzsl6c+RU5POkDnznwn8T56HvaFHNGQ8LgDgjXdii/vo+dh
765TGdn0sAMqzkXNXriPnoc9nfB93tyUDlgol5VQ7UfPw+5te+gcltwBN4Oq
RkT50fOwDktDTpUkdYBUy7Bjs/3oeVjbnv7AvUQHqIvF9sH4nMpCckFu9vLF
CzsgeXmluhJ2DmkUHqAxan4HEHc+lsUlIGeROtYzftfO6YDS3vwYY+xsGKrS
kPZidgfs3pC5hbyLnAud/PvHLph1gEzq/XF22HlQfdXV3m1mB1xVjP1ZGY+c
D5+3jB83d3oHGO86l+iLXQD5ehUNSiYdkJ93xEMGewWk1lzNERp1gKPuPqOL
d5AL4VaKQ+TTKR3QFODaqI+c6jnKV9Xp1KQOiPiwITX9NspXQ6g5b/IWww7Q
NbLevxT5v/eFe050mhp0QFrEfIvSWyhfB465i4tk9TrAWmjc44ac6rm7/G8D
37YdZlnNWhYXivaTLyTVVNZENtm0w12uYfj+EOQccoole7LSinZQX6CVvyoY
OYtctE+5aPKydgjLHDbIMAg5GxwTdrssW9wOrdP7LfsPIqfG57LX0juJdnBJ
aTpSGoicB6eHTL55eEE7fDL8ST46gJwPd+admB87tx2W3P7cHxGAXADZ3r+/
cGa3Q7rOqwXb9iOnnrtvLj7weVY7GERnB8/2Ry6E+g+31Vumt8Ml1YfPVPYp
4Z5lZaVSlU3aQfbMze4aX5SvBl3zraunGrWDv9yFObk+KC8CM/fn9csnt8Pv
w2GBV/eifB3YxmifdjFsh/XdAZk+e1BeDKbFCWN2sPWIaaY+T71a6X1gfkdd
mfmE8oSN4ot1f+l9YGLWn7KSfqJHjD7q6ef1l94HZvXooC32lF++X2NX10Lv
AyP7a7ffbcqVPrqYeLXQ+8BkJW890Ux5eLdQqa6Z3gdmj69drGWqHtGrt63e
s5neB0bfYtGT85T725S/rm2i94ER9M8sFFJev2/Tfc8meh+YswUTvk1P0yN2
xpaeqG2k94FZFDmq6SjlX/PXunk20vvAdK4ZIveR8jXi90tqG+h9YB5p9Wjp
pesRr0fa6ns20PvA7KysN/aj3HLhG+laMb0PjOa974u5lHPcrCo9xPQ+MKPy
zjq37WuFQWHXa/6uQfvPF5Llp9eWhe5tBc6n0T+n2CPnkLcdtFYqeLWC94Rb
33esRs4i3cb8yD3v1gp6AXpfr65CzoaportmOs6tUFZ49/M7G+RcaHrimXx3
SytEjpr4Qd4aOfWcEmQ61nhTKyxyv89bYIWcD4eWtl/MdGiFDs7UV/7LkAuA
UHmuYGnXCilDHr18sAR5Bch9ORry2qYVnB1NyapFyIXw+s7ylrXLW0HzQWq2
lqU07pm1W2lXxaJWeNszK8MOUL4a1pvzv7ktbIVjKzOfnFiA8iLQkbpm1zSn
FSzi5jx8MQ/l66CyeGvBQbNWaBA/S2qbg/JiaDE+7tD4rAmK5+kt1R9Zj+et
Vsz7yfXPaAJwWrejZnQ9nre6tXzx9G52E6QfOhnywLAez1u1r42/efhBE0yJ
eXZtr0k9nrdauX2QslxiE9zKang606Iez1vF794ZfPpWE4z8Mv5jB1GP5626
A1/WqlxvgtOdDg3PVtTjeSu7cP1Nly83gZTmyaFH1tTjeavE88eLtFlNEDD7
meESp3o8b9UX99Ps1ukmqFvfsEjBpR7PWzkkL747IbwJtgeM38bbXY/nrZIz
4tUeHG6C0ssOQaz99XjeSurloKOmh5pg5dMTVxxC6/G81YZ3Oxuf+jdB3qfs
NM0T9Xje6tG3l1vm7W0C81bxu/KoejxvFXtnxdTOkyNyx0el6J/aSu9PErgq
b2EY5VaaBcYaW+j9SRw6LdaoUr73dsWceCd6fxLTeLZr7IkRudFT2peYOtL7
kyjaTjo4ifIXacp2ORvp/UlEnTcj0yNG5P6eP9HJegO9P0l+/KhbBOWKheBW
to7en+S2bVQaL3xE7qzVG31dHOj9SUK75Is2Ur5Z4BPcvIben8TxbujXX2Ej
co/vOHUi1J7en8R8dbvYh/Lk2tsXhtnR+5OM6PaW7js+Ivfjvuy4q7b0/iRN
d3+rn6K8u/dj0oRV9P4kvNVbJo2kfHxEXVqqDb0/SVL3p3m3j1G9qciSYE3v
T9K0cdO6m62yucuUu+4fD27APQ9eG21j8Vc2N29HY458YAPuecwqvuWHZtnc
+U9/fzi1rwH3bLZc1cKzSTaXo1D+W3FvA+55peUq40GNsrmzNn/sivJswD07
zzttECuWzX38+JXSCLcG3HOgWZG2Wb1s7pRB5PjoHQ245ygT2eEltbK5ieuf
mmltacA9J062HLzrj2yuXvKDFbEbG3DPz/VD+wZqZHPj+m5vGevQgHv+OPrZ
36vVsrma9ld976xuwD3/GdX5Z/pv2dxLd8+FT7BpwD1LqZlVvv4pm6vaGXYt
aVkD7llD0a90Z5Vs7hmboIdTFzXgno3kH/N6K2Vz5W/65j1a0IB7Vng2/sia
sTXk+qU+bz+oVeGePS8YLt9lWEMqXLt5aaJSFe6Z5zFVOXhaDZldX+IUMrgK
92xsafqZNauG9CL69fjSVbhnlqZZbMK8GlL30rTaSb1C3HNL45yd2YtqyJKa
zU9C24W4Z4eihVPeraghj8yLDPzUJMQ9Z9xY3PzTroacHvUMptQJcc+aAVac
zg01ZFVVrfyR30Lc86FVqw4rbashL5lrl3z+IcQ9lxusWabnVkMuO73i8tSv
Qtzzwt71SrO9a8iOisDNRz8Jcc+3+E6fbPxryKTpSfplJULc86AH269vD6oh
HcPLao2Khbhnt2OuzvuP1ZCKX+RTj70U4p5PeEyTd72oSpQvfyZHKhXinut1
h2omXFIlrnhJvcudVoh7tn9fPfn3ZVViTdTSq9xVhbjnjOMv5024okoopZ3e
ke9diHvWmX1rletVVeJV6bsphWcLcc9HaoO3JVxTJY53q7cWPSzEPVfHbfL9
HaNKLBzjmFP8thD3bGNvfnxCrCrRaXkz4o24EPfMlh1x2TVOlUh1/bX6rVIR
7lmD05iYcEOV8D41WevdtCLcc7AXj/P7piox6eGeqverinDPwjH3X0+4rUpU
vU978NG7CPe87GN4uesdVSK2tdP/09ki3HNKuHNDQrwqsUFz4cLSh0W4Z7U5
IFV9V5VQm398sOBtEe7Z2VTz5tmzM4jiglHyF9joPK9CMimksvET5Z98HscU
P0LOIRteJxG652YQP3SWm0g/RM4iZ2n6nt9JeW3h95cWD5D/2391TlUy5e2+
ARt97iPnQm6q9MwWyqVHK4vv3UPOA3mp18fnRM0gFF8lHP2RgJwPK1dd+HSE
cs19CzRG3UUugAsxjhNeUW4w5nOy7R3k1PNgjV6ACmsGYVK8GyJuIRfCOLO6
wvWUz/WX/ZRz439O9ex2LG3UDcqXjY11b4tF+WpIeRfk/pvyNa9n9hldR3kR
/NVdkmV0fgaxZf+b8y7XUL4O5noqDvWn3H3cTsPYKygvBnLUH9MP8tOJ+DmZ
BSvwufaF5LvsZboZlC9c9c0/9hFyDvljy93B1yn/sn1Av/EhchbZKCXz9zDl
/v76fEvsbBiI3/bdhXKVk8uPXUpBzgWV5TnFKyhPvu41veYBch6MrdV+akz5
0sdRlXOw88HkbOCtEZRXctOiIpORU9/rTEvPdMpNJ4JKyxb+uI+8Auz4Mw9U
UK5R2yOejl1Ifc8478yl/Enf2LiwpKG4Z1+txlX3KF85fMnKsnsoXw3Hnq+c
E0l5jYF7z2TkVM8XtiUb+FJ+zCIyOTgR5evgjoyC6nrKx6xkb3qXgPJikFXo
Mvkl2w+vXaRZcgP0/htDV3Rd/jK4H3pPzxq5p5/ef0P1dFdPydB+MH6yK6a0
j95/Y+Sbrh35Sv2wvSxmLGBng7Zid1GWaj9c6Ht7914vvf/GuFXd0x6P6Id8
fekpqth5YHiu++JdjX5oXzHrcWAPvf/G1HfdXde0+mGSz65Zwm56/w1T1Z5t
Ubr94Bgdk7UCewWY2/cUhI3th8jnbxemdtH7b8y/0DP1kF4/vKiSytdGTvVs
ye85v3dCPzQpzFpxvJPef2OZem+Hy6R+0DPZVVLXQe+/sXJd7xbHqf2wbl3M
WgfkVM9rontfrjbuh5NBbwXP2+n9N+K9be+7PDUmrLICrbZ5ofPQC0nDMo6N
IeXazqcO93gi55D3Cf2GmnRjon5oTMYV7CzSKPks6z7lL9KSxTOxs4E9onOG
F+Wszc8M3nsg58LMEOfPRpQ7y/GcdmPnQUY170BDmjEx61H5BQXsfJhrN1ub
Tbn8BnHxXXfkAniRdfu5L+WCgT4pS+wVYKmvuG0m5clJyhYVu5ALIT8yQLot
1ZgIth+79yByqmer9sr4DMpXd5skjsT5auBts1kWSLlePFHxxA3lRbC6+Klo
DuWtNvbqtsipnj/OGHem54kxUdi6w6bWFeXFcGdT8Y27Q4yJTAdrM+979Dxs
1pChLS0KxsSFT1XBp5Loedj3WdZLLSn3dgjKT7hPz8PWeJy5GjWY+rw+jVDk
JtPzsP1avLoKeerv6ZCy9vsDeh5W47Ui9R3ImOjjL7nenULPwxofWnXhkBzV
29qKKo1H9Dzs0innfr+SNSZS+funzHxMz8Nu/lpiMYryyLXKfqvZ9Dys/2mV
SNdBxsQufmKW1xN6HjZyrt2PNBljYtFakD75/83DxteyZshQrssvs7r7/83D
Zsd8CLeTNiba1/iwctPpediP1mpfbkgZEx8+KgjKn9LzsLXda4zEA9OIlDW3
x3Zl0POwWl8MEn4q9EHIFVO/5SJ0TlkheXecQafWsD641LjTuLQGOYc0dde3
sVPqgwfLr9S6YGeRzx7r3YhQ6QPuzdeJf6uRs2FZx/jm58P74EtHn/Mx7Fz4
uHD8kr8j+qBp9fSxw7HzYGvEuCuTNfpAIcnl283fyPnw5+3Y2m2afTBW6uoV
Y+wC8B85dkG0dh+Yb3yzNucX8gqQ2jKGxdPtA1t2v8pK7FTPd0f/lBnbB24K
M3hff47CPY+q1zWfM57qYbvrSQ/kVM93Zuqe2qtP9cC5uqSzCuVFYBykU54w
oQ9SVHlSJ5BTPWdztU3KJ/ZBvvvA85E4L4bsaWflHQ5PIzYFBw0dN4PuedRB
+0F6lOtNWi33fjrds3/+SKmm0GlELV9P6sh0uucPKl97cyhPO9zebTKd7tnY
6UbXGcqDp75u+2FK93wm0bl9E+VLyuKaokzpnkXNhn8nUq543LcOTOmely2o
a2wLmUZ8Nl5a3WhC93z35OP6l5Tf+KopvGlC9yz9ad+f85S7RdR/W21C97x1
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
Mp1DWvj0bIsa1MZwFunUVC2apMZ0NoT6fPTljmM6F2435XQ7mTCdB/k+94+3
LWA61XPTJcWolUwXwFDfI5cnOTG9AqY1e43hejBdCHa+G+45BTKc6tmveZFp
WwQzXw2XfI2zzl1m5kWQ2ay1aNJdZr4OvvrKvclLZebFUHn2hP+fuUMIZs+3
AyfplVgynUM67yx+l2rFdBapb+sZcmU109nwy2LY1OD1TOdCgn6KYPsWpvPA
TXlVxFIXpvNhYpd45hQvpgtA9POcUNmP6RVwv8Qk6m8g04XgmfV+vuAww6me
p971rX0ewcxXQ/05tau3zzLzInh4MG1pxCVmvg72uDj89bzOzIvBO9rFbMuq
QcSt/3t+wT1H3N63JXQN0znkzZRj4Tc3MJ1FcjLPP8zdzHQ2fOTe+izcwXQu
1L193Cezi+k8kP3yYoLBbqbzYcyvt6uW+jJdABaN5fvdApheAfbddXEngphO
9SzXU5B0hOH/9t9QHdpQHM7MV8MNHS2NutPMPHU9G05aqMhi5uvg/fTZbtMu
M/NiKFpQVWOwQoEIymrSi3n0B/eM3Owledvi5R/cM/IG3rlxZWV/cM/Ik0q3
3Nxf/wf3jNy50miMunQt7hm5Tm1PbOrIWtwz8k9/X+vYT6nFPSM/13ctpnFh
Le4ZudVgD61za2txz8ilh1tcNXKvxT0jz9YePOpNcC3uGbm/Qellj/O1uGfk
xsYJ6gqJtbhn5DWz/S8mZtfinpHfslystvRdLe45UKzg8M18BjHRueD18Dz6
vWPkD5R6Iybn0u8dIzfJmrHYkqTfO0ae5uIxsPEF/d4x8tmqt5755NDvHSN/
9qz0wMnn9HvHyIldSrNuPaPfO0aer7akKTObfu8YudWLQynvsuj3jpG/9Xji
XsOh3ztGvmakyGAgk37vGHlp7hihBnKqZ+SOu9fFGWfQ7x0j/zEqctOyp//f
e8f/c5eX3JFb0+n3jqN8BhdmeJsSqbeK7XwDlXHPyHdOElzUPICcg12dXV1K
7kfOwp4/u01rlz9yNv75/uSgLcr7kHOxT1iuduupL3Ie9tKScT83+yDnY49Y
b2Iouxe5ALv59wUeD7yRV2CvcV2ZsmY3ciH2q2LHxi5PZdwzcqv9HjNue6B8
NfbO3gP7rdxRXoT9flgEp9EN5euwOype7ol2RXkxjFCW/3M825Rg/bdfsSLu
efo4o32rJJxD2s5Y06ch4Sxy95LAE5VZTGfD6fU3hidLOBfuuedf3yfh1PeN
Q7UTFkg4H6oiVdnyEk497900n/uew/QKGP1kc/41CRfC3JfHbHcy/d/5X5+T
BEYS+WoIqClxbs9k5kVwsau1nmQ61TN7mM6BUxJ5MZi5KPVbqZkQFm9c38xP
V8M9I7csjlHemoacg9266J394VTkLOwOBbKXbz1BzsY/f+vLOYI8NnIu9l15
e3R+PkbOw+5Dxm+Vxc7HfihHcHvCI+QC7GHPlH4ve4i8AvvZrEWT3FOQC7FH
Zx7wOvVADfeM/NbTlEfJyShfjT05Tdj85j7Ki7CnPdEwEyehfB32549tApWR
/ztv1GvFzIKTxsSM//Z3pee7ld4urHSXcA453XjWWUUJZ5HroibPZZ9gOhsO
No2pWSvhXIizV7/UEcF0HuSlDrG8LuF8+D1iQLxQwgUwZH9rTFU406nvz6V/
lkdIuBDWzP7ROpnp/851vfrp9tswZr4aYrqKbX2ZTvVMOpI96hL5Ovj1LD2J
c5yZF0MV36/Ey68XEs+1FM/NGY17vnE2d6ipfy+kxwZvqHyOnEM6Llde3rq/
F7jJ8r/DsbNIDenNxzkHeuEdh+U3FTv1vS77Phl8sBfKC7WlPjxDzoVz/h09
RFAv1H66ezYAOw+sjZdayIX0QmeVsY4udj7Iiy74F4f2glwzJykvG7kAuLcr
2WeP9ILawCLzXdgrINTJWGx/rBfGKb19qYidGjdGBk/WCOsFY50N9qlZo3HP
HSXFrl/De2HeZOH3Dcj/7SdzctSdGyd6wWq21+4+DsqLwGeR63fnU72wfmlb
1x3k/9Yx9qZqTzzTCy5rD5+wwnkxOCl2F/07f2LZ+4g6kzuV+PdIyPl5I24u
voKcg3172q01GyKRs7CL706T9zqKnI1//qHo7KzQAORc7INPLve+4IWch/3S
wU/jErcj52Mf77XjU9Y65ALsjzY3nHhrjbwC+zzboHlCQC7E/goUGltnVeLf
IyFfN/3yHYUpKF+NvUpPb73uWJQXYd+r/niIqTrK12HvlZufs3gIyoshxSSt
d4yFJsH8/Tzvu3H3sblM55D1Z5M7qucznUUqLjBsswams8Go/nbLI0umc2Hl
9dFNakuYzoPd1tfEAcuYzofILvW6r1ZMF0BKEku00IbpFfBmg2L1nVVMF0Kt
/Mmf8nYMp3oemjFI6LmGma+GKa6Hv5c4MPMiWKHe823GBma+DtxfBnyJ3sTM
i0G2/8orrUOtEOn00/nZXzT/UkgaB3Vluu1vhcebn8fGtiHnkBs7He+l+bTC
xy2XS0M6kLPIY/ufR0vtboXWrXtUt3UhZ0NKy+iIVbtaQWP7cmuiBzkXSvce
3h/j3ApzdowLG9+HnAdS4kqXmi2tsNm5K0dmADkfpngucpi1qRVCd37s+ClF
z8M61MQvPurQCrdcHkwvkKHnYUNc5GaWrG6Fl65hXomy9DxsotBNT8emFard
tiSckKfnYd9vfTXcfVkrKLib/3BXoOdhu79Nln5q2QpTPFS0rIfS87D6m840
SS9ohVWeojVTFel52JWl9T9sLVrBxysvUlGZnod9VrL+7ex0BWLvN4etqjPQ
ubCF5FnpWRuWZioQ5dap1p/nIeeQ22YNF67JViBWZKvMjlmKnEVO39XguT1H
gciY7K2/bTVyNgyKedPqnatA6F97rWKwCTkXPvOSQoNeKhAshUm9ImfkPLg3
EK5wqlCB6DsQLnq4GzkfDs7YeSG6WIHwrKn65BeAXAA2roTuXZ4CUbaeyJuN
z7WlvtddHZ345J0CsaQw7mHvKeRCaHzdbUJ+VCDYZj3X8i6K8PNgXl9ZFu+z
AjE6YWNERBzKV8NF06eLvwoUiNPqGX4291BeBK47L7yt+aZAtB8fsU31CcrX
wezovRvavlPPv399bD5no7wYmom2wx6JbZA6qP1HwAz5XNTzougCN/JOG3Qu
nz+6YSZyDnmx7vKqkTfbYGHkMUdXM+Qs8hfhNsvrehuEvX91pdwcOfW9Ltpc
J+9KG7xWV/m81gI5FyLq5GVGXWoD1U3r1N7MQc4DAVEm2s1qg/Vx11cvmoec
D5Oj773jRrZBrFAYmTUfuQAO1R3I0DzVBlUTJr02XYi8AniEVdye8DaY5Lln
cBIgF8KYaM2w/KNtsOdR+pKxlv9zque9dSJP7dA2SG/pPhq9COWrIZfIsvc5
1Abd5pak0hKUF4Fa9CmLwoA2gKATvWFLUb4OXOo2jdXdR/VAvp3TuwzlxeBs
1trhZ9gCCimpEZe3t+Hx2aUkUqdzTAsMzTWKv+bYhsdnt10TIGRUCyh+SiTj
HNrw+Owu9cJZRrUFlEXjym/btuHx2fPa+ogTCi2g2hvTmWDVhsfn3TMa7ytK
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
2ki/N3HtQvIi9y5F4nhdyfDH0t/xOD+l2/Hjyl5FokXH6/4M9e94nBduiTPS
NJEjXg8TZLf8oterjxVmBa+YIUcUVVjsUa6l16tvcSnlHTKTI/IfXxs/pZFe
r369pkU3xUKOyDva/WlpK71e/YuninfFPDnixVqnkzu66PXqoxqm5iiDHPFs
wvN5If30evV1vlZKxCI5gtOh23h1UAvu+WKryxbfpXLE0+KQO+kKLbjnjweO
PrxjJUekXv++7r1SC+5ZtSeuj28jRzz2hiH1ai24Z9vQ7FVyq+WIFLj1fLBm
C+75rHRZnPkaOSJ5uLSP/ugW3DMv7K941zo5IunnDn3Qa8E9D1VQXXhtoxyR
8JRb6jixBfdsdcbo3GsnOeLOCf3TAUYtuOcndR1e3BSp3CC3fkJbXI97vv1K
e0jlQ6nc5T6TrE/+qcc9n09YkNj3SCp3xKE1a9t/1+Oejx7bvliHLZX743jw
Zpeqetyz77bjlRbUl50HZxNdP36vxz3vmJ8Ysj5VKvfAlfd7iG/1uGd7rWJt
/zSp3MW3uw88KqvHPVu212WeT5fKVXlgcFT3Uz3ueQZfed3jp1K539JtT59+
X4971mNPb+FlSOXeexF4sZNXj3tWO+sQVZsplbvv1Z1Yt+J63PMgzwNGCllS
ufCRl/CpoB733LospnhCtlTusPL2R4u49bjnX/o5boufSeWW/R7HYb+oxz1/
kqoctOO5VG58o3XemGf1uOcV058fWefbQUppiaqt3tDPKfqrjq/o2N1Bspbm
5tnk088pfe7WatfcO8hxfldjbXPo55SysOHf5rp0kOwbPgfsM+jnlCe3BPHl
2zpI4o3VGofH9HPKmec3d4c6dZDvO8ZN25BEP6e4CtzMxm3oILcbdA12vE0/
p0DrtP68NR1ko92Hqs0x9HOKlmpb4U7bDjI05H7Otov0c8rfqc+j5Kw7SOXk
o1edI+nnFN7y4xvvLe0gb5Ru2ucaTj+nJO60Hr/CsoOcNmiGrXso/Zxy5PDw
2tr5HeRzk6GTvQ7QzymbrgtSIy06yJWbqwbt8aGfU2Zk3gwyntVBlp/M/u7j
QT+nPBJ8bw+e2Qn9T6c+3qU3Lhf1XCp9SGXIjE5Y7b0ndBF2Dtk/ZeSky6ad
cMvgyarR2FmkoQObGG/SCc3f/up2jkfOBtsQm00Pp3XCoovm9R+xcyEgsdp3
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
UM//B56dyO8=
     "], {{
       {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwtl3uQzWUYx3/nnF275yxndSe3zI4RS0ZG2jZjjNHaZCSVW6WEUFHuW6nI
tavbpjJGLhnTNHKrKROhpmEil2rS0EVqTAmpqUZCn4+nP76z3/f3vue9fJ/v
87zvNh8y5rbR6SRJ9oECMDefJPP4MAFsqZckN4Fh8OfA/fQ1pD0Y/gIYS3t2
UZIsSyXJp2BXcZIML0mSFvTNANfRX0G7GfwZ0DIfYxzbBKzm2yHmq+HvHHA7
/d3BrHTswb2Mr5sk1fBysIC5htGuSscarpVlzFPwB8AdzFWXbw3hD4NptKfS
/1I6xjjWM3m2SWA3vBXzdYFPAf/QXpFLkhL4IrCZ8a/z7VH4APArY/vTn4JX
gH9Zax79Y1wbfEb/naB7Os7s2atod0vHntxbA+acCq8Fa+B7me8i+BLwC+0J
6LMVbV4D/YtCc7V3j+71LOOvgF8GTsDP8G1QOvboXr+h3S8de3JvH9LuC8+o
EeOPs4dO8D5gLX17aHeAdwTfwreC9vDeYBn980EveDuwjr7loC28pzGlbzrt
VsZWz8D7gTJ4c9ADfjV7uE/vgE7wieyhED4OvE37euboCr8EfEffLs77Knwk
GEp/cSn7gNcD6+k/xrfH0+FJvTmDb0XpWMO1FtLOwjuDK5k7x7e79Q5Ymo8Y
Gks1UitjZuzUSK3USK0qQQnt1pyhCbyRKAnP633P4FnUUC3VTO30sF7Ww3rZ
HDAX9LBe1sN6WU3VVs3UTs3U7vtskpwi9n+Ak9nIGXNHz+t9NVd7NVd7Pa7X
9Zzec4/uVY/olXH0PwhfDA7mwzN6R83VfjtrHGetP8G5bMTAWCwFp/MRM2Nn
Tpgbel7vn2d8dS40UitzwtxQc7U3JsZmYCH7YuwHoB/ebsy30/Cz4IZcQO4Y
x26ow7ngf4N6uYD8DCjPhQf0Qs3/tUOP6TVjZKyMsbE2J8wNNVTLzmAVBW4b
ObUa/jVoQ99K8DN8j5qzvzasPxb+JcjT9zG/6QovAIUZ1uf3q+DHwAb1ov0W
/CiopT3Ab/AjYFI2cshcMmfMnb2Mf5O+n8BM+keAw/Dm4ItMxMBYuKZrO4dz
Ocax7sG9nAT7aO+gfRX8EKiiPRkNBzoXSGejxlhrrDHWmgOccRd9u8GP8Br2
sxQ+Dazk7Cdor4FvB9PpH0V7CXwn2Ex7MOvVd29gAe2b+c1E+FfW9GzUCGuF
NcXaMoL+x+h72Xgz13J+8wn8CfWhry377Q2/GIzORE2wNpiz5u5O62wSOWFu
HGb8CHgHMAh9fqM9Cr4J9GDuCvAe/EX9zPzNGFMOHwo+Ymxr+t+FP6+G9G/k
2xB4K1CfsY3o3whfD+rCU3xrCb8XvMHY7fxmJnytHi6KmBk7NVf7xnybD28P
bikIyN2ze9dzek8P6aVa5nta7cEK2sNZcwt8OVhYFJqr/Q6wDn4jc/SBX+4Z
WLuaMa+kQlO1bUp/r1TEyFgltKs9i56i/QP76Q4vBmW0y/n9QvhD4HxheEgv
6Wm9rUf1alPwPuP3M2Y4fK75WRQ5YC6YQ+aSGqv1s8aLs+0Ds1Ohqdqqqdqq
udqrqdqaM+bO76zRAn6PnikMjdX6LjCL9ib8sB9+EFRmw+N63W/2uUf3ag25
UEuKw8vmnLmnZ/SOZ/bsekAv6Bm9M5P2k+7V32QiJsamPxhZGJ7Vu+aEuaGn
9bZ3tne3HtbLkz1PncgJc8OYGJtKvo1PRUyMjTXGWmNMjE0N6AR/xHxibB6M
hnd0vYLIUXPVGmYt0/N6vx3oTP81oG0qPKgXjZGxMgfMBWNibPS03j7CfstS
ESNjVcqeesJz4NpM5IS5Yc6YO9YMa4c1w9qhR/VqA7A4E2f27HlwayY8p/es
EdaKnszfF34pmJIJD+pFNVEba4q1xZph7TjF+lXwOv4mEx7Vq2qkVp+DbvA0
+Iv4HwDnkrjTvNvMGXPHN6pv1XcY30XtwdF0aKzWlWBRQdxR3lXmoLmo5he0
T0WtsaZYW9RYrWeDilTEyFhZk63N3iHeJXpYL1szrB16WC+rudp7Z3h3WHOt
vXpMr+lBveid593nnendac6b+2qolmqu9tYEa4NvRt+O1gRrgxqrtTXWWmtM
jI0xNtbG2FirsVqrsVqrqdqqqdqqmdp5R3pXWrOsXd6p3q1qrva+wX2L+4bz
Leebw7eHb2Dfwr5xfev6JvFt4hvbt7ZvOt92vvl8+/lG9q2sp/W2Ncfasw0N
Sn2L+MYpjTeKbxW/2ef/FP5v4R3nXWeNsFZ4R3pX+sb3re//BP5v4BzO5RvT
t6b/E/i/gf/j+L/Of+y+nTg=
          "]]]}, 
       {RGBColor[1, 0.5, 0], Opacity[0.8], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
aomaqraquWqvGqPW6AN9Yc2wdljDreX/A/yzw9s=
          "]]]}, 
       {RGBColor[0, 1, 1], Opacity[0.01], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
1tzW3tpYW5fH2DdmjJ3aWGv4hr7l/yk1wSU=
          "]]]}, 
       {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
        GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAADR0ch3d4RlZVCBgXhnZ3S1taYVFS
YlJTSlpZhHR1Y1NUBxcWChoZalpbQFBPPU1MaVlaRFRTQ1NSX09QYFBRSFhX
RVVUCRkYP09OaFhZQVFQhXV2QlJRR1dWZ1dYZlZXHAwNoZGS6uLTsKCh0uLh
r5+gKhob8Ozks8PCGwsMssLBvc3M5ucgXk5PvMzLEuQTIxMU9PDlZFRVSVlY
ZVVWucnI7eYQKxscrZ2eu8vKGgoLrp6fusrJtMTD5eQSWkpLKzs6FycmKjo5
LDw7dWVmFiYlCxsaf29wJTU0fm5vdmZnJjY1JDQzIzMyIjIxeGhpGCgnd2do
Hy8ueWlqKTk4GSkoGysqHS0sfW1uHi4tfGxtHCwrKDg3Jzc2WEhJ4NDRXW1s
ppaX7+rU4dHSV2dm38/Q4tLTWWloXm5tWGhnW2tqWmppWUlKBhYVXExNBRUU
BBQTW0tMa1tcU2NiVmZlVWVkUmJhT19eVGRjTl5dUWFgUGBfLBwdLR0e6uvi
+vLVwbGyMiIjNCQlwLCx7vLol4eIm4uMMyMkrb28MSEiloaHrLy7+fER7/Pq
FQUG+/PjFAQFmIiJ5AQTqZma9vLu9/Pvq7u6qbm4+PAD5fDkv6+wqpqb7fHm
rr69qLi3vq6vscHAFwcIsMC/8vrpFgYHpbW08fURp5eY8vbV8PQD8/fjpJSV
q5uc5OwE8Pjspra1rJydqrq58fnn9fHtpLSzLx8gNSUmLh4fNiYno7Oyr7++
pZWWmoqLva2uzNzbzd3ctqanuKips6Oky9vaJRUWsqKjydnYJBQVytrZtKSl
8efmyNjXvs7Nt8fGH+YgtcXE6OnG8+vq1OrToJCRuMjHopKTx+jGGQkK7ujW
vKyto5OUITEwtaWmIhITwtLRz9/ewdHQJxcYzt7dKBgZuamqHQ0OGAgJnIyN
JhYXHg4PnY2Ox9fWuqqrno6P8unoHw8QorKxw9PSxNTTu6usn4+Q0ODfKRka
saGi0eHgwNDPv8/OemprTFxb8/vrQzM0hZWUg5OShJSTVkZHVUVGhpaVkoKD
GiopRDQ1kqKhYXFwna2syrq7YHBvnq6tx7e4yLi5Pi4vm6uqlYWGYnJxX29u
kYGC0cHCeYmI0MDBe4uKiJiXj5+ezb2+zr6/kaGgj3+Ah5eWfIyLd4eGZXV0
0sLDZHRzgZGQgpKRUEBBU0NERTU2Tz9AY3NykKCfybm6iXl6b39+zLy9jHx9
Oiormamol6embn59UkJDk6OiOSkqOyssPCwtbX1828vManp5aXl4bHx72srL
mqqpi3t8Rzc4UUFCiHh5lKSjlqal3MzNoLCvobGwn6+u3s7PNycowrKzxbW2
OCgp3c3OxLS1w7O0y7u8k4OElISFPS0uaHh3Z3d2FSUkZnZ1nKyrlaWkjp6d
TT0+cmJjMEA/MUFAFCQj2MjJLT08cIB/cYGANUVEjX1+jn5/2cnKRjY3cGBh
b19gMkJBcWFiEiIhc2NkEyMiLj49dGRlTDw9OkpJSzs8dISDbl5fgXFyN0dG
DBwbNERDbV1ec4OCcoKB18fIgHBxNkZF6MfWO0tKOUlIdYWEPExLgnJzg3N0
Sjo7OEhHdoaFVERFQDAxDh4dDx8e5h8Q08PESDg5V0dIQjIzfo6NjJybi5ua
STk6QTEyz7/Af4+OgJCP1MTFfY2MipqZeIiHjZ2cM0NCkICBPHBoGQ==
           "]], Polygon3DBox[CompressedData["
1:eJwtl3mIlWUUhz+dO3PvzL0zowZF6rgEBZkzGhTkMhoU5JaBQeYWJJR7C6Tj
BgWZW1CQa0FB6ji2QeqoQYW7QYa7BkruFkWaoxVFlj2P5/3jgY/7ve95z3u+
8zvn3J4TXxz1Qvssyw5DDv4oy7LfYXV5lr0LZ0tZdgaWVWfZciivZB18xaav
YTBrBsFb7HkbhhezbBj0hnr4jb1Xkg1tLa7KskXQC1v3wcaaLPscjvDbUVjG
8zuwg3c7YRy/jYX/sHUTxsKYdIZnja9gDYzi7CdhEb8thCaYDSs4czls5rkV
3sDmAnia38bALtgJUzhjKvTnXT9o5nk9fMcd98N57nwBVmqzGDa1fdU7wibP
gL9Z+xdsI5hfwALu8joUoQTTsDEVTuDr99CJ2HWEB3h+ELpzZjcYCI3wL77c
qA4b2trK3i2wHloqY497r3PW77CowP3hSJ54wl7W7IEMW+1gKWctgUvs+RE2
8NwC41gzvjJiYCyquUsN1GKrBrayZhtMZM+zsILfVhbiTM++nd/ugGZisc44
s3dhKWxqew7MhTp+61qKHDAXWvh262E3vu6Bg9g8AB8Tw09gB3feDpeJwRX4
gDPeL4ucM/casFGfYmbs9EFfjuPTCeiOzW4wkucnYCg2hsBz2HweesG9MAmf
JsM0fJkKA9nTCEt4XgyfYvMzOMjaA+7FxiQ4xrujUIfP3WA9e5phGr5Nhzd5
XpqPO3m3r7DxJWxhz9aK0Jha28PzXsjMc+5xFdqgA3troSe+3wX3sPduaGTt
IOgB3bXDu/fgI9gAJ4ndKbiO7WswjLOHF0IjasWcM/dmsHZ6Lta4dj7P83Jh
U9truOuH8C+x+Q8GQH84h2/nYQu+teYjJ83N3ry7rxQ5a+7O4N102M7ZOwqh
IbXUBtfgUXx5BEZw1uMVodmmpHG1PgGfxsMY9o4thA/6sgbba+EIaw7DWTgH
HbHZAS5yh0u5iJGxao+NMmPBcxsMwNZAyLGmLBcaUAuHsHkQukBX+IZ3+yCP
j4WyqEHWouHcfQScYc1peIoYja4JjaiVTuy5LRdnerZ39K6zObPJuxCTcdAA
9dBOH6Ena3uUh8bUmhpUi9ZAa6E119rbyB0HQTVnl6rjG/mtrKHW0l/VTE3U
AGvBYtYugS781jnVXGuvv/nOnDQ3mzhrVilqnLVuHc9rS6FptT2Ls2bCD+w9
XROaUlsX8PkiTGHNZHiId/3SGtcOxcYw6MgdO1REzpl7q3leVRGaUTvWjFu1
oxi1vAN3qU0aV+vHOeNYeWhCbfiN/dZqQm3Yo+xVh7BxuBQxMlbf8m5/WeSc
ubchacUaYC0wZ81dNagWb2I7K4TP+l6DL7XQDeqSRtXqfNbNy0cNs5bNTbXO
Gm+tN8fMtcxvnA8b2rIH2YuaebcO5ri3InLa3LZn2juNqbGdgK/P5KIn7kg5
aq6qGbXTnbN6wEzu8grMxr858DB7BuciZsaunrN6F0IDaqEx9Ro1ptbsefY+
a661dyC+DihGjbRWtnGHq/noMfYac97cfwyGwDxszC2PGcFZYRgMhXPsOZ8P
n/RtI75vqo6aWZd6jL3Gmm/tP8nzqUL0aHu1PuhLKfXS0fZw6IPthspUg/JR
I62Ve/FhX3nU9Fu1vRi5qSbUhjlsLqtptX0UG8cqI2cOpZnA2UANq2VjZuz8
Bn6L+qRdz/Cs88TyQkX0HHuPM4CzQEvq1X+w989C9Fx7rz3D3vGTvxUih8yl
G/j2D+wmRntgNz7vKiYNlqJmWDuGw4h81AxrhzXb2j0SXx6HVznjtTSTOZv5
m+8612bZnVAFxdqocdY6c8bccSZxNvEb+i3bUi/qn2q/mlAbzhDOEqt4t7Iq
erq9/U18WJoLjav1+3num4sebC+2B9mLzElzU02oDde4tpV3mwvRM+2dt2JQ
FT7ruzlkLq0ipqsrIwfMBXuyvbkvPvWBl7jDy2XxTf22DfjSpyJiYmxc0zf1
aHu1Pd5e7wziLGJOmVv2eHu9NdPaqcZuaa08arVneJYzqLOoPcpeNRmmFEIT
j6WZ1tlWjat1e6K90Rw/mXLAXHAmcDaw5ln7piRbK71zPmqqtdUaba12hu6V
ZlZn1xEpN6wpzannbk8xbU0zm7ObM46zjjXR2jg0adWebm83B81FZ1hn2Z/J
5V/axwy9OfVce68zr7OvOWquqgG1YE+1tzpDOUvZ8+x9fjO/nTXEWuI38dvY
s+3dzniX04zmrOadvbszn7NfffpvUZdqsTOOs44zrrPuFnxvrYqefCbVmI2p
R9oriyn3XeNaNak27UH2ImdkZ2V7vr3/f1A7vHE=
           "]]}]}, 
       {RGBColor[1, 0.5, 0], Opacity[0.8], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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

          "]]]}, 
       {RGBColor[0, 1, 1], Opacity[0.01], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
          "]]]}, 
       {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJw1lnmIllUUh1/nW2b5Zj51tKBwm9GgIPegIPegwGVGhYLU0YqC3GaEgtyF
BPcRClJnNChIHbUNchkNMtwNMrQcNVByGTeK3EaNInse7+2Ph/fy3v2cc3/n
VLxRN762IEmS45CGYSVJMhSmZJLkNThSnCSHIcW/NDyXSpJn4S6D78HjtB+D
07TPwGnmnILywiTpBA/ySfIvHGLuYajkXwWMY+x4uMzarXAH2uAfDvM37KHv
W5jM2BqogmqYkuUfvMyer8DnjNkGZ5lzDqqKkmQMjODfCzAL6qCNM92Fl5jz
IlSzxlhIONuDsiRZwncpNLPHLmjmLLvhEeZ0zoQ7e/en4EkYxtzhcI32VWih
fQqaueMuOM+aF+AUa7RAf/oGZIPNtJ0203b+s68TYzo7jrn9oEJbwQj2Hg4f
MPZDOKpPoJU5l53HmPI4x7n9OXs/SNOXgQZssQ5m0q6FIvYohL3Y6ntYw50/
gv2c9QD0LU2SPqXBJtpmCmMnw3xYABv59xkk9LeDvZzpO2hm7d3wKe1PUuHM
nl0f6SttqC0HwgB4h3/vQg5KUsFG2moRtlkIlazVE4Zxl6EwlzvMgw3MXQ+H
6TuSDTFlbHVpnyRdoZ6+VZngE32znjUb4TZr3IHVUA/HWetEUbCpth3LnHHw
F//uQyNrr4c6/tXCStqrIM3cFAzkjM/8H/PpELPG7lb22lIc1nAt93Tv5bRX
GJv0jYZL/GuF/fzbBzthFyxkrwWZ4CN9VR1jfzN9TTAB278KI2FUZGT0ob7U
h/ryBPxcFt6Ab8E36dvsxpiu8A1sh1XssbI4+FBfemfv3sSeW6A9Y/IwgbUm
wlDOMKQo2EBbDDBmi+ObMfbo6+u9WaMtG96Ab8Eze/a1tNd4NmLsFyjPJUlH
WMq/ZZDljJlMeKO+1bmMmQPrGNOQiz6HAs8Aw9l7GPzI2GOwh7m7jTXu/Cgc
5kyHCsMZPesc9pgNv3GW8/ATPjtWEDRILVJz1J7f+fcH7GDsdmgPHcpCTBqb
GxjzcTpojtqjRqqVv3KGM6ngQ325mjH10Ik5nbMhZowdNVAt9I36Vo15Y983
7dvO0i5MBw1VS3vRfgKuwpV00CC1aB42mQuToAZ6sWdPeJO+t6ACG/WAjlAO
V+i7rLazxuuwiTtthJvY+FZpiFFj9SR7tsB0/k2D6aw9Q+ibDg30NcIiWGis
cOat2RCjxup82gughvakOMe5s7H5ezCPNzu/JGiwWlyJ7XoWh5g0Nk/S11IS
1nRtfagvF0Qtmgm1sJmzbYLNnK0pF2LK2DoAB+EQ/w7m4hhYyZoroDd37gOD
YRA08W+L2s3Yna4DJ+EHbHQ0HTRKrXJO7zjHudpM212Ai5BiTgHcZq077kV7
efSRvipgTDuooq+6JGhoEn2gL6oYMwb6Qr9ciDljT81Ve9UstesLYu5LGMJa
g+ESa7V6L8Y8nY8+Kw0xMSmuWRVtpK2W0bccZjJnBnSg3REm064pCWf0rOfY
6yxcg+tFwSba5iJcyoWawNpAG2mrWfiorjBomtp2MPrCPdwrj0aXtQ850lzZ
g77upcEn+sY7eTf3dG9zlrnLHGAu6Bdt0wMqcsHm2l5NUVvW0V5bGnyoL73j
w7vmgi8q4lx9pK+mYqu38yHnmfsmwUQYQt9Q7UZ7dGnQKLXqJnvcgFEwOmqs
WtsNupeFmsnayZg39hu5U0NJuKN3bYu1jjWLtYtv1Ldqjm6IOc5cZ81j7bOT
OTtKQwwby2qcWmcOMZcM4uzP54NGqpVqpFqpDbSFOdncbI1grWAOM5d9xRpf
p0KN0xxzlrnLmDV2jSljazFj3k+FnG3uvh5jYWF8+zfY+8980FS1Vc1Ve80B
5gI1Rq2xJrE28U37tp3j3PKoTWq22m0O7xJjxFjZxr+tmVCDWIuMjrbXZ/pO
TVQbrYmsje5z1nupUCNYK5gjzBXWBNYG5iRzkznMXKamqW3aUFtak1qbqpFq
pTWdtZ0aqpZaM1k7mXPMPWqG2rHPGiofYsBYUOPUuspYy1lTW1urmWqnNZK1
kjWHtYc2XhxrImsja1xr3WmsNbUs5GxztzWntac5MhtrWmtba15rX3OouXRi
jOVdsbaoj7XPCdY4ng9ruvZt7n4rF2JsZ9QAtUANmBw1RW2xhreWNyeYG6wZ
VsWa1dr1SsxNavhDLc+EXGTOM/fVxVrcmsfax5rM2swcZ67Tx/ranGxu9s35
9mqj1ptTza3aWFv7Bn2L5hhzjZqj9lijWKt4R+9qDWMtYw1nLWeNvyTWNNY2
5iBzkTneXO+b9+2roWrpf15FuEs=
          "]]]}, 
       {RGBColor[1, 0.5, 0], Opacity[0.8], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwtl3to11UYh7/td9t+u+k2DYrSbRoUpE4NClI3DQrSeQkMtG0qFORlUygo
nZtQkHehIHXToCB1ajfIe5DhvAZZak4NlEznJYq8zEsU9Tw73z8e+O18z3nP
Oe9538/7rnxW05TGnCiKfoIkXElHUTdk+CMXmvKiqBHOJaLoF9jL7z2wFbbB
DGiAxdACO4qi6Gs4nY2iLliFrZXwJWu/ggF8ezSe49xkbhQlYFUqilbDBua2
Q0eGPeAxzjAYjvLtGJxk7gn4nEN/Abfzo+gW7CyIol0wHpsvwoewFl5i7RS4
wtqrUM3cMfAk34ZACWv6Qj1nbYC7zLkDtewxEbYy1gEHmNsJOYVR9ABsgs3Q
w7fbMBobY+A3xi7CNOZOhzvcpQfGYKsa5rH3XHiWb6MgwZocmIiNSZBh7zQ8
j69eSAQf6IsmxubDUGwPgVEwGhaxdiGsx2YbbMLmp0XhjJ51BXsuh9PY6IKJ
zKmFYVDlGr6th0bO2AQz2WMG1DFWnxt8pu9m4sNZsARaoZK5g+AIZz4MjxTz
rtDJmgOwC3bnBh/r6zmccS7s507fwh7W7k2HO3gXfayvl/F7KbzC3Do4BAdh
Ht8as+ENfIsbzLkJ89hjLrRxt3bIIwZzYT+x8V1O2MO9Sllbpo/1AWxhTQds
49tWOMzYERjGXkMh0odxDBlLnex1EIYzpwpSrEnDUr69B8XQpyjs6d41nGEs
7MbHu+BnOA2lUJIf7uhdt7DXZtjCWEd+uIN3+RgffZIIPtW3RVBcHHLK3PpL
H8Bh1hzKj23AHGzOLgw5Zq5N5oyToJKzDII70APbecPPkiEmjI2VjK2C2ax5
vSj4QF+4h3u9jc2F8CZnegMasDlDreAsl+E/5kTF4c19+9XYXAMjsDlcP/B7
TyacofcsxNRguMi6X2ECe9XCg5ypPwzDRhX8DtehlbVLMiGGemMpP+RSLbYm
wGW+dWfCHbyLMWasjeWMNemQU+bWctYug+WsXQFn+NYF5exRkRtiwFjwzJ7d
mDF2qmA4TMAH4wuDj/TVffa4BxuwvRHKsT0QVjB3JZxi7kkYAAMLQwwYC5fg
MmxnzbZU0FC1VJ/om1ex+RqUcqYS2MvYvlSwoa23fBO4pObAWsbWFYacrYtz
wtwwZ81dY9bY7eed4Cpj16Afdy+D+fxeABv41g63mdsDF7BxPn4D36KGO1Vn
g0aoFc2MLVIrmNsAfTlDn8KgQWrRYuY2ww7GdkILey12P+YuyAQNVAvVMLXM
GmAtuMbdryfCGTyLGqaW3eOMd+Ehvj2sjmB7dzZortp7Cxs3Y5/oGzVdbVdj
1VpzOopz1tw9w127jFHONCIdap61zzfxbY6qcelQo6xVUxibDO+w97uJ4DN9
Z82wdjjmtxH8HpkKNWBaXJOsTd8z9xjkM6cAfkQrjkM3Z7iSFzRYLa7mzjVQ
BqWZUAOthWqEWtEbwwUhJo3NCqjMhhguj2PG2KmMv/lmvp052JuLeaGWP8EZ
Hk+EHDFX+nPmfvA0Y8/AyzA1Ecb8Zo6Za8aIsWLNtfaqQWqRGtkZx7yxb8wa
u+a0uX2Bu56HI6w9mhdy0FxcBM3mBrZOxZqv9hsDxoI5aq7ag9iLtGCzNRVq
nrVvnTWwIPQk9ib3ufvfuUGT1ebp1pTC4OPuWAPVwm840z74gzP9Cef4fRb+
4fe/OaEGW4vVULVUTVabx7L3uFTQRLVRDVPLKjhLOSQgmR/O5NmsAdYCNVPt
nBr71hw0F30D38IaZ62zJ7E3MUfMFWuqtdUc2hHnmLmmJqqN1jBr2VnOdCYV
YqYszsn6uOZZ+6xZ1q7WuJarIWqJOWquWtOt7Rv59lEy+FhfW1OtrSlsJGEk
355Khpwxd9QUtaWeO9bFPYa9Rjs227JBE9VGeyB7IW1oSxvaquB3ZSZontpn
T9IW1wBrgT2UvVQKW8lsyCFzyTf2re0Z7R2r4t7GN/At1GS12Rw2l80pc0vN
UruMQWNRm9q2p7gRa7xab02yNpXEtdue0N5wHHs/lwwar9bbk9mbrWFsdTJo
qtpqDbQW2rPau26Oe0c1Sq1qjmNfn+k7exJ7EzVSrSyOa78ap9ad5K1OFIUa
b63/AF+9nwiapDaZs+auGqlW2jPaO9qD24vbQ9tL2+Pb63sH72LMGDtqktqk
JqqNyTiW7XHtda0x1hpz1Fw1B8wFz+BZ7IHthe0J7A3MIXPJHDPX1Gy12xwz
1+yR7JV+YOx4IvQQ9hL2lPaWaqhaas9h72GMGCv29Pb2LfH/Hv6P4v8q9jT2
NmrMhfh/BP9XsIZZy9zDvewZ7B3sMe01/Z/A/w3UCLVCH+vr/wHBOLeT
          "]]]}, 
       {RGBColor[0, 1, 1], Opacity[0.01], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwtl3tollUcgF/dvu3bt33zNjUovGxqUJBu06Ag70FBbk6DAstbUJC6qVCQ
d6Eg70JB6mZBQerUbpC6aZDh1GmQ4tSpgZKXqUWRl3mJoufZOX888HLe33vO
7/zu7+DZdVNquydJchJy4XwqSc5BSX6S9IWd0AjzWVsAY7JJMhoaM7yDkQVJ
UglNyDRDfl6S5MEKNlsJ63m3Dn7MSZKD0IBMPXzO8xcwEtlK6ItMv4jPN/j2
JuQhm4JRPD8N4zlzHMxCl9mwC9md8DCdJP9AP/eCBcguhAtwHv7lkv/BY5z5
aE5Y8506qVsz3+yHc9AOpexVBiXQB/Zz1gFo5HkHLENmOWQ4uwAOsvdPkEYm
H15gzxehWw+MCkfRuRVuY7tbMAmqssGm2nYde62HE3zzC1SxZzV8yrut0Mq7
Y9CBLa5BA++2wkbusCE33Nm7n0SHE9DBu+twmjPaYBAMhinI1MAQ3g2NZ3iW
e7r32cIkOQNX4RoML06Sp2BuUZLMg3Zl8oNP9e0lbHERfoc/4A10mQ0VyFTC
Vs5qyAsxZCw9wrv+UI5sBQxVF/iUtc+gjbVT8DV3+AZKOXMwrMV262A1d1gF
r7M2HXqhW094zTVoR+Ys/M3areLgU31bwlpf2IvMHugFvbNBZ3VfgW4roQ97
9oYZyM7MBJtr+1xkUnCP504Yy/O4dJBRNodvcuFZfPcM3OcuD3KDT/Xtt6x9
B3nIpuA4736GFfh2eSrEkLF0g+frqWBDbVmPD7bAZvbeAgvRcQEc4uwWmMXe
M+EV9n4VslAE7ex1riDkkLn0BGtP5gSf6Btz1FxVRllz0Fycz3MdXED2VzjD
mafhMByBOnSvzQQbaas7cBuuwNWicGfvbo6Za9YIa8UhfNECDTzXZ4JP9e1y
zloWz/RsfaSvKqASOtH1LqzhrmvT4Y7etR826g8zeTcDJkMNfMy7j2AK76am
gk/0zWT2qsmEHDVXx3PWhILgU327HtkNMIu1mVEndVuK7ZfAdJhRGGqIteQA
d/wB3uKsN2ELe9Sng4219XhsOSEvxKyxO5xYG5ENd/Au5pC5tIx3SzMhJo3N
seg6Bq6x1gHlPI+Abtiue3GIUWN1J3vvgjbWTsEcvp2bDTLKfgir4CG6PMgJ
NcRaYk2yNlkDrAXaQFtYc6w9x3huLQgxaqxqY21tTBvbu625qWAjbWWOmqvW
AGvBV9hkN1xk7RL0pPb1gCb2as4EndX9KHdohZeRnZobYt7Y14bass5YzAs1
09o5gD0GwlLeLUkHn+v7SdzxJfgENkE1tqoyNvFVCXyAzu/bZ9h7lLllDYU0
ZxbAWmTWRB/r6zns8XZxsLm2v4JNL8M0awzkaGPYBtthCTKLi0KOmqvmjLlj
TpvbfjMt6jgp6qiuLXx7OPpM3w1kbVBx6Fn2rnt8ez/2OHvddO+cDjbRNuO4
+/j8kJPmpjlpbj7Ot8PgGN8ch6PodAS2I7PDPGCPapiIzPO5wSf6xjt618nI
VkM5VMA2dPqyONzZu9eyNg+eY200DEGHsvzgQ33pmZ6tjbX1Zr7ZlA01xFpi
z7f3T0BmIpSxVynkQqow6KRuziDOIoNj73qPsxZBJ7rezYQcMVes8db6Rcgs
zoacMXfsufbeVNzbb/zWHmGvMGfaYk2yNtmT7c0zYq5rA22hjupqTbG26BN9
ow21pTk9PM5Ezkbj+GZsYeiZ9k57ZlfvLAy2s2fZu5RR1ppubd/Hc1NhiPEB
MWfMHWPUWDXnzL27yNyBvX4Dezjj++LQ8+x9Q6AszkjOSs5gzmL2WHvtPXK2
syDkqLnaO/ZCfayvrWnWtj/J3b+6hxpmLXOmSccZyFnIHm4vN2YHRh32xJgw
NswJc8MeZa/aB03pMCN2zYrosL8gzADOAvZUe6s1wdrgTOls+S42fycn9Dh7
nTNZaZzJnM2GocvQVKjB1mJjvCvWsVFjYZiRnJXsIfaSVbE2OjM4O6xBdnVR
qAHWAmc6Zzt7rL3WmdLZ0hnGWcaebe8uir3WGcBZwBnVWVWf6Btzztxzxuqa
tVJB15rYq5whG6NNtM0G1jbGnDa3rXHWuu2x1tyOvbYqzo7WKGuVMW/s/8bz
5eJQI6wV86DW2QYdb+aEmdbZ1jM8yxnLWcsZ31nfmmHtsGZaO52xVsca1RJn
SGdJa6i1VJ/oG3PS3LSH2cuuxlnAnDf37an2VnVQF3uyvdmabG22R9gr7Dn2
ntqou/8I/iuYE/viTOps6kzbEWPYWPbO3t2ab+2vjLNDWcwFY8BY6PJxUahp
5bHmWHv8p/DfwhpmLTMmm+M/hf8W/wODUbjZ
          "]]]}, 
       {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwtlnmIlVUUwL9m3nvz5o3zzGW0oHAdDQrScTQoyGVUKMg9KLDGJSjIbRQK
UscFCnIXCnIPCnJvg1xGgwx3hQx3DZJcxiWKzD2q32/O98cPPu537znnnnu2
LhOmjppSkiTJMcjAmrIkWQ2flSbJ57CjVZJshwMVSXIQPmbtIxidTZIxsIm1
jbCQPYtgfCFJxkGG7yzMQNZ02JtPkn2wirWVsIMzO6GIrEo4U54kZ2Ej/za0
CpnKXg2rKuKMZ+uQNQhmI6sxHzKUdQpOw+PIegzOcZnzmbCpxTb+LVYnZ3bA
MmQsh/nsmQfVuSTpkYs7etcWG2Aad5kK7fhuD6fgJOzXJ9CrmCRPw2S+p3h/
ZI6DkTAKluGjpXAdm26Uhg3aMhsaYS13XgO32XsH+iPreZiFrNnwD7Y+gDXY
thZuc+ZWRbyJb5NnrSwXd/Au09HVAEtYWwonK5PkBHSBrnCOf2ehCl0dYABr
/WETd9wM6/i3Fg5x9jA8g8x+0J291dCXtVrogM0d4RY2/A2X4DIsQcZi6IXM
3nCI74PQqXWSdG4dPtSXxoix0o49beEL7ry+GDKUtYK1lTAfnfNgMzq3QD9s
6wvv4Mt3YRy+qIcRMBJO4Kvj8BVB/XVJxIix4pv4Nsu5yzLogKyO3pE7HIIc
tpRBN3R3bRV38C76SF/15MwTmYgZY0cd6pqILROgXh1whO/D0Izsq7mISWPz
MlyBXaw1QZWyC5Ej5spIvkfBf9j8L+xG1/cwh7VG2IYvtlfGnbzbr+i6ADN8
c7iLznvZWPPfDfg9HzKU9Qdn/iwJGdtSn+v7+/y7l4mcMXeegiehDhsHw118
cwe2sudLGApDMhFDxlIdtg0qhA/0hTFirIxhz8vGDXfuBlnIVYRP9E05/wqZ
iJFeaQwaiz9j4zFoRudVGAx18BM2HYMtfG8uj5wwN2rR3Qe6QzUcReaRTNQU
a4symtM7eBdz0Fw8gw1n4QQxdxwmoXsyNGH7Tmhi7y4Ywp0GZ6PmWfvaEMMP
w050NcFbrL0Jq7BlNfzC93mYy5l5kEFmKayHDZURo8ZqDfSBEmQ91DpyxFyZ
hC1vQ29iosbc4sxNGAbD4YJvXxIxa+zmUt/e5uydQsisSX2u741pY1ufHE1r
orXRGDPWRqBjuLWNvVXmEHcYkY83Hpq+uW+vTnXPReccmAYN5VEzrZ3r2PMp
1CPrdRiIrEEV8Wa+3XD2jkhrvLXeGmItaUxroTlsLi/kjgsqQ4ayXuXsK9AR
Xz6SjZpmbfuGtW9LQ4e6rMHW4obUNt/At9jG2ndwGh+cKcSbNqUxZCwZo8bq
VWRfy0bOmDvWHGuPPtW3A7wT1LLWpyxqrrW3mX9XCvGGvqU11Fq6F537ipGT
5qY+1bebObupLGq0tXoFez5xL3feXxlv7tuXsFYKE7BxfOpzfT88jQVjxFix
JlmbrDnWHmuktfIgOg7Bdf5dy0ROm9tT8dWUiugx9pq77L0DA7FtUD5s1nZj
ztjLsZbNRw+zlzUj80pZ9Cx7lzlgLlxk76XKyAFzYRoyG3LhU307ERvegBex
4QUYxb/RudCp7pw+hQmsjc/Fm/v25pC5VEBXBczEtveKUROtjd052w3aQ1U+
fKbvPoQFxfDpvrQH2gvtQZ3SHDaXN6S5aQ+zl+1G1y5jDVsfhbbIaAOvGZOV
MfM4+7yPbR+URg2zlm1hbWsao8bqs/x7DmZxZib8hoyLsAkbN8Ic7jg3Fz3f
3r+ItcXQB2ry8Sa+jTrUZc+z9zmTOZtZk6xND/i+Xxo9297tG/gWY7W5GDZp
mzFkLKlT3c5kzmY9WKs2j9nTMxs139qf57s8GzOMs4w2a7t73GvNs/bpE31j
DbWWDoOX0pg2tu3R9mrf1Lc1Jo3NWnT2tRbwfRqW8L20PHpiVVrTre1T0Tkl
HzOps6kzkbPRqnQ2rE5rvz3IXmTMGXvOiM6Ka1hbXYiebm83xow1ZxpnG9/I
t7IH2guNMWNtD7Xux5LoCfaGztylSzFm2L3pDOks6YzirHIynQ3d0zmtOdYe
ZzZnN3Pe3HdmcnYyJ81NZ8aW2bEicnMPtvxQGjOCs4JvODb1qb71TXwbc8hc
MmaMHX2oL52hnKXsOZl05nP2M2fMnao0V4xxY90eaC80h8wl7+zd69LeuyDN
JXPAXPCNfCtt1FZz2ty2JlobjXFj3Z5ib7nJ91/FyAFzwZnS2dKaYm2xJ9gb
rCnWFmu0tdoznj2QztrO4M7izlj1aUwYG+aouVqT5o4znbOdM5GzkTFmrLX0
9LKoOdaelpgvj55n77Pn2Hus8dZ6a7q1/X/uHrwd
          "]]]}, 
       {RGBColor[1, 0.5, 0], Opacity[0.8], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
2JtZM62d/wNhwr1j
          "]]]}, 
       {RGBColor[0, 1, 1], Opacity[0.01], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwtlnmIlWUUh79m5t47c+eORi4zGhRuowYFqTMaFOQyFhSk4xIUaM5oUJC7
kFAuo1CQu1CQe1CQexukjhpkuI1GGZproOQyLlHkrtHzeL4/Hnjv/d7tLO/v
nC4Nk+onFiVJ8guUQD6bJGUwjx/z4YVMkgyFj4uT5BOYUp4kk+H5NkkyEE4x
9yT0KE2SaljAfx9BO2gPw+AV+BRWwBsVSTIWjjI+BnfZ+w7Us3YETCtLkqlw
hrP+gN586wVvMX4bWnJJchBqmdMf9rHHXrjOnjfgApyHMfw3FrZwt83ZWOPa
cQXuAIOxYQgcYc9fYTh71cMexj/CTtbsgnv44C48xn+PQ1U+SSqhBmrzYbO2
d4RKKOeueXiJuS9DE3vMhemcPQNOsuYE/OudYSZz3oVG5oyHncxphp3cZRds
Y873bWKNawdz90FwiXErrOfbl5DB5iwsZc2SsrBBWyqxsSMs4NtCOMcdz8I1
+Ks0bNb2S5zZCoe4Qwvk+FZaGj4ck8bQWBbwRTlswcatmbBBW95n71nwKN86
Qz/W1sCrjEfDZeZegW7M7ZrapG29OLtnWcTYWC/l7CXwLXf/Du4wvg2D2WsI
3MbmW/nwgb7QB/qiuC352zZiamyfZu8+UItNNbnIaXN7M+NNMI2zpsNV7nYF
nuSsp2Aze23KR06ZWyOZOwI2cvYmGM9dG2EuNEGGOSVpzpv7tWluVENP6Mqd
usAj0A4a2GMcTIYpac6YO7u4y27oh019C7Gne3fHp93gPX0M+xnvg2Pwe0Ws
ca0+1/ejGY+CD7DlQ1jM3ovghLmXCxu0xZw0N425sV+DLWthNd9WwVS+TctG
DpvLIxmPykZOmpubYYtjbGzOx5vz7RlzY2/MjJ05Yq7oM31nDI1lqTGBznzr
BM9yxnPFkSPmygRseRM2sOd63zY+uQlfMOfz4tAktUkbtbU/4wGZyEFz8U98
dR7m8V8TFDi7Am5z5q1c+ETfNKWxVHPUnhmcOb0kNEltOoc4noUWvh2C+5x1
D9bybV0mcsbcqcPWoTCfveflQnPUnrn4Zg5s407bYSh71JWF5qg9K/lvhbHE
tuNQxtxSOMwdfk5x3Ja5D8M1uFocmqv2+kZ9q0u5y7JM3NG7uod7reEuq3Ph
M333DbZ8XRQaoBacYu5JqGWv/tnQBLVBG7RFDVaL9aG+XJFquTloLr5ojYBT
fDsNZxiftpCw5iF1lTnD4B3WTIR6bBxeCE1Sm8xpc1sf6av2ae2wRlgrzDlz
74FGQI61WRjB3JH50LxMmiPmyhzuPhsauHtjLt6gb3EI1OlbzsyVh4aoJdaM
6+kdvWtP1lTnQrPUrsuc2WrewB34Dd8dKYr//NaDu3SHxey1BDoy7gANjBth
I+MNsJEzN0Ez7IDjcAIOGzNoxcbL2aip1tZZrJkN/2HLfVjDt7XZqMnW5p6M
e1nX2ONAeXpGIXLEXDGmxnYx3xbBbJjjmDkLC/Gf3yZw9vhMaJLaNJU7T8mH
Ddoygjn10A9q0j3caxw0lIdP9M1W7vRVScTc2O9m/ENJaNSxVMPUMjVFbRmC
j+vgGGceLY2cNDdr0rN6QDVc5A4XCvFGVqZvyLfUHjpUxBme9Tdr/ymKHDPX
1FC1dDnflkEVZ3aCvqzpAwNhUEX0IPYiExlPqoiYGJuLcKk8YmJsrHnWvro0
l/SZvqtO72pOmVv6QF+oGWpHu1T71Ui1ckuqncbU2Fbhg0rozZonSqKGWcsO
MrclHzE21uv49llJ9CT2JvYg9iLWMGuZNdPauZo7rIKV2L6qEDln7j2IeSF6
OHs5a4S1Qk1UG/dw15+KQnPVXmumtdM37dv2jt61IY29OWFuLOe/ZbmIobFU
w9VyeyZ7p1vMuQnbOXtHIXo8ez01Q+2wJlmb7FnsXdT4G2nMjb0xM3Zqsto8
mf8mFaIHtRedktZSNU6tM4bG0h7DXkNNVpvtyezNfFO+LX2kr6wR1go1SW3a
x157YQc0l8ab8+3ZM9g7GCNj5Zv17XbizlVl0UPYS9iT2ps+6OFyoelq+344
UIiexN7kgQ2F0Gy1+2qq7cbM2O1ItcKe197Xmmxtfp3xa8VRM62d9pT2lt7Z
u6t5DWnPYu+iz/W9GqFWmFPmlj2JvYkapVapqWqrb9K3qYaqpdYEa4M2auuB
1BY1Qq1YA6vzoYFqYYf0bdqT2pvaU9hbWHOtvfag9qL24PbizamvzSFzyZpq
bbUHtRc1J81Na6a18xl8PKAkNFqtVnPVXt+0b9sewF7Annpm2rPbu1uTrE32
HPYe7uFeg1ItsOez97MHtxfXx/r6f5Ddvqk=
          "]]]}, 
       {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
        GraphicsGroup3DBox[{
          Polygon3DBox[{{695, 2, 710}, {710, 2, 2390}, {691, 1, 2263}, {709, 
           2, 2317}, {979, 2, 2374}, {1939, 1, 2236}, {692, 1, 677}, {2374, 2,
            709}, {1895, 1, 692}, {2263, 1, 1939}, {2275, 1, 691}}], 
          Polygon3DBox[CompressedData["
1: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
Imqdml8We/Km2JPbm/8Pk4Ok/A==
           "]], 
          Polygon3DBox[{{1412, 1411, 2317, 2, 695}, {2390, 2, 979, 2386, 
           2387}, {2249, 2248, 2236, 1, 1895}, {677, 1, 2275, 2287, 
           2288}}]}]}, 
       {RGBColor[1, 0.5, 0], Opacity[0.8], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
          "]]]}, 
       {RGBColor[0, 1, 1], Opacity[0.01], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
WRvpA33RHm1fyL+8XRI0Rq3pH7XMPsf+B51aunE=
          "]]]}, 
       {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwtl3mwlmMYxt/3PZ3vnO875xSiXWiSOqVJkyRN0zSppEmTdoT2kGhHaFF2
7SFNWqdpTCpZh1QakxEtzGCipDENKdJgkha/X3d/XHOu53ue91nu5brvc9Xg
Mb0ezJIk2QWqgFnFSXJHmiQNwKGiJFlfniQ9WdAS7CpLki2gBbwHWMbcx6AX
vA34j7kJBfaB9wZfMje1apK8BL8HXFORJIMZPwd/FBxhfANrOsBfAA8z9xTf
57L4xm/rsGcdeCfQh7Wd+G0WvBEYz9zr7PEQvD/4jfmbGQ+FDwat4TWqJckK
+CpwNbw+j6zkbUPAJ7y1aY5z4W3A08xtYM/mWbzZty/GBjWZ6wW6sf5N9hzL
3J0gD5/Lmu5ZfOO31/sG+JWgC+M2oD68AegL/55vJsMngi/gt7P+mSxsom18
k2/rCsax93LGzeDdwHTGtUG7LGysrRvxzXT4fWAs+zVmvj28AFYwX2DcFp6B
4YULNoQvAb/ybTm//cPbfgd78mEzbVcK5hfC5/peH+vrdXyzAD4I1KqIN/iW
eWCp/ipNkk3s9Q5oAt/Hb4uZGwmGVISP9NVAcKo8INem2lababvOYChzZYxr
weuBJmVxZ+/+AJjG+h9Y0zeLGDAWvIN30aba1jWuXQpOMp7BHo3hld65LGLO
2BtuzFZEzBq77uneZ4iPF3nLe8YI7ykDG40V7cXcrcRMC/iHoG9p+EzfGQPG
wk3ETE/mLgPPE0v9sGmShU/0TQkxuQx+KThWCB/ra2PcWNcG2sIkncP9jnLn
1vBWYH9Z+FTfGhPGxkbG5VnkgLlQyfgUZ58GNxYiho3l2mAt96nLbyfhM8E2
3tOHGNgPPwD6w9/itxnwZb65JEnO8v398NZgMm+vzh7F8I7gK8Yjme8HPwu6
svdm7jA+i5w2t39kv2eZawj+5NvP+P1r+F7wgXnBmYfgP3unfOzp3saosVqN
cWNtaczmQoPUInPEXFFj1BpzzFy7lvXNWDsX1OX+x8C6NN7oWz/CxouyyCFz
aQp3qp6Gz/TdDHy6Df6y7+HbcjDbu4IuzFUyng9vDtpx1ijQCj4K/MH381iz
Hb5eH5REDpgLU0FNzhvNeRcz1wM0K46cM/fMYXN5J2teycKn+nYg+7dM40zP
3ghWw6eBlbmIaWNbTVKb1Fi1tirYWggbaIsR4CDnbWW8Br4PtMUeM9njcfgO
sIG7j2J+CfxzsJPxCsYr4VvAeMY7uP8V8MNgQT6+8dtXQT/W/sv5U7J4g285
zR1qZJHT5rY5bW6rkWrlCb7fxbd1wJosbK7tHwMTcxEzxs5dYGFx5IS5YY2w
VmhTbTsHzIbv5vu1acSwsVzKb09kUXOsPcaosWqOmCtqltpljBqr+kzf/aJ9
zQdwBH7UfMkH5NpQW+oDfbEHpMzVYzxG24JF+G4B4yfhA8Ak7j8A9E6jxlhr
PMOzjFFj1Zpl7boI7C5EjbJWjQYVudAgtehusKo4YtBYNEaNVX2ib94wp0tC
A9QCc97c3876DvAiUIXz3wf10rijd93EnvemkXPmXlXG3eATwC258JG+6gPe
hY/gt0fSyCFzyRwwF4xZY3c4d3gtjZwyt8whc0mNVWsnM780jRg0Fn2jb12o
fpWEhqvll4ADhTjTs41RY9WYNrbVZLXZnDK3vgNN8xdsnkbOmDtqnFqnBqlF
2khbmbPmrjFurG8Gw0oj5ow9a4C1YC/jYWlojFqjD/RFozQaKjVVbTVHzBVr
hLVCDVVLR3D+wTRsrK3tSexNrKHW0rfZoz38L+2TD8hPqH/wn5jvBC8BDdj/
OOPO8G9AvXz4SF/lwXVFsca1XcE5fc+4DN4dXM7ZbVk/Dn7c+M9HjbfWq+Fq
+d/8TdOIGWPHmDF2vIN3UUPUEnPO3NPm2n4S6J8LTVfbfbNv907ezTt799sY
V6QRY8aaPZa9lj2HvccwcrxhFjXcWm5PZW/lb851Jqc7ZqExao013dquBqlF
1lhrrWtca89k72SPYq9iTBlb1gRrg5qpdtpD2ktac6w9+lzfH+b3c0n4SF/Z
Q9lL+Ztzvtm3+ybfps21vTbX9qsZt0ujB7UXtec+33unUQv1ob7UJ/pGTVVb
zSFzSU1QG+wh7CXUHLVHjVKr9KG+tEZbq/Wxvq4GBhVFDBlLZ7jvt1nUYGux
/wP4v4A9i72LGqVWqcFq8adgeWlAbg2zltkj2Cuo4Wq5Z3iWmqA2mMPm8vka
WSV6CHsJNVKttMey17JHt1e3R7FXseZYe8xBc9Eew17DmmRtUjPUDjVf7Vfj
1Xp7JHsl/2fxf5f/ARnRlMs=
          "]]]}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ckq7wEYBuDf4SiKYmtYuBCKoigWSrF1AZSxOOZ7OOapzPM5xiXlGP5m
jvEOzLOV6SmLp7f3q2/1JheV5BX/CIKgkZOwIHiXjw7PpPKp38pX0ongnjKO
ySSKCrKJoYpTconjHzW0sEwHbaxRSzchOsknnh16aWaEc4a45pI9GhmgkHoS
WQwPggXmmWOWGf7yh2mmmGSCccYYJcF/HQX008AuF1wxyBnDNNHDNlsksUkf
62zQxS9WaaWdJX5TzQqx5HBCJdFkUU4kGRxRyh0/SeOFGz7skyKfeOBN37Bj
iE222GaHXfbY54BD/nPEcdj3/l9BdlOB
         "]], Line3DBox[CompressedData["
1:eJwl0s0r3wEcB/CvH1lNbcXm4eLpQlnZheJCUZSVh4niYrKprbhypzzM88Mf
wG2Mu8fiL/Bws2FsmMeNydhDXnJ4vetz+Bw+vT8p9c0VTWFBEPSyHxKGPEIU
EEkRDynhES1EU8oTXhJLOfGMscAcVfzjmj9c0UYi3/jAElPsM8knktlglXVq
SOELu2xRRxpdNJBBP2/IZIa3ZHF3ZA4dEUHQSRfdvKeHXvroZ4BBhhhmhFFy
7TeTzTtmeU4jAzzjNd2k84ptvrJDKrWssMYmn/nIAdMsM8EeSbTzm7/c8J9q
5llknAQqiKOSp5QRQyuPeUEUxTygkHDyCeNS97+44Jyf/OCMU0445ohDvnMQ
uv+ZW0YnTh4=
         "]], Line3DBox[CompressedData["
1:eJwl0ElKAmAABeBf9CKSCQoJWVBQl8i1FuhGwaZLNEAZNGCjZcM+zaZrlWWZ
WR+4+BZv8Xjw4sXV3EokhLBAiIWQFJbYpEWBBNs88kCJNM/s8soeGQ7IUmGa
I5aZZZ157uzccsM1Ta64pMEF55xxygnH1JnTX2OGKodMUWaSfSao8cIOT6Qo
0qbDFmPkuWeDRcZ5i4bwTpcPPunxxTd9fhjwy5C/6Oi/f9PiLuM=
         "]]}, 
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0bcuBWAAhuH/aANREjVRkoNESUhY1IUNh8PRu7gAvd+AkpAou3p7emfg
EcMzfMM3vdH5xcRCJISwTVd6CD9GS1IIEdpIZpBhFhllnGUmOWWaVVI5ZJZN
1jlml322yeSSa7I5J5cO8imkmFKiVFBFDT3UEaeBAZq4zQjhjnseeOSJZ154
5Y13Pvjki2+a/RM00k89MWqpppJyyiihiAI6yeOCHG64IosdDtjjhA22mOOI
NNaY4YwpVphgjCVGGCKFdpJoJfw10GmEYYYYJMEA/cTpo5cYPXSn//f9BRPx
MvU=
         "]], Line3DBox[CompressedData["
1:eJwl0bcuxWEAxuGPBf9jYWPBwEJComxKoksY3IGjOxwXoNeFhMHpRbkwvXMR
nsTwjL/lfVvim7PJihBCgrsohKgyhAGqibNALVm2WeKcIXa5ZJ8V8qxxSJp6
yqxTZIRGkozRzDETtHHKFB3M0EUPffzGQvjhmy8++eCdN1554ZknHnngnl59
N51M084kJ7QyzhFNjLJBA8MUSFCijhQHrJJjmT0u2GGQMxbZIkOMeeaoop8a
ruydIk2GLDnyFChSosw1N9xG/z/9AQ+bNWw=
         "]]}, 
       {GrayLevel[0], 
        Line3DBox[{248, 3, 244, 229, 18, 33, 48, 63, 78, 93, 108, 123, 138, 
         153, 168, 183, 198, 233, 250, 213, 246, 238, 214, 215, 216, 217, 218,
          219, 220, 221, 222, 223, 224, 225, 226, 235, 251, 227, 247, 239, 
         212, 197, 182, 167, 152, 137, 122, 107, 92, 77, 62, 47, 32, 231, 249,
          17, 245, 237, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 236, 
         248}]}, 
       {Opacity[0.5], 
        Line3DBox[{727, 2542, 2557, 1204, 742, 2512, 2572, 1234, 787, 2527, 
         1594, 2332, 1264, 817, 1609, 1294, 847, 1624, 2347, 1324, 877, 2209, 
         1654, 1864, 2179, 1894, 1879, 2224, 1669, 1912, 2251, 1897, 694, 679,
          2290, 1927, 1714, 1999, 2362, 1984, 2497, 2482, 2305, 1699, 1969, 
         1399, 1684, 952}], 
        Line3DBox[{743, 1205, 758, 1235, 788, 1265, 818, 1295, 848, 1625, 878,
          1325, 893, 1355, 908, 1340, 923, 1940, 2150, 2135, 1370, 2618, 2588,
          2603, 2573, 1715, 953, 2438, 2000, 2180, 2030, 2453, 2015, 2375, 
         968, 2363, 698, 2306, 1400, 980, 2408, 2423, 2393, 1445, 1025, 1760, 
         1475, 1055, 1805, 1490, 1085, 2120, 1520, 1130, 1550, 1160}], 
        Line3DBox[{938, 1670, 1385, 1955, 1685, 2291, 2468, 2483, 1970, 2348, 
         1985, 1700, 1913, 2276, 2264, 680, 2252, 1928, 2225, 2237, 1898, 
         1655, 2210, 1865, 1880, 2165, 1850, 1640, 2195, 863, 1310, 2333, 
         1610, 833, 1280, 1595, 803, 1250, 2318, 1580, 2513, 773, 1220, 2558, 
         2498, 728, 1190, 2543, 2528, 713}], 
        Line3DBox[{1024, 1444, 1744, 2059, 1429, 1009, 1759, 2089, 2074, 1474,
          1054, 2104, 1789, 2119, 1804, 1084, 1834, 1114, 1519, 1129, 1849, 
         1549, 1159, 1579, 1189}], 
        Line3DBox[{1174, 1564, 1144, 1534, 2134, 1099, 1504, 1819, 1069, 1489,
          1774, 1039, 1459, 2407, 2437, 2422, 994, 1414, 697, 712, 2392, 2389,
          2029, 2467, 2044, 2194, 2014, 2452, 967, 1729, 2587, 2617, 2602, 
         2632, 1384, 2149, 2164, 1954, 937, 1354, 922, 1369, 907, 1339, 892, 
         1639, 862, 1309, 832, 1279, 802, 1249, 772, 1219, 757}], 
        Line3DBox[{1175, 1565, 1145, 1535, 1835, 1115, 1505, 1100, 1820, 1070,
          1790, 2105, 1775, 2090, 1040, 1460, 2060, 2075, 1745, 995, 1415, 
         2045, 1730, 1430, 1010}], 
        Line3DBox[{2633, 3068, 2648, 3083, 2663, 3263, 3278, 3473, 3293, 3308,
          3488, 3323, 3743, 3338, 3503, 2678, 3698, 3353, 3533, 3518, 3728, 
         3653, 3668, 3548, 2738, 3848, 3863, 2753, 3833, 2783, 3128, 2798, 
         2813, 2843, 2858, 2888, 2903, 2933, 2948, 3203, 2978, 3233, 3008, 
         3248, 3053}], 
        Line3DBox[{2722, 3112, 2707, 3382, 3397, 2737, 3787, 3577, 3412, 3697,
          3127, 3592, 3727, 3607, 3427, 3802, 3442, 3622, 3772, 2782, 3832, 
         3457, 3817, 3157, 2842, 3472, 3172, 2887, 3637, 3187, 2932, 3652, 
         3202, 2977, 3232, 3007, 3037, 3052}], 
        Line3DBox[{3038, 3023, 2993, 3218, 2963, 3188, 3638, 2918, 3173, 3623,
          2873, 3158, 3458, 2828, 3143, 3803, 3443, 3818, 2768, 3758, 3608, 
         3428, 3788, 3413, 3593, 3713, 3578, 3113, 3683, 3398, 3563, 3773, 
         2723, 3383, 3368, 2693, 3098, 2708}], 
        Line3DBox[{3067, 3262, 3022, 3247, 2992, 3217, 2962, 2947, 2917, 2902,
          2872, 2857, 2827, 2812, 3142, 2797, 3847, 2767, 3877, 3862, 2752, 
         3562, 3682, 3667, 3742, 3532, 3547, 3367, 3712, 2692, 3517, 3352, 
         3757, 3337, 3502, 3322, 3307, 3487, 3292, 3277, 2677, 3097, 2662, 
         3082, 2647}], 
        Line3DBox[{714, 2529, 2544, 1191, 729, 2499, 2559, 1221, 774, 2514, 
         1581, 2319, 1251, 804, 1596, 1281, 834, 1611, 2334, 1311, 864, 2196, 
         1641, 1851, 2166, 1881, 1866, 2211, 1656, 1899, 2238, 2226, 1929, 
         2253, 681, 2265, 2277, 1914, 1701, 1986, 2349, 1971, 2484, 2469, 
         2292, 1686, 1956, 1386, 1671, 939}], 
        Line3DBox[{715, 2530, 2545, 1192, 730, 2500, 2560, 1222, 775, 2515, 
         1582, 2320, 1252, 805, 1597, 1282, 835, 1612, 2335, 1312, 865, 2197, 
         1642, 1852, 2167, 1882, 1867, 2212, 1657, 1900, 2239, 2227, 1930, 
         2254, 682, 2266, 2278, 1915, 1702, 1987, 2350, 1972, 2485, 2470, 
         2293, 1687, 1957, 1387, 1672, 940}], 
        Line3DBox[{716, 2531, 2546, 1193, 731, 2501, 2561, 1223, 776, 2516, 
         1583, 2321, 1253, 806, 1598, 1283, 836, 1613, 2336, 1313, 866, 2198, 
         1643, 1853, 2168, 1883, 1868, 2213, 1658, 1901, 2240, 2228, 1931, 
         2255, 683, 2267, 2279, 1916, 1703, 1988, 2351, 1973, 2486, 2471, 
         2294, 1688, 1958, 1388, 1673, 941}], 
        Line3DBox[{717, 2532, 2547, 1194, 732, 2502, 2562, 1224, 777, 2517, 
         1584, 2322, 1254, 807, 1599, 1284, 837, 1614, 2337, 1314, 867, 2199, 
         1644, 1854, 2169, 1884, 1869, 2214, 1659, 1902, 2241, 2229, 1932, 
         2256, 684, 2268, 2280, 1917, 1704, 1989, 2352, 1974, 2487, 2472, 
         2295, 1689, 1959, 1389, 1674, 942}], 
        Line3DBox[{718, 2533, 2548, 1195, 733, 2503, 2563, 1225, 778, 2518, 
         1585, 2323, 1255, 808, 1600, 1285, 838, 1615, 2338, 1315, 868, 2200, 
         1645, 1855, 2170, 1885, 1870, 2215, 1660, 1903, 2242, 2230, 1933, 
         2257, 685, 2269, 2281, 1918, 1705, 1990, 2353, 1975, 2488, 2473, 
         2296, 1690, 1960, 1390, 1675, 943}], 
        Line3DBox[{719, 2534, 2549, 1196, 734, 2504, 2564, 1226, 779, 2519, 
         1586, 2324, 1256, 809, 1601, 1286, 839, 1616, 2339, 1316, 869, 2201, 
         1646, 1856, 2171, 1886, 1871, 2216, 1661, 1904, 2243, 2231, 1934, 
         2258, 686, 2270, 2282, 1919, 1706, 1991, 2354, 1976, 2489, 2474, 
         2297, 1691, 1961, 1391, 1676, 944}], 
        Line3DBox[{720, 2535, 2550, 1197, 735, 2505, 2565, 1227, 780, 2520, 
         1587, 2325, 1257, 810, 1602, 1287, 840, 1617, 2340, 1317, 870, 2202, 
         1647, 1857, 2172, 1887, 1872, 2217, 1662, 1905, 2244, 2232, 1935, 
         2259, 687, 2271, 2283, 1920, 1707, 1992, 2355, 1977, 2490, 2475, 
         2298, 1692, 1962, 1392, 1677, 945}], 
        Line3DBox[{721, 2536, 2551, 1198, 736, 2506, 2566, 1228, 781, 2521, 
         1588, 2326, 1258, 811, 1603, 1288, 841, 1618, 2341, 1318, 871, 2203, 
         1648, 1858, 2173, 1888, 1873, 2218, 1663, 1906, 2245, 2233, 1936, 
         2260, 688, 2272, 2284, 1921, 1708, 1993, 2356, 1978, 2491, 2476, 
         2299, 1693, 1963, 1393, 1678, 946}], 
        Line3DBox[{722, 2537, 2552, 1199, 737, 2507, 2567, 1229, 782, 2522, 
         1589, 2327, 1259, 812, 1604, 1289, 842, 1619, 2342, 1319, 872, 2204, 
         1649, 1859, 2174, 1889, 1874, 2219, 1664, 1907, 2246, 2234, 1937, 
         2261, 689, 2273, 2285, 1922, 1709, 1994, 2357, 1979, 2492, 2477, 
         2300, 1694, 1964, 1394, 1679, 947}], 
        Line3DBox[{723, 2538, 2553, 1200, 738, 2508, 2568, 1230, 783, 2523, 
         1590, 2328, 1260, 813, 1605, 1290, 843, 1620, 2343, 1320, 873, 2205, 
         1650, 1860, 2175, 1890, 1875, 2220, 1665, 1908, 2247, 2235, 1938, 
         2262, 690, 2274, 2286, 1923, 1710, 1995, 2358, 1980, 2493, 2478, 
         2301, 1695, 1965, 1395, 1680, 948}], 
        Line3DBox[{724, 2539, 2554, 1201, 739, 2509, 2569, 1231, 784, 2524, 
         1591, 2329, 1261, 814, 1606, 1291, 844, 1621, 2344, 1321, 874, 2206, 
         1651, 1861, 2176, 1891, 1876, 2221, 1666, 1909, 2248, 2236, 1939, 
         2263, 691, 2275, 2287, 1924, 1711, 1996, 2359, 1981, 2494, 2479, 
         2302, 1696, 1966, 1396, 1681, 949}], 
        Line3DBox[{725, 2540, 2555, 1202, 740, 2510, 2570, 1232, 785, 2525, 
         1592, 2330, 1262, 815, 1607, 1292, 845, 1622, 2345, 1322, 875, 2207, 
         1652, 1862, 2177, 1892, 1877, 2222, 1667, 1910, 2249, 1895, 692, 677,
          2288, 1925, 1712, 1997, 2360, 1982, 2495, 2480, 2303, 1697, 1967, 
         1397, 1682, 950}], 
        Line3DBox[{726, 2541, 2556, 1203, 741, 2511, 2571, 1233, 786, 2526, 
         1593, 2331, 1263, 816, 1608, 1293, 846, 1623, 2346, 1323, 876, 2208, 
         1653, 1863, 2178, 1893, 1878, 2223, 1668, 1911, 2250, 1896, 693, 678,
          2289, 1926, 1713, 1998, 2361, 1983, 2496, 2481, 2304, 1698, 1968, 
         1398, 1683, 951}], 
        Line3DBox[{744, 1206, 759, 1236, 789, 1266, 819, 1296, 849, 1626, 879,
          1326, 894, 1356, 909, 1341, 924, 1941, 2151, 2136, 1371, 2619, 2589,
          2604, 2574, 1716, 954, 2439, 2001, 2181, 2031, 2454, 2016, 2376, 
         969, 2364, 699, 2307, 1401, 981, 2409, 2424, 2394, 1446, 1026, 1761, 
         1476, 1056, 1806, 1491, 1086, 2121, 1521, 1131, 1551, 1161}], 
        Line3DBox[{745, 1207, 760, 1237, 790, 1267, 820, 1297, 850, 1627, 880,
          1327, 895, 1357, 910, 1342, 925, 1942, 2152, 2137, 1372, 2620, 2590,
          2605, 2575, 1717, 955, 2440, 2002, 2182, 2032, 2455, 2017, 2377, 
         970, 2365, 700, 2308, 1402, 982, 2410, 2425, 2395, 1447, 1027, 1762, 
         1477, 1057, 1807, 1492, 1087, 2122, 1522, 1132, 1552, 1162}], 
        Line3DBox[{746, 1208, 761, 1238, 791, 1268, 821, 1298, 851, 1628, 881,
          1328, 896, 1358, 911, 1343, 926, 1943, 2153, 2138, 1373, 2621, 2591,
          2606, 2576, 1718, 956, 2441, 2003, 2183, 2033, 2456, 2018, 2378, 
         971, 2366, 701, 2309, 1403, 983, 2411, 2426, 2396, 1448, 1028, 1763, 
         1478, 1058, 1808, 1493, 1088, 2123, 1523, 1133, 1553, 1163}], 
        Line3DBox[{747, 1209, 762, 1239, 792, 1269, 822, 1299, 852, 1629, 882,
          1329, 897, 1359, 912, 1344, 927, 1944, 2154, 2139, 1374, 2622, 2592,
          2607, 2577, 1719, 957, 2442, 2004, 2184, 2034, 2457, 2019, 2379, 
         972, 2367, 702, 2310, 1404, 984, 2412, 2427, 2397, 1449, 1029, 1764, 
         1479, 1059, 1809, 1494, 1089, 2124, 1524, 1134, 1554, 1164}], 
        Line3DBox[{748, 1210, 763, 1240, 793, 1270, 823, 1300, 853, 1630, 883,
          1330, 898, 1360, 913, 1345, 928, 1945, 2155, 2140, 1375, 2623, 2593,
          2608, 2578, 1720, 958, 2443, 2005, 2185, 2035, 2458, 2020, 2380, 
         973, 2368, 703, 2311, 1405, 985, 2413, 2428, 2398, 1450, 1030, 1765, 
         1480, 1060, 1810, 1495, 1090, 2125, 1525, 1135, 1555, 1165}], 
        Line3DBox[{749, 1211, 764, 1241, 794, 1271, 824, 1301, 854, 1631, 884,
          1331, 899, 1361, 914, 1346, 929, 1946, 2156, 2141, 1376, 2624, 2594,
          2609, 2579, 1721, 959, 2444, 2006, 2186, 2036, 2459, 2021, 2381, 
         974, 2369, 704, 2312, 1406, 986, 2414, 2429, 2399, 1451, 1031, 1766, 
         1481, 1061, 1811, 1496, 1091, 2126, 1526, 1136, 1556, 1166}], 
        Line3DBox[{750, 1212, 765, 1242, 795, 1272, 825, 1302, 855, 1632, 885,
          1332, 900, 1362, 915, 1347, 930, 1947, 2157, 2142, 1377, 2625, 2595,
          2610, 2580, 1722, 960, 2445, 2007, 2187, 2037, 2460, 2022, 2382, 
         975, 2370, 705, 2313, 1407, 987, 2415, 2430, 2400, 1452, 1032, 1767, 
         1482, 1062, 1812, 1497, 1092, 2127, 1527, 1137, 1557, 1167}], 
        Line3DBox[{751, 1213, 766, 1243, 796, 1273, 826, 1303, 856, 1633, 886,
          1333, 901, 1363, 916, 1348, 931, 1948, 2158, 2143, 1378, 2626, 2596,
          2611, 2581, 1723, 961, 2446, 2008, 2188, 2038, 2461, 2023, 2383, 
         976, 2371, 706, 2314, 1408, 988, 2416, 2431, 2401, 1453, 1033, 1768, 
         1483, 1063, 1813, 1498, 1093, 2128, 1528, 1138, 1558, 1168}], 
        Line3DBox[{752, 1214, 767, 1244, 797, 1274, 827, 1304, 857, 1634, 887,
          1334, 902, 1364, 917, 1349, 932, 1949, 2159, 2144, 1379, 2627, 2597,
          2612, 2582, 1724, 962, 2447, 2009, 2189, 2039, 2462, 2024, 2384, 
         977, 2372, 707, 2315, 1409, 989, 2417, 2432, 2402, 1454, 1034, 1769, 
         1484, 1064, 1814, 1499, 1094, 2129, 1529, 1139, 1559, 1169}], 
        Line3DBox[{753, 1215, 768, 1245, 798, 1275, 828, 1305, 858, 1635, 888,
          1335, 903, 1365, 918, 1350, 933, 1950, 2160, 2145, 1380, 2628, 2598,
          2613, 2583, 1725, 963, 2448, 2010, 2190, 2040, 2463, 2025, 2385, 
         978, 2373, 708, 2316, 1410, 990, 2418, 2433, 2403, 1455, 1035, 1770, 
         1485, 1065, 1815, 1500, 1095, 2130, 1530, 1140, 1560, 1170}], 
        Line3DBox[{754, 1216, 769, 1246, 799, 1276, 829, 1306, 859, 1636, 889,
          1336, 904, 1366, 919, 1351, 934, 1951, 2161, 2146, 1381, 2629, 2599,
          2614, 2584, 1726, 964, 2449, 2011, 2191, 2041, 2464, 2026, 2386, 
         979, 2374, 709, 2317, 1411, 991, 2419, 2434, 2404, 1456, 1036, 1771, 
         1486, 1066, 1816, 1501, 1096, 2131, 1531, 1141, 1561, 1171}], 
        Line3DBox[{755, 1217, 770, 1247, 800, 1277, 830, 1307, 860, 1637, 890,
          1337, 905, 1367, 920, 1352, 935, 1952, 2162, 2147, 1382, 2630, 2600,
          2615, 2585, 1727, 965, 2450, 2012, 2192, 2042, 2465, 2027, 2387, 
         2390, 710, 695, 1412, 992, 2420, 2435, 2405, 1457, 1037, 1772, 1487, 
         1067, 1817, 1502, 1097, 2132, 1532, 1142, 1562, 1172}], 
        Line3DBox[{756, 1218, 771, 1248, 801, 1278, 831, 1308, 861, 1638, 891,
          1338, 906, 1368, 921, 1353, 936, 1953, 2163, 2148, 1383, 2631, 2601,
          2616, 2586, 1728, 966, 2451, 2013, 2193, 2043, 2466, 2028, 2388, 
         2391, 711, 696, 1413, 993, 2421, 2436, 2406, 1458, 1038, 1773, 1488, 
         1068, 1818, 1503, 1098, 2133, 1533, 1143, 1563, 1173}], 
        Line3DBox[{1011, 1431, 1731, 2046, 1416, 996, 1746, 2076, 2061, 1461, 
         1041, 2091, 1776, 2106, 1791, 1071, 1821, 1101, 1506, 1116, 1836, 
         1536, 1146, 1566, 1176}], 
        Line3DBox[{1012, 1432, 1732, 2047, 1417, 997, 1747, 2077, 2062, 1462, 
         1042, 2092, 1777, 2107, 1792, 1072, 1822, 1102, 1507, 1117, 1837, 
         1537, 1147, 1567, 1177}], 
        Line3DBox[{1013, 1433, 1733, 2048, 1418, 998, 1748, 2078, 2063, 1463, 
         1043, 2093, 1778, 2108, 1793, 1073, 1823, 1103, 1508, 1118, 1838, 
         1538, 1148, 1568, 1178}], 
        Line3DBox[{1014, 1434, 1734, 2049, 1419, 999, 1749, 2079, 2064, 1464, 
         1044, 2094, 1779, 2109, 1794, 1074, 1824, 1104, 1509, 1119, 1839, 
         1539, 1149, 1569, 1179}], 
        Line3DBox[{1015, 1435, 1735, 2050, 1420, 1000, 1750, 2080, 2065, 1465,
          1045, 2095, 1780, 2110, 1795, 1075, 1825, 1105, 1510, 1120, 1840, 
         1540, 1150, 1570, 1180}], 
        Line3DBox[{1016, 1436, 1736, 2051, 1421, 1001, 1751, 2081, 2066, 1466,
          1046, 2096, 1781, 2111, 1796, 1076, 1826, 1106, 1511, 1121, 1841, 
         1541, 1151, 1571, 1181}], 
        Line3DBox[{1017, 1437, 1737, 2052, 1422, 1002, 1752, 2082, 2067, 1467,
          1047, 2097, 1782, 2112, 1797, 1077, 1827, 1107, 1512, 1122, 1842, 
         1542, 1152, 1572, 1182}], 
        Line3DBox[{1018, 1438, 1738, 2053, 1423, 1003, 1753, 2083, 2068, 1468,
          1048, 2098, 1783, 2113, 1798, 1078, 1828, 1108, 1513, 1123, 1843, 
         1543, 1153, 1573, 1183}], 
        Line3DBox[{1019, 1439, 1739, 2054, 1424, 1004, 1754, 2084, 2069, 1469,
          1049, 2099, 1784, 2114, 1799, 1079, 1829, 1109, 1514, 1124, 1844, 
         1544, 1154, 1574, 1184}], 
        Line3DBox[{1020, 1440, 1740, 2055, 1425, 1005, 1755, 2085, 2070, 1470,
          1050, 2100, 1785, 2115, 1800, 1080, 1830, 1110, 1515, 1125, 1845, 
         1545, 1155, 1575, 1185}], 
        Line3DBox[{1021, 1441, 1741, 2056, 1426, 1006, 1756, 2086, 2071, 1471,
          1051, 2101, 1786, 2116, 1801, 1081, 1831, 1111, 1516, 1126, 1846, 
         1546, 1156, 1576, 1186}], 
        Line3DBox[{1022, 1442, 1742, 2057, 1427, 1007, 1757, 2087, 2072, 1472,
          1052, 2102, 1787, 2117, 1802, 1082, 1832, 1112, 1517, 1127, 1847, 
         1547, 1157, 1577, 1187}], 
        Line3DBox[{1023, 1443, 1743, 2058, 1428, 1008, 1758, 2088, 2073, 1473,
          1053, 2103, 1788, 2118, 1803, 1083, 1833, 1113, 1518, 1128, 1848, 
         1548, 1158, 1578, 1188}], 
        Line3DBox[{2634, 3069, 2649, 3084, 2664, 3264, 3279, 3474, 3294, 3309,
          3489, 3324, 3744, 3339, 3504, 2679, 3699, 3354, 3534, 3519, 3729, 
         3654, 3669, 3549, 2739, 3849, 3864, 2754, 3834, 2784, 3129, 2799, 
         2814, 2844, 2859, 2889, 2904, 2934, 2949, 3204, 2979, 3234, 3009, 
         3249, 3054}], 
        Line3DBox[{2635, 3070, 2650, 3085, 2665, 3265, 3280, 3475, 3295, 3310,
          3490, 3325, 3745, 3340, 3505, 2680, 3700, 3355, 3535, 3520, 3730, 
         3655, 3670, 3550, 2740, 3850, 3865, 2755, 3835, 2785, 3130, 2800, 
         2815, 2845, 2860, 2890, 2905, 2935, 2950, 3205, 2980, 3235, 3010, 
         3250, 3055}], 
        Line3DBox[{2636, 3071, 2651, 3086, 2666, 3266, 3281, 3476, 3296, 3311,
          3491, 3326, 3746, 3341, 3506, 2681, 3701, 3356, 3536, 3521, 3731, 
         3656, 3671, 3551, 2741, 3851, 3866, 2756, 3836, 2786, 3131, 2801, 
         2816, 2846, 2861, 2891, 2906, 2936, 2951, 3206, 2981, 3236, 3011, 
         3251, 3056}], 
        Line3DBox[{2637, 3072, 2652, 3087, 2667, 3267, 3282, 3477, 3297, 3312,
          3492, 3327, 3747, 3342, 3507, 2682, 3702, 3357, 3537, 3522, 3732, 
         3657, 3672, 3552, 2742, 3852, 3867, 2757, 3837, 2787, 3132, 2802, 
         2817, 2847, 2862, 2892, 2907, 2937, 2952, 3207, 2982, 3237, 3012, 
         3252, 3057}], 
        Line3DBox[{2638, 3073, 2653, 3088, 2668, 3268, 3283, 3478, 3298, 3313,
          3493, 3328, 3748, 3343, 3508, 2683, 3703, 3358, 3538, 3523, 3733, 
         3658, 3673, 3553, 2743, 3853, 3868, 2758, 3838, 2788, 3133, 2803, 
         2818, 2848, 2863, 2893, 2908, 2938, 2953, 3208, 2983, 3238, 3013, 
         3253, 3058}], 
        Line3DBox[{2639, 3074, 2654, 3089, 2669, 3269, 3284, 3479, 3299, 3314,
          3494, 3329, 3749, 3344, 3509, 2684, 3704, 3359, 3539, 3524, 3734, 
         3659, 3674, 3554, 2744, 3854, 3869, 2759, 3839, 2789, 3134, 2804, 
         2819, 2849, 2864, 2894, 2909, 2939, 2954, 3209, 2984, 3239, 3014, 
         3254, 3059}], 
        Line3DBox[{2640, 3075, 2655, 3090, 2670, 3270, 3285, 3480, 3300, 3315,
          3495, 3330, 3750, 3345, 3510, 2685, 3705, 3360, 3540, 3525, 3735, 
         3660, 3675, 3555, 2745, 3855, 3870, 2760, 3840, 2790, 3135, 2805, 
         2820, 2850, 2865, 2895, 2910, 2940, 2955, 3210, 2985, 3240, 3015, 
         3255, 3060}], 
        Line3DBox[{2641, 3076, 2656, 3091, 2671, 3271, 3286, 3481, 3301, 3316,
          3496, 3331, 3751, 3346, 3511, 2686, 3706, 3361, 3541, 3526, 3736, 
         3661, 3676, 3556, 2746, 3856, 3871, 2761, 3841, 2791, 3136, 2806, 
         2821, 2851, 2866, 2896, 2911, 2941, 2956, 3211, 2986, 3241, 3016, 
         3256, 3061}], 
        Line3DBox[{2642, 3077, 2657, 3092, 2672, 3272, 3287, 3482, 3302, 3317,
          3497, 3332, 3752, 3347, 3512, 2687, 3707, 3362, 3542, 3527, 3737, 
         3662, 3677, 3557, 2747, 3857, 3872, 2762, 3842, 2792, 3137, 2807, 
         2822, 2852, 2867, 2897, 2912, 2942, 2957, 3212, 2987, 3242, 3017, 
         3257, 3062}], 
        Line3DBox[{2643, 3078, 2658, 3093, 2673, 3273, 3288, 3483, 3303, 3318,
          3498, 3333, 3753, 3348, 3513, 2688, 3708, 3363, 3543, 3528, 3738, 
         3663, 3678, 3558, 2748, 3858, 3873, 2763, 3843, 2793, 3138, 2808, 
         2823, 2853, 2868, 2898, 2913, 2943, 2958, 3213, 2988, 3243, 3018, 
         3258, 3063}], 
        Line3DBox[{2644, 3079, 2659, 3094, 2674, 3274, 3289, 3484, 3304, 3319,
          3499, 3334, 3754, 3349, 3514, 2689, 3709, 3364, 3544, 3529, 3739, 
         3664, 3679, 3559, 2749, 3859, 3874, 2764, 3844, 2794, 3139, 2809, 
         2824, 2854, 2869, 2899, 2914, 2944, 2959, 3214, 2989, 3244, 3019, 
         3259, 3064}], 
        Line3DBox[{2645, 3080, 2660, 3095, 2675, 3275, 3290, 3485, 3305, 3320,
          3500, 3335, 3755, 3350, 3515, 2690, 3710, 3365, 3545, 3530, 3740, 
         3665, 3680, 3560, 2750, 3860, 3875, 2765, 3845, 2795, 3140, 2810, 
         2825, 2855, 2870, 2900, 2915, 2945, 2960, 3215, 2990, 3245, 3020, 
         3260, 3065}], 
        Line3DBox[{2646, 3081, 2661, 3096, 2676, 3276, 3291, 3486, 3306, 3321,
          3501, 3336, 3756, 3351, 3516, 2691, 3711, 3366, 3546, 3531, 3741, 
         3666, 3681, 3561, 2751, 3861, 3876, 2766, 3846, 2796, 3141, 2811, 
         2826, 2856, 2871, 2901, 2916, 2946, 2961, 3216, 2991, 3246, 3021, 
         3261, 3066}], 
        Line3DBox[{2709, 3099, 2694, 3369, 3384, 2724, 3774, 3564, 3399, 3684,
          3114, 3579, 3714, 3594, 3414, 3789, 3429, 3609, 3759, 2769, 3819, 
         3444, 3804, 3144, 2829, 3459, 3159, 2874, 3624, 3174, 2919, 3639, 
         3189, 2964, 3219, 2994, 3024, 3039}], 
        Line3DBox[{2710, 3100, 2695, 3370, 3385, 2725, 3775, 3565, 3400, 3685,
          3115, 3580, 3715, 3595, 3415, 3790, 3430, 3610, 3760, 2770, 3820, 
         3445, 3805, 3145, 2830, 3460, 3160, 2875, 3625, 3175, 2920, 3640, 
         3190, 2965, 3220, 2995, 3025, 3040}], 
        Line3DBox[{2711, 3101, 2696, 3371, 3386, 2726, 3776, 3566, 3401, 3686,
          3116, 3581, 3716, 3596, 3416, 3791, 3431, 3611, 3761, 2771, 3821, 
         3446, 3806, 3146, 2831, 3461, 3161, 2876, 3626, 3176, 2921, 3641, 
         3191, 2966, 3221, 2996, 3026, 3041}], 
        Line3DBox[{2712, 3102, 2697, 3372, 3387, 2727, 3777, 3567, 3402, 3687,
          3117, 3582, 3717, 3597, 3417, 3792, 3432, 3612, 3762, 2772, 3822, 
         3447, 3807, 3147, 2832, 3462, 3162, 2877, 3627, 3177, 2922, 3642, 
         3192, 2967, 3222, 2997, 3027, 3042}], 
        Line3DBox[{2713, 3103, 2698, 3373, 3388, 2728, 3778, 3568, 3403, 3688,
          3118, 3583, 3718, 3598, 3418, 3793, 3433, 3613, 3763, 2773, 3823, 
         3448, 3808, 3148, 2833, 3463, 3163, 2878, 3628, 3178, 2923, 3643, 
         3193, 2968, 3223, 2998, 3028, 3043}], 
        Line3DBox[{2714, 3104, 2699, 3374, 3389, 2729, 3779, 3569, 3404, 3689,
          3119, 3584, 3719, 3599, 3419, 3794, 3434, 3614, 3764, 2774, 3824, 
         3449, 3809, 3149, 2834, 3464, 3164, 2879, 3629, 3179, 2924, 3644, 
         3194, 2969, 3224, 2999, 3029, 3044}], 
        Line3DBox[{2715, 3105, 2700, 3375, 3390, 2730, 3780, 3570, 3405, 3690,
          3120, 3585, 3720, 3600, 3420, 3795, 3435, 3615, 3765, 2775, 3825, 
         3450, 3810, 3150, 2835, 3465, 3165, 2880, 3630, 3180, 2925, 3645, 
         3195, 2970, 3225, 3000, 3030, 3045}], 
        Line3DBox[{2716, 3106, 2701, 3376, 3391, 2731, 3781, 3571, 3406, 3691,
          3121, 3586, 3721, 3601, 3421, 3796, 3436, 3616, 3766, 2776, 3826, 
         3451, 3811, 3151, 2836, 3466, 3166, 2881, 3631, 3181, 2926, 3646, 
         3196, 2971, 3226, 3001, 3031, 3046}], 
        Line3DBox[{2717, 3107, 2702, 3377, 3392, 2732, 3782, 3572, 3407, 3692,
          3122, 3587, 3722, 3602, 3422, 3797, 3437, 3617, 3767, 2777, 3827, 
         3452, 3812, 3152, 2837, 3467, 3167, 2882, 3632, 3182, 2927, 3647, 
         3197, 2972, 3227, 3002, 3032, 3047}], 
        Line3DBox[{2718, 3108, 2703, 3378, 3393, 2733, 3783, 3573, 3408, 3693,
          3123, 3588, 3723, 3603, 3423, 3798, 3438, 3618, 3768, 2778, 3828, 
         3453, 3813, 3153, 2838, 3468, 3168, 2883, 3633, 3183, 2928, 3648, 
         3198, 2973, 3228, 3003, 3033, 3048}], 
        Line3DBox[{2719, 3109, 2704, 3379, 3394, 2734, 3784, 3574, 3409, 3694,
          3124, 3589, 3724, 3604, 3424, 3799, 3439, 3619, 3769, 2779, 3829, 
         3454, 3814, 3154, 2839, 3469, 3169, 2884, 3634, 3184, 2929, 3649, 
         3199, 2974, 3229, 3004, 3034, 3049}], 
        Line3DBox[{2720, 3110, 2705, 3380, 3395, 2735, 3785, 3575, 3410, 3695,
          3125, 3590, 3725, 3605, 3425, 3800, 3440, 3620, 3770, 2780, 3830, 
         3455, 3815, 3155, 2840, 3470, 3170, 2885, 3635, 3185, 2930, 3650, 
         3200, 2975, 3230, 3005, 3035, 3050}], 
        Line3DBox[{2721, 3111, 2706, 3381, 3396, 2736, 3786, 3576, 3411, 3696,
          3126, 3591, 3726, 3606, 3426, 3801, 3441, 3621, 3771, 2781, 3831, 
         3456, 3816, 3156, 2841, 3471, 3171, 2886, 3636, 3186, 2931, 3651, 
         3201, 2976, 3231, 3006, 3036, 
         3051}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     VertexNormals->CompressedData["
1:eJzs2+VXlF20AHAEQTFBDFAQizAQRVB6040gISEgSBu0lDTSSMnQXSqKhEoI
eCjpLulGGBhmEEwQvcd1P9217p/w8mXW+q1nnfM8Z/bZZ29m5uQdWw1zaioq
Ko79VFQ0+FVr777TN5NnoXPb/ogFeSLc1ermvuNNAIH3XzRNG8joQKV7XV1o
D8pRFll5FEAAqv/98/m/r6v/+X/+n//n//l//p//5//5f/6f/+f/+X/+n//n
//l//p//5//5f/6f/z++3esjzZe/FOB+PyXfVKKIyjkD6h8p20CHnW7oPy+9
EEPbQCuE6lXPZphK2cDirFwjCfvD7ZtJvayXIC+f08fHzx7MLWXgn6OvEb9F
ChRh1FOZRsnDHvopz9W6miloLEW1+WhONRrJbxD46eAIhJGdx++0UNCZ/FSB
5x7VqFZxV72ujSNkeJw51Z9FQZ5U31trROuRQl/CdS07Zxjs9qluzqagC6du
uDw5XY+ye9pYne46A/soC4cynvfY8/NhVsRgOLotYp1O3gnqWme5BbCffmgn
eTojFCod1U+fEXOCHafVhMX1KMhI78ChqNctaGqA3VvG2B0+W5z6TtKnoIpr
SSnpT1pQ0kmexHe67uAuTn1C8w8F9mXV/Aqrewr7hhVb3JpcYavxxtvj2HdX
Pcz03kMAXvnzhsQyVwiVpsg9rCGjwXmD8ZjiHiTmRHmv/swbAicddybWk9GJ
cIbw4uQeRKYW4c5P9QaOx/erqDcp0NF4Qkf5XiZo9u22GWn1BpaerlWrDQok
vizT2fDMgr2Szgtrr72BPYtVx9dmBV290DOuwzaMet9wvn+l7Q8vzt4+k+K0
gj6ZhU8+oxpGDq+tUpbU/GHTnpxvvUQB1/UbiruNSuC9M9Gigy4QWExOrq8s
UCAn1TB63703cET73Q+JhQDgMxVrDby4grpYZIMkJEdQBZM3z3ifP5w5RDIf
OruC8vaXZ9LcHEHueinsYbP+MHgj2NpxnIhm71ewOA/OoKb9zIS2ySBIIiUc
FFghosSkc1dra2aQSLXl8cNDQfDEakOztWkOJZBrnpdqLaLnw4/FRi+GgWWL
xiWN2jmU1zotIKK/iERkJcxoBcKg3tp+fOTkLOL9ZaqSnktE88fnlq9SwmAq
rmmyWGIWUZ91y/KNIKJJBNMvZ8LgdUDTKXLMLDwGaxX760RIiCcJPjAigF92
yFz8lVqQH3tQl/eOAspAsjdbtwK0K3ZkSK0WrNtZK4veUoAq+Fx/1poV+IZE
zr0RmYU0Ry7LhSgihDdHGD2sJsAuEUrh8rVR1NX7JdDgKwmdXSoTbRqIhcM/
ktm2JYyiSGIlbdI4CdV2vkiy+BgLUannhegKyMhnZK9NxrledHVINyRVMQ56
X1+uyMijIHlpugktVIe66dhyEEcUNCdWCz5KpaCV0s0t/qJ6tD3NcsSHMwrO
Bsu5C5LGQEWgLC4tjAT8fTJK/XTO4G+rGs37ZQz0rsrJGoSSgKOXLoOL2Rne
31BzoTzph66LhwLXVcnAdbs90PSGHTDVZwYf8++H7xymVC1qZFAtaFY31rAD
d702IUkKBY3/UXhBzVWEFJ3tuKeaH8Pxa+bPI1bw/dCtftf6WYQi+mzJdt2P
4SATyznzjM+w6Kv/Kgq/jk/roXRtD9DmKuB4nvsZ6vYVnFRJ/gxRBjwrRVYe
4MNc6lG4QUH7qPji5XdnIZKzPiHL1AsKrYyDz2N3CuUoF6RkIeKhZvooGy/o
tjPQ/zm7DKe4fh2OvD0J9/I1XTXUPICLPTd3dGEZ3Dimj5XdmITfJ9a4Hhh4
wChrbyvaoqBPD9P+KEA8Ui19tevvvAvoU3WUh2KPLeYxZzFIQBU5PhyFKy5w
a8bGcSuWBEXi2ZmdjWMwf4pgIvzsEWRwPijliyTBJpP784bxMTC4dmNNqfoR
cO7b3z56kQz2s0Va1yUHoOyRexnHTTdY7t65Te0yGcKrno4ZXhkApaVX+vG3
3SAvhCZN/g8F7VVknnE0i0U8O829edocIW1DxfIc9k1i25AhMwEd3e9hYNrt
CB53j9r7cVPgCnFPszB3BzSOxf84oOoMV9YhZ+gsBVTvBRzSZuyAI4xHlZI1
naGZT3+agsdxbnBG+p8j0Q4jdzOLfjsY3LnXeBJ7pNWaisLDKCRruIm0h+wg
WEDNICGCAtsJ1VzC1z4Cm41pVWCgI/QWSo1rRFJgg1f/6ijHR+g6qX6dPswR
8kaHvrbj/DnWWXenwsoFjtEWMpma2cHp2genGrHndd9qfvHMDZj/tmmJGdjB
j/QgDYMyCrrOOPK99E8NylVwIz0VeggpcuL3fmEPpVEf1CfVoIZ7EkmHrz2E
r1Wnv6bicYaEK9aOaPgCta6YktsVR3A6rLwrCrusjPhf4oQfdNd8DvHmcoRl
x6faDCEUZDMScGdv+Uek2exwXEfbFR431CvvDKUglfv7InwzP6I/XNdex2u4
wv7flwM48DgvfrXem7oSBvTnBu/dOeMCp7XFn9Bib/v9Zk3Z7Qlk9LucVWB0
gdsj/Wt9/BQkciOKZf+NdpSYle9+WdQDKrxsr1lepSDpwL9FwgLtyO1d5C9N
IQ/I4PCKfLGF80XsatsJg3hgoJ7jS9nhCdFiCRwa2O0Ds5XyzyeCkqWDy6V5
D9j5dJtiM4GMnEtt2AS7e9Ha4PmUujAfaHkD1hYJZDTVSLx2DvUi7S6jY06h
PrDxVa5K9AcF+B9SpEd5noFF7kDeqoI//KjN+ErznQLi9ZHMRt3PwVV45Rj/
aX+4zSRAdpVfRtUjc4nRFVPoqNNfNq+oQEgMlvgdobqM+hYbZTIKp9BrOt8n
D7E7NnnmsjLMoVtqJcN/SIvIc1eFlMbjMHjyc/zXzqNzSPStBdXfuUU0Js94
UsEvDARVUiOO7V1EZtyJZrlH51FQYK7zkHEI8E7pPD13aBFJyIeWOzBiLxTi
PmASApejdc0ksmaB1N+9K0KKCHcOo3R2KwLMkGXCt3uNIkX+mdrHcyS0RSxa
jZCLArvzryweZI8ipXKlpoRREuqJs+qmE4mCp/UVwRca6oBmoz7I/BkFFM9p
s+y56AA7tdSF+Ch1kGxHyWrLpUDjLvIOOk4HsHT6zWiYQkHcP+RIF1vrUUGA
Ai/jWhQYK22nVD+lIF5TVRnurAYUJ/E0YeRTFHzKFB7dNTAKItZ7hQu7SXDz
gMn2JsuHIMkeF8vaNgqeJdc9D/aRQLo0TuCi3UM4/vXVFm3ZIBBZ+acJSyvw
53HAs7lDDkB6Qp4XLxyEHXxN3vtJK9C3bSpZ4agDUPMtJjisUlAbLZrs2l2I
Tqt8rRI4FgjjAd8Iz8gUJOO7uC/kXhHycI6a38kUCPcs7HqUDObhoun2JZe+
BVBKJ6h2/XgE1j0qecN68zCVPjD6bGABPHeZdTvu9ICxtshQuU0KmoufYOBc
zkAdF+sKTtP6AEdjnRfCeTV7+aiP1mwmGr2zoNi93Qfcu6xDduP8EN/Qbpzl
TkB3NZL+av11hb2Olk8HcZ50s1bztSuIQ3OBy95p29ygiJ+1QW1qBXbsHnC/
TRoE6SX/ZL9L7mC+X/5++PQK+D+rz1qaH4QL5ckpZuLuoEVz4zLeX2j8hPHh
+V9P0Oud8UdsnJzg4o2rgiQ8r7hpylxZQiQareUeOObiBGcGi5pvDpChYH3s
YObxHjhuKdze7OoCN1PEQ2GQDAmcfcwHmHvAJvD1H0E/F3iZf1PAEY/vkqv8
w4klED02YZCnVbYHav7TFHPs2a/Kvj6VCUKSW7KOfqr2kPPyUzqYUcDMrVed
ZqAZxvnu3Kbxegj3rvsaUrD7ujN/O9rUDMup5kIDAQ9BK7op5zmu6xqmisVL
KqJh+NimSFb8Q7CJj5AOxK6jdvjF95cx8PpSe+VS1EOo/z7wues3BRjrTNdf
1yXDxN0TfUXL7tA5YyDgjp2L8V1Nh3QqGIrFFg5Ou0Naroqo/TcK5C4JyHIn
voBNVPv8xbQvGFxJydD5SoEbDuV0TKv5sMYoc3HXiC8cHWYKfnlnBVEx1Hx7
rDWMNMUjVJ45+IMxQ2vwsMUKYv71bf8RyWE0vKWu1WPvD4fma0e5myjwjlK0
d2upGhj/bNtX0hwKqYQ67T21FPgrKVTY5I3gi7qbWNb7UAgw3kW9cJ4MPNUx
srPyA3BY6pHP0wYCtBwZvjNwjAwnFVIpL7MG4PNhrudSMgQ4XRghdq+jFlT6
6rR0iijgvZPygj/VGnhvpCX7r9eCBdPK3b+vKRBRHFm1kWcNTrqntr380gx7
sjuOdN6hwDwoC50juEANHB5nkGqB+EPHPzUbUeBaRG5cwzMXMOD+9IeTsQ9m
Kmn3GYWRYVuydYs/ORgWvgi0jFv2Qcmn392lnmRw+Fpk//ttMNR4Vt3acWwE
Xf6gc7NPYAUxwVPOrYmnUI3Os0Xrj6DuusVdMVwryPYAScGm+imwlJs6O80O
g6J9dkud9AoQHtUWznx1BDeNgIS+mmGgqrXUMFdegdZHB5WYlxxB4HHd3Pkb
05DASJuQvbgEbwR1S37sdAOV189ofqpMwxHzV1o6y0tw9IP/O5VDbsBS6PBL
Be/rQQYNNJ9VhDrl22ZHmv1Bj2dkuoBEQU0Hnw7ImxejiIvU1Fsj/rA9XSFN
WZAI9z/95vhbPAsTh/9etz/kCRza3/ZtXcP16xlHRdOSWYhR+7B/k9sTpq5X
7WunWQb1s18qEjmnYbJVI2nWxQNmIhhvhRxaBpMePvbgXdPwbGevgrS/Bxyp
Eg3nwXnA8PKFcrOvWWin+up9bkZPMN03+u7VLwrqJKkcy27ORprFtiIWZzwh
3nXzZAczCfIL4qiqMyZgpk/hp8hlD0gwYCjPYyHByLe5wNTUCei7Ivt0FTwg
cL3SOSGWDHxaV62bh3rhZrCUkhOLKxze7eYpmkCGox3vCw7X9sKK8B6+P6yu
YCMm46iE4/ODjvjcwelqeHvdwOL+vjCwybojeLD2Xx2is3bXE4F3fPyn/sFQ
CDLgam+8ieuitGkf+9YW0Hz/6Ve0dTRcOTYuZ6CE+9aj/CndZa3QcdOz555E
NKR86X8UjePywPVnL+8V1cIhI5qFpY1wyNtbO8VSjveF201D3YEa8AtQDNwW
Gwanw279/FY6CzwK67EWfEQYzwnfxvKAAE1KBtHfTVeAQfDU4JTsMJyTCK54
tDcePqY8WvYSWQF7x0Jz3b/DoNm//eWftDgYQuEfr8QNwPvU/AoedjJUOl/c
Ti0cBovTgV6pxwfh45nJFQs6MlCJbZ9OOY3P2fDtRsS2Wfiy2ejYeJII+4/v
yf0tHofnrft6T20KubCxGOwOWkYaNbWpJKcncKnOt7HAYApRi39pvOC9jEou
/e2muf8EontaS2jFP0JCanTZdVzf0XWzXlZ77whHnsolPXD+CBlh5O/LYRQ4
+3e/SU+5IxSwCVwNKOuEv0SFk0oMFFC4GJFzhNMPpGKmkpoVukAgTNVXaAcF
UixP9rSd8IPtVF1GCoQuiI2W9dGhpgB18im63JP+cE13r9S5+i6o5ua6bPOX
DInahfuNn/mB7vx4UtrFacTm9Im1YXMJrfpkvb/PlQRFq+kixYzTSGHf1ysS
+5ZRyg4W5d7ARGij2RX/4vIy8p3+qjfxaQoxSdqF1bqnQFhD872E+SU08LfW
wl99GlXcvH3vAV0KcGkHJqvfnEF2dGZ3j11dQrHERcc+2mSoj3c8oFU5g/qB
66kRmYj0JQjHJiqTgJPbMltGbxSiPsqzSZFJ4KAVfjf/rxNYHuzo+a2Az/1F
7hcsayQQNV9Sc6J+CC1nzrC00s8Bk8CUQMfaIlxMHJoOnXIHqd01lVx/Z2Hn
77Z5zc1FOCdwQ+k90R0Mnbt2GLycgUMXOMNYt4gwcdtpcW3dDR6fti+OKZwB
y/O2Ywc3iFA1sZ8zns4d1KwaN2XuL0KD9sVns6/mQIlJNVe+2QNE+joMXt1Z
BM0W5bkr5XPAd+OB344hDwhfbDj8sYII7Vm821/umIU3Kn9XeVdxXVqXemU3
IkJzSeLtIKpZYD+fxUjc5gmcRp/lH+Fz/D23CtOeygR0z6BPsHbTGYJ3pDnI
YfesDVRkbkxEIVXGw4E7cL5VOY/27R5HjG8eJo36kRDfwLnUmDORMK9/+7gz
yzhqWc8t5PUmoS9BYquRJyLhh2mfGWvxBCqPIIyFMJGQTa3iiQ9XI+BZUR+z
NGkCvfNz2VChIaHLvGf1t1gjQIW22TjuIwVidMYu6mh+gKltvnWGCmGQqGfG
e7OGAl4DaHTyFYKocg6ZPyuhYF02XCZZPY3oPd5R3qUtobMsLRr7C5PgpsSC
Yt/YNDpexMPxKmQJjTAfM42TToJ+M8MPlxYpcH/CYyJf5Q3kPqzYvBgUCBVJ
FbaT8xSg/eFBTxZ9C5e63/gUawWC+tbxGQbcT4VP2Mxu7uoAFQ9960f90bBv
0ondcy8Fig5oH4sd6IThbX+Fqxqi4UHXZMGH0nmYr7fgzPdagAtDbOnZZXGg
lmr667fMEuw9dyHni+QM2NHSXB6WSAC+S/O8NVJLUOF75biu7AxoHf55QaMk
HhLWxD9v2c/C+ycVqTmWRLilfvy59K44qOLnCbc+NAPUU8eyvcyWgP+XycC5
lFjI1G49K14wAlvGz1z5Dq1A3Jq2ZOpcFOR5y9OZ04/C9lI3F9JfEnRsX/Cv
eoXr2OPPEskfmiHmxVaxgjk+f/tm5paZ3OGYWg9d5qEW4H0rlb5pTAFPsr6G
HoM7WIaOK8a0kpEb47Si1e0eNGjB2KKsToDJ+ruWIiNkVJLgU+lL7kbLP5q7
KmMJwF3xVfLYBzJaJjPZpZX2IKW6nWdYfQlQ9YqV98skGa3LzR+bb+hGBPpH
+75ZEkC/jNSN+1PwVXzwN2BvJAyWNSjLX3eGrBjRyE7s075DlYzRUXBcpdp3
h5QzoKYDBFHc18wdlTXaingOufw58088/IBJfGnwIK6XzMVm7+bQ5sMCS4uJ
qZUf3Ir5Kxtb3Ql/Blk4FvdTYOvvTqlZIz8YV7p8t1SlC9wGmn/9pKMASf9g
2gvwg/gB5/SKfjLa5mB7R+xwD7qmKhKa84EAm26KRjU47v3bj9qmU4+jXPr9
H8p9kmHVeluSnjUJMe2ImDlpMY7Wwr68ZdtIgvXs6EuhZWQkWXWdZnq2B5kd
on7lFkOAvtbf3M/HKGglh9urILQMfWUpYma9HQKF9ZrydMMUJNqY/Fituhxx
W4ZbFFqEwKZQ4uhMMQW5fz/w3DmoFp3nXRgZqYmAiTXFD6rPKehH0SnG07F1
KJ4+PtFiLQIyH8mXyw1RUFijkMzNr+UozJUvamMxFCrjF0RC+ymIuOES3Xj8
PTKsu8ghOhAKS+/PbFOeHUP0utuzqsJIyLS4aT6nLQ401nMDnS+NI+0hyxOn
XEmo6jl72N0nccCy5mmor7qA+HnpzqcQ59HoRd98N59UaI55bTOFPchSsVMC
e6DBZ1X0OQV8V/c94ZBugaJRTaOXuH673EvPJ6/rAQe5M023Elrg5W5FOg19
CkQtpZrYi3mA9mrxoeH4Tihfom6WOECBPJ/K7upxX3h4qly/6GoXdB4k+Rjt
pEAYvbcs0y9fyDzYTrDCffpycyh/y1wgzJuY2L/Y5wD68pp9utgl38Q3nxEN
hpbu8y3Z9A5woHbg8m7sfGxcfJSAJ+BM82HkRbUTHDjVF7SG480+eHBKmzsS
XITV+kKKnKCxVju3EF9vc+3B+a6zPjB4nCpPgc4WuAQmHZ9hn1y/XBDM6QuU
PxIiaX9sINbraNgH7Gw/qFXcL3jAlNWFW3eGbCG0omO5FHvD3of2bbJesDie
6dHabguy5ttZ/bHPpVanNWk+xv0Yk0IVwQH2bmNgcsLuW33fRrs+AGrFJHLj
nzhAvduyzbU9I2jRoLbWSmgFXXSZqg/kjoHgeL87t1RGULXxYhDj+RWUzDhl
ILcaDe7feF74Go+glcjbVxM5V1DbC90EFVwXXbW5ITUaOoJ+Moiq/GZdQZnH
Bd5HmEaD26lQR4rQCKJf2kcjxbuC0p6wzjjnRQNhMYVJ13YE2QYQB66eXkG/
GwlUYtHRUJeh/6p5eQTVXUvi76DDfUbw4SebpVEgPFY5suvzCJK4cvId684V
FL78W9FhJAoEBlfW/v3/Lf7t55dmW/Fg7y1IriqTBXThmVIl9tyaHY94DydA
jc9rPvVyWeC0fOs3ivtWg4FSuSdyGdBorNiXmKkINHqubb3YCwqEF3N0MuB0
6BSbbpYikPaz3DL9QUHhrRkTvC7PwHnu5e9nImrg0L72VR27ebPTIl/UMzB6
+sguU1QNtpJkmB4RyGiny+Gunr5eSJWZ+WhbaQab7wzfZcWQUeBp6gKZz71w
SZLjdnWFGdyQEOmnd/oITTZp9MfDKag3qPg3s7sCUI4wnOZ/9BHag9dpu8Mo
6NKJgw/H3BQgm5tb6oZkLeyYnt0SfEdBTisWKXW1EnDE632XkmwtzDKuGR7G
PhO2Xb0Iu8SeTnlpSicoKs1yc++loL3vWL/6T2kCWfLrsdo/nSB75fXPS3tw
PrA1KZ+fxH5DZsTqwyD6oXzkszhxBRSDQyV1re/Aowza736NgyhFT1Pt7cIK
CG6MGZlb3QFmtrRQwV0DqOHjR+ZngmR4wJPQmrFlCK/bPb4H7htAbMwqZxau
kaFBXGxQ7ocheK6eObJqSYanQUMZpmt9yJbt/c0gNVPoGN/TL2ZOhm9sJ/d2
UPej+54d0Q8UTUF695orjQIe32FAo5+HDIXWLX6EA4YQlJVW0aM0gEhXIV8b
e4zaV69j2HVvy1lR1wwhjSJZq0y/FbAz27bd5IsenPydIRqOneU08n2MnUp2
LFkeu4F4n7N6yzgS+JL5vUCDBKPMQVxpX3ThaxGXxmbHOLJXVC92vEGC9PWS
/VzYc6q4td99oADnePOesBM16KmR2hUbXn3gYW3sF8C+u+LariuXahDN9hSr
X+f1gd1e/oMB1RSKiBlIlCpdho07slVG73Xhc4rCxNzfSTT/XGbTGztBkSGA
gD1FLegxi/o8is9nu5o+sQBp4fNeMi91QKxYgHBQYx71VpWrjYwtADmt49JV
7M7OExlDKxQgv/rlPLOjGF3qaDKkUtCE5KBY4bfYOfXjXInMxej4az+ik5wm
9CfmWuW+n0f2TZ2VrZ4LYGJMvD/4RAe6+9qeT1bMIxb18nRfXG/s2fuh5UmE
DpxnCAu4QbuEfvVcVObNmAGE5mz1bLXxOZIiHEK3hKQElt89SpuBv8IqZ5ix
M1SaoiO/KHCQ54b2T5pcVFzhUSZmdB1ifSY/0WMvCc++cYglF3X82Bbua3Ad
SvtIre2XSUiB9oUsi+wEnKVR3/rphuNwp/tNeeymxh5Wu+QnIII0OiX4SBPa
qrd9Ce8iId3rVNNCI6Pw+PPReO3nGvB8rOTi5W4SOmS4yhXzaRS8v2w82479
jpAL/+xv3Oe/TY9pu5qCbD9S9qTQKsJot7rhOPa3aWlfRG6kILaO2zvitivC
Rvd3nQdXyKjvgseQAPcASFEOT+0/qQ5Tp8lHe7BPfE458ptjAMpF9m1WnVCH
Wu8h03+f072/eXftS1EsqtVi/ZIrLgv3XlYqq2O367njvqchFi3I1FOviskC
1XRby/IaGb1czKwokOmGfV/uNXbSqoCGbXod9zoZVX1oyBmX6obvF4BZGDu9
kmOWFx4n2nx7yeO0p+iHvz3vvmcycDQg/Kcv9kFpinpl8FN0t0WUgT1KBoyE
dIQP4zz/IJ1d1D0iAkldLWpqcJOCa9Jp/UzYB7tMC0JLI9BWtrTZbuwVM34c
4QYUNLb72B8G+xYQO/7dQC1OAVqbHpuVYBdfK/c8btMC7yfmxbsJCvB2MjBy
528KemtT9DZ/JB1oS325UmvkoHE/6zcq7DeEDt3n+JUOzBnJHZ21ciDCExp9
+CcFaf5tMb7slQcElZMs6ULKcPqdIf0O7FVDpA9CsXnwIjzsi7mIMmT0XJsZ
4K+DnVq+DO9eUdCxk9vSw/gkodCFxG4qUgdZSL3BFftZXo3S3CuSUKt366tf
7wTwSnrYmOwmocEJYh97rQlIHirnpN6YALXtcdxeVCScD0WWmltNIIhh+372
gAF0JN6Cf+sUGXKNjlcUeRvAiTPUhdSBA8g/+VBUP/biX3xBdn4GUM+srioX
R4HZiydSBL0b0OZC0vqhwVsg2rabTZ6Az/ev2tXV8Q2IbSRcSm3gFnDx2vRf
IFLg1cwLTy7mN2g/rbBRa6UmUHlT2/7A/UKakkOG9cU3yNH/bLA0dnE2ZQXZ
n/i89kspPimShz50c7Z9eHYdmIdtIq9gVwjXDY7UykMfv3qw/ci7DkcnDyQ9
w3FrcKnV5opEKtIQ+u5feEQR4n977c3APujyyZzTJBUVXlWnYcFus1nw7QTt
Cuot4Kzm/DkC14UpUbTKGjC+w3mJHZ+v1g5bX8fWR+DTm2UtGiUNqHiUvX4d
x9WP28caNdpj0eDIUc4bErLgFxRzVhn70WVSV9xsLGo6SUs1BrLwNYnjA2cS
Ge354P4i4F0v8O/6TGe77TpMv7cey8SubnNq6HZJLzzfBaIDf1Wha0T0ppYC
Bdnvd2QaXG8F8TTzfk4xRfD+lfPjKfYZy4DtgpRWyJZqOvdVRBEypx3avnyl
INPQUcNvhHxIzHH4eTJHHVZ9v3cOY793IiXhfUk+OL1W+6KTqw5fHtOeo8f+
IXh5sO7ZS6AYLVznc9OAJrvzN8nrFGS1yIKKGl/CV5fKkkFXDbA5fKhUZoqC
NnR4b233K4U7mgrXTNe1wfUJI8ufSQraNaIV8j2pFHJKPFHkN23gUdVwS8X1
9iVh7rbl+jK4IfunYeiWLtDcK+pQx+5dsDssarwM9DyplC30dWG6u5ap3oWC
ton9YZ0Qb4JPb88jcQ5jqOmWbgx2xvsiP+m7uV4TiOTnnfDiMobvSVmHeiwo
iENPOqUnqxkcaEJrhg6awKxIlme3OQUl2GUvCZU1g/EWFe3hAybgp8iUEr1K
QnPP7Lq71UZBh0rq9U1/KzAktP2+QCYhh5TLV9b1RoGt4NbbQTcruM0qXZVb
2Ax/POwqr+B5cgVZReQlVCAyPOfvQkUz7L7N9LQEz/NziUF4u7QKoPR99cwU
fD1P8ClGU7y/s00+2/ipw7H4rbodG80gOOm9K/AOBXGrfnQy91GHep0mLpvv
vcDlFP+EMwrnuXISen9GD9RZJOhv/MFxcHfvyZUIMqIZvL8hxI7P5VyaHo2l
BdD88jmQIjWP0j3dbj8sMofaZMF8i4wFKBXUPP8jdh5dM/jtNBdlDu+VE7U8
aZahSu94tDnXNFJyWi29cs8CblU0+5RSLwPNN4FXadzT6N69mvpvty3gdKmL
lfQ+Csi+fNMhO96JtgRb0DSvCZTcsvmsh/vulPRkwpflTsTrOqFpfs4EOnP3
ry10U+CGdUSkkVUlsqSmDTCQ1YN7wQudSdi3MpKcyr0q0dZtsepYCT2AD4yI
bYWCshqCW6KMiqFY790yzWdNMPtE3P+VREF7iLMfC+yLIbDKTC8F+3z+RQZ9
REFcoyOefHtqYOis48tDKreg7dLXz+0fKGi5PJMpla0GZJP1PaOwJ8+QLsmO
kRF7r++84Eo3NJJjxw9+MIWDpCXLJxNk5Hjz6lzYWDfsb+cszMw3hTRJHcOk
P3PolXhtiDHnIlzeJv+teOAulK83vfm8cx4J6Z38ZMW2CNnBf+gr2+5C/xlb
n+nOZVQ3RiVdkT8JZ3P7NiYyreFoZkaBefMy2jA16HCqnYSs22IDb5KsYUy6
sfiC1wiS6TLOPX1yBVSeNtnuizEHQ5dtfI8fj6DpUFv1EvYVCPdVN58LN4ee
1hsvzyV2QV5YEtmJGtfp6IHJH0ctaBAc4lpI6oJNdZZMXeynnaT2slpqgbuM
/J5VxSmwL7jzDcKWUcQh/cfi3+7A7TtPBhi1puCz8VA4BCwjRutT9Gxf7gD/
SA39YsQ0pHa7+b2sWUJ/VL52JGwzg59DXnlLIdMw62Aq86V+Cb2tLV4zXjUF
l28vjrhZLcMJrd+SPI+n0P03BvZc5y3gF9KvHLRdhkPqD+nILlOo2uiAfNlR
C/AQrLhftorjh37XKxXJQiQlt17t8UsDUmxtqlOw1+xoPhtoUIgkqkuXFH5o
wH0VcZvXuM6p/lvYmcGSgzqzvdl/cl4H3jYvjmzsnlmzzuHncxD7vl8DQWeu
gx3ZLDnyzhyCdz/ac/MX4dCCdq/ks7vQTVPlJHprDh3t0nxTXLQIU4abXRIJ
dyFSiOBcSDeG2I54RlU1kKDKaHXzMr5/2oSZwPyDY2jHhZtDmrW4jj0w4RnN
bQGCnwu1DhL7wfclp5mlOBn97vSKE/miD2Edmj+Tv/XDddbrwqKiZBS/Pkqn
StGHPKYji+m2ZMQds84vUd8HpUy+ku5HzKHwQOWjl9Zk1D25I79loQ+EuUOk
nVnN4bvdMd8XH6aAWeuc3ILMMjqYQzn1280UYko2PrrUT0HQXWGZdcllZGQv
6vPI1hRkJ75fdH45h+4OKDgWPlgEs+Zh1atNd2H51ttY/Vdz6I6LyTXy/UXQ
a59uqqu8C4oDR88nO1BQuUUw98OCJvij29memWQMPlPtvQ/scd5uKVG919gE
rNvlmryx83FJhRgNrUBQl5aKxeFP6Om3588dTcxg5UTa5uzgCkhF77DcdfwT
uiJ2IiBOxwz+HlJ9mEXdBVJa57+u7cZ5L2iNKEKjBa6sVntTGLrAsXDAign7
3Z4b3Y1/cf0Z+DTZp28JHqW9T2d0mEZiNP3g5WQB3JH3MvI7l0CL4zmTt9s0
OrEj59V3awvgKTrOPXiXAvIW01ra6s1o092nN+nJbRhjfmv2wRrnk22acTMW
zajZltUgIeg2yLDKZuTNk+HkB+1EqefdKCSN/RkhwgT+PDp67eEMGawPfLWc
Rt2IWwyltjwxgRpVw6VFrgF0lfevpusVMrSNoHAlPUPwuql2Neb8AFq7H8Pe
z0cG9+nf46d0DEFcd6rwp9EA2q3DebvhLBmEZhQNy3hMYPy6wRVFswEUdsFN
qo+bDAUnye8enDeB3+vWRu0nBlBz8gmhUn4yHM0V3cm9yxjIGT/WCRwDyKIk
sGMSz3uRdPFCKb0xnMh57TSUOAurnowfGBSJIEmZ0whxI0CRTbB/aPwsMMgk
do4qEcFwesdpHzsC9BMFrUQJs6DmUP48T4UIWqVUH50tCfBF9RX5kfQs8Jst
UO0JI0L+G7K+ezkBDI0JV6SUZ0Hb4ZvQxQAiNB95e8PzDQEsSq6U0GnOQiYz
O9N1byKEFj6R9npNgKMldtYt+nheD74n99yIcL/x3GXPFwRwUbqqG3pnFhLu
/Xke6EiER4Iix9xzCECatfFUvDsLrbc1LNMfEOGnvS31w3QCjJvRDtE5zIKz
+5/md5ZEOGTruvAgiQCn+eYt6txmQSWwr7PFhAjJlTvazAgECOPd4PbwnQW3
71luo7eIkOTQVaAXRYCbNZfY+ENmQfGzeOuSNh5H3C9KJYwAH5oeSi1FzeJ6
0732hxoRym72OYoFEsD2RWl8WsIsKP/kMqbG6/bQ31n3gi8BzH7h4VJmQSIt
qvirHBHcBR0rJR8R4EHFWufDtFlIs+VX9JQlgvDVOM5pJwLYZXziupUxC0lN
ClW0MkTQm8138LEhwOZh3akbH8lo1w+Gl5KPe1BAxDNWX0+8brO0wNRERsYH
rRd/ufSge4q9l+3w9XS3RO70NZPRZW9bh+J7Pajt5dZdo9sEeGMupeA3REaf
M1657t3sRmNGjRNBTwmw7bXxTNMgGQUpLjxO2NGD6hKF6DVjCECBKYE9AzjP
HLSePHWwB5VLCKixRRNAYGFUSq2PjFri7wa9OtGDRHa2F32OJABrgg19dA8Z
7fQ94yHA04M4axkuFkYQwNH2TUhPFxlJxHRVVQv1oNe6h5ucnxAgquRjPUMn
GVVk5yjIyvUgkyHKI7FwAsh01ZRdb8f9XfbY8XaNHsRuUaRCg9d/+FaNeVgr
GXHFF4lr3O5BTDL3hJpDCLDnyFRHI37esgS9Z5/w81Z0X5EKDybAjkWRVSq8
PkdGGHQNXHtQbyCbpVoQjs8JSrsQXs+Y7P3qU3g9b2+JPGfE76NPcOlvh3oy
+snmY6Qb3YP4/lyP7n+M19maovWqloy09/xo/Jjag77M8P6M9ycA8+jGvTlE
RumBH1z48vH4OpZe+n4EmJp4v+/f92MPXQv91jypgMq6yqWXlGzgopIeyz//
9WAqq3WPAvp2LKleFzsZZZz+57PvP6u1C8mjhr1npZsUbeC4RDTPP59xy/jd
YSGHnJ6Z1wlgr209d+2f0+1gfNH1VBbpLKtJ5ijYwMDtBxL/3OiDiHZPjQz6
MLqADmDX/6ur+M83Nk9v61uRRhvuPOK+8jag9mLlxj8nHut41X9UGt1qO1FF
kbOBMsPz+v9c1F1Yd1BeCvF31QoZYY9gPXDnn1M52tIMOUmi/mCGsnZZGxic
z7T+53J3bF8PZ0qgiI09/CLYIypG7P65iMKjktJUQG84y4peyNjAu/gql39+
7mzljvc/xFDM/v08zNiv+8h7/fNH7LkG1TdEkXfZwReB0jag7fjo8T9XmIXi
mpfCqOVE85lvUjbAdNa07t/3imVfuKy/UueDT4yDR9n87CHgwlz1P3eFz8pB
j/nB0e3SuwpfexAlt5T/80foao5J+VVQmRNQu4ld0Obgm39efVLvtwhJEAS0
Py+u+djDo1f1r/75ayMxrcMnRGB7l6RfJPbtLz7l/vNKm76Xq5piEKqlcOwC
9l5T9bR/rqm0m6YtCCB58debZm97mB/jifvna05Lr3rHJWBXxE0Vc+xw0O7J
P189xTCEfkjCS3mjuW3Yx+mPPP7nei/J1AWM0qDOzOiR5mUPDdWn3P+5+S4v
nqTzMtBFbcskgn2V96ntP1cWLdUJkpWFX/Su+Z887eGOsZXZP5cWi/R1ui0H
WZcuSDphZ1PL0v3nAfTbXpq4yUOaW9gnhn/+W0Lln8ul0vRff6oAaIHwoMDD
Huyzlf2Gminodv+jnOzMapT+6pjUawdHQI/PvZ3GXsW47n0hvRr1dW2ommG/
91R2fgl79b03+u9SqtHJI3f0jmJn7Uo59BU7968qfvGkasQfcMOs294RfK5d
kt3C3ty9f19TfDUqZ22xCcQu0f7Xka6Fgu7Qv/qsRqhG2lPNrqLYdz7ZnbUf
e11F9IehmGr0vlfdb83OEfzcNLuYsRf+rCGYRFWjmO/GYc+x60Z/2jyJfW1M
6P7Sk2oUdP3XUyPsgv3xXOexa3v+lnQMq0ay4ywpB7G3SsZq8GNPX9155Hdw
NXLNrctutXWEquF2DzHsyaq3lx8HVqP2F+v5PtjLkyXz5LAzvPz7Ye/jarRM
elV8FbtV0FqnGvYm9qXoON9q5GtPLiPZOIJryuR3XexhdcfN2L2rkbBweXUW
9oTvUg9nsyioZ9ExmUekHnVqc2t8t3WG58onmtawt3NevJckVI88f/RpJWAn
ulcdoc7G/XXvGeEdgvWIUp18Uxi7nf8RS0bsz2l0dzpdrUflr711xmyc4YbZ
5XcnsHv1Ng1M8dcj2y5vHS/seay7qC9hX7rplKV6pR4VcKTcPIHd72WmKmCf
f25o8/5yPaIr69eqe+AMv/f/jL+O/f6UvxDXpXrEFHJWwwz7BcW904bY3Q4t
0MRerEd3M5Ou02HnvjnN/QA7vXFQBxVPPcqm5VZ6ft8Z6K462XpgPzJkFvfg
fD3SruyRUcI+ufDxbRj2dIK30cjZesTcHC9OuucMLXcHfyZhTyn6xCHPXY/8
L7tfi8A+Up0rko99t+QD0hvOenRxy5X3EnaeqSueFdgXjSRKTnDUo+JLsZy9
d52BN1W/WxHH+bddPNC/PQQYTgd0WMk5AYf+aXcF7MHCjGtwIgRyOp/ktco6
wbEDTqfksXtoDma/FAmB8n3PvS5gP/NRpUUWu72Du9YRnRDgJfdpR8g4gZ5j
gY0M9n1vN2n8HUKA7MJ4YVXaCbpZ4w5IY//Jr1tCfhICn0qNt2lgT6+leyeJ
vZcx4rb+ixDofFc78EbKCSZN/mpL/Ps8yzJ5d2NDCLzz5n9xCHvulvc38X95
+4ZX6eWpEHBgr3jkIukEewjBT8X+3Q+Z3zh1MwQW09VUhyWc4Cw3yyVR7J56
1Tvpj4TCxu6fbCLYD5ddbhPG/q7wUJETXyhE2pSspIATECV7zYT+5be9ojen
VEMhqNer6o+4E1Q1b/y+hv1q1MVNZetQaJEyDDXGnqf88ulV7O2ay2llj0NB
qFVVp04MP9eKzFU9PQqyKug76vuqBV2Rs0hru+0O6UcYLzlhPxTdedwhvwUV
vhyp1MAukvaGKxL7sjDNSdPnLWjwgOenYSN3yPW6wJaP3XHa/qRWXgviDlb9
Yox9f+kjho/Y+SqPnpDNaUEczCr0i4buUCiZuW0Ke8mfLdarWS1IrcuV3RZ7
2fHU1Q3s7jPHmLkyWhDX+74r3w3cwVDJdvyQPgUdTHViZE5rQZfmDeQ8sQ/U
Hmm+hH2H+U56+pQWtGxwUGc7dm2/uCJl7GN2n/78SmxBIzwb5mG33IEpZDnO
Ajv7j+m1pfgW5Ge2z/EAdtm+w498setd5J4fJbQgi703vBL13eG0EbNhCvZD
qvkD7U9b0C6BuqAT2Gc4V0XLsI+GWDVUR7eg1QWTyGd67lB5Lu1oL3bBY6bF
ryNbUBrfJcJF7NdU+NfU/lAg9nSx9PlPT6HBdGDAp9EVDgQz1ar8+x3K9syw
1uWnAIYdk0EfXcF/LT1cEXvPnic91lSxIEu6vBDR4Arbw4e15LBL73A4RH8o
FtKu0ZAI9a7AqF3DIo29rkpF5/nZWGC0kCSn1LnCyetao4D9xXeWeHnxWDBN
I61k17rCOxdCoih2A6/B/s8asWCyg3Y5v8YV5Hv9tYSwX2PzZgi0jIXeptD5
YuQKekbse65iz0hhUOLwiAU/Oq/x8g+uYM1qVcOH/dvHIN+GqFgQWZroRdWu
8H2PkT0v9sQ706WmubHQkljwsbEKP9elbewXsFNEji5Rv4+FXyJL7zoqXeFp
0I0Wbuz6x3iPZXXGQuKP2Oz+967w4oCaHQd28VZWJcnZWHBdL4gYrXAF5d5f
TKewUx+Ycp76EQsWNwVcZspd4bKjQMazGjKKfMUwzF/UgyYN2m1L87xhqzf+
2zD2YcPA3sHXuD7PfXaCFbuu3mH5PbhuPCr6ocW1oAfdv+fb4ZvrDQW/i2LF
sVeGlH84+qoHDbbpOS/keIP5G8sJO+ynQx4WV+F6ctvcpWOq2L84Cp/Jxl7t
8S3T6AWuS3voqkqyveED/1mLAexf8gSjqJ73oIKiUV1m7CKkKzk76sjovBJ4
ZOXhuj298ItnljeMROlPCGEfek5vIZPbg5Iq/QJnM72BkSX14H3sZrQJqp+z
e1DKSe0jitjVH23KpWEXyVriC87qQTsonDmvM/D1rx8+7MbeWbvt8LnMHnRO
8ueFg9hbn+3OoMb1c2je+Pe29B6kLtBS7JbuDV+Nqhv5sU/FeA08SOtBTYuJ
fJNp3kDfGkq0wC7ZMle8H9fVk653C2WwJ17tN/u1gd+Xnu/3nT0yoY9HV5i1
xRsULmzfvopdUWHeM/NJJhhWuGwZNnnDXuvfiZ+xl6C5kPa0TMi/eq8s/aM3
NK5WcY5jF2tbifpRmAmuFlespuu9waBJNr8Pe+mfnzGnajMhgr5n/+k6vJ6r
cWdasS+u/IlU7c2EyimZ12Y13jBrV0SowZ534WeQ6yy+n1eR0nkfvKFbOWar
FHvz9XH37K+ZUHGxpGuhyhuCAkQNCrBzLOZZddJmgTpXgcbZSm9gPVVYnI09
PVz1xq/DWRCs49t+t8IbcjmWthKxH+lu4T/DnQU3fXjFXpV5g3TsikQU9ody
B5nUhLLg/Z3ynJV3eByHCvdA7Ln+HCQ3pSyoQKw0vG+9wbRe9aUH9vhj31HO
rSww1TXUtSvxBpXw/F4H7BJZXhFd97OgdcU9p7jIG97JaQnO2qygYdPUXU+O
DaOD/G/fq2v7g+etqAOytisoXNj+ch3LMJINzC/9quUP3tXd83nYgzVVNX4c
GUYMbfSvE7C3KB4q2Wm3gvZp8D24cHgYcZzuzRDFbjdu6HIXu8nwCT+Tg8NI
oJAmckrTH0K08wXasTeHs0THHRhG3yPTXB9j54vcIPHYr6Co/WxJbQzD6MTn
LENu7OGW11Mjse+kvZBKtX8Y2fYyiLdr+ENNZa7cF+zBDPJJAnuHUfbDRRY7
7D+tqIgaDivIfMAm+u7uYeS9evYLE3ZzFaPHb7Fvfc/2S6cfRk2mA/VlN/xB
TBoxH3ZcQW+YFx707xhGMqtL0bewV547neeCfXlcUJOebhjVl9699VfdH9im
Qi4MY9+3lMgnvn0YHRjSOpGN/YXE+kthJ7xuU7v2OFIPI9qHL6bksPsdkPol
tUSBYRa9I2M2JTAtpq8zsD0QvO6fPsOK/cvzuz2vvEvg4h953nHqQPCvjjn/
jYjzVcpdF8+oEpDfekeeowqEOOmo/Z3Ylymi9NczS4DD9xmB9CcAromxdudh
r07/GHi8pAQYu9nPfP0dAAbEqw+8sZ9/vkgh15VA/qVTSZsbAWAbNPVZB3sP
bagM6iuBCWLxD+pfAaCuwyJ2CXv4uyePI+dKYFmqV3TXjwDQSZy23Ynd6+2n
wtvfSsDMP9Ca8VsAaEQIeU8t4vOFSqWRl+4NXFjv8WReDwA/l5P3yrEPEzqb
/h5+Ay4jZW7sXwIgKy7xShT2QUfpt11cb6DDV8SQkxIAUzxZQ5bYBRIiwtIF
3wANnzE3z0oAzHqL6AP2B9tiVW0V34A0/9nRK8sB0NhlXn4Yu/Draxvi+m+A
rjfxoTAxAD6Nl/wVuYjjymCqJ1xqBN3mdmMf6veHkpSHl7/wrKDLO8+yDEuP
oInJ1X19A/6wWhBwOw/70NhxQw7ZEeS56/Nmx6A/1LLPhtzCHpVcm2ovN4KC
XHU/N3/yB22qiCIG7Dy0jKPV8iNIbkO+s37IHyYNA/s+XlhBgSN7Du1SHEG0
xm/ffBj2h6dy7Wvu2G3H3irfVBpBTO6pcRUj/pDbfHvfJew1bTu9s5RHUCUz
jcvbUX9QWZPgnD+/gjStdxaSVUbQ9T3zWoVj/oB6bIWTsG9zfjMqfH0EHeWQ
vpQ/7g+CD0lKathzS+hpg9RGkN0VNvrcCX9YWyrV2Y79+NSu833qIyhrh+Nk
+qQ/cEt2GVecW0HyqFSVXWMEbXOQeZM05Q/MgQIWNtipGPc+uKc5gmakoh8T
pv1hWzPR8jT2c3F7Q8q0RlCCkp5m1Iw/wPHQPXYTRDRyqfrisYEZNOXkWqk+
GQQ+U6ap9yeJSHOb99WavhnU+Y6hZ2AiCKyeHGS1niIiUWWqy+a9M4hHc3pA
H/sqS3Kw+TQRZT6SOr6rZwZVdyy1TI4HweVH32dMZojo+V+5P6+7ZpBRHk+B
GXa7PI7zRrNEFCuzv0ezcwYdMcr3Jo4FwaFoLhP9OSL6WJYS97N9BjE6m0ja
YC+6tPn45jwRvWtcvZ7aNoOSbDXX1kaD4Jt7epzGZyLamNizIdk6g9jbfWJc
sNebM8VdXyAiBZu1+M/NM+jq3qWTv0eC4OiCtr/SIhE9mMniDmuaQbFvIzN8
sJ/6Zm4kR8TP+4L9FW/jDGKScdhHi/18oBSX1BIRUV2+e6q/YQaViMXcCxkO
gudRS+Niy0SUsOAf5lo/gyJPr5btxS6429BPiEREOiI2C6x1M2jVJXw9eigI
1nfWjt1pmkPfPz38s097EX09fpMsxhsGrMP7zTYb5xDVQUcNS+xlF0RTM7Bv
zX4mPsWuk1ieg7C7/byqRHMpDIL45WwuYE8zkvt25OYiqneR+2aOvWiA50vD
xznkps8qY4f9ZMbdtGbsD3pTHQyxh/oLRzdjZ7PMlj1/OQxKBOLWvjXMIefu
jLETOotIum516Ql2p11H7COwz1xT43TDzvZMI2IV+/NbJ8ic2O2LZG16sAvu
buHV5AsDWf4Sa1Q/h1ovPX57VncRsc9pdr3DLpHePquDPbpw1y9f7MZc6/eZ
r4RB1DNbg9W6OfTg9LDICPbg1rydj7Cf103uC8ZO40/x4NNbRGfqbbLG//2e
r0pN8ST2jQbVqlDstXTKwhL8YXBiIry6onYO/Zpc/zWDnRIq0p2FXdS8n63l
9Cza9EbBF3OIKNn9+D1bchjsYwiSKuOYRbnbRtKrs4ionKm99tlKGLRcCVDO
5ZpFz1JKo1UyiWhPApkySQoDl6RWwadnZ9ExO12j0XQiOlIa9O0I9sR9mrt8
z8+imuQ62rtpRLSLLbFXbTkMuG4drbHhmUU/4GfQzxQcvx5ngoKWwuCpMqu+
Ae8sqvX8PReYTERjAeeZEDEMml9qDSlenkWNzr2sh5KIKJpY6Px9EY+jgISv
XZlFSqqevNkJRDSg96aYB3v4io7vGYFZJHiGiu1yPBGphVxrMFsIA2Xro68Y
r80iFnaj+Q8E7OfFXyd/DoPLIdSVfwTx/d9JClaJxft7vdm2dz4MHh/b83pZ
eBbtOVBONxJDRDnxwzvpsdNQ+AKGRGfRLa33ty2jiehAu70bzIXBQq+DxEfx
WcSqlvP0ayQRCck/rX04GwYjn29s3BKoBb49jQ/i31Eg6p6eie66FbSdldh/
4lot6JmEHQnGfjY5RE0Fe4GS1uk5wVqYGKtGrth/dXqISmAf5oq4+ly4Fua8
DS2ssc/vuMLNj/1Z+orCfdFaiFS+u1sfe5/cqwPc2O2iHPQvidfCNsm510rY
88IXN49hfzLEeu8r1MJtkzZ1EexyIwuz+7HfvElyL5eshbYC9i/nscddym+l
wX5mcSrEQ7oW7nJNR7Ji94ziLfqxZgUa9zfiJWRr4U7Xfp692Oc2XGKXsQvV
CuZul6+FgbyXzVtvKVBo5+8yif3yx+TiZoVaWHr99g4Ze8PaDb0+7DE3T1eH
K9VC/eK5zQnsO/1mhZqwv9fsalJXqYVg7X0xXdjN2QVZKrFTJaf3HLxeC0bf
jbhqsNe0qf14jb2C6Z0wRWwUOQ2zl66tkRA3b8d0XX8szA1+cF+THkUD7CqE
4C8kdEVQXfVDXyzERa7bflMcRWW2HmeOr5JQKK+sd0VvLEgpCx/9qTaKXAil
pm/IJKQiWeTyticW6ljc3Ta0R9F+YypNhRUSckkmXC3sjoUbe5Oe/L41iugz
b6+NLZPQ7INflS+6YiFB2PfmH5NRFHphRNJ+iYQUliZ35OA+LL/8cP9fy1F0
ffihJC2RhIRlVI+mdcTC9kxJum02oyjHR/BLwgK+/2LZ9fj2WIjeTyRtcxpF
zn+4blz4TELGVh0x0W2x8PzU1yBq91EkcVnJBM2R0O7sxZ+hrbFwYFPxE7XP
KDq4kXNSY5aEeFKSOR63xAJdVc8IdeAoShAVj5mbJqG8qCVmz+ZY4AtziKEO
H0W7J4+9cZ4iIX403PuwKRaKopj+bIsZRSKt0o93TpLQPasHmjaNsRAjshSx
8pqMSs8cOd7H1ouyR/d+XBSKg2JGrid9RWT0OI+NipaxF20abN9+5VwcXNKs
vVJeQkaKZ38evLq9F/2ckJb3OBoHt4wT/JLfkhFtjKehxY8eJE7XH9mwKw4i
GsPcPEtxHzf9eISw1IOOJ1ZN7N4kgKTEI2ajcvL/UHTf0Vh/YQDAE/JLWoSk
SErIVijjoaGSEGkrqciK7JWdHa89k5VVIqIhrj2yZ1ZR9nyRVCK/x1/vOZ9z
z3Pv/b733u+959z3eYmtxHBAxZcWcsuF/ojmZDhsyFe+Jf8B2/PR2nq+uYWs
KysIjewNh+ijjec5P86QZy2bw7krWgitf9ff3rpwGNw6P/irCP2L59S5ty1E
/IDlA+6P4bCaGsLTRmZIlkGuky2eQ7/+DZy6/TIclGMpG7LwvMmx/YFyEp7X
8mMO2ybHhYNWQX3IYzzHXQ8PUqmntBDHLJOtQwHhwCF3oGh7KpX0eWzsv9tY
RmT2nHnQcIAC3eO6au7PqeSc8v2nVl/KyKeuHys96LlJoybzKVQi87R5p+dU
GWHu59YaQ+e99HGnHjpt/KxG6N8ywtpVZ/oT3fv3twstyVRSrWtzKomxnGg9
+HV+PR8FOD2u71REv79u22IORzmpUUv6sQV96cchk1dJVBIeY6xH+MvJFH/9
TU70fWqXzu9Gb1SX9muQLidvXlkFHUQ3iv5S6JtIJUYneEx7lctJUFjsY0n0
gO8VbxcTqORp7GfGce1yYhSsqATou2W3Kt1Bd3L7787i3XLy4uadMhX0kPfk
ctMzKtnIo2dNa1VOpN/RbryELm/f/fcYukhGiNI2j3JifIOH9Ta6Zswt4dR4
Kmk+d6Z6d0g54WP6OGKM/kVJe2obepW8+AaBxHJS5Nf2yAb9nvCNae+pPsj5
DJZ+/lOwq+ab6ziDDRhmHdX9jD66KVjdBj2d7uLbf//ZgBpDfyvfdB8ItmYe
0kN/+zh2moXRBoSOqZ6yQX8j+IRBDZ37zDtegU02sPuU29tK9FJWmcGj6O/P
ZF5VYLIB6YPOAqwzfeAf+qL4APpNz4dBWpttIKz/eOxd9HMpo9Hb0Yd/ba68
vwXrNW1ieoOucGbKasVvCvgTXJYebbUBxyZeZ1pqH8S5vFcfR1+1rxIN3WYD
UvSKVE30ZBV1wQ70E+7f76Zvt4GIzft1k9ADMrLoStHr8tuii5ht4M1oU/Mc
enBc+9eX6BbbYxpbWWwgPeSEktJsH0zzVryLQt8WcoR2bIcN+G92eU1B7wOn
EE90p8Op0iusNmB72Z1nAD1ydtnYHJ3yc9KYmd0G2ALU5Y8/aQeSsjS0TW0G
7nVrXba8YA6aJG19eEA7vAsfOy6CXrfp0kEP9Lc/LleP+reDxrr+Z+fQw3+2
LoagU8R1/Y+h7x388vc+Om3Ep8okdAG3ErUnfu1QIjd8yQtdc0ouLBe9bsJu
+4BvO1Rv+pmTjF7yS0CvDL3ExrdNAr1BbTNjKXrA22DRVnQt4fmwxz7tYEQn
ovcVfUHQavkbeiNbnnaXdztIHbr8/i/6kQstNXPoj2TrWQ+h15X6bOVQnwGK
QEYYjaY5ZCTLdzzywv5Wld2VQlfK+3trO/rTywxhzY/bIVOG/r0Wutd0jSAP
evItAU1e9INsGkwP0Z993vZTDH1DRfJWG892qNdJvhmIXmveVqyIzvzEpr7G
ox0Ob1nNfoF+8t02Hw300e/ur/moVELdV8i983AOeb/J6enVWk+YPljLwoS+
l/j6CyvlkPA94XRt6JLH43XnZqgk83na1HG1HNIlVqij+skTgs+tj+pE/5rO
cOLK9Rzy7NN0eiU6/c2f7wvR98XGBZrezyHc5kIjCnWeUBRqW5WAPqt2tcnd
Ooe8SLVhfYe+ncG36DH65wgx+ij3HPLmR52UeL0nuLcKPDNCdz7FKpYVlEPK
+w6pZKKXbLtmrI4eL7ykXhaXQ1xGw9V5GzwhqY9j32F0hn2tdz9n5JCX0RtP
x6ELXTAs34me+DPowVRBDjlk7yXG2ugJgb5n1FemqUTfkc+UpiKH/NzExBSI
vi/xbeU3dEMvH122lhyyryu6e0OTJ5jlFfBVobeNp5859DWHjNwRjXZB3993
yiITfdDO4YDiZA4JPlKv8hs9SYT2zvuEEQDNARM5/Oxofv+l+ZITGOflxWxO
HIG3mkJCY89GQE4teInmihNExgi23EY/6KcwEYp+TmmAVfKqE6h9MdhQgG64
ypYG6FLBqaJ3rznBOyvjY4xJI6D1Pl9vMn4EJA8MnQ6/7gTLV4+Y3kQvLN61
JxLddijqZtUNJ1DyqozPRXdgU+48jn60oMLyl44T5M5zNm1IHoH71dKBM09H
IMfNwJv/lhPYRMn8u4Z+o4t6MgadWcQt+qquE+Sbcwplo4toPFg6hR6etD3T
77YTxFhVXKFNwX4dyXs1FzcCFlU73xfqOcG5p5Kel9Gbg4pvP0X/6hpRNXXH
CRYG7796gX7hHoXlLDrze7/WPfec4KPS3c+r6DuK+CsWYkdA+dLPPjV9J2jK
PrCq9XwE5p96Wyag50HnsIuBE8i8YTRNW6ISe1WJCi+OJGL+8Gv0hbvOoGe/
4fIz9A/Vr6YrDyaRNpnrUevuOYOaUcaxSPR/ksks9FJJZDCqmZKNft73B3sQ
uoXWJqmTJ5OIpY6Cx019ZyjoGprxQj899v2ih2YSuaaZYrbZwBm+X3tEnNFf
vTlgXqaL9Z5Yf+kjujhzka8N+heHJm8asyQStnxZyvi+M9DSpJx/gM640hur
+CiJpJ19vm2XoTMUCUhs0kc3XVF+6eKfRAIWx4dq0D8FGpTpoJ9QYHpfHJ1E
hJsO5NkaOUO4xElLbfQqt4NlK2lJxPrZFUc+Y2cIZq/Zcx5d2i+sWq4giWhL
ust3oIsp/ig9id7BoV7rWJFEyKWkPx4mzjD9qvKWHProvGb1h9YkktnxLlvC
1BlO6MMvSfTsz7GlfwaSyFanylvf0L8nz8VKDU3CXYvy569v9kPGFl2x/RpO
MHanqdcKve9fvES7Tj94xLwa+YnO++InRx76yoB/0eKNfog7BrHVF5yg3vLu
pTl0SWE/ZQ50Su92tWhNJ+B/xxksOjwJP39FN8he7wd6I75VIy0nsLTg/GSK
nqNdqHnzWj/EtDq9krvoBNNxd2heonddm+lwvdoP8zSsN7ZoO0Gn+ILUBHo/
p+Tl5Cv98GpohmEA3exQgxH/yCTIZPl2Vl7uh4cGjLmvcT7+9piJ00e/xDuv
NXapH77YGFzzuIzz4siVhhT0lyEmTYzo4av0NNo4T78eY1z+jp619c8ZYe1+
kJsZfs6H87T4CZ0Az+gkNLyKLFG/2A/Wogxnf6OH8Z++eAvd3fOMlIVWP4xk
G07U4vxNoG999BRd4fmmzDDNfhC7sdkvdm3+Xj4Z8HGFSorKKcxsFyIJdeOx
XQ4jtvAxQe7ce/SBzOL9g3qRZIx25uBPdLtfHxgK0Ll38R3JsYokU+E1kuaj
tuB/g5Tmol9aV3nikVckyXpdKz+Jrt181j4bXV81WkMlKpIMnJk7pT9mC0e0
rom8RBeZTrjOnhlJ5M6D6jd03+HZgXT0wJbuu0OFkcQyJ0/jxrgt5HhvDn6+
FmdMyeR1A5a/q6b1GX3zsRyFpLXfo+39/NC5P5KoX9t6UXPCFv4td43Ho6/e
j7Q+NxdJbnouajagDzd7h8Siu+e42u6kjSK87bQaZyZt4UDBR5ko9PUjFNvh
HVHkoqz0uXJ0nizbvjD0278rrXP5okjmC8pJhSlbOFbw7lEwumvnHgsXmSjS
y7ZN7j16V4vL7kD002YRJqoqUSTlQb744Wnsr5j8RELYFNyNmd6vUNMHh4x5
AmLTHWHI1PTGSXSmqNDkrNo+uP5eOnc5wxGqXq/WjoZOQdjXsD176vqg9+3n
Np0XjiDNvCDhjz6yYy4koL4Ptm6nmSt+6Qixz1UiRdBnv6XRLjf0ga5Z3sa9
rxxB0532V0vIFCROvTMzbuoDqUcze9yyMX4xl6Y1+mwv7+ee5j5YP/xa+HuO
I+g8jEvfid50aeyoSmsfiF1YkTmR6whuOU5LhcFTIE23Iep9Wx9ImjRDSp4j
xIeQ07fQ9/o7zfF34O5rQPA4fb4j8Irco6xH9wk5pxzV2QceV5gU9QscwSPa
tP05ZQpMSi0iGLr6oNjZ6mj1W0cQmexiOYteXzz3zaa7D9JX9ET43ztC3NE0
tamgKcgUr+Ef6emDjy6fuXw/OMLJ2C7PIPTNpT+NtPv6wC67hXGi0BFY2802
0YrOQBrrK20zxQ6o/NHY+/GSPShUHj4riL5pwUebAh3w6kvtP63L9uD4Vefx
BXQLitLF1wodcF3YeO8kesbuSWKHnrP8+UKrfAcUdOYqul+xhwSnvt/P0CNV
VNV+yHVAWkPCLY6r9qD4V1ysGn3ZP/7sDvSdG448ykHXC5+8N4Oe29p44ohs
B8xbmkWfvmYPg6c3xrCKzUCg2Be5S8c6gHuTxpuv6Alb/evl0O+9rT1se7QD
/Ehng/V1e7AeN1+5g85oH3YoSqYDuB7TjjDdwHpbPwj5o1/0lud5L439Ve9c
Tkbvr7p/LRedfaGCtUeqA4xZ1JlldexBpMLBqxtdoEVw498jHfCn3JSvFX1T
9WzOOvEZuCVm9pcT/bq2xFHDm/agXf+p+yB6IG/IlNzhDnAqjFNZd8semGRp
Wk/9o5IRTfDKNQsjEor131zrLOHZHxr6k+hj0tUCcw5hRG5j5Il2dItKeunj
6PkW2fWiXmHE9FZlysF6S4iJZ7qviL7w6NeDB8FhZEzhMr0jushjtigFdJX2
+G1ZcWGkNVn1XiO6oj1vtRz6tdmU15NpYeSc3/MKngZLGHGQ/HkMvVZ1o6Zg
XhixmbnNa40u7ae87+haPqK7dXP3i8OIXb2bWw36qbQbatLoOq8nKGm1YcRi
L30/Z6Ml8Lda2x9B//RKX3SkPYz4jkzKmqEvMoYkS6ILfVZo2D8QRvp3SUWV
oZdeeF0vjs733MLozmQYiXo/+IO1yRKSU9sWRNF1Q2kYkhbDyOfiBTVD9OyN
fzhF0J13TyYN0IQTwmeY8RH9rwPPcSH0A4UiCtybw4nVtCLttmZLOPpStC+S
nwrX1E9Z1fM1gNHOe+6O523ga5m0chZ64mM37psHGqCz+CHTEPqlLInsMvSI
+NJaKm8DlHwqCldVswEfo73sXeilL+kt3fY1QK/UWa58dN0/65yn0bPLznOy
8DRA/wpL6h51G6i+0j64XoAKo/PRZSncDeC8i0vYCz3TO+bMTvQl9Yn7UlwN
YO5tkDeDPuup9VIY3XRKYUvN7gYwgFmZyxo28Fh9dcsJ9OaeyNyrnA3AKf+u
iKBrjTw1v4L+Uvin9iRHAyg6EiX+CzZw6oxoiyn6k1+XfjvtbAD/BfpKCrqy
VZ6YB/o/laLoLewNkJfsf/oPuqKhYFAUuv8x/mMJrA1g4qFRe1vTBrj4wqay
0ElXZLf4jgYwDryo8gm9PmP2TDk6vwyTXTlzAxiSyE8SWjbQeufAlxl8/jvT
lvfGLwaRi0pyN563m8M/dZOuafRlrnWl5rQUsivqndYQuuYvkba1PFdcIYoP
QzZRSKsuVYW3wxzarpo2TKJ7OQDPGxYKWYweUNJD97M9WD2BXvN8ubmDk0LW
HQ+QSUR30NApGV/L7/fN1vUXL4UYXJ4XGUB/MbTl/djaePibI8ohRCFpXcwH
uDvNgfew3OtRdMOStK/HDlPI0YrpXTfRxxSG00fQ2/9df3JDjkIidnpse4pO
Q8+YMIy+5NEg63wSy7e30vehW3llRgyhm+9ZHn+mSiHRP/uWdn02B+XyqoDB
tXZGjUaWXqQQccdE6lV0t8Kb7t/X8omVB50avEEhTnf2DkWhHzSzsP22Fsd4
YZ7uHoXMvbza9Rn9+FcakwH0UR3WBD5TCmG6dL6ercscrtV3/5cSSIWHEZmy
+6UqwUbkzFijlyVwGNa9yUZviBdT33KkEgTVG1nYvS3h4ab9uoXof/PV9X5L
VsKhxp8Kt9CZ8gYZq9G/DTJYf5eoBJOMYsM09NBbjPmt6HfErnrXi1fCt6/8
YVT0vG1RN7+i6yefiC4QqwQnk8PF0j6WsLMqgGECvelkdWaCaCWIa3wbdUE3
dhnL/onuvnuo0E+kEn54i26vQb8i9+IyTRAV7knE1FsJV8Kb7dzHtvlagv9y
+z8mdJ3A8b6bQpVgOJmtdwX9Jbn3fCf6eZnWqTOHKoGW5btfArrRY51z+9G5
ZS4uSwhWgr1Xfu4Y+oPzH2dF0d+Em23aI1AJH04I9oj5WcIddvdwWfTZK/t3
MfBXwsczijT26L++vzp6Gv2jrwX/HF8lWIb+OliKXjZvErCW13H+QaRJeoAt
sK0T/jBwxxzyo2/xrvmeI0vWkTm2kCJzRfcmumdzzvs6dPPtE85e7bYQnyu2
oU/PHMQjddXXfPnHPW/r37bQ/7DgxVX04ukHQ5/Q2+pNgu7utgMlh3GNz7fN
QbS9127N6QNWIrQU7eBZU+3Pi+heKmlMa57Cwx5//K4dtFlfjmnVNYcajZZn
tehlj96liPvYwXvzEAUN9IWRqxJr/oAykLn3pR3wVzh8b7hlDsyblSpq1u73
ng3M2dpsByuW27zOofOWe2mveXF0Sf6/H3bA7KklUHvTHAQ3HhqpRvc0t/kw
zW4PSr9P1CujC/QL26w5d/Gr4j5Ze7jX/u1BhQ6O51NB9GuebHG/rA7fc1d3
C28/js4rqx62lg+Tyzmp8oOHPSy2HcgjN8whW3OLgP5bKvka6yQdvFJCxva9
2GVy1BqkVyb+maF7DpXbGi+XkA/CxmdOoss929Nuj26/kP321N8Scs3ovfVu
9Icyqeke6L/aFX9xL5WQ/3rCkxZkrMGzxtPpCfrRIBuppd8lhNZ5XVM9Or/6
e/XItThCF6zbf5WQwMt/llLQt9af2JeIPpffnPdqEdtj4Mr3CH1YYf9CJnrv
4Z9zPj9LiHpO+AVtdN20a5Vv0C1yi0XvLJQQBomjTsLoovSj4cXoM9LCpvI/
Ssj5GaNUevT1V2rv1aAHNCpmss+XkDsjgs1fpK3B7xnNkVb0xy5/RuZmS4gv
p/2ffHT73iDaPvQdFy/z1lNLyGqg9r5AdLdNVi3D6Fba126lzpSQDcdLVPTR
L4i+iqeifwlYH+s6XUK+HHlvoYA+Z+rLtZZHVNfUcOewkRsMSibkvZewhMOP
Ck/Hrd1/fm0nn+vhBgnnVHYviVtC1cR7s1j0+MTh2y5xbkCXKet5DD2vwDMi
Bp2269Vj1Xw36LlqNekgZgn/feP8GI2+idqaztHoBtP3Fi4UilpCo6HLQBQ6
k5tG3ciIG2zoLnz7V8QSmC9k0665Lj/fdN6qG8wVfdoth/4t4sWByLV7+y6a
W9x2uoMdN4+bkzDuN2StlCPQdfa2i6iJu4P+f2Too5AlnFPYqB+O/uZ5hhqn
ijt4eaScXjlkCesSjDzD1sZ5RovpmJ47JMe2ZMijm+lGJYaiN1apBOQ7uoPv
deVNzoKW8NwlpCgEHSJZMt3D3GF943qTYgFLyFm50hWMfj9fsFo9yx26VzbU
/+PHfVfP5Nxa/tXEwsDB3VXoPzUPAbpKoGcfty+ev1gsMlMKKknO7RPCh7Tt
wLTOUk8Und305ZxsfiUR/qUqu3rRDiIFb48qoGv9PizTlldJRv2CzrSh079Q
NVZD96na5GyUW0kWuTZpp6EvnZOa0UFfNy5WTvO6kljnE11H9HdMXOam6LQP
UxiisyuJi0aWsTq6yxTtnBN6t5n+ObFXlURkvs2aFz1kYtQ8AL1u0Saw+mUl
SYiTdPmlZQcSGz5RY9F52Dubb76oJDMX6r3r0BMUMk1foPN+92BezKgkEjvi
g56hc4X6THxA5zR01XqSXkl8htMjLNGn19/T/4SuWVQXuj+tkmyqmYo7ja7x
BL51o2+dvddW+LySdBYZJnGi+4nvvD6OHs+szqyVUkkYarnTqJp20DMz0/Yb
/aSUt8ZEUiXJn9zyohz9hT5TNC8+/4nFssPSV/xB+fqrDjFeW2jV0szkWVtn
1sf+feLkDw9PpMuv8thCcTnte250lgK1kqEEf3BmqEhu2GsLiQV7K/egh2V1
u8tW+sPNepr/4rjx/C6U0ciJbuUhfSJk3B8Y3942MuKyheN8Tzs40J1b79CM
bw6Ah1ODn2T22IJ58nI3+9o6eeRaEUgEgH+wjwDDbltwTanuZUW/dJrNNuJS
AJyvU/fq2GULLwX+9azlN6hIChWZdgiAl8VHvyVz2MJhyYTP29ETvjcMnngW
AAkU5WMWO23hQmlWy1b0j4klETHlAbBX3yZYkd0WlNr5ajev3X92MDg9NxoA
PHdrR7aw2cIJk03Fa3l+lv4r/nma6Qk8zYZjX3bYQrjv9ZyNa/WOkMR4sScQ
YNrt/4LFFqyE2BMY0Hdm3z/38+ITGCqL6LVntoX/OEokpg9TSaN52JcL6vWE
boYri1bOCap0uB5uOEIlDg2iCWHn6wnbr0NfO2Sd4E0qNYsb3dRH7/bnc/Xk
SGnL5nT02TnJcRn0rjIhnl0q9aRBfZucA3qE/OQ+TfSxp4H9N87Uk5Opo/dV
0Su8Wa8bozce84l7poz11lwO40KPaswN9kR//4HjyveT9cTunW7x7DEnEN9W
XvUUvVfhBPOBE/Vko+P60TL0dBXlpQJ03TG6OgOlesLNIr8lHH2fk5xQM7pL
1033TKgn/J7bDhugf0h6fmMc/Z7YBZlp+XrypMXpylH0oI9u/uulqERpe9+U
qFw9Kfjn5rgJvaS6+R0nOi6izyyO1ZNtW/c+/XLUCUzLQoYOo2fMF17Il6kn
/224XJSNXpBZvUUNPfLI9vW/peoJwyhfnxt6hRarSsoKFYR5f3lz2EeCFndL
sjX9IzjcuPtfPLru50vAHBEJqneqt6jTPgKbiLAX0Str+fA3zDPmRYKybbUl
P80jYH/lpBmG/oLh3zPa5kgIomttpVl1gkS2jvlAdPEcybPLU5Fg82b0UO+y
E2S0PA3wRY/vjJ9e2BgFmmIbXd4sYXsGOrk90UWCpZ5M80WBA490/ZPfThBw
yvWlMzrv4tzBkRNRoCJuwWKw6ATPaGIk7NFLOWuKvupGAc/GwouKC+hs+3Mt
0dV35qh9fhQFdzSZKRzzTiDpxXXoATrH+sSeppgosC+wq5ynOgG9pu/T++hG
1ODbNW+joO7rzELdtBOUO97deAc9bNF+sKQ9CmqtrLmeTzrBXvqcBzro48Ia
uu/nomCQZ/Nx53EnaKYaN1xGJy82db3eEg2UoIJbl0edYPp6l9x8+AwxN2NS
OdjUShhvlhdl+btCQpeayO6IGdJtLmnN1thKthRt/xqFLkN3b48yumPPYDx9
QysxXmRb8UBv7t7FaI7OU7+neqGulQQyte0yQ3e9aL4QjR5x79v04KdWMkyj
LH0NXd/sXl85emqVCEtbbSv50mWmeQo95sBS6TQ659YN0mU1rWQoVMNEDP2o
hchz9sgZUnrT4Orr6lZieGTMkxP9psZ6LyX0ex2aDglVraSHSMVtQD9QaH3X
GL01pCY6qLKVpB2Ry53zc4XsLB/FcPTPBTVvnStaCUT/rupDZ+OV3UXQ4bZW
u2l5K9k6bdxTje7I9mRuDL3n9X3qjbJW4isZMZW7lmfb3bmKOWqGWNX8t1G1
tJVwmdmuPEXPv7M1Wg69r0KSR7aklcgnbd3si27y0bBZ4Bd+X5KHR2jPpEGV
JQ2EK3uA7yBPExv6yIdr9kJ6afBUVebT0ZMecMbJ7B0tenvJmZWLTmmQ+sTp
zFclD6iL0gyYXaQC39/Bh48i0uBDWPN7d/CAm+fqVL6gF3Ezf36ekwafiBTX
QXkPsE/t/lGL/nTonVDjpzT4bvLauu6YB5CPj7wL1vLmrRZZLA6lAf/S8RIz
GQ/4l/CWPhm95SBDBtdqGnypnF5hkfIAEX3vB0HoxcwOTcoc6XBV5I3IO0kP
sOaeLnVE57ddHn4gmQ7MIVGaN8Q9gGdgbNUAPX2T1VTE+XQIV39quE7UA14W
OvBfRP/tVfW92CAd/CorLFOEPKCwMklWEX3+WXfNiFs65Gluf3hG0AO4mG8f
FUKnbA6N3xKXDpPaj29PHfSA5jf5PDvRJ7y67kgVpAO/CO8pygEP+CIsb9Rz
epJEMMiEz78bII/FTF88onjB35rU77JnJsl/jzQDtdBV1fqOrPmploeXn6Ln
XTv8+M3bAWLfoFrkhK4mGV/zD12u5Is9KzrPq2KlNU/rPSSle3aSKDeomdgU
DBDNWfFyR/TBgl0Jpei2id43PucPkH1hqUprHvbaaAOvyiSxuOGjIoOeFL27
yAH98jtOQ0/073suSEW/GSCT68KOrHnRW+GaYXRj+u/cS3kDZNsnphf26Hpx
Cbynz02StxKyDNfRBX967Vnzb5pWjunoDytvTBXmDhAt9/VP7NA7qtObNqpO
EqUvyk270VMeuvyxRe8dld9rjN4W/Sf70esBIlO+orfmIc8kTevXfJd14Nec
ASJk+6jWBv1pr2+B8PlJQnV5bwToz578E1pz06Vk98JtQ0TkfeUf56kxQjG9
USru6Q9RY7E3rm0fIuyqQ6yrk2PEmD1Jdjv6HpN7kn/Q7fm2iLigk61+r2c9
/GH/rXUMUcxD5J3+ieOrE2Pk2M0dvM3o3bEmn6VYhojsIU9NF/RQRiVKNvr9
5YyUDnTjkOabq+NjxHn3tj+B6Ouuv3tgtWOIvP7Ab+CCnhvrpvMAvTk48ggL
6xBxKAswXh0bIxNB4UXn0RkdT/95jS5Rs4xH8zEysE6VQxj922z1ew22IXJ+
wu7+6ugY0V5MMWdC927YaUtFP3qa5rYL+ga7hPJJd384PHlUPJAd27MSrr06
Mkbynygw16Fz7z80JrRziFw9JK3sgi4ALjcy0V00p2Lr0B2oQxKrw2PkQJhe
ki86ReORqhHHEDlz/xmnC7pF2NjgffQN15Wi4zaPkXnWnxrMu4aJWpmfcJ+u
L7Bl6SXs2TJG9nnIHnPhGCbbpQoH+tF389GkxKPzUUz2Tu0cJn8GpCiD6DUZ
u1O4t44RER0f2qvoh8pWZEfRmznzExLQjRmDBivZh0lz19ahCfSpW5+iebaN
ke3vXEsk0Fn2m/rMoLdevRGUhH7JSyfmGdsw4U5mFZhHl582cuPdPkbMwg88
ZELfp72x6if62MpPsxT0MPruk/asw+T80TO3/qAHma1cO8A8RlYXbVlHdgyT
JrXWhWX02QNux1PRR33XD2qi94Slea277Qv1dG58B1nGSMBXuyzCMkyeM9bs
oEMfpC5vSEc/yNprJYR+J1vyGQP6708Lg/w7xsif8wJHo5mHiar7xIFN6M32
94sy0BUz7izRo8e4T6VvQTdKtDS/7tpLwr9x6ywOThHubQOJnaco4BvMfTbX
vZc0cspPGaDTGx5V5ULfoHyabePjXiIud8ys+/sUsblfRL13kgK5p8Y/3/Lu
JRvj2EdU0JXcTQKyTlDAjJ0usMC3l+SEdWh8/DZF5AVP7/t5nALCxyNkNgf0
EoqLVbYw+tn286/l0CdV4z/fCewl+wsWaJ4NTBGNBdejnkoUeFO8y/gDpZfM
B186sw1d8d/AhzpFCqRwMf7YFtpLgk1i3N36pwiL/oMjLOhjP4zMDMJ7yctn
JTnzX6dI4zOBjGtAgbxK2YGiyF7y07O29Q66AzcLW5ICBTQ4HU/tiOklR2zy
x9q/TJFDVw85jctTgMXp4DOjuF6i0OA5fwp9ucSiVwz9thlMl8T3ksVB6dmC
vimyo25c0k6OAhlOpaLsib1EbUfTt4PoTycpj4ksBV5f3LDQV1UGCl0DdKpp
VFBkX6n2F7aAyb8COk9qy2D9N21nibS131n6W21CX1HaXyFfXwZ5O3kXdqJf
zVzl8heygNTsBf6ZxjJ463FGfzUV9ztO16oZ0ZMaYvzjW8rAgq+qfRjdrCbW
1O+QBeTsZ5tSay+Dc/RxUI/Ok1y+nRE9WF5fZbWzDLL2f0rNRT/G25rnK2gB
tIl+qdndZbDqo8EYjT5/s1prI3r1Z/d1un1YXkrUyAXd3SR5zkfAAuKN1K5s
6y+DfRL6VffQ+fT0n/yHrvp9KqvkWxk0uvzkUkXnuLTtoA+/BYRV69A8HCoD
rv1fLCXQI28mFjOgH01O0OQZLQM33j2VO9G/BHNc9D5oAev+vUlsGS8DE/d8
5tXn+L7dYD+6Af2VbsyM21QZqJ1KvTGMXtBC7Lz4LMDhNmt7RyyVlPfcOJzz
uZw4HO6TMZulgHVpx1E1dEau8BPiw+XE6NTnbQ0zFFhthhNVMVRSFPCGI3e+
nOS2K74VnMZx2KQ9K4/uvuBSILGugiis2yvkM0kBcZpdSvnRVDK4/yNH3uYK
8nLU0Wx4nAK/MwOPCKFrU4VPSHJWELWX192Oj1HAj62gISmKSmQOxkjk8VcQ
wYdVt5+NUECXErKRA70/sXJUQqqC/LpWvm15iAJs9/nGAyOpJFDKWi/3RAXh
plwNvDJIAdtZSxM6dM9i0yTxCxWkWIbS8+YbBSxcHoXaR1DJ4g6rtJybFSTJ
+cHPbQMU2Pfg1M2ZcCrZxX7+oahJBTn35O9Xk68UqNrZWK+HfiClaDXLvoKM
BCtE1vRR4NNXjv7OMCrReuqnKeRdQS4WKnDt76UA2XcoXAV9dNjOMDOsguw/
Rmvl0k0BY//1K8btvcDz/UVYR/MUxATLOJ2/bw1DHYt7Gtp64bW+2cxfdKlH
pj/a0LV92BVE0KV+Xj69r2UKhJtWDa8ZWkNTxl2doNZeWPK/9+wMupsbtX8A
/Z7SV8fZll44LRC1+AD9SKCctoGRNRy65Bl9Ad2wjqoajn6eOlI7jS5BvVSQ
29wL6eYmSYXon+Jn5K2MrSGQ5VIrC7oG+5Zf39BfR2i9XkK/8Mlt2qqpF14V
tav81zoF9C2s+91MrOHJrh6GzsZe+E+v5KkIevXpIxEMptZwZdMtHmn0V+tb
qBfR/y28ZghEr0jediyqoRfGnm5QckR/0epvt+OBNQxPzFz4U98L6yVuByei
t/aUjcWgN4z+uX8NXbloYKAa3Ybh8hUeM2ugJIq7FNb1Ao3CY9EZ9BjNM9Vp
6Otatgf5FnSCe9Goc9bENDz7wjouyIbz4s6OvZvRC5c5dleid9NdEXyIrpz1
JoeS3wl/uz+960Mf+X3O+C36r9x5xR3oaReXLi6gL7+de7GCfsy2sTnyTSfw
maTPbpqcBi3Fs1Mn2HE+rpzW5UT/xt3hz4u+n6Ip5Ie+88wtanxeJ8iZufLJ
oqc932zSjE5zfYfzPvRnVzNLNNFZXRxesO20AI6jBkypuZ3w8KvmNSP01F3R
EzfQfYYvxwig71yx/+GGHmxjKJCMbntn5GDW605YfsMdEI2+NXjSYBydqYA5
Xwzdg/7k/tfoV+9zp4pyWMCDgT6lNzmdwDIzUlizFn+JbsgavWL4ZKM0OuuD
/7QG0EWU43g+okvVqlwrzO4Eqmf6+C90wbPDN9fvsgDKDqnMS7NU4vNCr8ST
P5tY0xlY5+3C/d5CQeIx9E0pj3yOnsom7CzLnOLoY3NGLlzoLQempWduZ5O2
HW9yXnF4Qbiw5on16GEGgY1JztkkMTVIUghdvsZkephKJScTFFQvx6LfC0rJ
2OkF898/PKpF38LQm7PpXTbhoebRHkRfjpdbeIl+pU1xmbRnk6iBFY0Udqx3
z7wGBb1K7ryI1Vw2efnZNIAH3d6tN9QSPbLoAe8OhhzCb0FXEM/mBR8mf3+8
tBbnzui+B6w55D+1sgZO9Flnlfqj6C2HXFhreHOI5cb0tihW3PfqNJfuRlfJ
2/+XRyKHFBwvqGZFf5zp93R1hkpEIqraHBVziEbUdEbIDi/I8LG/9R2d7qHW
sw61HDKSruawFf0051OGSnSrgfc6ojo55BxLj0wAixcsnTct4b0xDJdur5+M
aRsFt92/Irt/O0JTgVj28vVhaDleMlmEzqS/+fvgH0fwSfzwtAOdhUFhagC9
wLbr0MySI5Rv2RTwCj0oy3GKtn0U1M9fsf791xG4VnkcvNHzj9hP8aEnfw8o
Xr/iCNKWqwa66MvxUlNn0V0lbRg2/3OETONk7aPobWN5kyboObI7NNhXHYF9
fPMJZvRs5rmJIHTaX/pRPOucYNeUgtjktWGg2T0znot+8vaDgUM0TnDBWmpP
Bbo83YuxDnQlG0F+qfVOcP3xwsan6B2fDo7+Rq8RjzVTpHWC9t32i9bosmZ3
hzk7RuF5UEmBCh2Wl6v4roY+OKs7qICe6h+zcpHeCZ4MdTQeRAf1Pd9uo0fy
CJy8tcEJ/mN79WEderlv9FdP9FPnTfwMGZxATA80Ff5Sya2VKtaMpQRSRK0O
5aLHc/rqfWYp9B0Wn9iEGBPJPup/Nhzoh9OY6oTRK50GWbI5EslbkccXd6Bb
Xhd0OoAumcK0WUIgkRzLkRPdin6Ku+zAHvQDZorr82USiZm16AZGdNefbdU7
0O/dtf8hfSaR7HLV6aZDXxm4pceEXsyYO/DhciJZbalKX6Vzhdihez9p0VfG
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
g/jKZkHiE7lHeeskFHd/itFdxPPZvXvZDjvzJ/6ML8yTEFp3RvH2TwJ81Gi0
qsGe9G784WXsd+kjuoi/CLD416d1V/kscL6UVplgmgTSref2z34TII968pgt
9ugXjCwPsOv1uGwrWyLAwR3rKQi7brlV1/qWSeg8wJPWu0yAjGuf6XkqZsFu
7VxSGHZrTdejiysEMK+LuHkHu8Sjiht82LVY0hrYVgmQoG5RV4E97UCxRBbj
JHwyjLi6/y8BnrYoiu/8NAvssidnFbFv3VSbUf9HgAhjTj8b7MlPtXNrGCbh
3o8yJ4s1AnT0LwyXYnc3/2prgP0g0+qGxzoB4jW7FTkqZ6E3bfPgGP0kBPOv
BcZt4PEnVoRZYSffypmxxd7GW8v2YZMAjXWvx4uwt3wayVilm4TTHQZRrXRe
cFbh23a3dRpaZb8yWdGcgDKX4595rbmAW2ZJsxP232Pl+XYjCWjXvRaGE+su
sKPQLPTh/++ffnf2FpxPQN7pD2yWsVtY9WraY1d0DNBpX09ALyIDvnzYcIGy
t0L0tthZ26a5fDkSkfq+bZIOmy7wKP5U6W3sJeoJQ7JCiUhC4Z//ITpXGBY6
7HATO7NwUhr5SCJiqzUb/45dV2tB1PL//2vIm735VDURlZcdOZlB7wo8HP49
ZtgzTj6WUjdMRMuMD2NvMLhCuNOcvyn2QJyUvywTETFchMrP6AosnuJyJtgP
+SRmZTxKROJqamcGsZNF5EYuYbdo5bAx8k9EaRwdcaQtrnD37o7HBthntBuF
mWPxecmts4ZMrvDHsOaQHnbS6fqhooxEpJJ14iQHsytMD2t26Pz//w4rzDG3
CxMRRXdXWBN25Vom9SXWUeQnbz+bRqQi9Z/qfhfFI+EYN3PdMNsoimiOPXYL
e6PUDWsu7Jpih8/WsI+iHv9Zv0PYv3v6qHeJRcKlMdfP2RyjaPHG/eYfflT0
6fcLkafYdWRmIZJzFHnfEeAuwn4/oX7dEPvedZ8y5x2jSDBt7Yon9j12P/p3
Yn+veErh+s5RdI99e6oqdrIb//tO0Uj4Wynw+gzXKKIvOvuVCftstW5gNPaZ
x+JCB7hHEfH5O6FmXyoyuuBtaoj9jqPBU06eURTWrmUehV1H/OPhndjvPnzB
uIy9TJcj2Qj7lM78WodIJIzd3e04wjuK8vkY+/ZiN6g70ByFvUDzw3jNrlHE
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
LfwWMBt3NeLe7QlYP00RPIXuSd2TWLfHAmKdnbUm0Emif3mdXPqJKEI64DOf
BXwIFN1uYjcBslU/OHLvYz69WsllvBbgEH6nMn9mGsSVQs7SnMkmpAbEPPWW
NaGK4OT5gK72daM772w2YZKrdvYYutOHWNtc9O+Juvdunc8mmD6abduB7nd3
R9V79Kn6aGZelWxCY+l27fSSJqxv2PFkoxeerUmsv5hN6NpaB9ah/7iWb5uJ
fo22S97rUjZxbpf+1VT03S4/K9PRZ1l+tB29nE0orp7a4YNebbHCnYaeZVRu
O6aeTdjtZGk3Rf++d8UmBT3nbwhtzNVsYvlWSySg6yYMViShCzSoxlzVzCa2
zgbc4EM/P5+3MxFdaHzyyFbtbKIw5wj/8qImJLDetn6H/uPsg7pCnWzieFpj
fxu64wJbeTy6Tc80yfp6NpHeafguFz0/5TVnHDpNrvo/fr1s4uSZPvNg9Nti
7FZv0EvKw8Oa9bMJhiENcRv0vSlrxZnL0xARbupP7E4gzJUP8DaJqcO7pVza
//1CH8vZXt4EYq9ly8409FV5Q42M//3Hh/VVvgSCjcuOwxtd/P7G63R0tsfa
xbz8CYTKxU0sN//35PDRNPTdfZOOp/YmEN1bAxiOoq/VCh/533vHPA7oCSQQ
PRcYaFnQk38muaeid7xjHnMWTCAMOdxpRkTVQXR279cUdFemF+/ChRIIO7OJ
fwT6/T9BO//3s8KchvnCCYSogvpiJHr8+B+TZPT0kUCeVpEE4nls8pwDely7
emYSuoTeppY50QSC6rc4qYruVBi7lIh+3Pl2IPu+BOLHsvyYMLpg4K8z/7ua
UtuFg+IJRMfcg6FVEXVIuC4cnIA+XHB08xWJBKLdMauvDX1957XOd+jOHcGl
tpIJxKjb984sdFC/47TbdIgokE17RZc+Cl0H6lo0kshgn5F3JdFkiLgfctDy
Fnpmy2izSSIZ3Hgk9h1EzysLOExFh7/pDQ4JZOiOb179aDxEROcUrYhnjMKZ
PK5az3dkoNd933gO3fTmx3J/dHtpscrQt2R4oFr5ttFoiJDLDX48jv7Au6cw
Pp4MmX70jjfQbySdOH8pcxS4206n58SRYbeQt9IvwyFiXiqfNgN9TUnpdUUs
GeTFDrM4oMsdo61iyhqFobHJgKY3ZAhN4Prxz2CIsCwSf2SL/vi3kvNADBnC
MqTf+qBnJu49Xo/+3EreZPY1GT5dfmDFjn5udmzyQPYo1Hv0q2xCD4r4d+D1
TYw/yPdtMPq4htQB9ldk8I7KmRNDB/sl7Rn0hNU97ILRGCfp9YecG0MEZ4Ac
rcb7USiKK5o9GEWGgaWtR4K3dRPfVYrZfap/ww7jgbVtUhYwcPLb9G36bqLU
SDn0CvoXbu/1HvxuF4xOpqozdBOvjHlYd6G/8G9by0MPnrUwPbC9m1C5evrp
YNVvkC7+/s8fPVLxxC4Wxm4iXDadNgNdLe3ZkhH6SoVJ/ST6NVbLR/fQk41n
/xxFHzb56fmNqZswGnX4q4C+1Ec3xYjuzfRJNpO5m/CqopLp0f9Kffs1gPfF
5qypn89YuomXiTa9TZW/QU/lbG8hetDh+2E2rN0E+bnB1VfonSdsWgPRr/no
gRobnjf0VbkZ+uFN576Q0H1fho1LsXcTOYliMgfQdyfWl55Ev6om/IKRo5uo
b1l/tViB8YszZLOi94Qzyk2gbxIU2VaB7hk0HzuM95SxyaXB2h3dhHBYuH0A
umNXSHAJ+sP4xLbusVa45nau5KzCFBEydrCAb1Yf3tbl6ySOt4LvHDe7ELr8
7MfWtRl9IPT7W20nWuEK2xvzDfkpYn2Eb64XfURBVOvY71b41dFR1I1e33CN
pRxd1uZx4zq636XP2z+ip6ZZSsSjF7etqVEmW8HO1uJGBHrQA80zXuiht0Op
wVOt0AElaXfRnZU4b5LQGyXgjO50KyxXVy1poJtsynI8ix6yQvdJYKYVdmy4
n5NBVy3dGyCKPtoyenQM3WhmOoQJXeauVSwd+mTKUGbObCtwv9rRNSY3RTBK
Pc0bmdaHjzYrIg/mWsFl04QwBb1v8HENFd2cQ/KV8p9WKBd1sk5AT4q59j0V
fVugIxvjfCtIbs/P8UQ3NKAZC0AvaGh/3II+/T55wRB9i4jXkjV6s1vMH0W7
KaIirmST/+cWiGZIP1XLbQ4O/RLzA7eniM3PLClNlBa4M3lq/24ecwh2KB3z
Qr/Dvfxkd20LfH5+cCcZ/QJJp1UYPYHORp5U1wLiTU+XitGrR+fzqm2niCN7
yifT61vg1AO1FoZd5nDy6Cs/c/RK/vnw+cYWiCPdSdJD/+WqokmHvlxPd1K+
pQXoTNccUtE5Z1bZkm2mCP/ZhZYnbS0gqDp5dBl9z+ei6gvoB1SrbtV3tMD7
GaU5ld3mYHbAzXbUGvPymjy/s7MF7kv+S4pEv250gdEf/WPGhItRdwtcqOPR
HkW/+3T3Gwl0OYVzS8m9LbCQFr18nNccFH79Fa0lTxGbuJzsZvpbwPiVR4Qv
+qV3P96S0cfn3fpO/GwBuzu10h3oJxY+czKi98frqngOtwAr7f1SMT5zULO7
arVQ1g8eghZMRWcniNxT6nu0XUjw7SKNxhmiHxJXqU1+6Oyf2bkz7pPg56rk
iRD0whHNcD102kun2LaiLz5u5O9Bnxjaoi+JTmql0N90JsHd3pmtkuX9eG93
8f07g/285UeaD04kqKJ9Nu6E7sXf1fsVPZONY4kR/epifEMVurrRprjX6Gda
6qdI90jwOPvwB7aKfthWom5si/6yaGao5C4JvkgqRBqgD8hW7VVAd6Y6d+5A
f2pe7ZqGvqPOsJcFvXy7WYO1Iwlkb342XESveyL4uk95glD2za+qukMCaUYl
pbOV/XCWxKj3Hr39nE0hL/rg7ePCoehpFnxcnuhq6n5pjg4kKPNO2dqLfjRM
u1ED3S2FIearPQkkz78YlqzqB57RvAAh9NM3Z4KE0eWLfO89Th8iaGm/GL2z
HQXaP2Vc7jVkWPdgLw1Dl+5UVItAF5uP7qF8JoPHiReb49HHtd+fePq/19km
sqGX9rJezEZXusct6o5u6nrcVq+aDBmOj4M/oZ8+7cTuiH5q89KRt1VkuLA4
2/YVvSupbs0CfbtJ9up4JRl8rHT5OtHFi3aP66MfjDSolkUn1RaajqJL2hm3
q6MzpWx+5lZBhrZdbKkL6MNfYyqV0VdC3mh9LidD+3WT6a0ZQ4RJfXPWMXQ9
rUO8LOgGj9OP7kB/67QRLYnuM/1x8BpBBrPYKVdB9JxqYV9+9H7z02mxZWQY
SpGslEEPKwJHDvTqglyH0U/43DgjegV0NU0tIzr0kEGBk4fQZXwD1dXQh0MN
L63YjMLbsSc0D0rJMP6jz9DvzjRx8OeP0K3ZFNh2zSAnNtoYmOpuhd5D96eT
X3n+ngI1E2dfxqDXZuRWmqJLFeeYCOdSQH/3k/uv0BUels9dQXf9eZyam0eB
wYE9N6LQfRVCBeXRf9o2SCvnU8BDmVU+Av3TrMgVSXSK4v2wpgIKaMjp8b9E
34hwdeVGf3728IJxEQWcG/6th6FbHn6ZtBU9w2RNd6aYAmyrC70h6JyVDo2z
DtPEA48fH91LKCBfqVoWhM6vwr7ci27mX8PL+okCe4QWXz9DT/rsKFCH3mJW
7fqmjAJNvKsPAtA/n446X4x+4F9zp3Q5Be5n6+n6ob9O97ROQu89MnfiUwUF
ZHtYj/qgn9kpHfwc/eKKYLhaFQWEEvnZH6N3u73K8UDvljWd66qmgPk2n9+e
6N9Edgyd/z4Jf2PbQ/p3dhAXS2e/txmbwekhCwUZ9PxXi6363B2E09QQ/Ql0
Vgv5SG70aqKQpw19JdjrRLSRGQykhc9udEyCCAP3zSs8HURRQu2tVUMzUMq7
ozqK3niXK/YLevDBT+GG6BT3preN6JSN3IEzuzoI0+P6n8sNzICePW+lCJ0h
eVq4DJ3jU/wfIfTwW9ya8ehht76an9jdQTz6/FzwyU0z2P54PcUf3VThfHIu
+lPtg1dGbpjBXwvLDQd0J3Hj0f28HQT3bWe3i+iTbDo6+ujfhHZJJKPT7rRK
Tdc3A3+v6jRl9FuSDlaCfB3Esau07czoN0oLNiTRleQsU1+hPxVQ22yvZwbL
ZVLaO9D1ddZHufZ0EMMB8geadc1gMUA45V/7JGTfkRUPQd/3/IfeEfTQiXJ2
ry0NwDxhuT7EOE147IborVu0wflCY6bJ1gb43aFE34F+tkZV9dtmbXASdb2o
RNsAYrwF7F/QtZ5xrbxEv+RZMSRA1wBrHz7vLkEvto1NNUQvvPbOnWZbA3xI
tBfORPeyHtXdh+4WL7C7Hz1sskAqFv2Tz8y2mU3aoGtw8gNB3wDtzyJlQ9Hv
lRcWFKEz+0xejmVoAKo312lv9KJdCuae6Abc8iOPtjdAerO08j3058+9d6ii
0zGLexgyNkCly4DKLfQdMn4VHOi1plk8CkwNoOly8Ioe+rnJS3ZdNNpwi7Px
/R7mBnjdtFvnEvqRhnq+BPS4PYEqa+ijXnH68ugzbWy1NujHHgz3dbM0wP3A
CiMZ9MebOZyPoo+K/nAqZW2AkNmHZoLoazrNwusbWuAmfPWSbMs4dGht8fS7
M0Aw7nzW0uZoAXtr1paGm8eB9d1f4w30LT0B5tLo0c6vEyLRnR6FgpPjAOFr
3fj38R0L+Ka4X/0Sut73dr5J9PnWm4+7HSwgVjLz71rTODC/+7xEujtAZOw/
yH4EfU5+76v36H2NBi2d6Mw+qq+f2ltAqreXAgldSDs2Q+PeAHF/Pl30p50F
pG/t6ONCF98b8JiKfuWpduYp9N4vfO7UxnFQFuG/AU4DxB+Ds7Jhty1ArFuL
zxW9SufGwQL0GnfXwjFbC7A+61Yojb6WqLRV2nmAkNi6clIJPYwx/Gp/wzic
2dbU/g7dY534GGljAY9PxY+EoY9YM6Tsvj9ASHt9OzljbQHinTFu59AVasad
Q9FfvBUqvIBu8ecp61L9OLymv3ee3mWA2OVIHI4lW8BYy6O8ajLOy6bfD5Rp
UAlP/eLcU4FGYDPWJZ+Hni65jX6fFpWYWpsM7XxmBEGzRynx6ClZtv3B2lRi
xIrf/gG66OSzKyHoUd2MRUs6VILtnerl3ejbe/rbH6EzvxsIMrlOJViy7kh8
fGoEOyoPGdiiv5yZMqvVpRKPg8O36qPzxLgP3kCvypM9JatPJbjVCnqXA4zg
z+1aC1V0ia5sltc3qITdaFNhFLrLCY7xE+g6OqTBrQZUYr/VWPBJdK+Vazb7
0H+wqefbGlKJv82rFj/8jWAsP3KSC/3Cqp1vuxGVsJdkkndB97busN2KLkP3
RRdMqITiXW6OXegSfDsm56ymQWSPnkSKKZVgyuf/VeRnBAXUS9YD6EUyAsts
ZlTiwaxgsS76hoPnaAP6g/38VBdzjOeA4NMlXyO4dyo03XF4CrateEeWpjYS
pArqsl+QCUwy6OUqohcdPfvyWHojMTPYf9ENve7l6w/M6Ff4w4PfZzQSs7SW
EXboh8du5HYOTcGwsYuvZFYjISZtOGiKfp41Ij0ZPTxt0i0hu5HQvlEleQ1d
cod63F10t5Q5O/6cRkL+eYT9RXQGGs8QJfTCbX7GkbmNRHJHZ57c/z4g48aC
bnYvU53jQyOhKxU4L4OuW6FP6vo5BW/fmJ56lt9IcIdmHRZGF87YdD4FPfRg
sjBdYSORwQi3d6JHZYiI3EPX+v5gu0dRIzEQo5DM8P95v1WtKaEzn+mZWi5u
JDxVM3tWA03gKm9fMwt6/576RseSRuI651P2GfSVWKd3XYNTMMt1+f1kaSNx
aL1D+Se64K0AuxR0y+96gbfKGonu7S8c2tG35Oa4C4u3EX73Atlvy2Jei99y
iOsZwODBOU5D9GLNjXoS+slVq0ha9O21/GmR6B012s/00B++5eL/qWsAUg+P
Qwv6fFPgxSvoxRmJ78rRZy7KtTJLtBF8d9PozqHv5t0t8Qad7qC0lQq6QWZa
1Sn0psk7Wa7ofDLb173QKQ+DPA6is4m+l9VD7zvfEvYJ3WpYR14Mnb6iqegY
+j8nv31L6OpDNCu86KMVHfKc6AKEROlhyTbC/0FwATv6z32VlbPXDWCZv/Cq
LbpYyibHbej7/oRcaECXDT84nIwua3tdZu3wFPwSPluXgf5IJNxlEL38S8jE
HLrGx66rAehPvoww75FqI7o+ZSaPokcWXG+7hb74WPTtdfTQi1mkXvQJniK9
c+hyUdeKLxu1Eae37bmSLzEFx8Raq8Kksd5uva18i36B0qGQhL7jvJzkbXTW
iqqvi+imEdcORKArKHuFXEQfS/zYqmbcRnxwjtrjhy7Em7Qggl7K6dsTj25t
Gcfkgn6gKfkmDfpTJolfC/+vt7L+Z4Veb+Zb2bUf6/NZ3NQlkzai1HVlTB/d
rv2seCG66PPJhTj0928uf7+E7i7WHxiGvriXbeMvelmzWY0curWO3h9b9G+H
6LddMm0j2HgUP0ijx5Le615Ez6C0scSht9/ui+dH99cY/iSCHt5/f+df9FMd
ysGs6OF7l4Ro0INcZ/eokjB+DbIbDbps/ahvl5QJvIwA0Vj08B4dq1lxjN+g
8HcBerYsaf88+ogr7bVB9JZ6kkYY+ufoiiUewTaiW66lJeXIFPAclZ8Q2G4M
nZcWw8zRNdV0br9Cz1sRrt+F/oSOUToX/XJtEn0Q+trfmfcc6Ey1qzXr6L8L
KG890Gn3JTxnRC96WWd8SaiNuMpRJOeI3hco77QVvd7ywUoEelS3c7s5+ivJ
T7prDMYQoUz3Ygh9hGubvS76xTWh0wvoekL20oeE2wj9MnOGS+j/aO32TKMb
bCuqeYjO2f78rTx65dn4jRH00Zkeo1p0WYPQ0wfR3xcXD/Sjn+0dWNop0kb8
0DJsFUJvNyuq+oFeUF8VSkLf93HFhgv93PmYxGb0JxXeku/RT4dY0NKjMxta
+n5FX8kXrFpFP9EeH7OCvwvljF1W1ej66TE3Lori+mcZRyfRZw/mqH5C/w8N
YhRE
      "]], {}}, 
   {Texture[
     FormBox[
      GraphicsBox[{
        GraphicsComplexBox[CompressedData["
1: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
         "], {{{}, {}, 
           TagBox[
            TooltipBox[{
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], FontFamily -> "Arial"], 
              LineBox[CompressedData["
1:eJwd0wOfEAYAxuEue7Va1lXbsm1zC5ddl3XZ5rK11dJybbll27Zt20+9v//z
Ed7A4DZBIQGhLOB7oUIThrCEIzwRiEgkIhOFqEQjOj8Qg5j8SCxi8xNxiEs8
4pOAhCQiMUlISjICSU4KUvIzv/ArqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nI
TR7yko/8FKAghShMEYpSjOKUoCSlKE0ZyvIbv1OO8lSgIkFUojJVqEo1qlOD
mtSiNnWoSz3q04BgGtKIxjShKc1oTgta0orWhNCGtrSjPR3oSCc604WudKM7
PehJL3rTh770oz8DGMggBvMHQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlP4k7+Y
yjT+ZjozmMksZvMPc5jLPOazgIUsYjFL+Jf/WMoylrOClaxiNWv4n7WsYz0b
2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4
yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jI
Jz7zhW/n/wqYtIE2
               "], VertexColors -> Automatic], 
              LineBox[CompressedData["
1:eJwV0VdbDQAAgOFzItkNMhJ1WohQokRatK2Q0XSaQocGJRlJkpIiIdVf9Xbx
Ps93/4XCkYb+YCAQWCcootjEZqLZQgxb2cZ2drCTXewmljjiSWAPe0lkH/s5
wEGSOEQyhzlCCqmESCOdDDLJ4ijHOE42JzhJDqc4zRlyyeMs+ZzjPAUUcoEi
LnKJYi5TQilllFPBFa5SSRXV1FBLHfVc4zo3uMktGrjNHe7SyD3u84CHNNFM
C6200c4jwnTQSRfd9NDLY/p4wlOesTEvwnNeMMAgQwzzkleMMMprxnjDOG95
x3s+MMFHJvnEFJ+Z5gszfGWWOb4xz3cWWOQHP1niF8v85g9/WeEfq6yxzn9O
EjSi
               "], VertexColors -> Automatic], 
              LineBox[CompressedData["
1:eJwV0/l/DwQAxvGvjeh0FNLtiHIlQopSbiVnytGBXDk7RFKkg3LfUXKzg5nZ
Zmxjm2Huc3MNw5j7vs/e/fD+/APP6ynesU+L3rkCgUAXmcksZjOHucxjPgsI
IZQwwlnIIiJYTCRLiGIp0cQQyzLiWM4K4kkgkZWsIolkUlhNKmtYyzrSWM8G
NrKJzWxhK9vYzg52sot0MtjNHvayj/1kcoCDHCKLwxzhKNkc4zg5nOAkpzjN
Gc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7/48QFAjkIohgcpOHB8hLPh7k
IR7mER7lMfJTgIIU4nGeoDBFKMqTFOMpnuYZnuU5nucFilOCkpTiRUpThpd4
mbKUozwVqMgrVOJVKlOF16hKNarzOjV4gzepSS3e4m1q8w7vUoe61KM+DWhI
IxrzHu/ThA9oSjOa04KWtOJDWvMRH9OGtrSjPZ/wKZ/xOR3oSCe+oDNd6Eo3
uvMlPehJL3rTh758xdd8w7f04zv6M4DvGcgPDOJHfmIwQ/iZofzCr/zG7wxj
OH/wJyMYyShGM4axjGM8E5jIJCYzhb+YyjT+5h+m8y8zmMksZjOHucxjPgsI
IZQwwlnIIiJYTCRLiGIp0cQQyzLiWM4K4kkgkZWsIolkUlhNKmtYyzrSWM8G
NrKJzWxhK9vYzg52sot0MtjNHvayj/1kcoCDHCKLwxzhKNkc4zg5nOAkpzjN
Gc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7BIL9nyCCyU0e/gOifdHs
               "], VertexColors -> Automatic]}, 
             RowBox[{
               RowBox[{
                 RowBox[{
                   TagBox["S", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"7.535659314738926`*^-16", " ", 
                    TagBox["\[Epsilon]", HoldForm]}], "-", 
                    "4.281176842148333`*^-11"}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}], "+", 
                    "2.2489872871832529`*^-7"}], ")"}]}], "-", 
                    "0.0002379938401519114`"}], ")"}]}], "+", 
                    "0.059549244347758365`"}], ")"}]}], "-", 
                    "3.393021119493091`"}], ")"}]}], "+", 
                    "36.53569709016391`"}], ")"}]}], "-", 
                    "50.249990947568804`"}], ")"}]}], "+", 
                 RowBox[{
                   TagBox["\[Epsilon]", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2.364992030562556`*^-9", "-", 
                    RowBox[{"1.65924196371522`*^-13", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}], "-", 
                    "5.364225133072119`*^-6"}], ")"}]}], "+", 
                    "0.002746365997682094`"}], ")"}]}], "-", 
                    "0.3325176234286391`"}], ")"}]}], "+", 
                    "8.51507864273902`"}], ")"}]}], "-", 
                    "35.140935203292656`"}], ")"}]}], "+", 
                 "12.194427640553812`"}], "\[LongEqual]", "0"}]], 
            Annotation[#, 
             12.194427640553812` + 
              HoldForm[$CellContext`\[Epsilon]] (-35.140935203292656` + 
                HoldForm[$CellContext`\[Epsilon]] (8.51507864273902 + 
                  HoldForm[$CellContext`\[Epsilon]] (-0.3325176234286391 + 
                    HoldForm[$CellContext`\[Epsilon]] (0.002746365997682094 + 
                    HoldForm[$CellContext`\[Epsilon]] (-5.364225133072119*^-6 + \
(2.364992030562556*^-9 - 1.65924196371522*^-13 
                    HoldForm[$CellContext`\[Epsilon]]) 
                    HoldForm[$CellContext`\[Epsilon]]))))) + 
              HoldForm[$CellContext`S] (-50.249990947568804` + 
                HoldForm[$CellContext`\[Epsilon]] (36.53569709016391 + 
                  HoldForm[$CellContext`\[Epsilon]] (-3.393021119493091 + 
                    HoldForm[$CellContext`\[Epsilon]] (0.059549244347758365` + 
                    HoldForm[$CellContext`\[Epsilon]] (-0.0002379938401519114 + 
                    HoldForm[$CellContext`\[Epsilon]] (
                    2.2489872871832529`*^-7 + (-4.281176842148333*^-11 + 
                    7.535659314738926*^-16 HoldForm[$CellContext`\[Epsilon]]) 
                    HoldForm[$CellContext`\[Epsilon]])))))) == 0, 
             "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6], FontFamily -> "Arial"], 
              LineBox[CompressedData["
1:eJwNxGOAFgYAANAv23aXbVy6bF92XdZdXbqMy9rCmG1zC1tui1tuyzXUFrfa
8vvxXlBYRGh4jEAgEK24sQKBeMQnAQlJRGKSkJRkJCcFKUlFatKQlnSkJwMZ
yURmspCVbGQniBzkJBe5yUNe8pGfAhSkEIUpQlGKUZwSlKQUpSlDWYIpR3kq
UJFKhFCZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0JZRmNKcFLWlFa9rQlna0
pwMd6URnuhBGV7rRnR70pBe96UNf+tGfcCIYwEAiGcRghjCUYUQxnBGMZBSj
GcNYxjGeCUQzkUlMZgpTmcZ0ZjCTWczmEz5lDnOZx3w+43O+4Eu+4msWsJBF
LGYJS1nGclawklWsZg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYPe/mGb9nHfg5w
kO/4nkMc5ghHOcZxTnCSH/iRU5zmDGc5x3l+4mcucJFLXOYKV7nGdX7hV25w
k1vc5g53ucd9HvAbv/MHf/KQR/zF3zzmCU95xnNe8A//8pJX/Mf/vOYNb3nH
ez4QiB0IxCAmsYhNHOISj/gkICGJSEwSkpKM5KQgJalITRrSko70ZCAjmchM
FrKSjewEkYOc5CI3echLPvJTgIIUojBFKEoxilOCkpSiNGUoSzDlKE8FKlKJ
ECpThapUozo1qEktalOHutSjPg1oSCMa04SmhNKM5rSgJa1oTRva0o72dKAj
nehMF8LoSje604Oe9KI3fehLP/oTTgQDGEgkgxjMEIYyjCiGM4KRjGI0YxjL
OMYzgWgmMonJTGEqHwFOiasf
               "], VertexColors -> Automatic], 
              LineBox[CompressedData["
1:eJwNwwN3kAEAAMBvtbVse8u2sWwuu5a1Vf8iW2vZtm3btpZt3L13ETFx0bEh
QRAkOjo0CMY41nGOd4ITneRkpzjVaU53hjOd5WzjnWOCc53nfBe40EUudolL
XeZyV7jSVa52jWtd53o3uNFNbnaLW93mdne4013udo973ed+D3jQQx72iEc9
5nFPeNJTnvaMZz3neS940Ute9opXveZ1b3jTW972jne9530f+NBHPvaJT33m
c1/40kRf+do3vvWd7/3gRz/52S9+9Zvf/eFPf/nbP/71n0FYEISYxKSGGmYy
w01uClOaytSmMa3pTG8GM5rJzGYxq9nMbg5zmsvc5jGv+cxvhJEWsKCFLGwR
i1rM4pawpKUsbRnLWs7yVrCilaxsFatazerWsKa1rG2UdaxrPevbwIY2srFN
bGozm9vClraytW1sa7TtbG8HO9rJznaxq93sbg972sve9jHGvvazvwMc6CAH
O8ShDnO4scY5wpGO8j/Y1ntw
               "], VertexColors -> Automatic]}, 
             RowBox[{
               RowBox[{
                 RowBox[{
                   TagBox["S", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"5.2601039817943464`*^-11", "-", 
                    RowBox[{"7.535659314738926`*^-16", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}], "-", 
                    "3.4928217819593087`*^-7"}], ")"}]}], "+", 
                    "0.00048431255467153877`"}], ")"}]}], "-", 
                    "0.16617918856920982`"}], ")"}]}], "+", 
                    "13.716010953452912`"}], ")"}]}], "-", 
                    "224.64781248057005`"}], ")"}]}], "+", 
                    "450.43032031174425`"}], ")"}]}], "+", 
                 RowBox[{
                   TagBox["\[Epsilon]", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"3.2539818024176075`*^-9", "-", 
                    RowBox[{"1.8333925978002083`*^-13", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}], "-", 
                    "9.488302488347804`*^-6"}], ")"}]}], "+", 
                    "0.006503303086392308`"}], ")"}]}], "-", 
                    "1.108810883409416`"}], ")"}]}], "+", 
                    "42.28390685080488`"}], ")"}]}], "-", 
                    "265.81816432232154`"}], ")"}]}], "+", 
                 "117.1738489947312`"}], "\[LongEqual]", "0"}]], 
            Annotation[#, 
             117.1738489947312 + 
              HoldForm[$CellContext`\[Epsilon]] (-265.81816432232154` + 
                HoldForm[$CellContext`\[Epsilon]] (42.28390685080488 + 
                  HoldForm[$CellContext`\[Epsilon]] (-1.108810883409416 + 
                    HoldForm[$CellContext`\[Epsilon]] (0.006503303086392308 + 
                    HoldForm[$CellContext`\[Epsilon]] (-9.488302488347804*^-6 + \
(3.2539818024176075`*^-9 - 1.8333925978002083`*^-13 
                    HoldForm[$CellContext`\[Epsilon]]) 
                    HoldForm[$CellContext`\[Epsilon]]))))) + 
              HoldForm[$CellContext`S] (450.43032031174425` + 
                HoldForm[$CellContext`\[Epsilon]] (-224.64781248057005` + 
                  HoldForm[$CellContext`\[Epsilon]] (13.716010953452912` + 
                    HoldForm[$CellContext`\[Epsilon]] (-0.16617918856920982` + 
                    HoldForm[$CellContext`\[Epsilon]] (
                    0.00048431255467153877` + 
                    HoldForm[$CellContext`\[Epsilon]] \
(-3.4928217819593087`*^-7 + (5.2601039817943464`*^-11 - 
                    7.535659314738926*^-16 HoldForm[$CellContext`\[Epsilon]]) 
                    HoldForm[$CellContext`\[Epsilon]])))))) == 0, 
             "Tooltip"]& ]}}, VertexColors -> CompressedData["
1:eJztyLEJg1AUAMCHwRHS2UTc40NGiAsEQexULB3BQRwlZUiTBbKC2McxLK46
uFszPNosIqY84nJ4n5ei7N9p39by+vqmsfo86+6XvPfee++9995777333nvv
vffee++9995777333nvvvffee++9995777333nvvvffee++9995777333nvv
vffee++9995777333nvvvffee+/9Of8Pd+U34w==
          "]], {}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, AxesLabel -> {None, None}, 
        FrameLabel -> {{None, None}, {None, None}}, DisplayFunction -> 
        Identity, AspectRatio -> 1, AxesLabel -> {None, None}, 
        BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "GridLinesInFront" -> True}, PlotRange -> {{-5, 20}, {-10, 10}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}], TraditionalForm]], EdgeForm[None], 
    Polygon3DBox[{{-5, -10, -1.5}, {20, -10, -1.5}, {
      20, 10, -1.5}, {-5, 10, -1.5}},
     VertexTextureCoordinates->{{0, 0}, {1, 0}, {1, 1}, {0, 1}}]}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  Background->GrayLevel[1],
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.6},
  DisplayFunction->Identity,
  FaceGrids->{{0, 1, 0}, {-1, 0, 0}},
  FaceGridsStyle->Automatic,
  ImageSize->{476.12351112814804`, 365.3821661700535},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->All,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.5606530079269152`, -2.6805034614712606`, 1.3525026365553556`},
  ViewVertical->{-0.20111180696707373`, 0.3454200850412394, 
   0.9166455181522144}]], "Output",
 CellChangeTimes->{
  3.864993579319718*^9, {3.864993642963076*^9, 3.864993674295865*^9}, {
   3.864993733607375*^9, 3.864993800418025*^9}, {3.864993884222221*^9, 
   3.8649939173986483`*^9}},
 CellLabel->
  "Out[190]=",ExpressionUUID->"6afce6fb-ec43-482f-8e48-cd6abc07c994"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plotP", "=", 
    RowBox[{"ContourPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"z", "==", "\[Alpha]P"}], ",", 
        RowBox[{"z", "==", "\[Alpha]M"}], ",", 
        RowBox[{"z", "==", "0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", 
        RowBox[{"-", "5"}], ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"S", ",", 
        RowBox[{"-", "7"}], ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Epsilon]\>\"", ",", " ", "\"\<S\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Background", "\[Rule]", "White"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ContourStyle", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "Blue", ",", 
           RowBox[{"Opacity", "[", "0.65", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Red", ",", ",", 
           RowBox[{"Opacity", "[", "1.0", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Cyan", ",", ",", 
           RowBox[{"Opacity", "[", "0.15", "]"}]}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Mesh", "\[Rule]", "None"}], ","}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Boxed", "->", "False"}], ","}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"FaceGrids", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Mesh", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
      RowBox[{"BoundaryStyle", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "->", 
          RowBox[{"{", 
           RowBox[{"Purple", ",", "Thick"}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], "->", 
          RowBox[{"{", 
           RowBox[{"Purple", ",", "Thick"}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}], "->", 
          RowBox[{"{", 
           RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pt", "=", 
   RowBox[{"Point", "[", 
    RowBox[{"{", 
     RowBox[{"0.4237131621171315", ",", 
      RowBox[{"-", "0.0336891534959879"}], ",", "0"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotPoint", "=", 
   RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"AbsolutePointSize", "[", "10", "]"}], ",", "Purple", ",", 
      "pt"}], "}"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "plotP", 
  RowBox[{"(*", 
   RowBox[{",", " ", "plotPoint"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"ImageSize", "->", "Large"}]}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "Infinity"}]}], "}"}]}]}], "*)"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8649822359750767`*^9, 3.8649825212133017`*^9}, {
   3.864982657815386*^9, 3.864982675709613*^9}, {3.864983235508698*^9, 
   3.864983275129622*^9}, {3.864983315539514*^9, 3.864983342770946*^9}, {
   3.864983563512084*^9, 3.864983563813168*^9}, {3.864984076058236*^9, 
   3.864984162679831*^9}, {3.864984207861273*^9, 3.864984247022616*^9}, {
   3.864984315179042*^9, 3.864984315818351*^9}, {3.864984401292039*^9, 
   3.8649844273851347`*^9}, {3.864984521904377*^9, 3.8649845444594183`*^9}, {
   3.8649845807687798`*^9, 3.8649848196189537`*^9}, {3.8649849003990507`*^9, 
   3.8649849050685053`*^9}, {3.864984968605974*^9, 3.864984992508771*^9}, {
   3.864985031167613*^9, 3.864985034733452*^9}, {3.864985073328313*^9, 
   3.864985112622179*^9}, {3.864985160798594*^9, 3.864985217887168*^9}, {
   3.8649853168656197`*^9, 3.864985368687689*^9}, {3.864985412626693*^9, 
   3.86498541669037*^9}, {3.864985452528853*^9, 3.864985504688786*^9}, {
   3.864985552707386*^9, 3.864985560352949*^9}, {3.864985606499276*^9, 
   3.86498561211338*^9}, {3.864985653203184*^9, 3.864985653329012*^9}, {
   3.8649861694390783`*^9, 3.864986169700523*^9}, {3.864987858689793*^9, 
   3.864987859302031*^9}, {3.86498789109317*^9, 3.864987979677178*^9}, {
   3.8649880530502977`*^9, 3.864988141778204*^9}, {3.864988175044867*^9, 
   3.864988175236624*^9}, {3.8649882068526363`*^9, 3.864988364340952*^9}, {
   3.864988502983749*^9, 3.8649885183251467`*^9}, 3.8649887346062326`*^9, 
   3.86498909174481*^9, {3.864989212044053*^9, 3.864989259364131*^9}, {
   3.8649895994891977`*^9, 3.8649896122367268`*^9}, {3.864989668556205*^9, 
   3.864989907554256*^9}, {3.864990078348362*^9, 3.8649902302893963`*^9}, {
   3.8649902986036043`*^9, 3.864990327701297*^9}, {3.864990747322444*^9, 
   3.864990850820496*^9}, {3.864990968047851*^9, 3.864990973970599*^9}, {
   3.8649910080271883`*^9, 3.864991013749405*^9}, {3.864991050373281*^9, 
   3.864991131845517*^9}, {3.864991172539446*^9, 3.864991194515459*^9}},
 CellLabel->
  "In[688]:=",ExpressionUUID->"f3497252-f5c7-4793-ae44-cb210ecb51a3"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJydnXd0VdW2xkPv0nvvaAgJTQSBs1V89CrwEBAQaSogIAgoIkUQ6SDVQm9G
9MJVWkBPFBAVFZAoSA2RLoRQEgRC8nhj5Fvnjt92jvvu+ytj/MY3vjXXXGuv
vfY+a89U7PtKp/6Zw8LCTucIC8vy4O/sosU/b1e+knewavnC2UufD9w90+D2
5UEHg4PGTIjyvKrexbX7FsaNT3Gc+hafb2j58pRYn1581YiHt0QfruBFfXog
tc/W4yYPa3NoWKcJPX3+4iNqNtm2ZF5VL6zLrF2Tkm8HOrz0QcsKc476uBW/
9OSWf+ex6T9Fd4/36cUZp/zJpWd/FeeQ/j1ejkkt60049MjBK7/sNLnyRm7l
rcTQc+kvFo4NMH5xxmPxfoGunS5HHgzQX5z67ft2rCnf9aiP59ww+41HmsYH
GL/05NIzfrVLvTjHUXkjV97oY+Xhk0wvVIifcNE3jhOa1B69d8hZn4/05NIz
n7/tXfD93feu+OabOPXyp96K05q3VvzWvFU81ItTX/Fk28/T06/59OKMR5z9
Eqe/rjv6W+uD+kt/ceqVT3LFQ6489Dk2L3be/hpet943P9w6PqsnPbn03vFL
n9Z+voa3MdcnfQqUzOL05JZecdJfPOFmcObOtEe8ekVWHP8kcz7nQ27prf7W
Gxxb5emOZ33XXa+oGz/17nfRd/1KTy49fax1QJz66bcqj3599BWfXjz1UJ03
yyzzjaNPL16i6TPhlSeFexva7r4c2zW/ywO5Ne6aV+S6vphn6cmlZ7vSk1t6
jS/nj3zI5cM8W+ut1nPmU5x6a73VPCHXPOH1Lr142Oi4qBtztzk91xnFQ655
xXY1f6i3/KU31kNfnNKTS2+skz6uPCQWz/nKY4XDvKn9qs3qsLuQp/sdufLf
qtmWZV1Hh3k3vhpXs3W24k5PLv2P0TnbF7ubFtD8tLjmCdsVp17jMmx8j/J/
LQxxjQt9pCeXnvGr3ZEF/5jcscydAOctuXw2rLgT9fzK1ICuX+nJpaeP2qXe
yoPyTx/NN3LNH/pLT27pNX+Yf4tb/pqf1KtdcunZL3GOo/JPbuVf8b92bMbW
/h+HeX1KHt7/dPPSnvbb5No3/pK94fnJ+TJ5P7768Mveu+Wdnlx6xiNOf40v
fbRvCfsof9r8QCav7IXAlI/OVTS5FY/lr/WcPuKMX+2SW3mz9PKnXpzjZc1/
rTOcb9KTS8/+alzI5SP++nNPHElPr+zTi1t6jpe48kZu5UfzmVzzmeMrPbn0
HBeL67pmu+LU67om1/VLH+nJpWf8apdc6wDH0eJWfrQOU0+u8bI42xW32lUe
2K76S27pNY5s1+KWv/JPPdsVt8ZLnPdltUsuf3Jr/ui6Jrf2G9b1Yq0Plr81
vtIfbfVSwe0f1PTtu8ilv3xg+IpC30X49l3klr/6y32+9OTS00f9Ite8pY/0
5NIzfrU7eOmWToE84R73FeSaJ/SXnlx6+ljxK8/Uax5SL079v3lO9OVTcZLL
n1z9ZT4tbvkrHurVLrml17iTK8/MjzXu8iHXvOVzqPpLrv6SKx4+d6tdcunp
Y+nVL+qt/mq+0Ufxk2tc6G9xjZfx3snHlc+kFbs2FFldy3uycPErOyJC93dy
tbv11W0zun5cy7cPIZdP14nVes/oFunbh5BLTx+rXfWLcVrc6q/Gnf7ijNPi
ivPUU9HrtidG+u7j5JZecW54rmLta/WjfPdxcstfeaDePfeBS89+idPfPRfD
R5x51nVBruuL+dc6QC4fxik9ufT0UbuMRz7kun7pI852La52mU/FSW7p3XMQ
8m9x9/4B3PJ3z1PQW/sZPb+Q6zmI9wvpyaWnj56beJ+Vnlx6+ug5jnpxxmP5
6H0pud6v0sfi8jHWNx/Xe2bjOvVx6emjeDjPpSe39IqfXOPLeKw8KP/Geu7T
W9z6fUTjSK52eX/UvCKXD+/v0pNLTx+rXV1fjNPi1vWi/JArP4xT8XAd0DiS
q12uD9KTS8/5YHHlje2KU2/FL8545MPrwpqH4tTLh3orTuWH427te6313Oqv
xp1c427c931cevro+mW/tA5QL05/+TCf1nqovJFr/jD/1vyU/5fLpw07ElPc
W7HlzaFLwk8ElQdy5WHiwDIt9vxS1DuY2mrcmnpnTa5+0UecesVDrv7Kx2vz
TLHijU8GGb+49HmObRl1a0xBb/CEI+sbjLvh4iS34lEeqLe44iFXPIlvxi4/
fTqnd77G4A8LF80eq+uCXPO5zvxTx1vOe/AceHH8zsaV7gWlJ7f0GnfGY3HL
X+st9WqX3P2+hn6J09/Kj8UVf40VvTa3+DO7F3uyxPGcSx9y+SRXnORuH1vj
2+RKQ7N7F37L2fLntAJOT271S/OKXPOK/ZWeXHr6aL5RL85+Wflx6wb6pbw1
2xzR6H5SNq/N9wl535pd2OTKD7n1O4XiJHfrcKMnwmLibgY6lNuy9ck9F52e
3Mqbrjv6W9zdl+Hv1mdw63cZjRf11jjKf8mY8S+22ZUU1Dqj5xFy9zxyo/Nv
zzVKC5a4/ETRXccvOz259PTRfZN68WHDqm9svj8uePB66mtl7h41uRWnnnPp
L0695gn9xd/++OFp6emFY89+3Lbl4evJrl8Hsx6Mv7UiT+yeUgn3iz92w3Hq
1S714tSrX9RbeXbPfYfaFr874lqA5wPJ3e/46K/FFSd93HsGzDf3+zu4pbfi
dO/Vwd3zL3wsLh/eT7WekGs9Idc6xvu7xS1/a12SD7l82C+3jwKXnj5uvw29
OOeh4uQ8tK4L5Zl6ceZH7ZJb7brnHcx/ceqVH+rFGb/FlU/6i1OvflHvngsQ
j3uPgXnu3mOAq7+8TqUnd+9/4KP7AvXi7Jd8uH5aXPmkvzj1Vn7EGb97vgZX
PtmuONu1xld5YDzi1LvnLOjFmU/r/qt9BbkVj6V3z5vQizMe+bBf4tRb80T+
9HHvPTBeFle7HEerv9b8t/alip/cPediX2pxzf86Nat9smpPVu9mzKTP0tNL
u30vufteo9vhY7E1snk7KjfcOPZgcacnd89B8HHnxqEXZ7+UN3L3PjOjX+Pf
nNHr26sFXH64r7a48kOueMjVX+bTyoPWAXL3HIf8uOdQcGu/JD3nj+Xj9v/g
yg/jdN8LgLvnMvi4c/jQizOfFnfvmTG+1rhbcWp8Gaf13kP7PXL9XsZ9kcX1
Oxp9xKnX72jG+xOfj/Tk0vN9guIkt+JRHqi3uOIx3vP4zte55z5w9/wIrvHl
uVaLW/66rqlXu+TuOffvz6P69Hzvp3HR8wK5njuYf3cOGc+/7jw2uMaRz/XS
k7tzU/DR+FIvzjit5xSrv+79M/bzirNvjS03u+0Otat5Re7mFXzc79F//z7E
x608uPNjf/8eyTpn6DtvqflpnGfzcel57tHimudsV5x6zXPqxRmPfDjPdX/h
uThx6t17WujFjXOevngUJ8/XKU5yS6988tydxenP9//GuUefXpx5cO+7wOVP
bq1L7vka3Mq/e+/69+ckfeMof+qtdq39j9YB3vfFeb+2uPueFP7i1GtdJdf6
Rh/3XQ+49Izfei/kzuP9/XOE7/2V+67h758LfD5ax6gX5/5Z+eT6Jk69O/eC
fa87VwMuPfOjfJK7c1Pwced5wN33O4jfeg/pzjXhuVKceneeCnpxPj9aXONl
PFf63uvqPkhuxS+98bzsi0d6xiNOvTv/ifnmvt/BfLPiV36M533ffkPzivtJ
tw5A785pYz646x16cfrLh/Nf8RvPoW5+doyaWve3/AWdnlx6+rjzitCLM05r
XVL+eX25fSDWPYu77xDh7/aZ0Ku/xvOgz8d9//j3z4m++K11THkg1/pA7s6X
Is9W3hSn8dwa+Dln2E87slX0/T5Lrnmr7yuLTDu4rG/dfE4v7v366/edCuZz
+r7T169bcLyy735Erv62q1Rr6R+PVfatt+SWXu2S67pIOXrjQunWlXz3EXLp
mQfWf1B/xfeMe+xw75qVfb+H0l+cebDyJv+4TF7fmG5VfPsKcunpo3apV57J
lWfGL/2k8Rc/Xf7flXzzlvnh98Xi0jNOzWeOozjjtLiuO/qLc3wVJ7nbL72Q
O8ejdyr4fvenXvvhO7k71m6aq5zvd39y934P/trHUi/OdrXfpp51LZrVf/t8
zbCQDznrWogrTs5z7c/JtX/m/JGeXHr2S3pytz/HusT6POLS5+/a+MunK5Xz
nZ8h1/XCfOp5gZz1alYcmN043667Tk8uPect67FIz7o34laces7iOFrzQXrm
2eLqV/fPkuc3KVTR9/6BXPcd5ln6qiurt2z7uG+e+65HXb/0Ed/0+uiULl3D
fc+z5JrnOv/cNXin69xASC++stDO5/M2COmVt79eXDr/6ui7rl1y1jEQt/ql
dYz90vpDbum1/pOzvpDmD+sIiVOv+Fm/SFzxMM+aP+Q8r648s16HuPT00Xzu
2u6HbxvceMT3foPcisedU4XencsF5zl8xSlOf3deFD7uHDu49PS3fKx5qzzw
fq3x4n3Z4prn9BHn/Vqc65uuC3JdF7xfu/eo4NKzXenJrfVH+yjOf3H2l/VP
hlQ6fuvJa3lNrnbpI95mZJtMTzVJDfC7HnJdj7eaLz9U5fd7AX7XQ866HPxu
kVzXNdsVp7/ys6T0jZXZR90L8HsccitOy1/3NfqwvgG/Cya38il9nzvPzP3o
xfsBfn9Kzt+D+N0ouaVX/Oovv5+i3n3vBq7ri/2SntzSK37mXz7k8uG4uPOH
GZzfSZFznvD7LPq784TQW+26714xju47VnDps/60rs9b2UJc8ZT57NTU5k+H
+b6TJbfqw0hv1ZP59vXhVx6ul8VX74vc0mtcGI84+6VxIde4FOn02bXfa/vr
8JBbeuWN3Mq/+kXu3g8b9Xb+07o6twq0yNpwQBZfnTRy1tvh98jk0vO5Rvdf
ctYh1HMK6yKKS08fd/4hQ3+h0f5XR3TJ5zjvm/Ih1z6Hz3HSk0vP+7j05JZe
+yXGYz0nap9DzvqQygPrK4pLz34p/+TKJ9tlvVONl9VfPcexv+Jcb937Z6yH
1jps6d37bayTFrf83ft/6Nkuv6dmv6z9j/ud6Ozm+AIHKvvO7TBv1nhZ4+vO
v8Hf4u73656tPny0jW+/6uPSc9wVP7ni/2FgVPs1s+v4vn8k13rb8fN9h94Y
UccbVG5A7VOHQ3py6emj9fn5l3InpKfX9Tb9VaXpmlxhTk8u/blMhQtnSYjy
eg7vNLJoMI9bz9muOPW6r1Fvcatd8UIr+u0cmS/SV7+FnN/jD273ZaD1/sK+
798zJwe6PBVT2OnnRO6pNm9dlK9eB7n0bJff+6tdK/8aR/bX4hovxqPrkVzX
F32kJ5eePlofqBenXusM8yO+q+EH07Is8tdRIWf9Co2X5cM6HtKL87rQ+HJc
xKlXnNSLMz/WexLl33h/5erqPLajyeis1UJ6cunpwzpC0ot3zhzMdXhjlK9O
C8fR1ZfA+wdX5wRccRrvK3xxKm/krHek+FnXSNzKs647co0v43R1NsAtvauL
Am7Nf9bZ0PpgXdfWuqfxoo84rwv5kKtf5JaP4vxscbYx6afDfXVIyFmn60r/
cYOn1Qq9NyCXnj6Kh3rW5eB7jHZrR7auN6emr24P/VnXS/7i1LvvttAu64zx
fQ65Fb+VT/d7Gfrl3oOB67qjj/Tklt6994O/OOeJ/Mnlz/ksn6l3hyYnhUX6
6oNxPRenXv7cVyhv5Nb9Qj5c/637iOKhvzjvF/Ihl57+iod6q79W/MoDfcSp
1z6WXPtYtdv4UJ/sickhPbm179XzI+ORnlx63r/0/EWu50rel6Unl57xW+2K
00ec/dXzAv3F2V+LK89zG4XXOb/AN098/uKKM6pK25ZVz+RxPoxf+ed1qryR
sx6I7kesUyEuPX2UN+qt/Os5mj7iXH/ULjnrn6hdy0fxkFvzSj6MX3km17iQ
axzJNU+YB+nJpTfWZx9nfaTf1jd65JkTbp305c3yZz0l6cW5T1PeuL9iPSvd
r8Xpw+cpzX/r9zhLb+WT9aDUL+s6Un+N9dyXN9bdYh0Ycs1z3selJ2e9L9af
oZ51z1hHiHqLKw/k6q+xP/FxjSPH3Xp+sd6TKD9cP8WpV944jtKTW/cX5Yfc
GhfljdyaJ6yLxe8+2C/Fw/jFl5x9P65U5iy+/xtFzu8Qk9ZuXduo+jWnJ5f+
Ypfy6yvXTQ7w/A856xIMey9/vXev3nfnZ8ilz56aY0+j3vl8/0+HXPnXuVb+
nx1y9x008uDqbqG/4sf6194YHpHP93+L6C9e++786Gc+K+6rp0ROH/1/DelL
/2N9uTYLi/vqO9FH840+rLMk7v7fyqQff3ticWi8WG/hu4hS01/8+L47H0W9
4idnfYZxfSMffaTifddf8SrfVYlv2f9+0BpfzRNy1gvyhq+8M/Yf15yeXHp9
Rzasr1dtzxh/PStxxcM8W1z5oY8131ivif9Pjdz9bgsfcc5PjTu5q2+WkZ8N
x/Z3vLcs0enJpY8+0H1BmXt5ff8/i3pxtqv5PLjdnl15Dmb2/R8r9ovfm+t6
tHzULrmru4j5ac1/1h2KS204M/fJVHd9cT6zzhj+P45vPvB7YXHFSa52uQ5Y
/uLb9zW906zU1QDrroS9cnZpzk5XAvzuUt9fbPqi4bNV8v3u5hW5q3Myu3P2
gb8eD7JeDTnr9kxr3Se7d+6y05O7727g4+oOgbvf8REn6/mIS888qF3qxSuM
+XL7zKY3Azy/R275u/r84KwL1G/PtdoXd6Q5Pbn0bNfKm8aReWadmQmth6f8
3viGO89APb/3kZ7fE0nP76GkZ30q6VknSnp+PyU9v5NacezEEwtTkl275NT/
NfLC4lH/THbnCtTu0XNvtIn567rjbJd1ruTP757E1S/eL1h3SHprXFh3SHrW
HZKedYfcOtB0WL33Ej5x60aNxV1+eTvpD7c+NH96/KM99hX31WviOqP4OQ/5
XXaJO1lPbaid5uO7et1957tRab56X4rfur6s/MiH+bE465jJh3WWNO6ssyQ9
6yxJz3pKatfirMMjf9ZZkp51lqRnHSHF4+r9nlzePLHZsSDvy+TMw9Firbu/
NeRPp9c62aF1/kyryx4zufu/TjX/nDbqi6NB7kPoz7o66q98eF+TntyKx9LL
n/PNmudWPln3SfcRcbYrH3K1O27NSxejV4XaVZzk1jyUD/2l5/xR3siVN7ar
/Qa5+7+xFZZ2m5gQatfan7D+5LTa7R/b3znV6cWjFjdLuLwk1enZLutTKX7W
g9J8Y70m6V2dYehZD0rzk3WlxC29Nc9dHQBcL6wHpfns6gxAr3iot8ZL7ebs
U2vv0Rm3AzyHRq55u7HuxIUx1W8HeA6NXHr6aD5TL0695jP14v1mHr+Vcu12
gOfZyC297i9sV/yvY9UeHd87JcDzfuTKJ+OUnlx6+igPjFN5JpeePsoDuZVP
q7+u3juem6znLM03+rg69lg/rXWV9am0rlrcmp+Kh1zxM04rfuk5TzS+5Nb1
JX9y+XN8pSe39IqHXPHwPLD05NLzfLL05JZeceqcIX+/ILf8Nc+pV7vk0rNf
rq51Rh0S/n7K89uW3opT48V4xBmPxZUfxqP5T26dD7f0ul6oF2e/WKeFv6/R
R5w+8mc80vN5RM9Zvee++E3f+OK+OmnUs85Y2KLYba/mjnXPZXwOsvRql3or
Hj1vkrvvqjLqULHuCjnroSke1nMQZ72IpMk7O6T2TnJ6cktvxcm6cGpXnNcF
32spb6w7d3T/S+OfHvRH0PLh+y75qF88z6z5Q+7ex+IctavLCi49fdzvKdCL
U+9+l4FevPG1ZiMuFgid05YPueIkd+/tcT1anOfb+bskuaVnf/m7J7+L0fM4
uZ7HuQ5Y3/tYer1nYH4UP9uVnvFrvpG7+qsZ48jfPcmlp4/uF+SuLi58rPuL
Na/ce3Vw+TM/0pNb8ZDz+25y5YH+Frf2aRovcs0T7tOkJ5eePppX1Ivz9035
k8uf+y6Ly5/7QOnJLb3iIdd9jf0VZzwW13pLrvWc7UpPbul1P2WcFrf8dR+h
Xu12zhHX/8PdKXwucD78DprzQfnhuFvzxMqn+sX3S+oXuft/x/gdwf3fZHDp
6cM6lt2SD0Q2n5ru9OJhPfb+PuCHdKf3vFx7T/c/6Z7L3P8/BWcduQLl+m1e
m3rEV+9LXPoWxaY3+vHdP/m+yBe/+w43I868j5w7niMtzce/mHNsSvUn0311
z/R+TP7MmxWn+z+n6K/F5c9x5+9u8pee+1i+z9f+h/XN9HsxufZprKcqH3Hq
NZ+pF2ecrl5iRp00/n5Hznp9Lcp9u+5E6SSnJ5ee7bp6Vtivsk6XfMR5nVpc
40uu8SLXfOO6IR/jPYOPWz6sx8vfYclZd1HnIlh3UfmRXued3PuxMUWWHBjY
wp07IpfevTeDnlx6994JenKd92O74vQXp4/ade+10C659O5cE/Tkapc+4tTr
XCL7Jc5+ibNfOm9JH3H6iNNH/oxfnPHLh3px6pVP97se8kkuvftdEnpy5Zk+
4tTL3/1uDn9y6d05HOjJ3TlV+IhTrzwzfnHGrzxTL069fBiPOOORD/Xi1Ov/
RXIeinMeinMeDhozIcrzqvp8xOkjTh/5c36Kc37Kh3px6vW9OeMUZ5zijFN1
b+gjTh9x+sif8YszfvlQL0698sb5Js75prxRL069fDjfxDnf5EO9OPXKA+MR
ZzzKA/Xi1MuH8YgzHvlQL0691h/3vhfrD7n07ntS6Mm1LtFHnHr5u+8f4U8u
vfueEXpytUsfceq1jjF+ccavdYx6cerlw3jEGY98qBenXvlx3yEiP+TSu+8x
oSdX3ugjTr383fca8CeX3n2vAT252qWPOPXKM+MXZ/zKM/Xi1MuH8YgzHvlQ
L0691jHON3HON61j1ItTLx/ON3HON/lQL0691jHGI854tI5RL069fBiPOOOR
D/Xi1CsPnA/inA/KA/Xi1MuH80Gc80E+1ItTrzwwHnHGozxQL069fBiPOOOR
D/Xi1Ot9Avc54tzniHOfo/cV9BGnjzh95M/9jzj3P/KhXpx6PV8zTnHGKc44
9V6LPuL0EaeP/Bm/OOOXD/Xi1Ctv3C/5zqMib9SLUy8f7pfEuV+SD/XufRf0
ygPjEWc87rwr9OLUy4fxiDMed/4NeveeFnq9V+Q8Eec8Eec80ftS+ojTR5w+
8uf8Eef8kQ/14tTr/B7jFGec4oxT5/HoI04fcfrIn/GLM375UC9OvfLG+eb+
jwbmm/u/HtCLUy8fzjdxzjf5UC9OvfLAeMQZj/JAvTj18mE84oxHPtSLU691
hvsZce5ntM5QL069fLifEed+Rj7Ui1OvdYbxiDMe9zsR9OLUy4fxiDMe+VAv
Tr3ywP2MOPczygP14tTLh/sZce5n5EO9OPXKA+MRZzzKA/Xi1MuH8YgzHvlQ
L0691gHOB3HOB60D1ItTLx/OB3HOB/lQL0691gHGI854tA5QL069fBiPOOOR
D/Xi1CsPnA/inA/KA/Xi1MuH80Gc80E+1ItTrzwwHnHGozxQL069fBiPOOOR
D/Xi1PP/DIrz/9m5vP2H9Yetern/17q77rtC/B89xcP/xyfO/+cozv9LSM78
8P8tir+cJzL5nzvyxCZcHzNyRuCGu1+fyH8mKu5cMe/tiTGNBj10Jji8eXLV
N97YFLx3c/ikElmKe+Mmvj12+fZ4dx6g7b4GrXJsK+69f6j468M7nXQ+CcH+
ax9NKuu9c+ZIkwGbY9z9+r3UoV8PvpbNC3utYuYsi0P7tBMRuWrVW/9dYM+4
8vtmTdjk/Ounvbrsr+rZvAtbm2w/ejS036sb88fwlOM5vfaTLk0tXS20H9t3
u110jSEP1u3pc6OvZino+KU2635779WC3uMH0jZPnhXqb+6uA3JceCefd/n9
sXPbNAvtZ3z11TN421Vp+a7+a33yDO6r0w4f3zrP+ucZ3FePGuO1rFLOIW2b
3XD5zOlFrsodcTUwMuN7QHFfneoM/vGcc5899HxK4OEGi/YWiA7tb7PNjj80
qcaDfRXG5fmYWZlWzrwdYP5938Vn8B9+evStuCblvbVfzN5ZtuyPjv8880iP
Kc3CvFNdd6fkOVHExfNRdMW4RkvTA2fnfbPyxDcFfNdpvpSIjt0W5/F+mFAw
/qMZhwLk5XKNqnN48++B5M67v14/415gU8eSf/18KpPpcy6pR+lDP3zj81mb
af0XdW++F4jpcGzw5Gxpgfafvn6z7Ixc5rrx7+ppW/rXTpY/fnh2mPfgyf6n
r7KWNP2t9eT/W0f9/xq/2q24sO8nmytl8ro2XLK7zicVfOtM+Un1Hp++p5Lj
E96JWln1tzBvSnSpQ6NqlXV833t50tZ+W8zLVmZq1+1Vz7jvyHqVz1/fC0sI
9ouLP163wKnQdYf/Jyheo+SvTXeuvhts9Wzyqe+KXXKc/8dQ/L8GVC/fYcjh
wISsQyaGP/Sa4y1i8s6dVfZ6oEj9FvsbzTrjePYiR15eMKZAbNw7E+dsOXTT
91yj/58onuvd8MTBg9OCnyU+dP9s4mXH00c3rNb+TvbYhEc3dkh/JSkU/7Ji
WwLXi3mX41qVunYl3p2D2puYrfSpmWmBhbmTt3d4LVRnifPzpw+f2fRn8I8g
9TovSq48PzQz8lqWAsW9guW+KfT1/HgXD/+/s3jFvQ2e/u+qpb2cQ8fmnnTr
m6B1Hd3u069nzg93+vjlGvE7B9c94uNPbn7qoVXPnvbxGk/c+WVoqZ+DI3K3
/urs49m8T66fbtpyUGid6dd3+dR3DmX1uv+5Oj59VOg9AP8voVuHE09M7DAj
pxd9ekqBDlNyOD5+YZdaZeIfXHVFXsmz6Hxo3aubEre1XNYC3qWIXwa+Hn7b
9bdriflD7yx70M+VvzZrVzKT07/Yo8LXS/+rsLdu5to5S7MlOv3Ign9M7ljm
ju/9z8Jed56rd+J2oO2vN9tuaJDseO/BRb/PsuBe4Ndvn1h8tXHo/vJBZLmD
z5ZODbz+Rr1n40+F1ofWGfedygdbFUkNL+f40oz7y0t/NktI7hG6v3z3Tcu4
SntTAw13L7iZZUJRx/fmHl6t/tj7gSHz2n0wsHzB/3j9sdYNi7t6BayHoPtg
lrq9xhQqHNtz+8yUKQOTfc/77nv8DO77Dj2D767/3bDp+7LFDn376+Uj/vcc
YQZvfPfS1Oij+wM1dlX/5d2UDcGeH28ZmO2txOD08svT2zdLD+ybHLy+vlxo
nfd9v5PBb6x5JXvHfJm9863+ceDHy/ed/555P9wY/691YDL4poKDWowbmRLY
mvRu2QVv5nfzp02J1IG9myUHsk4O3K0+P7RvmRAZtqJx/duBxT0eXjC7YhHH
27fZtfr6+w/4V/3O5BtRInRd8HvJDO6rG6Dr5eMGCcv+tW6PngtSZh9+7cjN
wJUqJYdlzp3m9NOenf/Ui+Oye3nTogccmhHKZ5fxLSJbnr4Z6H+pYeO5Ny46
3v7y8HrnKscFF3UrOm7n3KPO59icgXcHRcUFny26aHyD6Ued/slXw38+nCct
uLx7hwvh+y87vnrtlLZpDat6u+v/48b1gSmBzFq3G5V+eVuZSl6dbckDp+Y+
7/Txsc/8uWNvhNe0UNMG+1KLufFKyjr2fPymiAc+FZ8sv7mYuy8fyLzqhfoT
w736OdbGluiU3+nb5dm4ptfKWt77pxY/9GLV0L6u68RqvWd0i/S/B3iuYu1r
9f2/h556Knrd9sRI3/489YVyCRU3R3hzmq8okuefxdx3YZnaVS7d7wG/0P/k
gHsP+L1GLxQse/VKMLHjvNvB7OHe/phK11dfz+t8/piY+sb8HjW8RG/dN4dz
Z3H8dPfTjb+KqOz21cpbx53lbsw+Udm3f/bVV8/gvvrqGXzuhWnFbhWM9H7Z
dmHxjzGhfamv/rDuy6zfq3yyfmAGnzf10tz9D8Yl8cqni1IiQ3m78lC2gt2n
V/Y21rg5vmWTJDfuVd5pMefymore4LeOZ9mQ/w/HV414eEv04Qq+eb7pt5O3
ej4c4d2rV+arrnuL+OLkfpvj1fjjgk1LdPo6UOTikPLnAzW96Gpf3Cr0dUFz
vj0ze3rfX1aeDZD/c8aeHJ2/vOLjb3balefqFxcDbLfVuQO7X0s+6uPJPQcP
f+LAQZ9P9R+67dg2Oz5Q6mivx4vUD/cOHxn60sC40P5/dcSThe7djvD6Thww
oHJi6LnjzNjobncaRHpVns2xdMVXofvLrNHT0woWj/LOtHo3aXhKaL93ZtPy
F3rERHpNh4zJtai6Pc9nvDSyaXrueB8PtpnyyPfXjvh4wo0jc+vVvujj22qt
u1Cy3Fkfb5n0V7HXZ33lu460//lgR8JL2RMf9g4NuHVp6Q85XZx9js2Lnbff
/7v/1XcX37v7QQ3vwJo5z249Fbq+upwoMLhn9ure5LaFb43rku7m1YiaTbYt
mec/1xQsPG9i356VvCab2g95OhBa/6cXaTN96+jKXtvkckmRLxR1vHvy4PHH
Iqp4MYt3l7owt5Tjvv+Dqfv7vJwfHO1Tzvt8fOcXdtZJdeut7/8X67mM/0dD
18UL2zrnK1/Hy5otc+7TzbI73j/vqEWLS0Z5W94sOvbwqtBz2Wd570z5dqP/
3NGnR8oU2pka7q0YtTLXywmh+RP11nOJW0pHeCfeK7T6XMnQfsZXRx3zZ3bG
+N6a+e3gWo8fCl5eP65wkQ7h3uS03tFP5QjNw6I/TWi7rnwlL1ii5Z8Rj+Zz
617M299U+mJEHe/yY00S6h4O9Tcx6cygS6treUsqdGv1+PeFHf8fnzRriw==

    "], {{
      {RGBColor[0, 0, 1], Opacity[0.65], Dashing[{Small, Small}], EdgeForm[
       None], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1:eJxNmgn4VtP2x895aTAPiUxpMielkkKTlFCSSKhUpkwpQ4pIiJSpopIoSdGg
WUTGUK6/4RqueSZTZpnu9V8f+3Oe9/09z/fZv73XsNdeZ79nWN9dt/+g7ueX
svirkmUbZQn0Nw48Gv/cEXje9jn/XxtYHnjI/orAw4E1tssdOybQLfBU4Bnl
T9uu1d9x6k0JPOs8qwNTA4sCjwVuCKwMPKmvp9VdpP0TgceV0T7qfLfra4p6
iwM99L0gsDAwPNb5f3nEE5gW/7+Yp/4lWRp7PvBI6LUOtAkMzdLYmsCS6Hct
JfmDgRNKaWyxLeOrjJ24bgqb49UlR8vM4VLz1CcwITAuT/FhN9n1LFPe13Uv
dJ6F+lti7pfqu4fzt3GtzP2guZyk32djbGa0cwMP2Of/mwLzAzcHblF+q5in
/ERlvR2bFrhbO9r7SilHD6g7J3B/4E7izFN/lv3pgbsC9zo2rULG/zO1maXv
e/T/eIzN1vf1gTGub66+iHds4Db3wtWsPU992vHKJrtH7rA/Uf1JtlMcm+De
GaPfScY9w5jwd3Oe9G40Tzebo3GBkwPXBOoFRrm2u1zTydqcErguMNp5Rhv3
WH3cqt+WgVaBgwMHBpoFWgSuIm+xR+8KXB7/v5WnsXOVnU3cITuPdWep/49u
4I7ASOUjtUGvc+CywJXicmXD7aM7ItAxcGngfPun2T8iMEwfb+TJvpCdHugU
eD1P8jP1SyxXRHu4vs5ybGqgn3ZnBIYEBgYuCFwSGODYUNsLAxdzHcPuviz1
0b1IDFZOe1uW9AY63yDj7mxMFziG7jmllLOzs5RH+jdHe6prK2Ic5ppuVvfc
LMV9pnMMcB0DzfXZ+r7WPcL176+/AV7vM8LHmVm6H3QP9BKHBtqyf7K0n9hL
JznWLnBFlvYishFZ+l3SP7aU7hOH6O8Qfd2Qpd8wetzbegaOtq0RsrpZuv8x
1qWU7mHH6oMx5LWzdH/voaxpYOcY2yVL98IP8+SPtc7M017v63qIvUNgfoy3
j/bIwKw8jR2l7HD3VyevE310O4rDlNM+kCc9fjd9s5TH1sbeVLv786RLDg40
D+Ag89hc3WbasT7Wg6yleUa3hfPQ9snSfG20P8R9xF5mz+GLfKD3dMy/PPBQ
4IAY3yfQROwS2DXQOLAVeQzUcqx2YP/Ajsp3sUVn78B+gUb6a6S8kTbovRnz
/Rb4T+D3wC+BPWJ891Lq8/9e+sIH/UdifGVgz/i/obK3o/+vPD1H5wU25Mn3
diGrGdg+sE3g7hjbNtoG7JNSuifWV15XzAidewJ14v8J0U7Pkx5jM7W/S/kM
W3Rqmo/dSikWYiVO+tjUMX+TY2xKnvK3s3HRbu3/5GJ311TbMexrmPearuPB
wK15yv2defK7vfMTF/6mqPdr4N3AU4EtS+lla/PAZqXU5/9vQ/ZjYH3guzyN
fZ8nbKF8trIFjv0V7f+0o/04cF+e/KJbNdpqgT/j/41LqV+y/3fgv4HcMXwV
Mv4nxo2V4fsj/W8S/Sr6+jL677g24s2N+Y/Ap4GvAj9p96n76yvzwb772X33
iGNPuXfWK/tZX79r96V6xP2DMa13DnS/yVOe1pujrwNz1fss8Ilr+6/5mqsN
e/aLwDrn+NT+V/r4Xr/DAkMDwwM7+PtkT7wW/Q/ydF97OfBv+2CbSOW2gWXx
/5OBxeoxxv2UNb+fJzntE+q9GmjIfSJL/mjxRa7fU5fnKr8z9uxbtuzbawKv
BG4IvKQvfPCOgPxF5VcouzFPa+B98XXzgV/uSQvzdF9aaIzEz7sy96y1+nrB
MfQWBVbn6X35uTw9S+ivyNO7JjbPVMhXO46Plc5ZxD1W3YfUeyywKk/vgIvt
LwkszVMel2nzsmtaou7D+l6q/xXKHjbXj+qL/fG5136RcywxT7tn6Xrwe54a
mCNGBq7O0/OK3xz7jmfOXPOI7pXq3a8cGd8qfEfx/n5H9Eepd4v+uIbc57jH
jM/Tve/2PL3Dci+cbv+2wOg8vYPynLzPOCZod22e7k3T8jQPdhO1/dg1f+o8
c5x/onajbccErrO9xuszzhzfpOwGc3+97Y3GdL26IwINspTHKcYy1TmuU++y
PP220L00cEmefm+j7F9ZseZJ5ulyY8KuUZbmuFwfV2gzzPyPd31j9Ns4SzZN
4v8OgYvEgMBpjl3o2JDA+YHTA4MCFwQuDvS07aXdyYFTtDvd/isxR/9o6wUO
D5wdOK/CV09tTgz0DrQJDFTvfHXRax8YHDhMDDFG5Oca02DnwO6YQNNAs0BH
19Rfv+doc2bgt4jv90D3+P8Mx+oH+nDNAn0DpwbOCjS03U+7HwLfZcnuD/sn
mo+TWFOW/OG/8IWPk53vTHPU0/X3MQd9jbefMfc3pnrKTzKmfuYOu07hc0Pg
5yyt+wDX3th8dTDGA6P9MNoTlNM/LtAlcGSgm7lDfqwtdl0DLeP/46Ptwrts
Xh7rHGilj67aH6U963yN+3jg9cDRjGVJr5gP3eox1jNLsWxii7xOluT46ak9
soPdE6yNWI4wjt2yZIdNu0Bb9ToFDnWskfbkpnmghXvkpSy17Fns2rifsGtt
n7h7mONW+mtvHrEnt52dr526+1fsxebqkseDWEuW0EhdrlsTY3o5S7G8Ss0m
8FBgRaCXe3aDPlq5nj0Cewf2CezlPqVfN7BrYCfySY4Cuwc2t91C7Bmo5dge
Ff19Azvqo7b2O2u/WWDjQJVA1cDXEVMebaliPnRZQz1jeTtLLfL1WZLjB/ku
6hwV4/8N/C9LcexjHMgbGMdWgW0DNQJb2t868E2W5t8kUM24kG/jOrDZQd3t
2HvKGfs2S3ER06aurVhPdX1WMS/428jcVVGvmrrrsrQmfHyZpTY3lm2MdTPt
kbFHGnvt/wz9d3jfCXyVpZyypt28rlybztH/yRz9Gvg+8IG//yzkP2YJf1bo
/W0+6f9VMfZR4BPvZa/5O+2gPbrkuqFz/+AeR+8w5/vR/fiLe3KDMf1sTP8J
vKX8O2P9PEt5+dpY3jWO750fm8+ylEf0vsjSXllnrB8HPg28kaX9xHV703a9
8q/Ued/5PjY3H5jf95zjfed70zjfcr73XOvLFXl5Q9131HvP2N/Tz7/9vb7t
et53Xp7BPON5br8Y/TGB2YFugWOzdE9cniXZksDEwPOBF+yje39ghmP/Ethw
X+B+wbOa5wbyNcpmqsf9Y25gdWBe4JbAec7B2LWBZwMXBUYF1tofHXjOeNfq
Y4FjD2p/sfMhv1p/c5xnvnHTfyCwzHZV4BHbxwOLAwsDK+0/GnjClrHHxDOB
JwNP2T6tfJGyecZNjA873yPGscA5ZruOOeaO/C41lsXOucKxh413fkWMDzrf
Ute2zFgfM67pXr8Z5mOk+Z2l7J4s1ebGB+61P8NrRW2Suvzdgnr9ZYHzbQdp
M0F/l6uH/NbA2MCNWarr3eocjFGPG5elGgz1zin2qc+xF25zDJubHJuo/Y3O
h3yy/s4xlguU3eTahmWpjnZVYIgt+4k9cmHgevtXmhvaK8wRoJZ3jfmiHa0N
+3KMsYxzvsHON8Q4BjvH2ebjHHMGt3GpsYxwzkGOYXOe9kWMQ5wP+VDn4PfJ
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
mWdzTWN8WtmivHyWfzvl2wf+H0nmI9k=
           "]],
          Annotation[#, "Charting`Private`Tag$73153#1"]& ]],
        Lighting->Automatic]}, 
      {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1:eJxVnHn8l1MWx+v3fB+EsitkGKNGqMiSIkrFEEkIZS0qkZJ9xp4lIrtMSJjs
Y4sikRJJi/adiEp7qLSIOW/3/bx+v/nj83q+dz/33HPPc+855/n+tWOPtleW
VapU6fm8UqUsnmsi8UtgVWBkqVKljwOfBLJApcA2PqdH5WqmeVYNNI28bQLN
Ah9GenhgROCYSDcKHBto4vO4wIQYo3KW2o2Oep8Gxtjms8DngVcCLwZeD9zj
81+BX6Ptu/HcNksYEL+3y1IfX9rP+4H7A++JBwJDA+vKUnp9PGeVpfH/ElgR
v/eJZ03TzGPfwAGBBoHDA/v7rB1YEvW/DxyRJSyK30fGc1lZKmPOh9q+TpbK
dg40lB+0OSpwSKC+dXlWd7zDArtZTptqgeaOs5f9kd4h0CLQVx71CSwvS3Ng
Pi2t10LeM+bxgaOztDasSWPpPsbyIx1zlOsAX78IjA9MKCXe31dKfH8y8Hzg
34E7AjcF7g48Fng08Hjg4cDNgVsD/QL/CTxo2UOW32se8+hvv/T5TuAR+7sz
8ERgUOCFwMuBwfY3WFkBrykr4EZlhrpvWA+8at0h9gVdbwfecswnnMeTytZT
8SzF83b7Y54zA9MCswJzAlPNm19KMj1DWR4bGOdeGmX5ZMunyONx8nmufcyz
vymO8VXgo1Lalzw/dK+wBk+XEn3Q+6w0D5KPz9n3F+4N6j0TGOh+uNf1ZD+Q
Zm99bN/Qdb886uf6vOIaHaccIV8nBv4ROCkwL9rPCUwLfBWYHpgS2BjYFNgc
+D2wJfCHGB+YGPg2MN92yP7u7ocdAzUCe7gPdjFvYdSbHfgh8E1ZGnu++5K8
RY4/IzAzMFlapjoeOmiSmGVf3zn+ZPuaZh8859rXTtKyZ5b2Ijpjb/cbOuOv
War7h+PMcd7kHRxlBwXqZokHGYpX5IGts3Ie0f7rwALntrYsrQ86j3Yl28A/
2qNPy7IkryV1A3yC3lrqrb9LLzTuF1gsP9BZe5v3N3XV3vJ6F/NYg6qBKo7z
W1l6ZspCQ3UN75H10sq7ZHVZyusVZd0DVwYuDFwc6Bi4INDG9DmWXRQ4NdA2
0No2PQI9A6coa7Q5M3BW4IRAK2WR8qttc03gukD7wBmBLoGugcsCpwUuDXR2
jEtM028n63ayvKtjnmZeN8c+OXC5z1bug9bWO1C+s+ZnO7dzsySLk5Q3eL+w
gsyuUG6nKLML5d86ebq0LK3ZMt/Va5SLH5XZxfa73P5mKIOMx3tof+mCFx3k
3Xny7ALncYJ8XBltfnb88y2/0PJTnSvtTzd9kPJVL3BD4Fp5v32WaERuZqv7
pvoOQZfwzjopcE6gXWDPwN6BfQJbB9Yhz+bVDPwlsFVgQ5bKzw3UCxwT2Bdd
jHyjI7OU3i1Qo5Ty9lJ336W+PBpdFjg+UDdwRaB74HT7bR9oGegVuMq630W/
v7Cu1u1luwMCPQIH2Vd3+6XuWngfv/8WqBXYQ1qYz/go291574S+Zv/Fc8fA
LoHqvDcib3JgmqDeDPMmmp6bpTnv5hi1peNAaTrY/na1z0nWZWzG+zJLZbT7
u/MpeEedCVmikXU5M7Al0r9L+x7SP0PaGWcH0/yuZrqKYG7bBuoE6kvflfKv
Z2Bslvg9JJ5HxvPQUuIf8nGE6UMC5wUaBE4LdHDdWgVONH1x4JLApaZPcF1b
W492nQIXBC6y7q9Zkq/LA8vi9wr0VPxuYb2zA90qlG8O/KbsMx7yzxmuSymd
Fxl7K/m1OFAWv3+M53Lbkb4w0MzxLzJNX+c7J+SQ/jpKL2epWwK3Ba4NnBq4
rpTOJv8sJRm/LHB1oHOgdymdz+40j36vCXS1HXXh99tZ4jl5baxL3g3x/DxL
8/7dOfM+gVbm3Vwam5SS3LOWveTFpcpLZ8fsYtn1jnm9a36D5c2d59eB6aWk
L1g35KBhKe1z5OaowGb4Ck2BSnGP2RTP3wI14nf1PJ3pdonn7qZ3zVN6tzzV
o/1Pgb9Eeo/AXmLPQM3APqZ3ytO7dkkpvaO56/wQvxeX0nmqt7wlb5H5/Kb+
glJ6H3Pmyn0usIyzWx/b/+h6Lg1M9LksUDnG3jGwJn7/EdgvfpfMq+Q8tskT
D6rEc7vAivj9QWCH+L11YFuxleXfRVm1PJ0rF0g7Z8YNgY2WVc3TuZtzOuNl
eeL12lKi5Wd5nzv2vvJpR581pY/nH67PwlIa+3v7+E3+Q2NxV8gdewfpfVh5
X+ETHtVTFurLb2jnrDtWnnFXObaUdB76G717WCnpNdqhS9CR6BL0yKFiP8vQ
8bRDD7VX5ppY3sC+6ttHXWURPdso0LaU5B6ZP7mU3m3oGvYoeged08Yne5uz
IG3OEGeVko7hSR/sN/QZuo890DTQuJTeXU0cm3QL041FI+t8E1heSntpfeAX
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
6etAx8FnhbxXtg/+l4Ex8AcV/p//AaieHNA=
           "]],
          Annotation[#, "Charting`Private`Tag$73153#2"]& ]],
        Lighting->Automatic]}, 
      {RGBColor[0, 1, 1], Thickness[Large], Opacity[0.15], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1: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
N9+591r7Hn3zrMMYjYiOfky+Y62/QC56z7qfXtDr6Hg0+UJ9cx0/qI/4EMcP
2CNcWd/jQ489nMp7BnapWGRPjzp3gf0t0feIdRijIYfLtcK1ovfXuzY0L5oa
bY3mRn+j69HjTzj3cccr9K10nxg/lUrtv9q56PpV+uDjjpfvfM/KRb1nnPsn
a6/W97R1VqdSr6+V7z7rPy8Xva9xD+jlReeiwdfpW+V4jb58T2D8nD3ClXU8
vpesDd9y9539ek0unqcNzqWXV83fkMp7wsvu+1DP/HX5sibF8mxu9Jw4c/Qk
Ohu9h+7O9wO0NO8oGn+Tvo2pvA/k+8EbqdTvm+RCIy5zHVnrL0vlfQDfFrk2
W/tN86hzqv1tNQ43Ghp9jabeYX9woOWnO873AXwfeP689zv1kbddvm3yvZ9K
/Y5F639kbeZmrb81lfcBfB/KDccufeTtdh6+ve4Bz35b9W8bNXVSozfxHlCl
Fl/vs8CYfHz73BvGjb0HNGqg4znnau8K8LFuvoV872rV/tSreAfgWWhqfqXB
PaGmwX2DmnXy5TtKrb23VuNnrb/dvvJ9oIVavKVz8x2gpfq+jfGs7zuoy9up
0/d4HuxXZ+OdRJ291MvdscF9gBjvPe8/Oqib87gDfAKZDu3o
           "]],
          Annotation[#, "Charting`Private`Tag$73153#3"]& ]],
        Lighting->Automatic]}, {}, {}, {}, {}, {}, {}}, {
      {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJwt0L1KggEYBeCvJlv9xbYwyDLRnPKHoJYCaymXXIogVJJ00T1J9CLqMqSp
MNy8DZvCazCfoeFZzjucw7vz0Ll+3giC4IYcefqCFwa888b2pjtZDsmwR5oC
CSJESbHLK0NGjPnkiynfzJjzwYQ76pxSpEzDnkeaXFJlxR8LfvhlyZadIRJE
iRMjQpgkGQ7YJ0uTe+rc0qNLmydanFDhnAtqXOk7o0SFYwoc/f9xDaM+IEM=

        "]], 
       Line3DBox[{134, 132, 135, 604, 653, 655, 685, 678, 674, 673, 672, 681, 
        679, 446, 444, 448, 477, 475, 488, 486, 485, 497, 511, 519, 517, 520, 
        521, 516, 515, 526, 522, 422, 420, 586, 587, 638, 622, 608, 610, 630, 
        631, 627, 628, 629, 166, 164, 165, 162, 163, 206, 184, 185, 186, 191, 
        192, 194, 195, 193, 196, 177, 175, 199, 134}]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], 
       Line3DBox[{733, 734, 736, 737, 744, 745, 826, 827, 829, 831, 837, 836, 
        783, 785, 794, 1396, 1408, 1405, 1404, 1403, 897, 899, 895, 855, 857, 
        934, 933, 930, 932, 931, 929, 928, 873, 872, 870, 869, 868, 1433, 
        1421, 1420, 1419, 1446, 1445, 1450, 1451, 1448, 1437, 1435, 1375, 
        1374, 1376, 1409, 1197, 1192, 1191, 1203, 1207, 1208, 757, 754, 753, 
        916, 914, 938, 939, 941, 942, 943, 944, 910, 911, 912, 922, 774, 
        733}], Line3DBox[{790, 788, 819, 816, 817, 809, 810, 812, 813, 1107, 
        1111, 1131, 1004, 1005, 1006, 1007, 995, 996, 997, 988, 990, 1036, 
        1034, 1040, 1047, 1044, 970, 972, 1055, 1053, 1054, 1052, 1051, 1057, 
        985, 983, 951, 950, 966, 1144, 1136, 1135, 1064, 1063, 1075, 1074, 
        1116, 1076, 1077, 1112, 1096, 1098, 1102, 1100, 1141, 1128, 790}], 
       Line3DBox[{1240, 1241, 1242, 1243, 1498, 1502, 1504, 1494, 1487, 1489, 
        1522, 1525, 1477, 1475, 1478, 1469, 1468, 1482, 1467, 1461, 1460, 
        1503, 1328, 1327, 1326, 1335, 1336, 1359, 1358, 1357, 1356, 1354, 
        1348, 1350, 1342, 1302, 1298, 1300, 1316, 1315, 1306, 1305, 1309, 
        1310, 1311, 1312, 1281, 1268, 1269, 1271, 1248, 1250, 1262, 1263, 
        1246, 1245, 1240}]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], 
       Line3DBox[{1533, 1535, 1537, 1542, 1544, 1558, 1560, 1564, 1566, 1614, 
        1616, 1620, 1622, 1634, 1636, 1640, 1642, 1641, 1644, 1650, 1652, 
        1674, 1676, 1682, 1684, 1778, 1780, 1786, 1788, 1810, 1812, 1818, 
        1820, 1819, 1816, 1815, 1804, 1803, 1800, 1799, 1756, 1755, 1752, 
        1751, 1740, 1739, 1736, 1735, 1734, 1731, 1724, 1721, 1698, 1695, 
        1688, 1685, 1590, 1587, 1580, 1577, 1550, 1547, 1538, 1532, 
        1533}]}, {}, {}, {}, {}, 
      {RGBColor[0.5, 0, 0.5], Thickness[Large], 
       Line3DBox[{1827, 1824, 1920, 1873, 1826, 1876, 1877, 1868, 1825, 1921, 
        1872, 1923, 1874, 1875, 1823, 1863, 1862, 1865, 1866, 1900, 1903, 
        1901, 1902, 1894, 1895, 1893, 1896}], 
       Line3DBox[{1836, 1892, 1835, 1881}], Line3DBox[{1922, 1869, 1870}], 
       Line3DBox[{1929, 1840}], 
       Line3DBox[{1992, 1957, 1989, 1990, 1987, 1988, 2011, 1991, 1956, 1974, 
        1980, 1979, 1981, 1976, 1978, 1977, 1950}]}, 
      {RGBColor[0.5, 0, 0.5], Thickness[Large], 
       Line3DBox[{1889, 1888, 1834, 1891, 1890, 1884, 1883, 1882, 1944, 1886, 
        1885, 1887, 1943, 1913, 1912, 1864, 1828, 1867, 1829, 1861, 1822, 
        1860, 1821, 1871, 1830, 1880, 1833, 1878, 1831, 1879, 1832}], 
       Line3DBox[{1954, 1985, 1955, 1986, 1953, 1984, 1952, 1983, 1949, 1972, 
        1973, 1975, 1951, 1982, 1958, 1993, 1994, 1995, 1959, 1996, 1997, 
        1947, 1969, 1948, 1970, 1971, 1859, 1838, 1899, 1837, 1897, 1898, 
        1911, 1844, 1909, 1845, 1910, 1842, 1907, 1908, 1843, 1839, 1904, 
        1841, 1905, 1906}]}, {}, 
      {RGBColor[0.5, 0, 0.5], Thickness[Large], 
       Line3DBox[{1849, 1917, 1846, 1914, 1848, 1916, 1847, 1915, 1850, 1918, 
        1851, 1919, 1854, 1930, 1931, 1932, 1933, 1942, 1940, 1858, 1939, 
        2002, 2003, 2013, 1998, 1960, 1999, 1961, 2000, 2001}], 
       Line3DBox[{1926, 1925, 1852, 1928, 1946, 1924, 1945, 1853, 1927, 1941, 
        1935, 1855, 1934, 1856, 1936, 1857, 1937, 1938}], 
       Line3DBox[{1962, 2004, 2014, 2005, 1963, 2007, 2006, 1964, 2015, 2010, 
        2009, 1966, 2008, 1965, 1968, 2012, 1967}]}}},
    VertexNormals->CompressedData["
1:eJztm3k01tsX/3WbRTPNkeZB023SdErSXIY0KNGoKJmVpEmicEORqEQizSTN
J1Nz7m1SKUMh08OjiYrqZ63vPs93/Xa/vZ7c75+/5/nHWq+11/vss88+5+xz
Pke3ZeuNVv6hpKSU01hJqX7tX73qcW+adn7Bkk27L998rIxvci76WT3ElB/r
PviPRw+zWM2VcU/cDSX80IOnQyTvF/ApYJ8E9q5gH07YGxeOGGYXksHORXT9
OLGijB80aDYmvcsibgT8POKTCX92p8+q7rA3m6msWvnTu4uEdw/ekVPyegH3
RFwLeAThj+hXNfDDwIW+shydMLDXJfychPhm4EYoDmHQXwcdnQmL2TM2rZ3T
FtNB5dxidmvXrupmJHcCPh34EuBU3Kj+4nER/swjOB53oU+NL9YR3Jnw34Xo
L5WHlI4XkQ/U+FI6Jsj/Q+C/IREfe9CZATrmoIP1lwKn8gfPo8Ny8g3H54ic
eTcRdFKQDuUnNU9xf4U9FR87wr6ucaD6Rc0XL2LcKX2xnqiCvaac/KHWpfHb
DDutaZvPZrxfmbihpIhf6BBxPaFm/i88DnjVlgEFaqZ5rIvdCbPxbsW8cE+2
tnuvBbwSeFfgxcAp+3GE/oi/V5q49S1iX1U3+7atzuez9OpFeOyfx4cD/wZ8
DvBhiM8G7kPEAfNuwHF+ivUzCvg3xCl9ah2g7Cn9Sd0PtV0Xm820+hbtXaIu
4Vea7VZ7mrmAH0f2Qv+89fNtSp2LWern+5J5GXl8Wo5xXrLaPB4HPAVxMb7T
UfypfBgJcf5CjAseL8ofeTwN8S+QP50hf4qIvBKcyn954/67+6zYL87CvA6F
eT0fcbyPiPluBvM9y3+36ljjZ+zW5vtGL/uXc/VeVp+utzYj9y+qnqHanUbs
7zMIjvsVAjrZyM/24GcOwfWRvvCT8kezx/79Iz5IuZ+T5uW7Z0+zE1cv6Tx9
Zyjje4DHAB+WEHi1+VcpL3888P7ZVlGs559PY3f0mS3jxYjffWQ/oHeulJ8Z
eOKbs89FFt7hXoJqpckvPAI41a6wPw72h8H+xgTVvYavpfx8oXWcc1Yie1Zz
fXePZya/9CsG9cub6FcJ8j9L1ahdzo5yvk46xfWR3hPmPFztuueTZb9wJ+A6
ZUO+nwuV8rhRczWzq1JYyMiquL8+L5Lxc8CDgQudtaDjgHQSwf4g2Is4nEPx
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
cf0iGTdEHOu8QzpGyJ6q28W6dAmd16h5h9dVvB4uIs6D+Dwr7JcTOssJnYvE
ufiqnHVV7AtU3Kj1SvD+6P5ExHkWxHkrxFm0W0SsV++QP+03WBnE3itmnrvT
U7Uq3rJXBWxJoooXya97G64NM5Aw744vPxn/ncXaXKly9B+9ky/b4N5q7CwJ
e2W94bnW6yzWNfWJ67lJO/mpHMfeqyrLWYbh5/OL+vzDdHq3djOwdJfxl8BH
A780sejxyGHltY2ta5Pb7RnTV1/Ub8uxbTJugXgi4lORvdCZAtw/cJBXg1gJ
63XRZ90Ru9cs+0Xnrl/Pe/C9wAcAzwGuDnHYBXHIhDiI/mZBfzWhv0uHXo8+
1bd2vdgeuS3N7Bkzueav1/j8Npl+f6SP4zMSxScDxSdgyOPz6uZStrWtcuns
MXeZasayLuYeriT/tzrbEfdH/ueC//V0j94yvyxhOs11B6/68zUL6LQ4vvlx
D1l8XkB8OkN8cNxwnlD5gMcd+9mc8L85ioPQHwf6eHxx/mN+6kd6xJWEYmbd
k7l7qOQxh2O7L65S9+IdwH4H2L8E+9uBhlv3PMtn6Rpttd5PLWL+m7Z2edtr
zy98H/DToG8F+nagfwvs/wH7ALCn2sX2ot0VXL3f5tv5zGZTXOyXuUXsj/kp
7wy19/BlwG2BNwSO7esBx3k+F/J8GXBd4MbAAyF/uqN5h+djFnAR/52oX9S4
4HWpNaxLgvsAbwv85FLHV3GSfLY1WWVJveFFzKFm++jHXff8wh2Bp0I8H0E8
90M8U4A/RuNyfLhO28DkfNbPzSa378IiNtbySYjS0D08Cnh/4OOAi7x1hbxt
BnlL2VMc+yPyCo+vbByB26F8aI/y6gXEGefbc+B/RjS9vjGnmKlmtZ1x8slb
lhVxoEazvhcfDlwF8RMQZw+IswvE2UZ585c79QvYXd81JV81i5ipZ5hVufoe
rkasw5ROVXB81cZJUu6asEJjzoz7XPkPa+tHC51kfDNwVeBxpZttJ2hJ+f1d
3W5uDnjI51hKEn9UOfHebpetJnarPSfetGbjIx/y7lH3AmwbOPOr4y47HL+e
z3oe2em9yKyISY9ffXh2xB4Z74H4ZeC9gVcAp9Yf0a8dKA+p/oq83QbcGdnv
QFzkzwCUP5HAtYGPB0719xrqbzlwEecNRPydEO8LcfZHcaY4pT+52mboDi8p
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
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Epsilon]\"", TraditionalForm], 
    FormBox["\"S\"", TraditionalForm], None},
  Background->GrayLevel[1],
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 1},
  Boxed->False,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{386.16082119635035`, 372.00286272746104`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-5, 20}, {-7, 10}, {-1, 1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.22817640045471116`, -0.03162090862800438, 
   3.3759347814217424`},
  ViewVertical->{-0.20752971869709158`, 0.7834792625667791, 
   0.58574026751225}]], "Output",
 CellChangeTimes->{
  3.8649840563252296`*^9, {3.864984089195907*^9, 3.864984163001163*^9}, 
   3.864984208723666*^9, 3.864984249215981*^9, 3.8649843168884974`*^9, {
   3.864984402884349*^9, 3.864984430784882*^9}, {3.86498452338383*^9, 
   3.864984545144951*^9}, {3.864984581338612*^9, 3.864984620355199*^9}, 
   3.8649846521841803`*^9, {3.864984695690258*^9, 3.8649847869710283`*^9}, 
   3.864984820123601*^9, 3.864984908022606*^9, 3.864984993045829*^9, 
   3.864985035855466*^9, {3.864985102623879*^9, 3.864985114839443*^9}, {
   3.8649851619482183`*^9, 3.864985218368492*^9}, {3.86498531962212*^9, 
   3.8649853406370163`*^9}, 3.864985378748088*^9, {3.86498541349651*^9, 
   3.864985417737178*^9}, {3.864985490040584*^9, 3.864985506002195*^9}, 
   3.864985574842358*^9, {3.864985607285266*^9, 3.864985612422619*^9}, 
   3.864985653798059*^9, 3.86498617025457*^9, 3.864987865193201*^9, {
   3.864987914083498*^9, 3.864987993371232*^9}, {3.864988076336667*^9, 
   3.864988096123144*^9}, {3.864988126933896*^9, 3.8649881423217077`*^9}, {
   3.864988191874167*^9, 3.86498822480303*^9}, {3.864988279717411*^9, 
   3.864988365139351*^9}, {3.864988504146188*^9, 3.864988519057288*^9}, 
   3.864988736368476*^9, {3.864989092322373*^9, 3.8649891003177147`*^9}, {
   3.864989217866864*^9, 3.864989260046653*^9}, 3.86498973727389*^9, {
   3.864989783527432*^9, 3.864989825359947*^9}, {3.864989856538062*^9, 
   3.8649899083981733`*^9}, {3.864990092428393*^9, 3.864990154203705*^9}, {
   3.8649903032522078`*^9, 3.864990328521896*^9}, {3.86499081298518*^9, 
   3.864990851321477*^9}, {3.8649909691898327`*^9, 3.8649909775231524`*^9}, 
   3.86499101510462*^9, {3.8649910581747103`*^9, 3.864991132264102*^9}, {
   3.86499117354464*^9, 3.864991195392976*^9}},
 CellLabel->
  "Out[691]=",ExpressionUUID->"ee415255-aa74-4b1e-9c7b-2c1a9227dbf4"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["3d Coulomb + 3d harmonic oscillator (TO DO)", "Section",
 CellChangeTimes->{{3.864114934147203*^9, 3.864114953922729*^9}, {
  3.865417423174344*^9, 
  3.865417426502713*^9}},ExpressionUUID->"0d8e2725-d596-4955-b6df-\
df280e816d7e"],

Cell[CellGroupData[{

Cell["\<\
Try to follow the same reasoning as for the quartic potential\
\>", "Subsubsection",
 CellChangeTimes->{{3.864274692548676*^9, 3.864274722704041*^9}, {
   3.8643140153087*^9, 3.864314015970899*^9}, {3.8643185685023603`*^9, 
   3.864318578479597*^9}, 
   3.864318626069916*^9},ExpressionUUID->"5f04b166-d618-4eb0-b626-\
9196ee906f20"],

Cell[TextData[{
 "Let us now generalize the above story to the following more generic quartic \
potential.\nNotation: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["H", "2"], "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["m", "1"], "+", 
       SubscriptBox["m", "2"]}], 
      RowBox[{
       SubscriptBox["m", "1"], 
       SubscriptBox["m", "2"]}]], 
     FractionBox[
      SuperscriptBox["hbar", "2"], "2"]}]}], TraditionalForm]],ExpressionUUID->
  "87f493c7-8736-42e3-b680-dfed7de12581"]
}], "Text",
 CellChangeTimes->{{3.864274820517263*^9, 3.86427483221453*^9}, {
  3.864275377289834*^9, 3.864275399449318*^9}, {3.8642867086502132`*^9, 
  3.864286761195252*^9}},ExpressionUUID->"a05c4bad-f1e1-4d53-a204-\
242aecc815b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GENERIC", " ", "COMMENT", " ", "ABOUT", " ", "THIS", " ", 
   RowBox[{"SECTION", ":", " ", 
    RowBox[{
    "contrary", " ", "to", " ", "the", " ", "case", " ", "of", " ", "an", " ",
      "even", " ", "potential"}]}]}], ",", " ", 
  RowBox[{
  "one", " ", "here", " ", "has", " ", "to", " ", "keep", " ", "track", " ", 
   "of", " ", "both", " ", "the", " ", "positive", " ", "x", " ", "and", " ", 
   "the", " ", "negative", " ", "x", " ", "solutions"}]}]], "Text",
 CellChangeTimes->{{3.8643119982628927`*^9, 
  3.864312056801162*^9}},ExpressionUUID->"ccfd75c1-bac7-4460-b864-\
31d731cd579e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"A", " ", "z"}], " ", "+", 
   RowBox[{"\[Beta]", " ", 
    SuperscriptBox["z", "2"]}], "+", 
   FractionBox["\[Gamma]", "z"], "+", 
   FractionBox[
    SuperscriptBox["\[Lambda]", "2"], 
    SuperscriptBox["z", "2"]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq", "[", "\[Psi]_", "]"}], ":=", 
   RowBox[{"z", "\[Function]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "''"}], "[", "z", "]"}], "+", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Epsilon]", "-", 
        RowBox[{"V", "[", "z", "]"}]}], 
       RowBox[{
        SuperscriptBox["H", "2"], " "}]], 
      RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.864035526701899*^9, 3.864035567764186*^9}, {
   3.86403565956774*^9, 3.864035667256592*^9}, {3.864115016484351*^9, 
   3.864115017418898*^9}, {3.8641152422780733`*^9, 3.864115267812194*^9}, {
   3.864115649334899*^9, 3.864115655364806*^9}, 3.864115695927232*^9, 
   3.864116018567485*^9, 3.864117086684123*^9, {3.8641181148079357`*^9, 
   3.864118115933967*^9}, {3.864118242001134*^9, 3.86411825792118*^9}, 
   3.8641990306553793`*^9, 3.8642010609833183`*^9, 3.86420237395303*^9, {
   3.864205586724691*^9, 3.864205587664859*^9}, 3.8642078236374598`*^9, {
   3.864208608819233*^9, 3.864208610930963*^9}, {3.864269777597616*^9, 
   3.864269777795177*^9}, {3.8642708672924137`*^9, 3.8642708773561974`*^9}, {
   3.8642754046018677`*^9, 3.864275412761997*^9}, {3.8642866904537773`*^9, 
   3.8642867029554768`*^9}, {3.864286770795536*^9, 3.864286800475404*^9}, {
   3.8643186399036093`*^9, 3.8643186521833887`*^9}},
 CellLabel->
  "In[666]:=",ExpressionUUID->"538c78a1-38b2-427d-aa4a-ae454611eb8b"],

Cell["\<\
Now we need to find the correct change of variable for the active variable \
\[Psi], for this, let us get inspiration from the analytical solution \
provided by Mathematica:\
\>", "Text",
 CellChangeTimes->{{3.864275423626759*^9, 
  3.864275481754038*^9}},ExpressionUUID->"e6af5e0c-19fa-4f99-8e22-\
4a0c2d44d236"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"eq", "[", "\[Psi]", "]"}], "[", "z", "]"}], "==", "0"}], ",", 
    RowBox[{"\[Psi]", "[", "z", "]"}], ",", "z"}], "]"}], "//", 
  "PowerExpand"}]], "Input",
 CellChangeTimes->{{3.8642754848765173`*^9, 3.8642755082360373`*^9}, {
  3.864275949123186*^9, 3.864275950754225*^9}},
 CellLabel->
  "In[571]:=",ExpressionUUID->"ce421ec2-65f3-49b7-8de7-4164cda7720b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Psi]", "[", "z", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"H", " ", "z", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["A", 
            SuperscriptBox["H", "2"]], "+", 
           FractionBox[
            RowBox[{"z", " ", "\[Beta]"}], 
            SuperscriptBox["H", "2"]]}], ")"}]}], 
        RowBox[{"2", " ", 
         SqrtBox["\[Beta]"]}]]], " ", 
      SuperscriptBox["z", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SqrtBox[
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"4", " ", 
              SuperscriptBox["\[Lambda]", "2"]}], 
             SuperscriptBox["H", "2"]]}]]}], ")"}]}]], " ", 
      TemplateBox[{"2"},
       "C"], " ", 
      RowBox[{"HeunB", "[", 
       RowBox[{
        RowBox[{
         FractionBox["\[Gamma]", 
          SuperscriptBox["H", "2"]], "+", 
         FractionBox[
          RowBox[{"A", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Lambda]", "2"]}], 
                SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
          RowBox[{"2", " ", "H", " ", 
           SqrtBox["\[Beta]"]}]]}], ",", 
        RowBox[{
         FractionBox[
          SuperscriptBox["A", "2"], 
          RowBox[{"4", " ", 
           SuperscriptBox["H", "2"], " ", "\[Beta]"}]], "+", 
         FractionBox["\[Epsilon]", 
          SuperscriptBox["H", "2"]], "+", 
         FractionBox[
          RowBox[{
           SqrtBox["\[Beta]"], " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Lambda]", "2"]}], 
                SuperscriptBox["H", "2"]]}]]}], ")"}]}], "H"]}], ",", 
        RowBox[{"1", "-", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"4", " ", 
             SuperscriptBox["\[Lambda]", "2"]}], 
            SuperscriptBox["H", "2"]]}]]}], ",", 
        FractionBox["A", 
         RowBox[{"H", " ", 
          SqrtBox["\[Beta]"]}]], ",", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["\[Beta]"]}], "H"], ",", "z"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"H", " ", "z", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["A", 
            SuperscriptBox["H", "2"]], "+", 
           FractionBox[
            RowBox[{"z", " ", "\[Beta]"}], 
            SuperscriptBox["H", "2"]]}], ")"}]}], 
        RowBox[{"2", " ", 
         SqrtBox["\[Beta]"]}]]], " ", 
      SuperscriptBox["z", 
       RowBox[{
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], 
           SuperscriptBox["H", "2"]]}]], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SqrtBox[
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"4", " ", 
               SuperscriptBox["\[Lambda]", "2"]}], 
              SuperscriptBox["H", "2"]]}]]}], ")"}]}]}]], " ", 
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"HeunB", "[", 
       RowBox[{
        RowBox[{
         FractionBox["\[Gamma]", 
          SuperscriptBox["H", "2"]], "-", 
         FractionBox[
          RowBox[{"A", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox[
                 RowBox[{"1", "+", 
                  FractionBox[
                   RowBox[{"4", " ", 
                    SuperscriptBox["\[Lambda]", "2"]}], 
                   SuperscriptBox["H", "2"]]}]]}], ")"}]}]}], ")"}]}], 
          RowBox[{"H", " ", 
           SqrtBox["\[Beta]"]}]]}], ",", 
        RowBox[{
         FractionBox[
          SuperscriptBox["A", "2"], 
          RowBox[{"4", " ", 
           SuperscriptBox["H", "2"], " ", "\[Beta]"}]], "+", 
         FractionBox["\[Epsilon]", 
          SuperscriptBox["H", "2"]], "+", 
         FractionBox[
          RowBox[{
           SqrtBox["\[Beta]"], " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Lambda]", "2"]}], 
                SuperscriptBox["H", "2"]]}]]}], ")"}]}], "H"]}], ",", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[Lambda]", "2"]}], 
                 SuperscriptBox["H", "2"]]}]]}], ")"}]}]}], ")"}]}], ",", 
        FractionBox["A", 
         RowBox[{"H", " ", 
          SqrtBox["\[Beta]"]}]], ",", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["\[Beta]"]}], "H"], ",", "z"}], "]"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.864275505072137*^9, 3.864275520794508*^9}, 
   3.8642759513363037`*^9, 3.8642868069716597`*^9, 3.864312218853105*^9, 
   3.864317506247504*^9, 3.864318666773953*^9},
 CellLabel->
  "Out[571]=",ExpressionUUID->"2de11543-5639-4935-b791-023d65729712"]
}, Open  ]],

Cell[TextData[{
 "So now we have the exponential change of variable.\nRemains the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "+", "1"}], ")"}], 
    RowBox[{"some", " ", "power"}]], TraditionalForm]],ExpressionUUID->
  "d28e9117-8ebf-465f-babd-6644859a98e1"],
 " to fix. Let us call the generic power \[Mu]"
}], "Text",
 CellChangeTimes->{{3.864275595259122*^9, 
  3.864275672684463*^9}},ExpressionUUID->"f925fb2f-524b-46e8-a0c4-\
e65a6381bb12"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eq2Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"A", " ", "z"}], "+", 
        RowBox[{"B", " ", 
         SuperscriptBox["z", "2"]}]}]], " ", 
      SuperscriptBox["z", "\[Eta]"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "+", "1"}], ")"}], "\[Mu]"]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", " ", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"A", " ", "z"}], "+", 
          RowBox[{"B", " ", 
           SuperscriptBox["z", "2"]}]}]], " ", 
        SuperscriptBox["z", "\[Eta]"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"z", "+", "1"}], ")"}], "\[Mu]"], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.864118163342272*^9, 3.864118163421801*^9}, {
   3.8641182338242292`*^9, 3.8641182794537277`*^9}, {3.864118309938342*^9, 
   3.8641183532169247`*^9}, {3.864118384770278*^9, 3.864118397361452*^9}, {
   3.86419901804711*^9, 3.864199020958868*^9}, 3.864199267933145*^9, {
   3.864199361245159*^9, 3.864199363388564*^9}, 3.864201067883738*^9, {
   3.8642023845592937`*^9, 3.8642023977426434`*^9}, {3.864202740227565*^9, 
   3.864202750578661*^9}, {3.864203210996903*^9, 3.864203221267009*^9}, {
   3.864203261029221*^9, 3.864203279172521*^9}, {3.864204269612*^9, 
   3.864204278153284*^9}, {3.864204353340111*^9, 3.864204375658196*^9}, {
   3.8642046023818207`*^9, 3.864204606220006*^9}, {3.86420559214673*^9, 
   3.864205635889922*^9}, 3.8642069206506863`*^9, 3.8642069619650087`*^9, {
   3.864269780717699*^9, 3.864269784781036*^9}, {3.8642756794382143`*^9, 
   3.8642757264933233`*^9}, {3.8642759668761806`*^9, 3.86427598791363*^9}, {
   3.864286840898326*^9, 3.864286843151375*^9}, {3.864312073767428*^9, 
   3.864312114422969*^9}, {3.864312160160754*^9, 3.864312176013809*^9}, {
   3.86431242063426*^9, 3.864312427109799*^9}, {3.864318808277966*^9, 
   3.864318826068097*^9}, {3.864318929491708*^9, 3.8643189304814577`*^9}, {
   3.8643189626406813`*^9, 3.864319022191423*^9}, {3.8643190717298603`*^9, 
   3.864319073305979*^9}, {3.864319127728814*^9, 3.864319248115737*^9}, {
   3.864319308765787*^9, 3.864319322384123*^9}, {3.86431944441224*^9, 
   3.864319444629142*^9}, {3.8643197931710777`*^9, 3.864319797024631*^9}, {
   3.864319844803747*^9, 3.864319923608817*^9}},
 CellLabel->
  "In[684]:=",ExpressionUUID->"9eb743f7-7780-4267-a4a1-8d40fc6666f0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
    RowBox[{
     RowBox[{"w", "''"}], "[", "z", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
    RowBox[{
     RowBox[{"w", "'"}], "[", "z", "]"}]}], "]"}], "//", 
  "Together"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
    RowBox[{"w", "[", "z", "]"}]}], "]"}], "//", "Together"}]}], "Input",
 CellChangeTimes->{{3.864318898101232*^9, 3.864318910670504*^9}, {
  3.8643189585335913`*^9, 3.864318960273237*^9}, {3.864320037204466*^9, 
  3.864320041448304*^9}, {3.8643201459250526`*^9, 3.864320148379053*^9}},
 CellLabel->
  "In[692]:=",ExpressionUUID->"2d046eeb-ba99-4006-bf06-ccb916bbb78d"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.864318911095879*^9, 3.8643189909778843`*^9}, 
   3.8643190258156443`*^9, 3.864319077520232*^9, 3.864319257010807*^9, 
   3.864319325214364*^9, 3.864319449071344*^9, {3.864319822101218*^9, 
   3.864319850101757*^9}, {3.8643198888991823`*^9, 3.8643199259667997`*^9}, 
   3.8643200420877542`*^9, 3.864320148934471*^9},
 CellLabel->
  "Out[692]=",ExpressionUUID->"9f2a0917-e8fb-494f-a45d-73c757b965ac"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"A", " ", "z"}], "+", 
     RowBox[{"A", " ", 
      SuperscriptBox["z", "2"]}], "+", 
     RowBox[{"2", " ", "B", " ", 
      SuperscriptBox["z", "2"]}], "+", 
     RowBox[{"2", " ", "B", " ", 
      SuperscriptBox["z", "3"]}], "+", "\[Eta]", "+", 
     RowBox[{"z", " ", "\[Eta]"}], "+", 
     RowBox[{"z", " ", "\[Mu]"}]}], ")"}]}], 
  RowBox[{"z", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "z"}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.864318911095879*^9, 3.8643189909778843`*^9}, 
   3.8643190258156443`*^9, 3.864319077520232*^9, 3.864319257010807*^9, 
   3.864319325214364*^9, 3.864319449071344*^9, {3.864319822101218*^9, 
   3.864319850101757*^9}, {3.8643198888991823`*^9, 3.8643199259667997`*^9}, 
   3.8643200420877542`*^9, 3.864320148938196*^9},
 CellLabel->
  "Out[693]=",ExpressionUUID->"ae7cfeb0-c44c-435c-ad03-b5830bc3e376"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["H", "2"], " ", 
    SuperscriptBox["z", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "z"}], ")"}], "2"]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "2"], " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"]}], "+", 
    RowBox[{"2", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"]}], "-", 
    RowBox[{"A", " ", 
     SuperscriptBox["z", "3"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["A", "2"], " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "3"]}], "+", 
    RowBox[{"4", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "3"]}], "+", 
    RowBox[{"4", " ", "A", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "3"]}], "-", 
    RowBox[{"2", " ", "A", " ", 
     SuperscriptBox["z", "4"]}], "+", 
    RowBox[{
     SuperscriptBox["A", "2"], " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "4"]}], "+", 
    RowBox[{"2", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "4"]}], "+", 
    RowBox[{"8", " ", "A", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "4"]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["B", "2"], " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "4"]}], "-", 
    RowBox[{"A", " ", 
     SuperscriptBox["z", "5"]}], "+", 
    RowBox[{"4", " ", "A", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "5"]}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["B", "2"], " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "5"]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["B", "2"], " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "6"]}], "-", 
    RowBox[{
     SuperscriptBox["z", "4"], " ", "\[Beta]"}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["z", "5"], " ", "\[Beta]"}], "-", 
    RowBox[{
     SuperscriptBox["z", "6"], " ", "\[Beta]"}], "-", 
    RowBox[{"z", " ", "\[Gamma]"}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["z", "2"], " ", "\[Gamma]"}], "-", 
    RowBox[{
     SuperscriptBox["z", "3"], " ", "\[Gamma]"}], "+", 
    RowBox[{
     SuperscriptBox["z", "2"], " ", "\[Epsilon]"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["z", "3"], " ", "\[Epsilon]"}], "+", 
    RowBox[{
     SuperscriptBox["z", "4"], " ", "\[Epsilon]"}], "-", 
    RowBox[{
     SuperscriptBox["H", "2"], " ", "\[Eta]"}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["H", "2"], " ", "z", " ", "\[Eta]"}], "+", 
    RowBox[{"2", " ", "A", " ", 
     SuperscriptBox["H", "2"], " ", "z", " ", "\[Eta]"}], "-", 
    RowBox[{
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"], " ", "\[Eta]"}], "+", 
    RowBox[{"4", " ", "A", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"], " ", "\[Eta]"}], "+", 
    RowBox[{"4", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"], " ", "\[Eta]"}], "+", 
    RowBox[{"2", " ", "A", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "3"], " ", "\[Eta]"}], "+", 
    RowBox[{"8", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "3"], " ", "\[Eta]"}], "+", 
    RowBox[{"4", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "4"], " ", "\[Eta]"}], "+", 
    RowBox[{
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Eta]", "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["H", "2"], " ", "z", " ", 
     SuperscriptBox["\[Eta]", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"], " ", 
     SuperscriptBox["\[Eta]", "2"]}], "-", 
    SuperscriptBox["\[Lambda]", "2"], "-", 
    RowBox[{"2", " ", "z", " ", 
     SuperscriptBox["\[Lambda]", "2"]}], "-", 
    RowBox[{
     SuperscriptBox["z", "2"], " ", 
     SuperscriptBox["\[Lambda]", "2"]}], "-", 
    RowBox[{
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"], " ", "\[Mu]"}], "+", 
    RowBox[{"2", " ", "A", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"], " ", "\[Mu]"}], "+", 
    RowBox[{"2", " ", "A", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "3"], " ", "\[Mu]"}], "+", 
    RowBox[{"4", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "3"], " ", "\[Mu]"}], "+", 
    RowBox[{"4", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "4"], " ", "\[Mu]"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["H", "2"], " ", "z", " ", "\[Eta]", " ", "\[Mu]"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"], " ", "\[Eta]", " ", "\[Mu]"}], "+", 
    RowBox[{
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"], " ", 
     SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.864318911095879*^9, 3.8643189909778843`*^9}, 
   3.8643190258156443`*^9, 3.864319077520232*^9, 3.864319257010807*^9, 
   3.864319325214364*^9, 3.864319449071344*^9, {3.864319822101218*^9, 
   3.864319850101757*^9}, {3.8643198888991823`*^9, 3.8643199259667997`*^9}, 
   3.8643200420877542`*^9, 3.8643201489421387`*^9},
 CellLabel->
  "Out[694]=",ExpressionUUID->"7a3c3f63-d73e-4792-b70c-a8d20794d98e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolynomialRemainder", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["A", "2"], " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"]}], "+", 
     RowBox[{"2", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"]}], "-", 
     RowBox[{"A", " ", 
      SuperscriptBox["z", "3"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["A", "2"], " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "3"]}], "+", 
     RowBox[{"4", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "3"]}], "+", 
     RowBox[{"4", " ", "A", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "3"]}], "-", 
     RowBox[{"2", " ", "A", " ", 
      SuperscriptBox["z", "4"]}], "+", 
     RowBox[{
      SuperscriptBox["A", "2"], " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "4"]}], "+", 
     RowBox[{"2", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "4"]}], "+", 
     RowBox[{"8", " ", "A", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "4"]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["B", "2"], " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "4"]}], "-", 
     RowBox[{"A", " ", 
      SuperscriptBox["z", "5"]}], "+", 
     RowBox[{"4", " ", "A", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "5"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["B", "2"], " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "5"]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["B", "2"], " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "6"]}], "-", 
     RowBox[{
      SuperscriptBox["z", "4"], " ", "\[Beta]"}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["z", "5"], " ", "\[Beta]"}], "-", 
     RowBox[{
      SuperscriptBox["z", "6"], " ", "\[Beta]"}], "-", 
     RowBox[{"z", " ", "\[Gamma]"}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["z", "2"], " ", "\[Gamma]"}], "-", 
     RowBox[{
      SuperscriptBox["z", "3"], " ", "\[Gamma]"}], "+", 
     RowBox[{
      SuperscriptBox["z", "2"], " ", "\[Epsilon]"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["z", "3"], " ", "\[Epsilon]"}], "+", 
     RowBox[{
      SuperscriptBox["z", "4"], " ", "\[Epsilon]"}], "-", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", "\[Eta]"}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"], " ", "z", " ", "\[Eta]"}], "+", 
     RowBox[{"2", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", "z", " ", "\[Eta]"}], "-", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"], " ", "\[Eta]"}], "+", 
     RowBox[{"4", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"], " ", "\[Eta]"}], "+", 
     RowBox[{"4", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"], " ", "\[Eta]"}], "+", 
     RowBox[{"2", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "3"], " ", "\[Eta]"}], "+", 
     RowBox[{"8", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "3"], " ", "\[Eta]"}], "+", 
     RowBox[{"4", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "4"], " ", "\[Eta]"}], "+", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Eta]", "2"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"], " ", "z", " ", 
      SuperscriptBox["\[Eta]", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"], " ", 
      SuperscriptBox["\[Eta]", "2"]}], "-", 
     SuperscriptBox["\[Lambda]", "2"], "-", 
     RowBox[{"2", " ", "z", " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "-", 
     RowBox[{
      SuperscriptBox["z", "2"], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "-", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"], " ", "\[Mu]"}], "+", 
     RowBox[{"2", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"], " ", "\[Mu]"}], "+", 
     RowBox[{"2", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "3"], " ", "\[Mu]"}], "+", 
     RowBox[{"4", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "3"], " ", "\[Mu]"}], "+", 
     RowBox[{"4", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "4"], " ", "\[Mu]"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"], " ", "z", " ", "\[Eta]", " ", "\[Mu]"}], "+", 
     
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"], " ", "\[Eta]", " ", "\[Mu]"}], "+", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"], " ", 
      SuperscriptBox["\[Mu]", "2"]}]}], ")"}], ",", 
   RowBox[{
    SuperscriptBox["z", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "z"}], ")"}], "2"]}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.864320077667474*^9, 3.864320098924899*^9}},
 CellLabel->
  "In[691]:=",ExpressionUUID->"4919bca8-7752-46f6-a850-28f6fc55da90"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["H", "2"]}], " ", "\[Eta]"}], "+", 
  RowBox[{
   SuperscriptBox["H", "2"], " ", 
   SuperscriptBox["\[Eta]", "2"]}], "-", 
  SuperscriptBox["\[Lambda]", "2"], "+", 
  RowBox[{
   SuperscriptBox["z", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Gamma]"}], "+", 
     RowBox[{"2", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", "\[Eta]"}], "+", 
     RowBox[{"2", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", "\[Mu]"}], "-", 
     RowBox[{"4", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", "\[Mu]"}]}], ")"}]}], "+", 
  RowBox[{"z", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Gamma]"}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"], " ", "\[Eta]"}], "+", 
     RowBox[{"2", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", "\[Eta]"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Eta]", "2"]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"], " ", "\[Eta]", " ", "\[Mu]"}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["z", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[Gamma]"}], "-", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", "\[Eta]"}], "+", 
     RowBox[{"4", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", "\[Eta]"}], "+", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Eta]", "2"]}], "-", 
     SuperscriptBox["\[Lambda]", "2"], "-", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", "\[Mu]"}], "+", 
     RowBox[{"2", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", "\[Mu]"}], "-", 
     RowBox[{"4", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", "\[Mu]"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"], " ", "\[Eta]", " ", "\[Mu]"}], "+", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.864320100307658*^9},
 CellLabel->
  "Out[691]=",ExpressionUUID->"2d4da2e3-fdfd-4e13-a261-0a3e3d6ed1fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolynomialRemainder", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"A", " ", "z"}], "+", 
     RowBox[{"A", " ", 
      SuperscriptBox["z", "2"]}], "+", 
     RowBox[{"2", " ", "B", " ", 
      SuperscriptBox["z", "2"]}], "+", 
     RowBox[{"2", " ", "B", " ", 
      SuperscriptBox["z", "3"]}], "+", "\[Eta]", "+", 
     RowBox[{"z", " ", "\[Eta]"}], "+", 
     RowBox[{"z", " ", "\[Mu]"}]}], ")"}], ",", 
   RowBox[{"z", 
    RowBox[{"(", 
     RowBox[{"1", "+", "z"}], ")"}]}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.864320169767565*^9, 3.8643202015267687`*^9}},
 CellLabel->
  "In[696]:=",ExpressionUUID->"82dfd22f-91cb-41e4-af72-0bf15a76305d"],

Cell[BoxData[
 RowBox[{"\[Eta]", "+", 
  RowBox[{"z", " ", 
   RowBox[{"(", 
    RowBox[{"\[Eta]", "+", "\[Mu]"}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.864320183744152*^9, 3.864320201804212*^9}},
 CellLabel->
  "Out[696]=",ExpressionUUID->"4c3393d9-b442-466c-b36e-75092acbaf81"]
}, Open  ]],

Cell["\<\
We perform a change of passive variable to move to the [0,1] segment\
\>", "Text",
 CellChangeTimes->{{3.864274950694655*^9, 
  3.864274983848119*^9}},ExpressionUUID->"744699d3-d1e7-42c1-a532-\
b2883a3b4eb1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "==", 
      FractionBox["z", 
       RowBox[{"z", "+", "1"}]]}], "}"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "==", 
      FractionBox[
       RowBox[{"-", "z"}], 
       RowBox[{
        RowBox[{"-", "z"}], "+", "1"}]]}], "}"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864202530337821*^9, 3.8642025455519876`*^9}, {
   3.864203679909642*^9, 3.864203695046502*^9}, {3.8643125792997847`*^9, 
   3.864312584998733*^9}, 3.864312739399147*^9, 3.864312846895759*^9, {
   3.864313227672843*^9, 3.8643132302920513`*^9}},
 CellLabel->
  "In[613]:=",ExpressionUUID->"2aabac85-db95-4187-89d6-05891a8310df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["x", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.864203689655448*^9, 3.864203695378886*^9}, 
   3.864269792992223*^9, 3.8642746682788057`*^9, 3.864312585566846*^9, 
   3.8643127402473993`*^9, 3.864312853051523*^9, 3.864313274121306*^9, 
   3.864317519201784*^9, 3.8643192808948727`*^9},
 CellLabel->
  "Out[613]=",ExpressionUUID->"2ad77721-f26b-4702-b9f6-252832b86fac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    FractionBox["x", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.864203689655448*^9, 3.864203695378886*^9}, 
   3.864269792992223*^9, 3.8642746682788057`*^9, 3.864312585566846*^9, 
   3.8643127402473993`*^9, 3.864312853051523*^9, 3.864313274121306*^9, 
   3.864317519201784*^9, 3.864319280898877*^9},
 CellLabel->
  "Out[614]=",ExpressionUUID->"1a58fef0-a5e8-49f9-b1ce-ab67f7870dd9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"eq3Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox["#1", 
            RowBox[{"#1", "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{"1", "-", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}]], "Input",
 CellChangeTimes->{{3.864203669237536*^9, 3.864203704773901*^9}, {
   3.86420374226264*^9, 3.864203743862155*^9}, 3.864206662091394*^9, 
   3.864206908747628*^9, {3.864206958892559*^9, 3.864206981146277*^9}, 
   3.864312121357253*^9, {3.8643121835475197`*^9, 3.8643121837888403`*^9}, {
   3.86431223160461*^9, 3.8643122468096533`*^9}, {3.864312635132743*^9, 
   3.864312642965464*^9}, {3.8643127437881927`*^9, 3.8643127515382442`*^9}, {
   3.864312859386508*^9, 3.86431288216315*^9}, {3.864313285147183*^9, 
   3.8643132933196983`*^9}, {3.864319460983685*^9, 3.864319461137887*^9}},
 CellLabel->
  "In[639]:=",ExpressionUUID->"876b1b7a-f665-4395-909d-803f6c7e4b10"],

Cell["\<\
Now we need to fix the power \[Mu] in order for the coefficient of w[x] to be \
a polynomial in x\
\>", "Text",
 CellChangeTimes->{{3.8642760369276342`*^9, 
  3.8642760992304163`*^9}},ExpressionUUID->"8671f292-4014-4f59-b055-\
e10385784279"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
    RowBox[{"w", "[", "x", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
    RowBox[{
     RowBox[{"w", "'"}], "[", "x", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
    RowBox[{
     RowBox[{"w", "''"}], "[", "x", "]"}]}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864276203478758*^9, 3.8642762449628353`*^9}, {
   3.864276415361682*^9, 3.864276443868231*^9}, 3.864312127163787*^9, {
   3.864312262542098*^9, 3.8643122664867067`*^9}, {3.8643194648608313`*^9, 
   3.8643194651510572`*^9}, {3.864319583679253*^9, 3.864319600252253*^9}},
 CellLabel->
  "In[651]:=",ExpressionUUID->"033c89cb-f932-46e2-abff-dae73ebe8c3b"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"8", " ", 
    SuperscriptBox["H", "2"], " ", "\[Beta]", " ", 
    SuperscriptBox["\[Lambda]", "4"]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["\[Lambda]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", "\[Beta]", " ", 
        SuperscriptBox["\[Gamma]", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["A", "2"], " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"4", " ", "\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "A"}], " ", "x"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Gamma]"}], "+", 
          "\[Epsilon]"}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"H", "-", 
        RowBox[{"H", " ", "x"}]}], ")"}], "2"], " ", "\[Beta]", " ", 
     "\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]", "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Lambda]", "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SqrtBox[
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"4", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], 
          SuperscriptBox["H", "2"]]}]]}], ")"}]}], "-", 
    RowBox[{"2", " ", "H", " ", 
     SqrtBox["\[Beta]"], " ", 
     SuperscriptBox["\[Lambda]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", "\[Beta]", " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SqrtBox[
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"4", " ", 
              SuperscriptBox["\[Lambda]", "2"]}], 
             SuperscriptBox["H", "2"]]}]]}], ")"}]}], "+", 
       RowBox[{"2", " ", "x", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"4", " ", 
              SuperscriptBox["\[Lambda]", "2"]}], 
             SuperscriptBox["H", "2"]]}]]}], ")"}]}], "-", 
       RowBox[{"A", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["\[Lambda]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Lambda]", "2"]}], 
                SuperscriptBox["H", "2"]]}]]}], ")"}]}], "+", 
          RowBox[{"x", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Lambda]", "2"]}], "+", 
             RowBox[{"\[Gamma]", " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[Lambda]", "2"]}], 
                 SuperscriptBox["H", "2"]]}]]}]}], ")"}]}]}], ")"}]}]}], 
      ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.86427621846246*^9, 3.864276245125049*^9}, {
   3.864276419853499*^9, 3.864276444262329*^9}, 3.864286853987031*^9, 
   3.864312268584391*^9, 3.864312444627284*^9, 3.8643126484910307`*^9, 
   3.864312763725235*^9, {3.864312868911336*^9, 3.8643128850649652`*^9}, 
   3.864313297462576*^9, 3.864317640173773*^9, 3.864319289451891*^9, 
   3.864319341911989*^9, 3.8643194693321667`*^9, {3.8643195867080097`*^9, 
   3.864319604774847*^9}},
 CellLabel->
  "Out[651]=",ExpressionUUID->"b0320cde-e1cf-4962-b7b9-52219cd1e48c"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"A", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "-", 
        RowBox[{"2", " ", "\[Beta]"}]}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"H", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", 
      SqrtBox["\[Beta]"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox["\[Lambda]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"4", " ", 
               SuperscriptBox["\[Lambda]", "2"]}], 
              SuperscriptBox["H", "2"]]}]]}], ")"}]}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]", "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"4", " ", 
                SuperscriptBox["\[Lambda]", "2"]}], 
               SuperscriptBox["H", "2"]]}]]}]}], ")"}]}]}], ")"}]}]}], 
    ")"}]}], 
  RowBox[{"2", " ", "H", " ", "x", " ", 
   SqrtBox["\[Beta]"], " ", 
   SuperscriptBox["\[Lambda]", "2"]}]]], "Output",
 CellChangeTimes->{{3.86427621846246*^9, 3.864276245125049*^9}, {
   3.864276419853499*^9, 3.864276444262329*^9}, 3.864286853987031*^9, 
   3.864312268584391*^9, 3.864312444627284*^9, 3.8643126484910307`*^9, 
   3.864312763725235*^9, {3.864312868911336*^9, 3.8643128850649652`*^9}, 
   3.864313297462576*^9, 3.864317640173773*^9, 3.864319289451891*^9, 
   3.864319341911989*^9, 3.8643194693321667`*^9, {3.8643195867080097`*^9, 
   3.864319604951889*^9}},
 CellLabel->
  "Out[652]=",ExpressionUUID->"15407a70-6e0d-4160-a510-347f2c33e184"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "x"}], ")"}], "4"]], "Output",
 CellChangeTimes->{{3.86427621846246*^9, 3.864276245125049*^9}, {
   3.864276419853499*^9, 3.864276444262329*^9}, 3.864286853987031*^9, 
   3.864312268584391*^9, 3.864312444627284*^9, 3.8643126484910307`*^9, 
   3.864312763725235*^9, {3.864312868911336*^9, 3.8643128850649652`*^9}, 
   3.864313297462576*^9, 3.864317640173773*^9, 3.864319289451891*^9, 
   3.864319341911989*^9, 3.8643194693321667`*^9, {3.8643195867080097`*^9, 
   3.864319604966217*^9}},
 CellLabel->
  "Out[653]=",ExpressionUUID->"f39fdfac-a661-4b19-98bc-02fa69994e9f"]
}, Open  ]],

Cell["\[Mu] should be such that -1+x divides the above numerator", "Text",
 CellChangeTimes->{{3.8642771359749947`*^9, 
  3.864277156949697*^9}},ExpressionUUID->"b24f096d-61b1-4c75-a038-\
7112e1c3fd04"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"muPlus", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PolynomialRemainder", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", "x"}], "+", 
           RowBox[{"2", " ", "A", " ", "H", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
            SqrtBox["\[Beta]"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[Lambda]", "2"]}], 
                 SuperscriptBox["H", "2"]]}]], "-", 
              RowBox[{"2", " ", "x", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"4", " ", "\[Beta]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Gamma]"}], 
              "+", 
              RowBox[{"x", " ", "\[Epsilon]"}], "-", 
              RowBox[{
               SuperscriptBox["H", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", "\[Mu]", 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x", "+", 
                 SqrtBox[
                  RowBox[{"1", "+", 
                   FractionBox[
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Lambda]", "2"]}], 
                    SuperscriptBox["H", "2"]]}]], "-", 
                 RowBox[{"x", " ", "\[Mu]"}]}], ")"}]}], "+", 
              RowBox[{"H", " ", "x", " ", 
               SqrtBox["\[Beta]"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 SqrtBox[
                  RowBox[{"1", "+", 
                   FractionBox[
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Lambda]", "2"]}], 
                    SuperscriptBox["H", "2"]]}]], "+", 
                 RowBox[{"2", " ", "x", " ", "\[Mu]"}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], ",", "x", ",", "x"}], "]"}], "==", "0"}], ",", 
      "\[Mu]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.8642764896009493`*^9, 3.864276567089525*^9}, {
   3.8642766664189796`*^9, 3.864276682947541*^9}, {3.864276958083522*^9, 
   3.864276974100775*^9}, {3.8642770336545763`*^9, 3.864277069237823*^9}, 
   3.864277164783778*^9, {3.8642868998673153`*^9, 3.864286933564728*^9}, {
   3.864312131851811*^9, 3.864312133268993*^9}, {3.8643122805726643`*^9, 
   3.86431232866*^9}, {3.864312901364444*^9, 3.864312936476317*^9}, {
   3.8643131849495573`*^9, 3.864313191041491*^9}, {3.8643133098870573`*^9, 
   3.8643133194317093`*^9}, {3.864317648225321*^9, 3.864317658506645*^9}, {
   3.8643193603356323`*^9, 3.864319388417686*^9}, {3.864319474523642*^9, 
   3.864319475005272*^9}},
 CellLabel->
  "In[641]:=",ExpressionUUID->"7927f046-4d09-4122-ac75-e8ac2cedfcb2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["A", 
    RowBox[{"2", " ", "H", " ", 
     SqrtBox["\[Beta]"]}]]}], "-", 
  FractionBox[
   RowBox[{"\[Gamma]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SqrtBox[
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"4", " ", 
          SuperscriptBox["\[Lambda]", "2"]}], 
         SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["\[Lambda]", "2"]}]]}]], "Output",
 CellChangeTimes->{
  3.864277165089775*^9, 3.864286937877316*^9, 3.864312340829945*^9, {
   3.8643129171184063`*^9, 3.864312938922553*^9}, 3.864313192078261*^9, 
   3.864313320569648*^9, 3.864317660725588*^9, 3.8643193889711847`*^9, 
   3.864319475431704*^9},
 CellLabel->
  "Out[641]=",ExpressionUUID->"b76e678f-a618-47c1-9d7b-a859d26d2215"]
}, Open  ]],

Cell["\<\
That is a great success. So now we can perform the change of variable \
explicitly.\
\>", "Text",
 CellChangeTimes->{{3.864277224998146*^9, 
  3.8642772574782133`*^9}},ExpressionUUID->"d482a27f-8f55-474c-9eed-\
f0f7df2dd7f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"A", " ", "z"}], " ", "+", 
   RowBox[{"\[Beta]", " ", 
    SuperscriptBox["z", "2"]}], "+", 
   FractionBox["\[Gamma]", "z"], "+", 
   FractionBox[
    SuperscriptBox["\[Lambda]", "2"], 
    SuperscriptBox["z", "2"]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq", "[", "\[Psi]_", "]"}], ":=", 
   RowBox[{"z", "\[Function]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "''"}], "[", "z", "]"}], "+", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Epsilon]", "-", 
        RowBox[{"V", "[", "z", "]"}]}], 
       RowBox[{
        SuperscriptBox["H", "2"], " "}]], 
      RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"H", " ", "z", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["A", 
            SuperscriptBox["H", "2"]], "+", 
           FractionBox[
            RowBox[{"z", " ", "\[Beta]"}], 
            SuperscriptBox["H", "2"]]}], ")"}]}], 
        RowBox[{"2", " ", 
         SqrtBox["\[Beta]"]}]]], " ", 
      SuperscriptBox["z", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SqrtBox[
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"4", " ", 
              SuperscriptBox["\[Lambda]", "2"]}], 
             SuperscriptBox["H", "2"]]}]]}], ")"}]}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "+", "1"}], ")"}], 
       RowBox[{
        RowBox[{"-", 
         FractionBox["A", 
          RowBox[{"2", " ", "H", " ", 
           SqrtBox["\[Beta]"]}]]}], "-", 
        FractionBox[
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"4", " ", 
                SuperscriptBox["\[Lambda]", "2"]}], 
               SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Lambda]", "2"]}]]}]]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", " ", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"H", " ", "z", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["A", 
              SuperscriptBox["H", "2"]], "+", 
             FractionBox[
              RowBox[{"z", " ", "\[Beta]"}], 
              SuperscriptBox["H", "2"]]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox["\[Beta]"]}]]], " ", 
        SuperscriptBox["z", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SqrtBox[
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"4", " ", 
                SuperscriptBox["\[Lambda]", "2"]}], 
               SuperscriptBox["H", "2"]]}]]}], ")"}]}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"z", "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"-", 
           FractionBox["A", 
            RowBox[{"2", " ", "H", " ", 
             SqrtBox["\[Beta]"]}]]}], "-", 
          FractionBox[
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[Lambda]", "2"]}], 
                 SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}]]}]], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox["#1", 
            RowBox[{"#1", "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{"1", "-", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}]}], "Input",
 CellChangeTimes->{{3.864035526701899*^9, 3.864035567764186*^9}, {
   3.86403565956774*^9, 3.864035667256592*^9}, {3.864115016484351*^9, 
   3.864115017418898*^9}, {3.8641152422780733`*^9, 3.864115267812194*^9}, {
   3.864115649334899*^9, 3.864115655364806*^9}, 3.864115695927232*^9, 
   3.864116018567485*^9, 3.864117086684123*^9, {3.8641181148079357`*^9, 
   3.864118115933967*^9}, {3.864118242001134*^9, 3.86411825792118*^9}, 
   3.8641990306553793`*^9, 3.8642010609833183`*^9, 3.86420237395303*^9, {
   3.864205586724691*^9, 3.864205587664859*^9}, 3.8642078236374598`*^9, {
   3.864208608819233*^9, 3.864208610930963*^9}, {3.864269777597616*^9, 
   3.864269777795177*^9}, {3.8642708672924137`*^9, 3.8642708773561974`*^9}, {
   3.8642754046018677`*^9, 3.864275412761997*^9}, {3.8642772909887466`*^9, 
   3.86427732148457*^9}, {3.864277363257691*^9, 3.8642773643954773`*^9}, 
   3.864286339687099*^9, {3.864286963090498*^9, 3.864286991152171*^9}, {
   3.864312401282723*^9, 3.8643124124651127`*^9}, {3.864313334376279*^9, 
   3.864313408970352*^9}, {3.864319499168584*^9, 3.864319523874175*^9}, {
   3.864319554027649*^9, 3.864319554560927*^9}},
 CellLabel->
  "In[654]:=",ExpressionUUID->"006ecdcd-d13d-4664-af5d-9f2bf60a65ca"],

Cell["\<\
The coefficients of the ODE are simple polynomials now. Let us extract and \
name the coefficients of those polynomials\
\>", "Text",
 CellChangeTimes->{{3.864274994666313*^9, 
  3.864275028944138*^9}},ExpressionUUID->"4378e718-5fa7-44a3-923b-\
b4427a176db8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "''"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "'"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{"w", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864277353595161*^9, 3.8642773853036823`*^9}, {
  3.864313419531303*^9, 3.864313425651647*^9}},
 CellLabel->
  "In[646]:=",ExpressionUUID->"4e42acb4-83b0-4c48-ae4d-0b7bdebd263f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "4"}], ",", "6", ",", 
   RowBox[{"-", "4"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.864317683945923*^9, 
   3.864319562561537*^9},
 CellLabel->
  "Out[646]=",ExpressionUUID->"9c6d51c4-a411-410b-8588-94fefd211e73"],

Cell[BoxData[
 TemplateBox[{
  "CoefficientList", "poly", 
   "\"\\!\\(\\*FractionBox[RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"4\\\"}], \\\
\" \\\", SuperscriptBox[\\\"H\\\", \\\"2\\\"], \\\" \\\", \\\"x\\\", \\\" \
\\\", \\\"\[Beta]\\\", \\\" \\\", \\\"\[Gamma]\\\", \\\" \\\", \
SuperscriptBox[\\\"\[Lambda]\\\", \\\"2\\\"]}], \\\"+\\\", \
RowBox[{\\\"12\\\", \\\" \\\", SuperscriptBox[\\\"H\\\", \\\"2\\\"], \\\" \
\\\", SuperscriptBox[\\\"x\\\", \\\"2\\\"], \\\" \\\", \\\"\[Beta]\\\", \\\" \
\\\", \\\"\[Gamma]\\\", \\\" \\\", SuperscriptBox[\\\"\[Lambda]\\\", \
\\\"2\\\"]}], \\\"-\\\", RowBox[{\\\"12\\\", \\\" \\\", \
SuperscriptBox[\\\"H\\\", \\\"2\\\"], \\\" \\\", SuperscriptBox[\\\"x\\\", \\\
\"3\\\"], \\\" \\\", \\\"\[Beta]\\\", \\\" \\\", \\\"\[Gamma]\\\", \\\" \\\", \
SuperscriptBox[\\\"\[Lambda]\\\", \\\"2\\\"]}], \\\"+\\\", RowBox[{\\\"4\\\", \
\\\" \\\", SuperscriptBox[\\\"H\\\", \\\"2\\\"], \\\" \\\", SuperscriptBox[\\\
\"x\\\", \\\"4\\\"], \\\" \\\", \\\"\[Beta]\\\", \\\" \\\", \\\"\[Gamma]\\\", \
\\\" \\\", SuperscriptBox[\\\"\[Lambda]\\\", \\\"2\\\"]}], \\\"+\\\", \
RowBox[{\\\"8\\\", \\\" \\\", \\\"A\\\", \\\" \\\", \\\"H\\\", \\\" \\\", \
SuperscriptBox[\\\"x\\\", \\\"2\\\"], \\\" \\\", SqrtBox[\\\"\[Beta]\\\"], \\\
\" \\\", SuperscriptBox[\\\"\[Lambda]\\\", \\\"4\\\"]}], \\\"-\\\", \
RowBox[{\\\"16\\\", \\\" \\\", \\\"A\\\", \\\" \\\", \\\"H\\\", \\\" \\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\" \
\\\", SqrtBox[\\\"\[Beta]\\\"], \\\" \\\", SuperscriptBox[\\\"\[Lambda]\\\", \
\\\"4\\\"]}], \\\"+\\\", RowBox[{\\\"8\\\", \\\" \\\", \\\"A\\\", \\\" \\\", \
\\\"H\\\", \\\" \\\", SuperscriptBox[\\\"x\\\", \\\"4\\\"], \\\" \\\", \
SqrtBox[\\\"\[Beta]\\\"], \\\" \\\", SuperscriptBox[\\\"\[Lambda]\\\", \
\\\"4\\\"]}], \\\"+\\\", RowBox[{\\\"8\\\", \\\" \\\", SuperscriptBox[\\\"H\\\
\", \\\"2\\\"], \\\" \\\", \\\"\[Beta]\\\", \\\" \\\", SuperscriptBox[\\\"\
\[Lambda]\\\", \\\"4\\\"]}], \\\"-\\\", RowBox[{\\\"40\\\", \\\" \\\", \
SuperscriptBox[\\\"H\\\", \\\"2\\\"], \\\" \\\", \\\"x\\\", \\\" \\\", \\\"\
\[Beta]\\\", \\\" \\\", SuperscriptBox[\\\"\[Lambda]\\\", \\\"4\\\"]}], \\\"+\
\\\", RowBox[{\\\"72\\\", \\\" \\\", SuperscriptBox[\\\"H\\\", \\\"2\\\"], \\\
\" \\\", SuperscriptBox[\\\"x\\\", \\\"2\\\"], \\\" \\\", \\\"\[Beta]\\\", \\\
\" \\\", SuperscriptBox[\\\"\[Lambda]\\\", \\\"4\\\"]}], \\\"+\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"12\\\", \\\"\[RightSkeleton]\\\"}]}], \
RowBox[{\\\"8\\\", \\\" \\\", SuperscriptBox[\\\"H\\\", \\\"2\\\"], \\\" \
\\\", \\\"x\\\", \\\" \\\", \\\"\[Beta]\\\", \\\" \\\", SuperscriptBox[\\\"\
\[Lambda]\\\", \\\"4\\\"]}]]\\) is not a polynomial.\"", 2, 647, 18, 
   32766809435337214103, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8643195625723543`*^9},
 CellLabel->
  "During evaluation of \
In[646]:=",ExpressionUUID->"3b4cefc0-2312-41c9-a198-09e5136aa7af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "5"}], "+", 
    RowBox[{"3", " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"4", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], 
        SuperscriptBox["H", "2"]]}]]}], "+", 
    FractionBox[
     RowBox[{"1", "-", 
      SqrtBox[
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"4", " ", 
          SuperscriptBox["\[Lambda]", "2"]}], 
         SuperscriptBox["H", "2"]]}]]}], "x"], "-", 
    FractionBox[
     RowBox[{"\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], 
           SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
   RowBox[{"9", "+", 
    FractionBox[
     RowBox[{"A", "+", 
      RowBox[{"2", " ", "\[Beta]"}]}], 
     RowBox[{"H", " ", 
      SqrtBox["\[Beta]"]}]], "-", 
    RowBox[{"3", " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"4", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], 
        SuperscriptBox["H", "2"]]}]]}], "+", 
    FractionBox[
     RowBox[{"3", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], 
           SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
   RowBox[{
    RowBox[{"-", "7"}], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"A", "+", "\[Beta]"}], ")"}]}], 
     RowBox[{"H", " ", 
      SqrtBox["\[Beta]"]}]], "+", 
    SqrtBox[
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], 
       SuperscriptBox["H", "2"]]}]], "-", 
    FractionBox[
     RowBox[{"3", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], 
           SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
   RowBox[{
    FractionBox["A", 
     RowBox[{"H", " ", 
      SqrtBox["\[Beta]"]}]], "+", 
    FractionBox[
     RowBox[{"\[Gamma]", "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"\[Gamma]", " ", 
       SqrtBox[
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"4", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], 
          SuperscriptBox["H", "2"]]}]]}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.864317683945923*^9, 
   3.864319563411892*^9},
 CellLabel->
  "Out[647]=",ExpressionUUID->"e857fd52-b352-42a5-bf3d-a833236e390d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", "\[Gamma]"}], "+", "\[Epsilon]"}], 
     SuperscriptBox["H", "2"]], "+", 
    FractionBox[
     SuperscriptBox["\[Gamma]", "2"], 
     RowBox[{"4", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "2"]}]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", "+", 
        RowBox[{"2", " ", "\[Beta]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], 
           SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
     RowBox[{"2", " ", "H", " ", 
      SqrtBox["\[Beta]"]}]], "+", 
    FractionBox[
     RowBox[{"\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{"\[Gamma]", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Lambda]", "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], 
           SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Lambda]", "4"]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "A"}], "+", 
      RowBox[{"\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         FractionBox["\[Gamma]", 
          SuperscriptBox["\[Lambda]", "2"]]}], ")"}]}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"]}]], "-", 
    FractionBox[
     RowBox[{"\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{"\[Gamma]", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Lambda]", "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], 
           SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Lambda]", "4"]}]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "A", " ", 
       SuperscriptBox["\[Lambda]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"4", " ", 
             SuperscriptBox["\[Lambda]", "2"]}], 
            SuperscriptBox["H", "2"]]}]]}], ")"}]}], "+", 
      RowBox[{"A", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"4", " ", 
             SuperscriptBox["\[Lambda]", "2"]}], 
            SuperscriptBox["H", "2"]]}]]}], ")"}]}], "+", 
      RowBox[{"2", " ", "\[Beta]", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"4", " ", 
             SuperscriptBox["\[Lambda]", "2"]}], 
            SuperscriptBox["H", "2"]]}]]}], ")"}]}]}], 
     RowBox[{"4", " ", "H", " ", 
      SqrtBox["\[Beta]"], " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["A", "2"], " ", 
         SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", "\[Beta]", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{"\[Gamma]", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Lambda]", "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], 
           SuperscriptBox["H", "2"]]}]]}], ")"}]}], "+", 
     RowBox[{"2", " ", "A", " ", "H", " ", 
      SqrtBox["\[Beta]"], " ", 
      SuperscriptBox["\[Lambda]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"\[Gamma]", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"\[Gamma]", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"4", " ", 
             SuperscriptBox["\[Lambda]", "2"]}], 
            SuperscriptBox["H", "2"]]}]]}]}], ")"}]}]}], 
    RowBox[{"8", " ", 
     SuperscriptBox["H", "2"], " ", "\[Beta]", " ", 
     SuperscriptBox["\[Lambda]", "4"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.864317683945923*^9, 
   3.8643195644107533`*^9},
 CellLabel->
  "Out[648]=",ExpressionUUID->"6e511d4e-d327-475a-870b-3e5d52c13fe5"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"2", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"32", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "-", 
     RowBox[{"4", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "+", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"3", " ", 
       SuperscriptBox["\[Gamma]", "3"]}], "-", 
      RowBox[{"2", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "A"}], "+", "\[Beta]", "-", "\[Gamma]"}], ")"}], 
       " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"96", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "+", 
      RowBox[{"16", " ", 
       SuperscriptBox["\[Lambda]", "6"]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Lambda]", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"A", "+", 
        RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"256", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "6"], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "A"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"48", " ", "H", " ", 
       SuperscriptBox["\[Gamma]", "3"], " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "-", 
      RowBox[{"32", " ", 
       RowBox[{"(", 
        RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "6"]}], "-", 
      RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "7"]}], "+", 
      RowBox[{"64", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", "+", "\[Beta]"}], ")"}], "2"], " ", 
       SuperscriptBox["\[Lambda]", "8"]}], "+", 
      RowBox[{"128", " ", "H", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "A"}], "+", 
         RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "9"]}], "+", 
      RowBox[{"256", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"A", "+", "\[Beta]", "-", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "4"]}], "+", 
        RowBox[{"32", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}], "+", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Lambda]", "6"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Lambda]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"A", "+", 
           RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"128", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]]}]}], ";", 
  RowBox[{"l", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}], " ", 
     
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8642697470308247`*^9, 3.8642697719328527`*^9}, {
   3.8642698050613003`*^9, 3.864269809694182*^9}, {3.864269920748795*^9, 
   3.864269997090382*^9}, 3.864270965722127*^9, {3.864277396585041*^9, 
   3.8642774445072193`*^9}, {3.864287010818693*^9, 3.864287054480163*^9}},
 CellLabel->
  "In[528]:=",ExpressionUUID->"7a3c3ce1-e79b-4a2f-bb9b-2f7f38211c4d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "''"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "'"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{"w", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864277353595161*^9, 3.8642773853036823`*^9}, {
  3.864313419531303*^9, 3.864313454870009*^9}},
 CellLabel->
  "In[514]:=",ExpressionUUID->"05c08959-3e82-4f5b-963a-a0b8d880861b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "4"}], ",", "6", ",", 
   RowBox[{"-", "4"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.864317698224139*^9},
 CellLabel->
  "Out[514]=",ExpressionUUID->"0b9c22e1-6e50-4f25-97dc-2567c2896809"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"32", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "-", 
     RowBox[{"4", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "+", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "-", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], 
       ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}], "-", 
     RowBox[{"16", " ", 
      SuperscriptBox["\[Lambda]", "6"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[Lambda]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"A", "-", 
         RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.864317698288124*^9},
 CellLabel->
  "Out[515]=",ExpressionUUID->"1635626f-bedc-4009-8ea2-8cce032b33d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"256", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "6"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Beta]", "2"]}], "-", 
         RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "A"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "-", 
      RowBox[{"48", " ", "H", " ", 
       SuperscriptBox["\[Gamma]", "3"], " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "-", 
      RowBox[{"32", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "A"}], "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "6"]}], "-", 
      RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "7"]}], "+", 
      RowBox[{"64", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", "-", "\[Beta]"}], ")"}], "2"], " ", 
       SuperscriptBox["\[Lambda]", "8"]}], "+", 
      RowBox[{"128", " ", "H", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "A"}], "+", 
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "9"]}], "+", 
      RowBox[{"256", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]}], ")"}]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "+", 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
         " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], ")"}], " ", 
         
         SuperscriptBox["\[Lambda]", "4"]}], "-", 
        RowBox[{"32", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Lambda]", "6"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Lambda]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"A", "-", 
           RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"128", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}], " ", 
     
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.864317698459565*^9},
 CellLabel->
  "Out[516]=",ExpressionUUID->"ba5242d8-8adb-4011-b0af-9ab20a871547"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bb", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dd", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ff", "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"32", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gg", "=", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "-", 
     RowBox[{"4", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "+", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hh", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "-", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], 
       ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}], "-", 
     RowBox[{"16", " ", 
      SuperscriptBox["\[Lambda]", "6"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ii", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[Lambda]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"A", "-", 
         RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jj", "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"256", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "6"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Beta]", "2"]}], "-", 
         RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "A"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "-", 
      RowBox[{"48", " ", "H", " ", 
       SuperscriptBox["\[Gamma]", "3"], " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "-", 
      RowBox[{"32", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "A"}], "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "6"]}], "-", 
      RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "7"]}], "+", 
      RowBox[{"64", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", "-", "\[Beta]"}], ")"}], "2"], " ", 
       SuperscriptBox["\[Lambda]", "8"]}], "+", 
      RowBox[{"128", " ", "H", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "A"}], "+", 
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "9"]}], "+", 
      RowBox[{"256", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kk", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "+", 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
         " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], ")"}], " ", 
         
         SuperscriptBox["\[Lambda]", "4"]}], "-", 
        RowBox[{"32", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Lambda]", "6"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Lambda]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"A", "-", 
           RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"128", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]]}]}], ";", 
  RowBox[{"ll", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}], " ", 
     
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8642697470308247`*^9, 3.8642697719328527`*^9}, {
   3.8642698050613003`*^9, 3.864269809694182*^9}, {3.864269920748795*^9, 
   3.864269997090382*^9}, 3.864270965722127*^9, {3.864277396585041*^9, 
   3.8642774445072193`*^9}, {3.864287010818693*^9, 3.864287054480163*^9}, {
   3.864313470139778*^9, 3.864313555327423*^9}},
 CellLabel->
  "In[539]:=",ExpressionUUID->"4e09a1ba-6dae-4d5a-a830-866e964c0cb8"],

Cell[TextData[{
 "Ansatz for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"w", 
     RowBox[{"(", "x", ")"}]}], "=", 
    RowBox[{"\[Sum]", 
     RowBox[{
      SubscriptBox["\[Alpha]", "n"], 
      SuperscriptBox["x", "n"]}]}]}], TraditionalForm]],ExpressionUUID->
  "9d1ed62a-fc8a-458c-b784-9b21a9919ac7"],
 ", we get the following difference equations, exactly the same as in the \
previous section because it is for generic coefficients abcdefghijkl"
}], "Text",
 CellChangeTimes->{{3.8642750419140577`*^9, 3.864275053063743*^9}, {
  3.864275110366568*^9, 3.8642751370634737`*^9}, {3.864277463032014*^9, 
  3.864277495417461*^9}},ExpressionUUID->"2c445f2c-479c-476b-831c-\
d9abe72381eb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"diffEqPlus", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"n", "+", "2"}], ")"}], "a", " ", 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "+", "2"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "b"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "f"}]}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "+", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "n", " ", "c"}], "+", 
      RowBox[{"n", " ", "g"}], "+", "j"}], ")"}], 
    SubscriptBox["\[Alpha]", "n"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "d"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "h"}], "+", "k"}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "-", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "3"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "e"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "i"}], "+", "l"}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "-", "2"}]]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffEqMinus", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"n", "+", "2"}], ")"}], "aa", " ", 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "+", "2"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "bb"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "ff"}]}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "+", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "n", " ", "cc"}], "+", 
      RowBox[{"n", " ", "gg"}], "+", "jj"}], ")"}], 
    SubscriptBox["\[Delta]", "n"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "dd"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "hh"}], "+", "kk"}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "-", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "3"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "ee"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "ii"}], "+", "ll"}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "-", "2"}]]}]}]}]}], "Input",
 CellChangeTimes->{{3.864270018911315*^9, 3.8642702462416697`*^9}, {
  3.8642705156994133`*^9, 3.8642705159562902`*^9}, {3.864313518020338*^9, 
  3.864313519482671*^9}, {3.864313560863084*^9, 3.864313611425284*^9}},
 CellLabel->
  "In[550]:=",ExpressionUUID->"7f890f63-1d8e-498f-8a62-22a495462599"],

Cell[TextData[{
 "Now we need to generalize the choice of initial conditions C0 and C1 in \
order to be able to extract the even level energy spectrum, and in particular \
the ground state energy.\nLet us recall that for the previous potential (\
\[Gamma]->0, \[Beta]->1), we had C0=1 and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C1", "=", 
    RowBox[{"1", "+", 
     FractionBox["1", 
      RowBox[{"2", "\[Lambda]"}]]}]}], TraditionalForm]],ExpressionUUID->
  "2c033307-e18a-419d-9b62-6716aaf71dea"],
 "."
}], "Text",
 CellChangeTimes->{{3.864275145180252*^9, 3.864275191066702*^9}, {
  3.864277514040395*^9, 3.86427757220188*^9}, {3.8642777223928633`*^9, 
  3.8642778004261217`*^9}, {3.8642862975920963`*^9, 
  3.864286314556131*^9}},ExpressionUUID->"db867459-695c-4c29-8dde-\
885be7c32dd6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"psiPlus", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"z", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "+", 
         RowBox[{"6", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Beta]"}], "+", 
            RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["z", "2"], " ", 
          SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
      RowBox[{"24", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "3"]}]]}], "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "+", "1"}], ")"}], 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]]}]], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Alpha]", "0"], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], 
      FractionBox["z", 
       RowBox[{"z", "+", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["z", 
         RowBox[{"z", "+", "1"}]], ")"}], "2"]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiMinus", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Exp", "[", 
    FractionBox[
     RowBox[{"z", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{"6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Beta]"}], "+", 
           RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["z", "2"], " ", 
         SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
     RowBox[{"24", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "3"]}]], "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "z"}], "+", "1"}], ")"}], 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[Gamma]", "3"]}], "+", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "A"}], "+", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]]}]], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Delta]", "0"], "+", 
     RowBox[{
      SubscriptBox["\[Delta]", "1"], 
      FractionBox[
       RowBox[{"-", "z"}], 
       RowBox[{
        RowBox[{"-", "z"}], "+", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[Delta]", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"-", "z"}], 
         RowBox[{
          RowBox[{"-", "z"}], "+", "1"}]], ")"}], "2"]}]}], 
    ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.864286324723585*^9, 3.864286433353557*^9}, {
   3.8642889704779167`*^9, 3.8642890116523952`*^9}, 3.8642890470751457`*^9, {
   3.864289083251052*^9, 3.86428912995544*^9}, {3.864289237638175*^9, 
   3.864289254868375*^9}, {3.864313707915181*^9, 3.864313713541687*^9}, {
   3.864313881883119*^9, 3.864313887220744*^9}, {3.864317721805814*^9, 
   3.864317725550482*^9}},
 CellLabel->
  "In[552]:=",ExpressionUUID->"143c6dc9-d9de-4bae-ae3a-de2e07f1f621"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"psiPlus", "'"}], "[", "0", "]"}], "/.", "rule"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"psiMinus", "'"}], "[", "0", "]"}], "/.", "rule"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.8642864434371567`*^9, 3.864286462633073*^9}, {
  3.864289139123407*^9, 3.864289156917902*^9}, {3.864289223876636*^9, 
  3.864289228321069*^9}},
 CellLabel->
  "In[554]:=",ExpressionUUID->"0e378861-682c-4fbd-bb39-e1ec7a55e903"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "A", "+", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
     SubscriptBox["\[Alpha]", "0"]}], 
    RowBox[{"2", " ", "\[Lambda]"}]]}], "+", 
  SubscriptBox["\[Alpha]", "1"]}]], "Output",
 CellChangeTimes->{{3.864286450123785*^9, 3.8642864630254097`*^9}, 
   3.864287064388155*^9, {3.864289140413212*^9, 3.864289159117506*^9}, {
   3.8642892288595867`*^9, 3.864289258649302*^9}, 3.86431389030669*^9, 
   3.864317732172204*^9},
 CellLabel->
  "Out[554]=",ExpressionUUID->"406df5ac-2de8-495c-ad14-01a281b75b7a"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "A", "+", 
      RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
    SubscriptBox["\[Delta]", "0"]}], 
   RowBox[{"2", " ", "\[Lambda]"}]], "-", 
  SubscriptBox["\[Delta]", "1"]}]], "Output",
 CellChangeTimes->{{3.864286450123785*^9, 3.8642864630254097`*^9}, 
   3.864287064388155*^9, {3.864289140413212*^9, 3.864289159117506*^9}, {
   3.8642892288595867`*^9, 3.864289258649302*^9}, 3.86431389030669*^9, 
   3.8643177321781797`*^9},
 CellLabel->
  "Out[555]=",ExpressionUUID->"cb004738-d450-4654-9f78-51f956191e5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"psiPlus", "'"}], "[", "0", "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"psiMinus", "'"}], "[", "0", "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.86428941613244*^9, 3.864289417586679*^9}},
 CellLabel->
  "In[556]:=",ExpressionUUID->"44b3a7e1-1600-4274-beb0-d117bb22dc24"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"2", " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "4"]}], "+", 
       RowBox[{"16", " ", "H", " ", 
        SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
     SubscriptBox["\[Alpha]", "0"]}], 
    RowBox[{"16", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], "+", 
  SubscriptBox["\[Alpha]", "1"]}]], "Output",
 CellChangeTimes->{3.864289418474496*^9, 3.864317827419479*^9},
 CellLabel->
  "Out[556]=",ExpressionUUID->"c2d00c03-e567-4970-84f0-96f7f82050cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "+", 
       RowBox[{"2", " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
        " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "4"]}], "-", 
       RowBox[{"16", " ", "H", " ", 
        SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
     SubscriptBox["\[Delta]", "0"]}], 
    RowBox[{"16", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], "-", 
  SubscriptBox["\[Delta]", "1"]}]], "Output",
 CellChangeTimes->{3.864289418474496*^9, 3.864317827477714*^9},
 CellLabel->
  "Out[557]=",ExpressionUUID->"1063ebf8-d867-4feb-81e5-c9f0901f570c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"C0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"C1", "=", 
   RowBox[{"S", "+", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Gamma]", "3"], "-", 
         RowBox[{"2", " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          RowBox[{"(", 
           RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "4"]}], "+", 
         RowBox[{"16", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
       SubscriptBox["\[Alpha]", "0"]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]], "C0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CC0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CC1", "=", 
   RowBox[{
    RowBox[{"-", "S"}], "-", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Gamma]", "3"], "+", 
         RowBox[{"2", " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
          " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          RowBox[{"(", 
           RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "4"]}], "-", 
         RowBox[{"16", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "0"]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]], "CC0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialEqPlus", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Alpha]", "0"], "-", "C0"}], ",", 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], "-", "C1"}], ",", 
     RowBox[{
      RowBox[{"2", "a", " ", 
       SubscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"f", " ", 
       SubscriptBox["\[Alpha]", "1"]}], "+", 
      RowBox[{"j", " ", 
       SubscriptBox["\[Alpha]", "0"]}]}], ",", 
     RowBox[{
      RowBox[{"6", "a", " ", 
       SubscriptBox["\[Alpha]", "3"]}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"b", "+", "f"}], ")"}], 
       SubscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"g", "+", "j"}], ")"}], 
       SubscriptBox["\[Alpha]", "1"]}], "+", 
      RowBox[{"k", " ", 
       SubscriptBox["\[Alpha]", "0"]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialEqMinus", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Delta]", "0"], "-", "CC0"}], ",", 
     RowBox[{
      SubscriptBox["\[Delta]", "1"], "-", "CC1"}], ",", 
     RowBox[{
      RowBox[{"2", "aa", " ", 
       SubscriptBox["\[Delta]", "2"]}], "+", 
      RowBox[{"ff", " ", 
       SubscriptBox["\[Delta]", "1"]}], "+", 
      RowBox[{"jj", " ", 
       SubscriptBox["\[Delta]", "0"]}]}], ",", 
     RowBox[{
      RowBox[{"6", "aa", " ", 
       SubscriptBox["\[Delta]", "3"]}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"bb", "+", "ff"}], ")"}], 
       SubscriptBox["\[Delta]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"gg", "+", "jj"}], ")"}], 
       SubscriptBox["\[Delta]", "1"]}], "+", 
      RowBox[{"kk", " ", 
       SubscriptBox["\[Delta]", "0"]}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.864270380769575*^9, 3.864270544385949*^9}, {
  3.864270681732925*^9, 3.8642707092690983`*^9}, {3.864277584361083*^9, 
  3.864277623001809*^9}, {3.864277788826624*^9, 3.864277805818914*^9}, {
  3.8643148390180197`*^9, 3.864314996387719*^9}, {3.864315370805738*^9, 
  3.864315370870441*^9}, {3.8643154226625013`*^9, 3.864315422935775*^9}, {
  3.8643161033803577`*^9, 3.8643161147858477`*^9}, {3.864316764706365*^9, 
  3.864316769043502*^9}, {3.864316802577961*^9, 3.864316820537896*^9}, {
  3.8643179116870728`*^9, 3.864317931324974*^9}},
 CellLabel->
  "In[558]:=",ExpressionUUID->"c8edbfc1-1116-4580-ac63-3191194bca8f"],

Cell["\<\
We solve for the coefficients of the series expansion for a large value of n\
\>", "Text",
 CellChangeTimes->{{3.8642751963474607`*^9, 
  3.8642752191768208`*^9}},ExpressionUUID->"a9f6db18-bbb2-4f0d-a9c7-\
535f83784f64"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nmax", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]largePlus", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"initialEqPlus", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"diffEqPlus", "[", "n", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "2", ",", 
              RowBox[{"Nmax", "-", "2"}]}], "}"}]}], "]"}]}], "]"}], "==", 
        "0"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["\[Alpha]", "m"], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"Nmax", "+", "1"}], ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]largeMinus", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"initialEqMinus", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"diffEqMinus", "[", "n", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "2", ",", 
              RowBox[{"Nmax", "-", "2"}]}], "}"}]}], "]"}]}], "]"}], "==", 
        "0"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["\[Delta]", "m"], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"Nmax", "+", "1"}], ",", "2"}], "]"}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.8642703216466703`*^9, 3.864270374397962*^9}, {
  3.8642705513296633`*^9, 3.8642705574736023`*^9}, {3.8642706051077547`*^9, 
  3.864270674659809*^9}, {3.864270719493314*^9, 3.864270843494506*^9}, {
  3.864270983647256*^9, 3.864270983916497*^9}, {3.864271384077087*^9, 
  3.864271391467572*^9}, {3.864271456796391*^9, 3.864271566285283*^9}, {
  3.864272670480879*^9, 3.8642726706307497`*^9}, {3.8643150041381397`*^9, 
  3.864315039287624*^9}, {3.8643152147129307`*^9, 3.864315217142314*^9}, {
  3.8643153954184837`*^9, 3.8643153955802298`*^9}, {3.864316807467794*^9, 
  3.8643168351853743`*^9}},
 CellLabel->
  "In[564]:=",ExpressionUUID->"35a3e64e-4f55-49b1-8845-b704e4c21d66"],

Cell["Check that we recover the result for the simpler potential", "Text",
 CellChangeTimes->{{3.864275243849395*^9, 3.864275278617496*^9}, {
  3.864317968659535*^9, 
  3.864317980809977*^9}},ExpressionUUID->"bd578c7f-4e42-4fe4-93ff-\
abcbd5a4b793"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Alpha]largePlus", ",", "\[Alpha]largeMinus"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", "->", "1"}], ",", 
      RowBox[{"A", "->", "1.0"}], ",", 
      RowBox[{"\[Gamma]", "->", "0"}], ",", 
      RowBox[{"H", "->", "1"}], ",", 
      RowBox[{"\[Beta]", "->", "1"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", 
       RowBox[{"-", "10"}]}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.864272516042613*^9, 3.864272581235248*^9}, {
   3.864272630956184*^9, 3.864272652997024*^9}, {3.8643152302549*^9, 
   3.864315334743429*^9}, {3.864315388282217*^9, 3.864315388370914*^9}, {
   3.864315478660943*^9, 3.864315500630616*^9}, {3.8643161278235292`*^9, 
   3.8643161552456636`*^9}, {3.864316829844284*^9, 3.864316829982398*^9}, {
   3.864317021269602*^9, 3.864317096679879*^9}, {3.864317220413212*^9, 
   3.864317231961761*^9}, 3.864317298780168*^9, {3.864317334566575*^9, 
   3.864317342387321*^9}, {3.864318011281124*^9, 3.864318026607298*^9}},
 CellLabel->
  "In[567]:=",ExpressionUUID->"428f7fa5-6680-429f-8578-cb7df7398016"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Epsilon]", "\[Rule]", "1.2992147129802167`"}], ",", 
   RowBox[{"S", "\[Rule]", 
    RowBox[{"-", "0.3187155117719456`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864272582474341*^9, 3.864272653692486*^9}, 
   3.8642727233006563`*^9, {3.864315296586309*^9, 3.864315344630843*^9}, {
   3.864315378405192*^9, 3.864315417696125*^9}, {3.864315457418236*^9, 
   3.864315501130307*^9}, {3.864316143990018*^9, 3.864316155816534*^9}, {
   3.864316791724887*^9, 3.8643168537145967`*^9}, {3.8643170232770653`*^9, 
   3.864317097691369*^9}, {3.86431722205857*^9, 3.864317232530428*^9}, 
   3.864317299287344*^9, {3.864317335018508*^9, 3.8643173428797483`*^9}, 
   3.86431806306894*^9},
 CellLabel->
  "Out[567]=",ExpressionUUID->"9f8f45b5-f5f3-4df2-b2c5-077d628421b3"]
}, Open  ]],

Cell["The new result", "Text",
 CellChangeTimes->{{3.86431798915965*^9, 
  3.864317991930902*^9}},ExpressionUUID->"73c265c7-aa0d-4caa-b50a-\
cd53a381bd00"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Alpha]largePlus", ",", "\[Alpha]largeMinus"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", "->", "1"}], ",", 
      RowBox[{"A", "->", "1.0"}], ",", 
      RowBox[{"\[Gamma]", "->", "1"}], ",", 
      RowBox[{"H", "->", "1"}], ",", 
      RowBox[{"\[Beta]", "->", "1"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", 
       RowBox[{"-", "10"}]}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.864272516042613*^9, 3.864272581235248*^9}, {
   3.864272630956184*^9, 3.864272652997024*^9}, {3.8643152302549*^9, 
   3.864315334743429*^9}, {3.864315388282217*^9, 3.864315388370914*^9}, {
   3.864315478660943*^9, 3.864315500630616*^9}, {3.8643161278235292`*^9, 
   3.8643161552456636`*^9}, {3.864316829844284*^9, 3.864316829982398*^9}, {
   3.864317021269602*^9, 3.864317096679879*^9}, {3.864317220413212*^9, 
   3.864317231961761*^9}, 3.864317298780168*^9, {3.864317334566575*^9, 
   3.864317342387321*^9}, {3.8643181174813232`*^9, 3.864318128884192*^9}},
 CellLabel->
  "In[568]:=",ExpressionUUID->"0b1e0bbe-f251-41a1-ac7b-cf00280f5f55"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Epsilon]", "\[Rule]", "1.0341313847228892`"}], ",", 
   RowBox[{"S", "\[Rule]", 
    RowBox[{"-", "0.5354056512475651`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864272582474341*^9, 3.864272653692486*^9}, 
   3.8642727233006563`*^9, {3.864315296586309*^9, 3.864315344630843*^9}, {
   3.864315378405192*^9, 3.864315417696125*^9}, {3.864315457418236*^9, 
   3.864315501130307*^9}, {3.864316143990018*^9, 3.864316155816534*^9}, {
   3.864316791724887*^9, 3.8643168537145967`*^9}, {3.8643170232770653`*^9, 
   3.864317097691369*^9}, {3.86431722205857*^9, 3.864317232530428*^9}, 
   3.864317299287344*^9, {3.864317335018508*^9, 3.8643173428797483`*^9}, 
   3.86431816332311*^9},
 CellLabel->
  "Out[568]=",ExpressionUUID->"d3340de5-343b-40d3-a81a-51ee041b8c3f"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Anharmonic oscillator", "Section",
 CellChangeTimes->{{3.865408687240645*^9, 3.86540869495275*^9}, {
  3.86541015090152*^9, 3.865410165166065*^9}, {3.8654169206437187`*^9, 
  3.865416920816534*^9}, {3.865416993268016*^9, 
  3.86541699346036*^9}},ExpressionUUID->"595710cc-3d11-41af-ac2b-\
40d1c3a6e67f"],

Cell[CellGroupData[{

Cell["Discretization (toy model)", "Subsection",
 CellChangeTimes->{{3.865410180182604*^9, 3.865410198686184*^9}, {
  3.86541745104632*^9, 
  3.865417455190219*^9}},ExpressionUUID->"403a8e5a-4ca9-4d8e-a0e4-\
e846aa3d9123"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"V", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], "2"]}], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"]}], ")"}], "20"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865410440070257*^9, 3.8654104555054197`*^9}, {
  3.865410573522439*^9, 3.865410593314836*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"d3934fba-b5f1-4529-b180-92cb47c804d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotV", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"V", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3.5"}], ",", "3.5"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8654105962790318`*^9, 3.86541065498062*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"e5e7d4e0-05b8-4c21-9b89-3b947b78fc0f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]x", "=", 
   FractionBox["L", "n"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.865410727784152*^9, 3.8654107424994583`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"e496bd59-6dbd-4fbc-ab8f-8ac52234b583"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M", "=", 
  RowBox[{"SparseArray", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", "i_"}], "}"}], "->", 
       RowBox[{
        RowBox[{"V", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["L", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "\[Delta]x"}]}], "]"}], "+", 
        FractionBox["1", 
         SuperscriptBox["\[Delta]x", "2"]]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"j", "-", "i"}], "]"}], "==", "1"}]}], "->", 
       RowBox[{"-", 
        FractionBox["1", 
         RowBox[{"2", 
          SuperscriptBox["\[Delta]x", "2"]}]]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "+", "1"}], ",", 
      RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8654107489514227`*^9, 3.865410780436141*^9}, {
   3.865410816275703*^9, 3.865410903285276*^9}, {3.865410938964745*^9, 
   3.865410939253684*^9}, 3.865410971430784*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"146df3ca-4d43-473b-b4de-052b647eddc2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {16., {0., 16.}}], Appearance -> None, 
              BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True), 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJzt211Mk1ccx3EShFR0trq6DNNlgE5dWKqghYQNf05TsBLcCjhnk8LWrZvo
mIqCzAmDqaCiMUWnbkriuhGkshUFRazZS3AuTNY+hQ5KabG0QFoqdkl5USZi
TLzlcido/hdP8uSbc/Gc5HNxznlyIlXb09TBQUFBoqfPk/eEPYbM76KMOLdC
2xB/3wKPNtIt1w2COvX/o/91R3DmQLkJCvH9N/0pbXipeK/zlxIvmsqXS5sa
PLAmV/+879QQWt7PeZQ14p9230/9+eg/Csaqd90wQlByt6DU0g6XO627P3oQ
59fJxsSbO3DaKUr1pQ8gdWGy7LXV/indTrd5UX+2+lQOs+WBqIK4Nqzf91af
J74fMlnuxV2L/FOOn27zov5s9alcWS527m6/YcYMX25x76QbCTm3/KKqe+SQ
OlOHka3xVSu3m7GizupL8rnw0YSnaFsMOaTO1qFDsl7VvoXDveCQiKOHeqAv
vX5tk+4uOaTO1GHTgi2tzXtMeDljR8toYxd0rZ+GV1zwkUPqTB1OKq+8PfuU
Ed/yx1XnTnRg1CT1KYLIIXW2Ds9Ksv77JtGEzbOOjP7gseLDottfxhWSQ+ps
HZYWLjAs9JqwbSI7MJ7SjZnH/xALJsghdbYOK/NjlKtSOCx72FV49YoDE+Ej
UauLaJ9Cna3D2IO2Cu/3HIYNiZ818J2w5WyI/nySHFJn6zBHmDzHNcZBUbn0
smBNL27zHxg1Xw2RQ+pMHSb4Ms/MiTEjib+x3viCC83JhZoWCzmkztbh1ZLe
+qWpZlzgqlYFdroQystW1T4ih9TZOnRGfWDvE5rxbnB4QW5NL3o01jyTjhxS
Z+tQUiPjaX/lsCiMV1b5hROSN9QnrkeTQ+psHSa9d6x6+AAHj/fBWp78DvZn
dMdJLbRfps7WoVKXqI0Rc2i18iW1A3YY/P/WBdLIIXW2Dtd2DEjy9SZIt74o
31lkQ83uULGwjf6nUGfrUKqKVdj/NmLH0MNLxYpORNSEvRp4nRxSZ+tQHTKe
lRFiQt1cw+LoCCvc9U69LJ0cUmfr8HhSWGyjgIOrixd6UmiH409HU/ASWh9S
Z+swr/ifvXndHDbV5ktv2Z24aWuct3IjndtQZ+swQi4qd2jMkFmVgy2fuDG/
6uBRoZrup1Bn6/Dj30TKV9xmBMQnBemH+mCbr/lJ3EMOqbN1WD0jbGxkuB2e
ZrVSr+/HTG9nReRyur9MnW3XJCzTmt+xIrMsbevvtgGUfX14SUoqOaQ+Pfpj
dGgUAw==
              "], {{0, 0}, {28, 28}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["901", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"301", ",", "301"}], "}"}], "SummaryItem"]}]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJzt211Mk1ccx3EShFR0trq6DNNlgE5dWKqghYQNf05TsBLcCjhnk8LWrZvo
mIqCzAmDqaCiMUWnbkriuhGkshUFRazZS3AuTNY+hQ5KabG0QFoqdkl5USZi
TLzlcido/hdP8uSbc/Gc5HNxznlyIlXb09TBQUFBoqfPk/eEPYbM76KMOLdC
2xB/3wKPNtIt1w2COvX/o/91R3DmQLkJCvH9N/0pbXipeK/zlxIvmsqXS5sa
PLAmV/+879QQWt7PeZQ14p9230/9+eg/Csaqd90wQlByt6DU0g6XO627P3oQ
59fJxsSbO3DaKUr1pQ8gdWGy7LXV/indTrd5UX+2+lQOs+WBqIK4Nqzf91af
J74fMlnuxV2L/FOOn27zov5s9alcWS527m6/YcYMX25x76QbCTm3/KKqe+SQ
OlOHka3xVSu3m7GizupL8rnw0YSnaFsMOaTO1qFDsl7VvoXDveCQiKOHeqAv
vX5tk+4uOaTO1GHTgi2tzXtMeDljR8toYxd0rZ+GV1zwkUPqTB1OKq+8PfuU
Ed/yx1XnTnRg1CT1KYLIIXW2Ds9Ksv77JtGEzbOOjP7gseLDottfxhWSQ+ps
HZYWLjAs9JqwbSI7MJ7SjZnH/xALJsghdbYOK/NjlKtSOCx72FV49YoDE+Ej
UauLaJ9Cna3D2IO2Cu/3HIYNiZ818J2w5WyI/nySHFJn6zBHmDzHNcZBUbn0
smBNL27zHxg1Xw2RQ+pMHSb4Ms/MiTEjib+x3viCC83JhZoWCzmkztbh1ZLe
+qWpZlzgqlYFdroQystW1T4ih9TZOnRGfWDvE5rxbnB4QW5NL3o01jyTjhxS
Z+tQUiPjaX/lsCiMV1b5hROSN9QnrkeTQ+psHSa9d6x6+AAHj/fBWp78DvZn
dMdJLbRfps7WoVKXqI0Rc2i18iW1A3YY/P/WBdLIIXW2Dtd2DEjy9SZIt74o
31lkQ83uULGwjf6nUGfrUKqKVdj/NmLH0MNLxYpORNSEvRp4nRxSZ+tQHTKe
lRFiQt1cw+LoCCvc9U69LJ0cUmfr8HhSWGyjgIOrixd6UmiH409HU/ASWh9S
Z+swr/ifvXndHDbV5ktv2Z24aWuct3IjndtQZ+swQi4qd2jMkFmVgy2fuDG/
6uBRoZrup1Bn6/Dj30TKV9xmBMQnBemH+mCbr/lJ3EMOqbN1WD0jbGxkuB2e
ZrVSr+/HTG9nReRyur9MnW3XJCzTmt+xIrMsbevvtgGUfX14SUoqOaQ+Pfpj
dGgUAw==
              "], {{0, 0}, {28, 28}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["901", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"301", ",", "301"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.009944702597101578`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "450"}], BaselinePosition -> Baseline, 
                    ContentPadding -> False, FrameMargins -> 0, 
                    ImageSize -> {{1, 300}, Automatic}, StripOnInput -> True],
                     LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["7025", "6"], BaselinePosition -> Baseline, 
                    ContentPadding -> False, FrameMargins -> 0, 
                    ImageSize -> {{1, 300}, Automatic}, StripOnInput -> True],
                     LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "450"}], BaselinePosition -> Baseline, 
                    ContentPadding -> False, FrameMargins -> 0, 
                    ImageSize -> {{1, 300}, Automatic}, StripOnInput -> True],
                     LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "450"}], BaselinePosition -> Baseline, 
                    ContentPadding -> False, FrameMargins -> 0, 
                    ImageSize -> {{1, 300}, Automatic}, StripOnInput -> True],
                     LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, DefaultBaseStyle -> "Column", 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[Automatic, {301, 301}, 0, {1, {CompressedData["
1:eJwl04WbCAYYB+A7TE6f3uk63WyHOd05xvSZ5rQzHOac7o4NmzZsY5vunu7Y
5ALTMV2vx/c87+8P+L7flyW8W/2IwICAgALvwsTiA+KTiCQkJ4g0pCeYzGQj
JyHkoyBFKE4pQilLGBWpQnVqUZcGNKIJzWhJOG3pQGci6EFvIulPFEOIZjij
GMsEJjONmcxhLt+xkCUsZyU/sYbfWM8mtrKD3ezjAIc5xknOcJ4LXOYv/uUG
t7jLA/7nKS94TaDdxiEeCUlMMlKSmnR8RCaykoPc5A18f5fCFKMkn1CGclSg
MtWoSR3q05DGNKUFrfmS9nSiK93pRV++YiCDGUoMIxnDeCYxlRnM5lvms4DF
LGMFP7KaX1nHRrawnV3s5XcOcZQTnOYcf3KJq/zDdW5yh/s84gnPeRX4vqix
iUsCPiQpKUhFWjKQkSxkJxd5yE8hilKCjynNp5SnElWpQW3q8Rmf8wXNaUUb
2tGRLnSjJ33oxwAG8TXDGMFoxjGRKUxnFt8wj+9ZxFJ+YBU/8wtr2cBmtrGT
PeznIEc4zinO8gcXucLfXOM/bnOPhzzmGS95Q6zY/p/4JCIJyQkiDekJJjPZ
yEkI+ShIEYpTilDKEkZFqlCdWtSlAY1oQjNaEk5bOtCZCHrQm0j6E8UQoonh
LWVJjt4=
     "], CompressedData["
1:eJxtlvl/F3Icx787qtVaa63WttaxdWy1LYRCJIkupNxFqUTEOogORmpSjm46
0CGSI3IUwroVuUqXJLocHeiS6Hi/Hp6fh/djj/3wejyfz/df8M7s2a9zQXQk
EimKiUSijHIxJvJ/R9OxTF7GVhbGui5ni4Pq8q7j6Aq2eBi6Ird4PMFWyXno
RCavbEuCibAKNy2ZDqyKi9VsKVBd3d1S6FQmT7Olw1TnNWwZMB2v6e616MDa
tjp08Ew8k87Cxbq2eiVcrI83wAOzbTlQt4auc+hGtlyoznO3PJjP1I1tZ8B8
12eys+gmrs+GTfBznJ9La01psRl+Hh5u6vOZ/AJbc6jbha4vci224BZ4MWvJ
TX4J3QqqL4W6tabll7m+3HXwNqwtt7Z0O6Zuj3fA2+NX2K6Evq9i8o5MfTXr
xC14Z3gNHnit7Tqo2/WuxRu4aTfSN0F1F6hbV6jbzbArLt6Ci91s3Z3fSod7
D249S/FeuHgbk/e23Q51u8O12Ifbnc770HfZ+kL13e52D90XFnDrBwtwsT8+
ANcG0uK9+H14uKkHMfn9tgdo+WA63NVD4FB8GFQ/SA+F6odshSVcfNj2CCx0
Ptz2KD3c9Qg4Eh+BF8HH8CJ8FJM/bhsNdRvjbqPpJxyfZE+5lj/NxtLjXI+n
x0L1BNtEON75JNtkepLrZ2zPOp9CB59Ky6fR2nT6Oah+np4OX+AmznA+kw6c
ZZtNz3L9om0O9P0SfBmf6/wVfC6bx+1VOA8XX8PF1x3fgPPxN+F8XHwLFxew
t+l38AXO38XF92wLYehF3N6Hi3DxA1z8EC7GtY/oxfjHjp+wYrqYXmJbCotd
L4PLcW0FLa50vor+FK7CVztfQwd+ZvscrnG+Fv8CD/ySqb/Cxa9t30D1Ondb
B9fbvqXXu97A5BvZJm6b6M1MvcX2HR1c3Gr7nt7KtnEL/MG2HW5z/aPjT3AH
ru2kd8GdTL3btqeEiz/jv+Dir7j4m7vJ9zL5Ptt+uNf1AcffbX84D/2n7SBU
H3Id/DA7wu2o6yP0X7Zjzv+mgx+nj9P/4OK/thPOtZPcTjnXY3+S2yk6Kuo/
RuNaDB2NxzJ5GVaWW/BytjjouzyTV8Djca0inQDVlWACS+RWuRRPslWhk1wn
w6p4Ml6NyVOYujqeigem2dLpNFaDm5ZB1yzFa+G1cbEOnuk6i5bXxXWrR2dB
dX3YAM92noNns4bcxEYlPBfm4bl4PpOfBhIDjUk=
     "]}, {-450, Rational[7025, 6], -450, -450, Rational[
     1127913601, 972000], -450, Rational[34938188, 30375], -450, Rational[
     13683601, 12000], -450, -450, -450, Rational[
     68684941, 60750], -450, -450, Rational[8718245, 7776], -450, -450, 
     Rational[138996, 125], -450, -450, Rational[
     1072112401, 972000], -450, -450, Rational[66475981, 60750], -450, -450, 
     Rational[13028881, 12000], -450, -450, -450, Rational[261820, 243], -450,
      Rational[1039434241, 972000], -450, -450, -450, Rational[
     796141, 750], -450, Rational[1024370161, 972000], -450, Rational[
     31785788, 30375], -450, -450, -450, Rational[
     33255, 32], -450, -450, -450, Rational[62705821, 60750], -450, -450, 
     Rational[996659521, 972000], Rational[382028, 375], -450, -450, -450, 
     Rational[983961121, 972000], -450, -450, Rational[
     488945, 486], -450, -450, -450, Rational[12000001, 12000], -450, 
     Rational[30196508, 30375], -450, Rational[
     960751441, 972000], -450, -450, -450, Rational[245727, 250], -450, 
     Rational[7601525, 7776], -450, -450, -450, Rational[
     29536268, 30375], -450, Rational[
     11608561, 12000], -450, -450, -450, -450, Rational[58474141, 60750], 
     Rational[931036081, 972000], -450, -450, -450, -450, Rational[2860, 3], 
     Rational[922395121, 972000], -450, -450, Rational[
     57393661, 60750], -450, -450, -450, Rational[
     3762747, 4000], -450, -450, -450, Rational[28454348, 30375], Rational[
     7254965, 7776], -450, -450, -450, -450, Rational[697021, 750], Rational[
     899942161, 972000], -450, -450, -450, Rational[
     28021148, 30375], -450, -450, Rational[11031361, 12000], -450, -450, 
     Rational[445265, 486], -450, -450, Rational[
     887643361, 972000], -450, -450, -450, Rational[113796, 125], Rational[
     882230401, 972000], -450, -450, Rational[
     54981181, 60750], -450, -450, -450, Rational[86645, 96], -450, -450, 
     Rational[27342908, 30375], -450, Rational[
     872773681, 972000], -450, -450, -450, -450, Rational[
     671821, 750], -450, -450, Rational[868689601, 972000], Rational[
     216700, 243], -450, -450, -450, -450, Rational[
     3559707, 4000], -450, -450, Rational[53957101, 60750], Rational[
     861712081, 972000], -450, -450, -450, Rational[331868, 375], -450, -450, 
     Rational[6870245, 7776], -450, Rational[
     53590381, 60750], -450, -450, -450, Rational[
     10570321, 12000], -450, -450, Rational[26719628, 30375], -450, -450, 
     Rational[853940161, 972000], -450, -450, -450, Rational[1755, 2], 
     Rational[851995441, 972000], -450, -450, Rational[
     26597948, 30375], -450, -450, -450, -450, Rational[
     10498081, 12000], -450, -450, Rational[53101501, 60750], -450, -450, 
     Rational[6791765, 7776], -450, Rational[327308, 375], -450, -450, 
     Rational[847857121, 972000], -450, -450, Rational[52962061, 60750], -450,
      Rational[3485547, 4000], -450, -450, Rational[211660, 243], -450, -450, 
     Rational[846347281, 972000], -450, -450, Rational[
     652861, 750], -450, -450, -450, -450, Rational[845919841, 972000], -450, 
     Rational[26430668, 30375], -450, -450, Rational[83525, 96], -450, -450, 
     Rational[52852861, 60750], -450, Rational[845645041, 972000], -450, -450,
      Rational[108756, 125], -450, -450, Rational[
     845768881, 972000], -450, -450, -450, Rational[
     422945, 486], -450, -450, -450, Rational[10445041, 12000], Rational[
     26445068, 30375], -450, -450, -450, Rational[
     846469921, 972000], -450, -450, Rational[653341, 750], -450, -450, -450, 
     Rational[6776165, 7776], -450, -450, Rational[
     26479388, 30375], -450, -450, Rational[3488427, 4000], -450, -450, 
     Rational[53003821, 60750], -450, -450, Rational[
     848459041, 972000], -450, -450, Rational[2620, 3], Rational[
     849322561, 972000], -450, -450, -450, Rational[
     53111581, 60750], -450, -450, -450, Rational[10497121, 12000], -450, 
     Rational[26586428, 30375], -450, -450, -450, Rational[
     6810245, 7776], -450, Rational[219087, 250], -450, Rational[
     852353281, 972000], -450, -450, -450, Rational[26653388, 30375], -450, 
     Rational[10536721, 12000], -450, -450, -450, Rational[
     427025, 486], -450, -450, Rational[854634001, 972000], -450, -450, -450, 
     Rational[329948, 375], -450, Rational[855822481, 972000], -450, -450, 
     Rational[53526541, 60750], -450, -450, Rational[
     28215, 32], -450, -450, -450, Rational[26801228, 30375], -450, Rational[
     858249601, 972000], -450, -450, -450, Rational[662701, 750], -450, -450, 
     Rational[859470961, 972000], Rational[
     215020, 243], -450, -450, -450, -450, Rational[
     10625761, 12000], -450, -450, Rational[53830621, 60750], Rational[
     861888961, 972000], -450, -450, -450, Rational[110916, 125], -450, -450, 
     Rational[6904565, 7776], -450, Rational[
     53978221, 60750], -450, -450, -450, -450, Rational[
     10669441, 12000], -450, Rational[27024668, 30375], -450, -450, Rational[
     865344721, 972000], -450, -450, -450, Rational[5345, 6], -450, -450, 
     Rational[866424481, 972000], -450, Rational[27092108, 30375], -450, -450,
      Rational[3569787, 4000], -450, -450, -450, Rational[54247261, 60750], 
     Rational[6947525, 7776], -450, -450, -450, Rational[335228, 375], -450, 
     Rational[869366641, 972000], -450, -450, -450, -450, Rational[
     54362941, 60750], -450, Rational[10743601, 12000], -450, -450, -450, 
     Rational[217660, 243], -450, Rational[
     871031521, 972000], -450, -450, -450, Rational[224127, 250], -450, 
     Rational[871762321, 972000], -450, Rational[
     27253148, 30375], -450, -450, -450, Rational[
     86165, 96], -450, -450, -450, Rational[54545101, 60750], -450, Rational[
     873003361, 972000], -450, -450, Rational[336908, 375], -450, Rational[
     873507841, 972000], -450, -450, -450, Rational[436865, 486], -450, 
     Rational[3596427, 4000], -450, -450, -450, -450, Rational[
     27316028, 30375], -450, Rational[874273201, 972000], -450, -450, 
     Rational[674701, 750], -450, -450, Rational[6996245, 7776], -450, 
     Rational[27332108, 30375], -450, -450, -450, -450, Rational[
     10798801, 12000], -450, Rational[54672301, 60750], -450, -450, -450, 
     Rational[874789201, 972000], -450, 900, -450, Rational[
     874789201, 972000], -450, -450, -450, -450, Rational[
     54672301, 60750], -450, -450, Rational[10798801, 12000], -450, -450, 
     Rational[27332108, 30375], -450, Rational[
     6996245, 7776], -450, -450, -450, Rational[674701, 750], Rational[
     874273201, 972000], -450, -450, -450, -450, Rational[27316028, 30375], 
     Rational[3596427, 4000], -450, -450, -450, -450, Rational[
     436865, 486], -450, Rational[873507841, 972000], -450, -450, Rational[
     336908, 375], -450, -450, Rational[873003361, 972000], -450, -450, -450, 
     Rational[54545101, 60750], -450, Rational[86165, 96], -450, -450, -450, 
     Rational[27253148, 30375], -450, -450, Rational[
     871762321, 972000], -450, -450, Rational[224127, 250], Rational[
     871031521, 972000], -450, -450, -450, Rational[217660, 243], -450, -450, 
     Rational[10743601, 12000], -450, -450, -450, Rational[
     54362941, 60750], -450, -450, Rational[869366641, 972000], Rational[
     335228, 375], -450, -450, -450, Rational[6947525, 7776], -450, Rational[
     54247261, 60750], -450, -450, -450, Rational[3569787, 4000], -450, 
     Rational[27092108, 30375], -450, -450, -450, Rational[
     866424481, 972000], -450, -450, Rational[5345, 6], -450, -450, -450, 
     Rational[865344721, 972000], -450, -450, Rational[27024668, 30375], 
     Rational[10669441, 12000], -450, -450, -450, Rational[
     53978221, 60750], -450, -450, -450, Rational[6904565, 7776], -450, -450, 
     Rational[110916, 125], -450, Rational[861888961, 972000], -450, -450, 
     Rational[53830621, 60750], -450, Rational[10625761, 12000], -450, -450, 
     Rational[215020, 243], -450, -450, -450, Rational[
     859470961, 972000], -450, -450, Rational[662701, 750], -450, -450, -450, 
     Rational[858249601, 972000], -450, -450, Rational[26801228, 30375], 
     Rational[28215, 32], -450, -450, -450, -450, Rational[
     53526541, 60750], -450, -450, Rational[855822481, 972000], Rational[
     329948, 375], -450, -450, -450, -450, Rational[854634001, 972000], 
     Rational[427025, 486], -450, -450, -450, Rational[10536721, 12000], -450,
      Rational[26653388, 30375], -450, -450, -450, -450, Rational[
     852353281, 972000], Rational[219087, 250], -450, -450, Rational[
     6810245, 7776], -450, -450, -450, Rational[26586428, 30375], -450, -450, 
     Rational[10497121, 12000], -450, -450, -450, Rational[53111581, 60750], 
     Rational[849322561, 972000], -450, -450, -450, -450, Rational[
     2620, 3], -450, Rational[848459041, 972000], -450, Rational[
     53003821, 60750], -450, -450, Rational[3488427, 4000], -450, -450, 
     Rational[26479388, 30375], -450, -450, Rational[
     6776165, 7776], -450, -450, -450, -450, Rational[653341, 750], Rational[
     846469921, 972000], -450, -450, -450, -450, Rational[
     26445068, 30375], -450, -450, Rational[10445041, 12000], Rational[
     422945, 486], -450, -450, -450, Rational[845768881, 972000], -450, -450, 
     Rational[108756, 125], -450, -450, Rational[
     845645041, 972000], -450, -450, -450, Rational[
     52852861, 60750], -450, -450, Rational[83525, 96], -450, -450, Rational[
     26430668, 30375], -450, Rational[845919841, 972000], -450, -450, -450, 
     Rational[652861, 750], Rational[
     846347281, 972000], -450, -450, -450, -450, Rational[211660, 243], 
     Rational[3485547, 4000], -450, -450, Rational[
     52962061, 60750], -450, -450, -450, Rational[847857121, 972000], -450, 
     Rational[327308, 375], -450, -450, -450, Rational[
     6791765, 7776], -450, -450, Rational[53101501, 60750], -450, -450, 
     Rational[10498081, 12000], -450, -450, -450, Rational[
     26597948, 30375], -450, Rational[851995441, 972000], -450, -450, 
     Rational[1755, 2], -450, -450, Rational[853940161, 972000], -450, 
     Rational[26719628, 30375], -450, -450, Rational[
     10570321, 12000], -450, -450, -450, -450, Rational[
     53590381, 60750], -450, Rational[6870245, 7776], -450, -450, -450, 
     Rational[331868, 375], -450, Rational[861712081, 972000], -450, Rational[
     53957101, 60750], -450, -450, Rational[3559707, 4000], -450, -450, -450, 
     Rational[216700, 243], -450, -450, -450, Rational[
     868689601, 972000], -450, -450, Rational[671821, 750], -450, Rational[
     872773681, 972000], -450, -450, -450, Rational[27342908, 30375], -450, 
     Rational[86645, 96], -450, -450, -450, Rational[
     54981181, 60750], -450, -450, Rational[882230401, 972000], -450, 
     Rational[113796, 125], -450, Rational[887643361, 972000], -450, -450, 
     Rational[445265, 486], -450, -450, -450, Rational[
     11031361, 12000], -450, -450, Rational[28021148, 30375], -450, -450, 
     Rational[899942161, 972000], -450, Rational[
     697021, 750], -450, -450, -450, -450, Rational[
     7254965, 7776], -450, -450, Rational[28454348, 30375], -450, -450, 
     Rational[3762747, 4000], -450, -450, Rational[
     57393661, 60750], -450, -450, Rational[922395121, 972000], -450, 
     Rational[2860, 3], -450, Rational[
     931036081, 972000], -450, -450, -450, -450, Rational[
     58474141, 60750], -450, Rational[11608561, 12000], -450, -450, -450, 
     Rational[29536268, 30375], -450, Rational[7601525, 7776], -450, Rational[
     245727, 250], -450, -450, Rational[
     960751441, 972000], -450, -450, -450, -450, Rational[30196508, 30375], 
     Rational[12000001, 12000], -450, -450, -450, -450, Rational[
     488945, 486], -450, -450, Rational[983961121, 972000], -450, -450, 
     Rational[382028, 375], -450, Rational[996659521, 972000], -450, Rational[
     62705821, 60750], -450, -450, -450, -450, Rational[33255, 32], Rational[
     31785788, 30375], -450, -450, -450, -450, Rational[
     1024370161, 972000], -450, Rational[796141, 750], -450, -450, -450, 
     Rational[1039434241, 972000], -450, Rational[261820, 243], -450, -450, 
     Rational[13028881, 12000], -450, -450, -450, Rational[
     66475981, 60750], -450, Rational[1072112401, 972000], -450, -450, -450, 
     Rational[138996, 125], -450, -450, Rational[8718245, 7776], Rational[
     68684941, 60750], -450, -450, -450, Rational[
     13683601, 12000], -450, -450, -450, Rational[34938188, 30375], -450, 
     Rational[1127913601, 972000], -450, Rational[7025, 6], -450}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.865410972119693*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"0e9f0a0b-0ef7-4950-ba32-4235a1eb3ed0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Normal", "@", "M"}]], "Input",
 CellChangeTimes->{{3.86541098885847*^9, 3.865411038501272*^9}, {
  3.865411672513266*^9, 3.8654117051444483`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"b3d4f08e-83e3-4ab9-9786-819c7c764fa5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "@", "M"}]], "Input",
 CellChangeTimes->{{3.865411911561184*^9, 3.865411917769059*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"0cc3aa39-babd-47f0-8efb-bd10071be00b"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt3XtwjWcewPGootmiqVgpVVSiaLWxYV2S8kMuiEuDCNGouBO3uF+KUBUq
WkQqLmsRSqWWkBJFtEUlSkVcIxIkcjvnvO8rQZGUdLuz3f3vmZ3Z2ZnOPv2+
M2c+58w5f5zz13fe9z2/53l1xJT+o6s6OTn1/vXxj+f/PEoFERFRZ0ekPvug
0VqHRPhuNL9aY0pNh+fYvmusf7+fN6/u3u552b++/tfx239vRETE/4WJWb7u
D3NMCXNPjLmVY0l+W9ct9UPuSmpK9d5dXzGkNDLEJ2Zagbg0vmd74vLdf+wm
IiLi/5OqDnaJWlnr+baGlC/yr/C6+ksHg94+XdQkXfn53/p3ICIi/jequmav
3fTH4EBDkoL+uPmL9oUyeOCj5QmNz9JBRETUSlXXPPJLD74Wbsi+MFtGvfhC
qdtnYJ2Otc/TQURE1EpV19ruHH922UxDjoW27/Xpg0IJTcnKvzLrAh1ERESt
VHWtm7ff3KgVhqS3TbsUEFQk86ql+827lUkHERFRK1VdG7ov6mzdLYZU1En2
DkwskroBGXc+6HqJDiIiolaqujalx4h1fZMN2dZv7NDUZ4rFOBLabvTmy3QQ
ERG1UtW1nvPmzmqTZohPdEKz1NBime819kHs/St0EBERtVLVtc2ODRfOZBsy
d+HMj0bvK5afaqx0m+d3jQ4iIqJWqrr2dMatTDfLkPZdfGMyq5ZIb/ey7A9X
Z9FBRETUSlXX4i9MThjzpikhrU6Wf/GSTRx9NldEZObQQURE1EpV1/6Stm1r
8nJTHrod6Z4+xy75YaU7R93Io4OIiKiVyuuifkOeDDllimPlkQteQxzSv+TV
AYebFdBBRETUSlXXXGvtHtyozJTIA7u+H1zVkOGxc6KScgvpICIiaqWqa/tz
7rcfVs+SuGk/vNlotSGRTYKvZ/UqpoOIiKiVqq6FbfC3FvpYYpb38R3T0JTF
DWcHHD1cQgcREVErVV0L2b3B1SPUkvudxu+fsNKUcXmdjr+cY6ODiIiolaqu
Rfv6b9k3y5JupeYIlyemzPqgdfyiSjsdRERErVTOTcy+3rnWQku+edFlT6Gb
JeV3d9UpCnDQQURE1EpV1x5mjjm8NNySz5oeeiPoc1MuDT6V+rkH54OIiKiX
qq5NHbBprdXNkt6rEnZGdTDlRrX0wswq3B9ERES9VHXt2OLotMBmlnxytUm/
qHRDnLcP37fwJnMTiIiol6queQ1LGVlR25J1D99KfHOGIbkNasS0qkoHERFR
L1VdMyb/7WjCY1NmHyr5+JvGhhxqkV4R27yIDiIiolaqurYnaaxPQL4pcWEN
3buedci00++fO9OLddUQEVEvVV0r6r2iSfFZUy5PnZyXMsshWw+8W714Cuts
IyKiXqq6djzuvXnLDpqy9dvQNa2aOiQi8tniyrV36CAiImqlqmvOz1xq2XKL
KSWhnr13/mCXxO4zC90P59NBRETUSlXXesQMbPHGalPsafdm/hxnl6PHZ5xK
96CDiIiol8r5wQEREy/PNeWph+3Kp13sUnKg0q9DT/ajR0REvVR1LXD7mdgl
I00Zv+TE1G6GTfLbbNmYN+k2HURERK1UdW2x/YJzfLApD9pX25qbbJPbb6wY
MerQLTqIiIhaqeragQbnlxzwNyUofGDd+PdtMulJWc3ta27SQURE1EpV1zIH
hA0NbmdKxvRNJ1LEJim3EhOfRuTSQURE1EpV11wn9X1p98umfNSgRle3syXy
TGj3zj223qCDiIiolaqutbzXuuiOsyl5o56tNXxBiXRoV+PitsnZdBAREbVS
1bX5ldtcq1UxZZ1/wsx1ISWS9efjMS9cvU4HERFRK1Vd8/7au/W3dUyx3s25
67GjRIIflx2uX4ProoiIqJeqrh29U3/4Rx6mfBBW+XZJWYlcHDh99/0OOXQQ
ERG1UtW1Dj3GLfLpbErrBbWzhw+zydoJBysKKvm/KCIi6qWqa6F5sfPr9zFl
daOUpFXxNgn5MCK9mTtz9IiIqJeqrjWuaPaSU5gpPVw3NryZYZOGC4Kef86D
ddUQEVEvletsT06db0WY8mPfdfd7PmeXem1nppw5RAcREVEvVV2ruX6G0WWx
KdF+nUK2h9ml4fQ25Z6x7DeBiIh6qepa4juDzPXxplz27Hzixf12cXY7eO/c
JPYfREREvVR1LS++3rX4nab4rGpU/ZjNLu99G13ZusodOoiIiFqp6tr6+Phd
D4+ZUjX7/Ft+nR1S4f+dzSWXDiIiol6qurYg4UpoyCVTVrku3pMR65CEjBNR
5YcL6CAiImqlqmtFy3tVOWgzZc3x+t6Dih2SlLb+2rW4QjqIiIhaqeraDd/6
S1ycLOmydcCdiz6GvBx2skt8ZBEdRERErVR17YWeN3NOvmKJ+9NNlbX2GDKx
fGnIkrhiOoiIiFqp6tpj7yDnOm0tyf1sm/8gJ1PqjQw98PWUEjqIiIhaqZwf
vD1498BAS56MXJg0J9gU+ycB4XGBNjqIiIhaqeqareUyT9tYS1b7Nl3uc8qU
oe2/2tF9kp0OIiKiVir3XVo2pP/EpZbE1d807Zs2lhwpPnQldJWDDiIiolaq
uvZgw/XSvlMs+XL19hjP26ZE1+1T6+lBzgcREVEvVV27OOV0cGo/Sz7e89Pd
6ZGm7GhefWPYWu4PIiKiXqq6Ft49ojS5lSXTA1y8FhUY0nHGjE8GNuf/ooiI
qJeqrl278XHflTUsqZbi5NlgsCFGTFmPZkeYo0dERL1Ude2t8fZOhdmmXGj8
h1eH7XOIf2ZkR9+qrKuGiIh6qerazz/FGm57TZn33uNo1+oOaTvsRU9bIPtN
ICKiXqq69sUPSUtHTzMlPSerW5SHXbbtav6ohRP70SMiol6qunY7f2W/8keG
bHlc+G4NzxLZEOsVPsf7Oh1EREStVHVtwKSrO3MLDGm8d9v82TeK5fXagyZn
lF2jg4iIqJWqrlUmLm+yMNOQ4WM65B6PLpbj5e7B8Tuu0kFERNRKVdcKhvY/
ejnVkLFTnb1Oti6Wx1W7fjau/xU6iIiIWqlcZ3tuy7dv7DZk2KDTPuOvF0mj
cfZ2WRWX6CAiImqlqmtXPHq1jvnUkF1Z09LiFhWJl1XaePbmi3QQERG1UtW1
/od8zNxFhpw3R+1t8VqRFNu/OnyxYyYdRERErVReF005vfrcBENWpPldrf59
obSKWtjO9tcMOoiIiFqp6tpzhZVOQSGGpJ2v+SeXiYWS8GWjgO+OnqODiIio
lcq5idc7G+FdDNm4wznVo2ah7J2wMbvTmTN0EBERtVLVtSefNzvzqKUhgU2z
P3RPLJAeyeH73zl9mg4iIuLvwrpJm6/WdP2lg6FTttj9C2RPsvPzpftP0kFE
RPxd+3emdUBO
   "], {{0, 0}, {76, 76}}, {0, 1}],
  BaseStyle->{FontFamily -> "Arial"},
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{75.87375415282392, 
       FormBox["1", TraditionalForm]}, {50.87707641196013, 
       FormBox["100", TraditionalForm]}, {25.627906976744185`, 
       FormBox["200", TraditionalForm]}, {0.12624584717607973`, 
       FormBox["301", TraditionalForm]}}, {{75.87375415282392, 
       FormBox["1", TraditionalForm]}, {50.87707641196013, 
       FormBox["100", TraditionalForm]}, {25.627906976744185`, 
       FormBox["200", TraditionalForm]}, {0.12624584717607973`, 
       FormBox["301", TraditionalForm]}}}, {{{0.12624584717607973`, 
       FormBox["1", TraditionalForm]}, {25.122923588039868`, 
       FormBox["100", TraditionalForm]}, {50.372093023255815`, 
       FormBox["200", TraditionalForm]}, {75.87375415282392, 
       FormBox["301", TraditionalForm]}}, {{0.12624584717607973`, 
       FormBox["1", TraditionalForm]}, {25.122923588039868`, 
       FormBox["100", TraditionalForm]}, {50.372093023255815`, 
       FormBox["200", TraditionalForm]}, {75.87375415282392, 
       FormBox["301", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.865411918422111*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"06a35b70-f6c3-460a-bc4c-039df8c5a5ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Table"}]], "Input",
 CellChangeTimes->{{3.865411937447259*^9, 3.8654119412092333`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"76c329db-f2fc-4a65-a639-2faf7668b4d1"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{17., {5., 12.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{17., {5., 12.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Table",
              ButtonNote->"paclet:ref/Table"],
             "\"paclet:ref/Table\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) copies of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a list of the values of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) when \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) runs from 1 to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\
\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives a nested list. The list \
associated with \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) is \
outermost.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Table", 
                    "paclet:ref/Table", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Table.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Table.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "HoldAll", ",", "Protected", ",", "ReadProtected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Table\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{13., {4., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Table",
              ButtonNote->"paclet:ref/Table"],
             "\"paclet:ref/Table\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) copies of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a list of the values of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) when \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) runs from 1 to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\
\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives a nested list. The list \
associated with \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) is \
outermost.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {5., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {5., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) generates a list of \
\!\(\*StyleBox[\"n\", \"TI\"]\) copies of \!\(\*StyleBox[\"expr\", \"TI\"]\). \
\n\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}]}], \"]\"}]\) generates \
a list of the values of \!\(\*StyleBox[\"expr\", \"TI\"]\) when \
\!\(\*StyleBox[\"i\", \"TI\"]\) runs from 1 to \
\!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]\). \n\
\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) starts with \!\(\*RowBox[{StyleBox[\"i\", \"TI\"], \
\"=\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]]}]\). \
\n\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]], \",\", \
StyleBox[\"di\", \"TI\"]}], \"}\"}]}], \"]\"}]\) uses steps \
\!\(\*StyleBox[\"di\", \"TI\"]\). \n\!\(\*RowBox[{\"Table\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"}\"}]}], \"]\"}]\) uses the \
successive values \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]\), \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]\), \[Ellipsis].\n\!\(\*RowBox[{\"Table\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"j\", \"TI\"], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"]\"}]\) gives a nested list. The list associated with \
\!\(\*StyleBox[\"i\", \"TI\"]\) is outermost.", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Table", "Web" -> 
      "http://reference.wolfram.com/language/ref/Table.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {HoldAll, Protected, ReadProtected}, 
    "FullName" -> "System`Table"], False]]], "Output",
 CellChangeTimes->{3.865411941782308*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"0746842f-bd0d-44eb-9576-0e0fb6cc8975"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"N", "@", "M"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865412253134474*^9, 3.865412259019137*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"6ff8a7a2-17c7-4fcf-97fe-f99ac7fda90b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "@", 
   RowBox[{"M", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", "10"}], ",", 
      RowBox[{"1", ";;", "10"}]}], "]"}], "]"}]}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.865412194256069*^9, 3.865412215805976*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"a6974c51-32db-40ac-9ef1-21d6b85569eb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1170.8333333333333`", 
      RowBox[{"-", "450.`"}], "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`",
       "0.`"},
     {
      RowBox[{"-", "450.`"}], "1160.4049393004116`", 
      RowBox[{"-", "450.`"}], "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", 
      RowBox[{"-", "450.`"}], "1150.2284115226337`", 
      RowBox[{"-", "450.`"}], "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", 
      RowBox[{"-", "450.`"}], "1140.3000833333333`", 
      RowBox[{"-", "450.`"}], "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", 
      RowBox[{"-", "450.`"}], "1130.6163127572017`", 
      RowBox[{"-", "450.`"}], "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "450.`"}], "1121.173482510288`", 
      RowBox[{"-", "450.`"}], "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "450.`"}], "1111.968`", 
      RowBox[{"-", "450.`"}], "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "450.`"}], "1102.996297325103`", 
      RowBox[{"-", "450.`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "450.`"}], "1094.25483127572`", 
      RowBox[{"-", "450.`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "450.`"}], "1085.7400833333334`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8654122160165777`*^9, 3.865412261882722*^9},
 CellLabel->
  "Out[36]//MatrixForm=",ExpressionUUID->"deb15908-d167-43de-bb34-\
566508e1d9f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigensystem", "@", "M"}]], "Input",
 CellChangeTimes->{{3.865412264865131*^9, 3.865412289485654*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"8f72bd82-041b-4a66-800a-c0849dd7a2d0"],

Cell[BoxData[
 TemplateBox[{
  "Eigensystem", "arh", 
   "\"Because finding \\!\\(\\*RowBox[{\\\"301\\\"}]\\) out of the \
\\!\\(\\*RowBox[{\\\"301\\\"}]\\) eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\\!\\(\\*RowBox[{\\\"Eigensystem\\\"}]\\).\"", 2, 39, 4, 29175677562456745665,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8654122897707977`*^9},
 CellLabel->
  "During evaluation of \
In[39]:=",ExpressionUUID->"16d65af2-931b-4036-8780-955e2106b706"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "1998.7642216689314`", ",", "1998.7642216689298`", ",", 
             "1943.2998407533787`", ",", "1943.2998407533776`", ",", 
             "1902.1589319605814`", ",", "1902.1589319605812`", ",", 
             "1869.1391194031476`", ",", "1869.139119403147`", ",", 
             "1841.8504961207877`", ",", "1841.850496120787`", ",", 
             "1819.093676491505`", ",", "1819.0936764915048`", ",", 
             TemplateBox[{"277"},
              "OutputSizeLimit`Skeleton"], ",", "14.71740950748152`", ",", 
             "11.848769882575276`", ",", 
             RowBox[{"-", "9.721425767100031`"}], ",", 
             RowBox[{"-", "9.71999604686584`"}], ",", "9.115620524363898`", 
             ",", "6.549937521300663`", ",", 
             RowBox[{"-", "4.854375596523717`"}], ",", 
             RowBox[{"-", "4.807379245173202`"}], ",", "4.108329566470591`", 
             ",", "2.1406396672877896`", ",", 
             RowBox[{"-", "0.9957422165408012`"}], ",", 
             RowBox[{"-", "0.3539023817649394`"}]}], "}"}], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{80., {3., 10.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{72., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{60., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 39, 29175677562456745665, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{81., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 39, 29175677562456745665, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{61., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 39, 29175677562456745665, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{110., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[29175677562456745665 === $SessionID, 
   Out[39], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{{3.86541227459309*^9, 3.865412289901215*^9}},
 CellLabel->"Out[39]=",ExpressionUUID->"a63563f1-793b-4902-8a1c-18ab1099276d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigensystem", "@", "M"}], "//", "Quiet"}]], "Input",
 CellChangeTimes->{{3.8654122950672197`*^9, 3.865412296203314*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"11853a59-d1dc-43f6-b45c-aef4ecc13ba4"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "1998.7642216689314`", ",", "1998.7642216689298`", ",", 
             "1943.2998407533787`", ",", "1943.2998407533776`", ",", 
             "1902.1589319605814`", ",", "1902.1589319605812`", ",", 
             "1869.1391194031476`", ",", "1869.139119403147`", ",", 
             "1841.8504961207877`", ",", "1841.850496120787`", ",", 
             "1819.093676491505`", ",", "1819.0936764915048`", ",", 
             TemplateBox[{"277"},
              "OutputSizeLimit`Skeleton"], ",", "14.71740950748152`", ",", 
             "11.848769882575276`", ",", 
             RowBox[{"-", "9.721425767100031`"}], ",", 
             RowBox[{"-", "9.71999604686584`"}], ",", "9.115620524363898`", 
             ",", "6.549937521300663`", ",", 
             RowBox[{"-", "4.854375596523717`"}], ",", 
             RowBox[{"-", "4.807379245173202`"}], ",", "4.108329566470591`", 
             ",", "2.1406396672877896`", ",", 
             RowBox[{"-", "0.9957422165408012`"}], ",", 
             RowBox[{"-", "0.3539023817649394`"}]}], "}"}], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{80., {3., 10.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{72., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 40, 29175677562456745665, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{81., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{68., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 40, 29175677562456745665, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{61., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 40, 29175677562456745665, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{110., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[29175677562456745665 === $SessionID, 
   Out[40], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.865412296653784*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"3fc5f5ee-ecfc-45bb-9137-85e630661f1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigensystem", "@", 
  RowBox[{"N", "@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "7", ",", "7"}], "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.865412389761079*^9, 3.865412418220572*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"24f362c1-d071-419c-9d81-4c198b1c6a91"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"12.312667197394042`", ",", 
     RowBox[{"-", "1.1743485119280541`"}], ",", 
     RowBox[{"-", "0.13831868546599077`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.30168894649407996`"}], ",", 
       RowBox[{"-", "0.43023428096257266`"}], ",", 
       RowBox[{"-", "0.8508126956316003`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.6183514099052272`"}], ",", 
       RowBox[{"-", "0.3687642318161288`"}], ",", "0.6940133105361007`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6841086344845656`", ",", 
       RowBox[{"-", "0.6994685356782576`"}], ",", "0.20673447661136996`"}], 
      "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.865412419377438*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"29e9faab-2f84-45f7-bd86-8e9a7a92e568"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.865412483077238*^9, 3.865412513711831*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"f2f687d0-6dc5-481e-8307-156eb0ad8ff0"],

Cell[BoxData[
 TemplateBox[{
  "Eigensystem", "arh", 
   "\"Because finding \\!\\(\\*RowBox[{\\\"301\\\"}]\\) out of the \
\\!\\(\\*RowBox[{\\\"301\\\"}]\\) eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\\!\\(\\*RowBox[{\\\"Eigensystem\\\"}]\\).\"", 2, 43, 6, 29175677562456745665,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8654124999101963`*^9, 3.865412513984161*^9}},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"e6e95fea-5acf-49ff-9355-51a7abf5bbe3"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
    AbsoluteThickness[1.6], 
    StyleBox[PointBox[CompressedData["
1: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
ene++/6u/0vajRYBe++e/x8xspUr
      "]],
     FontFamily->"Arial"]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 301.}, {-26.882046320609618`, 1998.7642216689314`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.865412499919272*^9, 3.865412516583048*^9}},
 CellLabel->"Out[43]=",ExpressionUUID->"615fef30-1c80-40bf-8c13-d31916fbc5ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigensystem", "@", 
   RowBox[{"N", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "7", ",", "7"}], "}"}]}], "}"}]}]}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.86541256071725*^9, 3.865412562240283*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"8c752b01-e5d1-4518-aff0-0968faea1cb7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"12.312667197394042`", 
      RowBox[{"-", "1.1743485119280541`"}], 
      RowBox[{"-", "0.13831868546599077`"}]},
     {
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.30168894649407996`"}], ",", 
        RowBox[{"-", "0.43023428096257266`"}], ",", 
        RowBox[{"-", "0.8508126956316003`"}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.6183514099052272`"}], ",", 
        RowBox[{"-", "0.3687642318161288`"}], ",", "0.6940133105361007`"}], 
       "}"}], 
      RowBox[{"{", 
       RowBox[{"0.6841086344845656`", ",", 
        RowBox[{"-", "0.6994685356782576`"}], ",", "0.20673447661136996`"}], 
       "}"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8654125625385427`*^9},
 CellLabel->
  "Out[44]//MatrixForm=",ExpressionUUID->"b3352c91-67ae-4843-810a-\
8f57c775f265"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Eigensystem", "@", 
      RowBox[{"N", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "7", ",", "7"}], "}"}]}], "}"}]}]}], "//", 
     "Transpose"}], "//", "Sort"}], "//", "Transpose"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.865412586701577*^9, 3.8654126305282307`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"430752d7-cd82-453e-aca5-30511ff0a1b7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1.1743485119280541`"}], 
      RowBox[{"-", "0.13831868546599077`"}], "12.312667197394042`"},
     {
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.6183514099052272`"}], ",", 
        RowBox[{"-", "0.3687642318161288`"}], ",", "0.6940133105361007`"}], 
       "}"}], 
      RowBox[{"{", 
       RowBox[{"0.6841086344845656`", ",", 
        RowBox[{"-", "0.6994685356782576`"}], ",", "0.20673447661136996`"}], 
       "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.30168894649407996`"}], ",", 
        RowBox[{"-", "0.43023428096257266`"}], ",", 
        RowBox[{"-", "0.8508126956316003`"}]}], "}"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.865412588455915*^9, 3.865412630786564*^9}},
 CellLabel->
  "Out[47]//MatrixForm=",ExpressionUUID->"af656295-8750-433e-9f81-\
dac432cbb33a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"es", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Eigensystem", "[", "M", "]"}], "//", "Transpose"}], "//", 
       "Sort"}], "//", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "10"}], "]"}], "]"}], "&"}]}], "//", 
     "Transpose"}], "//", "Quiet"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8654126511839027`*^9, 3.865412781502482*^9}, {
  3.8654130006882668`*^9, 3.8654130019843073`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"37bf3c39-675f-4a09-ba90-a15416969ae3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"es", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.865412786037085*^9, 3.8654127893742847`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"f5b9be00-da19-41d6-947b-cbc000f4b409"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "26.882046320609618`"}], ",", 
   RowBox[{"-", "26.882046319707644`"}], ",", 
   RowBox[{"-", "20.83137961517433`"}], ",", 
   RowBox[{"-", "20.831379388906182`"}], ",", 
   RowBox[{"-", "15.091022367638853`"}], ",", 
   RowBox[{"-", "15.090998036254598`"}], ",", 
   RowBox[{"-", "9.721425767100031`"}], ",", 
   RowBox[{"-", "9.71999604686584`"}], ",", 
   RowBox[{"-", "4.854375596523717`"}], ",", 
   RowBox[{"-", "4.807379245173202`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.86541279010159*^9, 3.865413005931826*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"3654fb88-7976-4822-bb42-5cd0f2696612"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"es", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.8654130245163794`*^9, 3.865413030691194*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"72108f34-ac17-4ad9-88ca-71d2ae34d3bc"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    StyleBox[
     PointBox[{{1., -26.882046320609618`}, {2., -26.882046319707644`}, {
      3., -20.83137961517433}, {4., -20.831379388906182`}, {
      5., -15.091022367638853`}, {6., -15.090998036254598`}, {
      7., -9.721425767100031}, {8., -9.71999604686584}, {
      9., -4.854375596523717}, {10., -4.807379245173202}}],
     FontFamily->"Arial"]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10.}, {-26.882046320609618`, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.865413030866146*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"b0d5b3b8-0538-4c74-8f29-e62f3e9e6eee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"es", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}], "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.865412791683913*^9, 3.8654127939664297`*^9}, {
  3.865412865184679*^9, 3.865412871505904*^9}, {3.865412953746071*^9, 
  3.865412957343277*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"d02931d3-10ab-4072-b70c-c11133a73bc9"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
    AbsoluteThickness[1.6], 
    StyleBox[PointBox[CompressedData["
1:eJw9WHlczPkfnq4NoVzrCE1lS3Kk3JUeJWfSfTDVNB1TTTWHVYswsZYcK1ms
axtHIsnRoRLGlbUoazd22c2gbJeryL1++3v1ftc/vZ6enu9n5vv5fN7v53lb
SuR+MfoCgWCUnkDw/98dPy/cyrfap+7NdnalP8An5LSrPNKPcBdEfLkpecX1
aMJmSBHodK67Ugj3heSg202LIesID4AiMShdK9pJeDDeuyS7f/TLIyyEX0tD
ndvbcsJW2Now0OPTjOuEh6Hrqn+iCl3uE7bB+vJ9fs73mggPh6flsfyz1u8J
j0C/a2tXy4Rdp3bgkfhC8q3Y+F5/wqMRWfNz1hyRDWEH5P/YJ2pc0TjCY1H2
w9Advs/dCTtiqbrXpG7mvoSd0G+VYYHBunDC43Bgedsh2+YEwuNRtSQ397Eq
lfAEqB4NdKwa/S3hiXgX4WCsHrGF8CSsPzHQefb9PYQnY1R2+430t7mEp0Dw
/ki6Z0EhYWf8GN2szHt5nrALvn9yKmuN5hphV8j7yOon+/9OeCqyenxOsNA9
IOwGt6MWTrdKGggDrfmJAwtaWzuwGlh1w3vwhjMfiZ+GzdftrHI3GLl18NPQ
zXrJobLXph1Y4A7lLqO2dar+xLsjYr3rG5WhJfEe+LlvlsxCMZx4D2im6N/P
FI0lfjrs3VKn6eImET8d/z6r6WP+AcR7YsZV697XI2cS74lZ5wWNv/49n/gZ
qDFvHLJlRSDxM/B4egnii0TEz8Qx03eHL7+TED8Td6rabva+G0f8LOx29P9D
MlBB/CyUblojD8n7mvjZsNrr/ybdcynxs3HkpqbWdb2a+DlY1ej7esq+b4mf
g9pH3V+lLc8gfi4Wn7Hb4TRuM/FzUaP5NmVDSxbxXmirx6mic9uJ94L/e3nO
ov67iZ+HdY88Vwd/yCZ+Ht4+LXhiUrKfeG/M2+s73KQoh3hvvP33dsu7V4eJ
nw/DtKgLFl/nEz8fz6aZtfv2O0G8D3Ztmdt+2fhUB4YPJjy82OWRSRH9vw/6
WtnuHm1e0oG1PtiybNl50ehS0vvC+bsD81Jcy0nvC73G36S9UEF6XxT8rkrY
OOoc6X1R1Zx92/vTedL7Qc9yuM13v2lJ74fdbuFfr95ygfR+yLG6d9Zm/EXS
+8FnYmDOkjOEBf6oHPp8poXVJdL7I3XK3IYYKWG1Pz6uM5jvt56w1h95+yan
H2QsCMCy+vorNXGsD4DCSDXTzIb1ATgtbmgWXub1A3Cu2HZqtCevH4hs8d+q
4/n0eREIv8a9pyZ8ou+jDkSs4fla5RTC2kBE6h/W179F70MQBJt5cmPrPmdJ
H4T2nZPmrPc8Q/ogtEx/8WlCchnpg2BYfin27NbTpA/GmkdYYFtRTPpgHPnk
NPevlkLSB6PiRmZj5gjaX20wAuUe3aYu4f0PwY0C2/UupcdIH4I9PzkbRB3N
I30IDHp+Z7ahOpf0IdDOO+JgZEvnTRCK/fpGgvZTdB4RisDFGxYvWaQhfSge
7P+1OLN6D+lDcavpiysVg3eSfgEqaxrfTP1lG+kX4NLQ+G3tt+l+qBegqfjd
DfOxmaRfgK8q7058XbGB9AthYltzzuvIWtIvRJcPHmvnDuL7uBBN720cRhuk
k34h+s/7QjT+eBrpRXhqVZyxs/83pBdhcX7b4kQ7uv9qEWrUs9OG36L6oBXB
xHSTxbOXMtKHoeLIAKdFX0lJH4bnyY1XTQZHkT4MT66leEZ9HUH6MMz6YCoy
rg4lfThKtntt+2oI1S+Ew+iXiACfyb6kD8e97Un6ll94kT4cNyuzjX+rmEH6
CFRp3weci3UnfQRKB2SE6pW4kj4CzncDqx8+nUj6CDx+NNHj4BQn0otR8pPT
Gsmd0R1YKEaalbOb4TGq1xDjY1xaxj9F1h1YLIZNmvJAa4IFPV+Mpj/bdpkK
BnZgjRgGm2Q9RX/1ofXE6LsyPfHvdOoXOjF6yCyMal51ofUjMSi7wsH4nAGt
H4nKiyd/nuv0uaP/IBID9scMKt/3tgOLI/Fw+Jodrclt1K8icSZvovGvuc86
sCYSY7ck54aNof6mjcTvO5Y80gx83IF1kch5Y/B+s0st9TcJUqPOvRvc5Y8O
LJTg9pLMK5edf6P1JfC53tcixqqa1pcg73La2qUHqd+qJUhQhDQNzb9C60tQ
v7/4avuni7S+BNNs9WdeUV6g9SWoKjOxmPpCS+tHQbHlzTEt88IoiNYFz3/K
ekThaJqZvhk/XxwFt3o7r5jO9aPgZDLCexZ/Pk0UUlJcS0/y59dGoW7p6uGG
/P10UXhdIngp7/z+0Ygfmem/kd+PMBo3to0I9+D3h2goAnqtOs7vVxyNMv9w
j7873380HGfl6GXz/mii4dZ7Ubwd7582GhXtrbKXZ2l/df89//PWtLLO/Y9B
3x4HDpXz+RDGYFX4H5Yz+PwgBl3q9fRefR5A5y8Gy3KetFZ3nr8Y+NTVVf7K
51MTg5zZZZ8b8un8amOw9mlhKvh86/7jB7sYb+48/7GoVGVJrvL9EMZi+hHn
9bpiuj+IhZ1+nX4e3y9xLCbb5TaX8f1Tx6Jl1AdTfb6fmlhUCCznu/L91cbi
QGbw9J58v3WxsNe7d7+piu+/FK+6CjPA9UEoRYRH1rF2c6ofkGLx6O8PhHJ9
EUuxY5XEo5rrj1qKtLe2zf24PmmkWN1o6RjE9UsrRdjWC89WcH3TSTG+pKag
X2f9i8PzQcdizbk+CuOw1cA2YDzXT8She+HxvY5cX8VxmOQycvsdrr/qOGTU
LWvuyvVZE4ezPSuvP+T6rY3DmPxf/rHh+q6LQ172qa77Out/PKTf1dcpuD8I
4xGivTRHyv0D8bAaVBb6kPuLOB5PDv3y+1Mb9jvx2Pl52BUF9ydNPLT7jm72
5P6ljUe3jDml5tzfdPFIHzrkT/vO/peARue6P9O4PwoTcHSZx5xK7p9IQMLB
k6Gm3F/FCcjwTgo7wP1XnYDHH/c1DOL+rEmA0/3EkYncv7UJMFXVNetzf9cl
wFxx58ODau7/Mgy7+bI1gv2BUAajqvLn1uwfIMOGS07PdrO/EMvg/819Mx/2
H2oZ3AblOnZnf6KR4bBtN6sPX7HfkWF12oUgLfsbnQwxhedbvu/0P4loiqgr
d2EsTMTGnmeX+rB/QiIy1Q9turG/EidCM3f/62j2X+pEpPRevr83+zNNIjCp
pIeC/Zs2EVF3vbcsYn+nS0TYiT4r7Tv9XxJWWnbtL2N/KExCrX7E+FY38o9I
wqScVP9Q9pfiJCSWRJu4s/9UJyHBKHfsl+xPNUl4PSGz/jr7V20SNtp273GS
/a0uCat83f8Lcbz/ycgapgoUsD8WJmOTtzSslv0zkmFvfdqhrZDOmzgZytL3
Lm+K6Tyqk9GUUj92HPtzTTLW7MkoD2T/rk1Gyr/2P+xmf69LxoCN+zJTOv2/
HK+MCy17cT4QypF9TXdTzPkBcniPcRw1jPOFWI7LxUW77Dl/qOXYMNnzVTTn
E40cWS8C9k7j/KKVw/2GcS9fzjc6OfZc2BTx5g7nHwWK8pYVHed8ZKbAytLK
TbM5PwkVWFEoilzC+cpBgT88p5QWcP6CAvqLXrud5Hzmo4BxxQz/LpzfxAqI
ki96XeF8p1AgovB2wXLOf2oFDLf/lWzI+TBTgcNtopFizo8aBVwCFvSUc748
ocC7zV4Lt3P+1CpQ22IXvJnz6S0FPJ6viJRxftUpYGlxaeROzrcv/nv+idCG
os78q0T3H45N/PiA8rGZEiMT5IusOT8LlYg4dMcznvO1gxLXEqfYr+X8DSVq
9t69MobzuY8Slc9DAqSc38VKRPd0CbPjfK9QYtxPc3oncf5XK7F8RVDDaZ4P
ZCpxr8uPF6/x/ECjxEr9ty1deb5wQgn3S4XtD9fS/EGrhFvs1IA3g2g+cUsJ
My/7AheeX+iUqNZ+XjOE5xsvlLDsL3k4tnP+oYK53uauT/+k+YiZCvYxVpfn
8/xEqELwmYYqDc9XHFSYtDzo6BCev0CF2qLa+dt4PuOjwvPlRdYPeH4jVuHQ
mtTBVjzfUajgdGi5wwOe/6hVGNLms/Igz4cyVZBaO4404vmRRoXLB02bh/F8
6YQKDbMvpEp5/qRVIR+LXi7g+dQtFUQ+/7xeke3s+j9BypBV
      "]],
     FontFamily->"Arial"]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 301.}, {0, 0.15266853627987348`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8654127941944323`*^9, 3.865412872232629*^9, {3.865412954464182*^9, 
   3.865412957847583*^9}, 3.865413007583696*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"ec14b647-e226-4ebf-9f23-c2861ca8602f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"es", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "4"}], "]"}], "]"}], "//", "Norm"}]], "Input",
 CellChangeTimes->{{3.8654133866944933`*^9, 3.8654133942124434`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"88e9d9e2-3ba7-430b-91f6-208fd45df5fc"],

Cell[BoxData["1.0000000000000004`"], "Output",
 CellChangeTimes->{3.865413394386067*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"f60cd86b-052f-4702-96ca-6dd2cb334a60"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotWF", "=", 
   RowBox[{
    RowBox[{"Table", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["L", "2"]}], ",", 
           FractionBox["L", "2"], ",", "\[Delta]x"}], "]"}], ",", 
         RowBox[{
          RowBox[{"es", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "j"}], "]"}], "]"}], "+", 
          RowBox[{
           FractionBox["1", 
            SqrtBox["\[Delta]x"]], 
           RowBox[{"es", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "j"}], "]"}], "]"}]}]}]}], "}"}], 
       "\[Transpose]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "]"}], "//", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Joined", "->", "True"}]}], "]"}], "&"}]}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.865412878996447*^9, {3.865413125776569*^9, 3.865413311601396*^9}, {
   3.865413343380562*^9, 3.865413359473984*^9}, {3.865413481861712*^9, 
   3.865413519394951*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"ebfdaadd-5a6a-4fb9-b4ec-879667febd92"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"PlotV", ",", "PlotWF", ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8654135551785583`*^9, 3.865413576866531*^9}, {
  3.865413626021346*^9, 3.865413632082696*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"7df8d0c8-a731-4633-bc62-49df85208f14"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJw1mnlUTd///++9597bqIGQ8V0qEprn7nFONKCkokFEhkKkVJJKk6RBgwrN
qCQKjabSfjVo0lySpEkTKZpoUt/zWev3++ec9Vhn2Gc/X8/92vu11xE/6Whq
y6DRaHbU4X/nPVdafi4t8cHr0kjlR/ZMUtvjP4v4eT6Qnh/YcFMGIzWvnS9R
/ssHjWtUjtiM0Mnt17G758b4gDSKLBrrXiSEIpSIlk4++J26t9SKZ5poT4++
nf6GD2jmGqv5rxUSZ9sOqu53ofipsv8PoEOwSqtP/CAvTFkOrP24YS2sFwji
tPXygtCGc52WmWvh+aDWrPBXXmgP3ZNlqb4OWu+lOge3UNdDnazqjNeD2Jyz
rTtQz1uESt323Agvi4UNzON5Qe9cwNLho+LQp39g1XIjXthjb3HF/ZwUXBbD
Wvbv5YUf5S6jChlSwD37MiJYhxd+7/YYyxqUgh1PN/LQtXjB1Pk8bfjkZnDn
H5v/tYUXumJqL1y23AICTbd66+i8IG3gmMxS3wpaVjVZwQU84H4lf0VR9XaY
eNWltyqHBzo+Gy+p/tsOT1dO9qRk8YDs0WWu3vI7YE3TupVFqTzgNGpu4nJ3
B/zVd7g2dpsHuHvsdP8el4U8FSGjgxd5YGK80NLzuxxsEzb/tX4LD9gJhVUE
nleAvov2wU828YDmoNnKTf4KEF/rLaG6kQfeOlexH8UqAE/QY4sDK3lAJWB0
4cR7BRhanEF+GA8E8T44/WaDIqT+TIgc7OaGPPmH4UPVirCuqlchO5Yb7moZ
G98SUgZXp+dSB2O4wSWs9nC9hDLUinqu+RPBDQ2mctpzqsrgfU6EzrlJ3S99
o0nQWhl6ePUbKy9zQ7jrGkGlDGVI2591sduUG+z2mzw7qakCsi1umQLLuEG2
/3JMppEqBHruvp/DzQ0+NLMgznFV6JYQij7E5AZ3vZQ7rx1VIdL1iUf8PBfc
euYn4RypChMrO/du/sEFIVbV6382qsIrS+1hvJIL7vRaYkwjNSC7+KQc/LjA
XNRJkUtDHRSPkudzvLjgUE1MIL5HHaQ6XHOmr3AB18nk50ct1IG37SvufZEL
aBcXn5pdVoeWuhfmEUe4IGaoMEMpWx3s3h0MylHhgh+il4yeimtAaGLCyPR3
NqRM4K5tkxrgvbZRQXOADc7lB1J30jTBKZbp7t3DhpwPoZtv82vCoRgHJtcn
NuweG7ScltSEjbeIDaLlbFjrePx14SFNyPb8ZqSZzIbh6X95+7I1oc1qW663
KRv+hZx7WmahBaPW8HGFERt8rFSjBm20gHnCbDZjLxtKn13o/ntOCxTP+JAt
JBsWSpIaBjy1INylpX6LHBti82yW/U7WAv1bniONfGy461slU9GrBccihATt
uKj2n5AfWr5rgVvUI8V5BhuyFOztGse1IC224arUHAv69Ppy7tI5QHskwe0x
zIKUJNcHlmIceP3ug6TEexakCl4de2PFgQaw2fMaWCDiKx1eeIIDg2XT5/cX
scBbcbow6ywHRGr+y7uSxwLnXb6D1m4cuNTmol37kAUVyjJXFiI5IPNr3bHL
3izwKl/vo1jGAe2JbD9eDxbwvm/QU6jmgOW07qP7l1kg8EtOVqyBA4Hzjj+r
L7CAnb7Wt76DA31c5R4bj7DAqUFqx8VxDiSIXbhXqcaCaGQVUrIOB8PZs8sW
FVlQGjJ6RkEch4Um2+vKsiy4F1izN2IzDseuH3d8KMmC37FV+isVcNg0aKrv
KcyCIH1+ewNdHFqKD7zL4WfBh6caj7fvwyHgnqHSMBcLOCkauxeMcBjYo/ef
2SITNN+Xl9tZ4pCRqfFXdoQJMf60rfb2OBwOUHWwHWTCvHjdPXQRB15rpW8J
vUwovmuMMBccLgjsaOBuZ0KNHW5r6YmD3CWxx33lTChqOKurHIrDS1Uui7vJ
TEiZcRCBxzicEWTW1cYx4V0OYw87EwfRYdpu7A4T4o/IDGo9x8Ejbk7WKZQJ
Ge8PhF/OxwFfGGXvc2fCLQX5UgnAYaz1h5evCxP6UzK9B0txSH42NPHyIhNk
u3P+xb7HgXa8t0vClgn+I1sd62pwKC9pffnPhAmn11SaXG7F4XJ803bl/Uww
S3xy6FUbDptd6lPs9zBhZYr9pe/tONyUrAr/tJMJry3okhu/4qD+r5wpoMkE
CbmwBrFuHIY/lnjoqDDBvv0UrOjFYd/NQrucbUx48UY7qaYfh/njrzuHNjPh
R8yP5PBBHLLUC0w3bmLC1SBx4d3DOAj8eL4zVJQJm6ttnK+N4IBKM/NLVjBB
QeWPGzaKg1NChsyMABPc/iqt9hjDockwZZUtiwlJgelmGuNUfJ0sBnNoTFAf
e7DDawIH12j+l4vzGPjn9lhmT1J6driZxU5gEHfnddPPaRzs/22TGhjFoKo3
XGn6Dw5FYr1TCt8xuDCwWfjXXxxszhjEfOjGIER98cyrWRxyQ2inRb9gMPzo
7PSNORyYzwuUbNsw8GWPbNabx8G8yR7LbcLg4lQMe4bijKn/WhZrMfjy2CU5
YQGHudUfUwyqMGD8vT0j/4/yr1aIc2wZBjvMZza+pjj5GLFroBiD15+y1iks
4vDbb0pY8S0GfNvzZhIo3vXoSa93AQYpD/lhhuKYqmM5H7IxYEm99tRfwmFw
ZIWfaBYGLWSuShDF6oLVxraPMcjfMP33LcUhit5iuSkYnPZ3r+2muNNM6fdi
EgbZLQrv/lAse3UYGcRh4CQi0rpEsU9iUkRsDAaRA4Lr5iluRKbHByIw4A9c
kThM8aZvXHKKoRj8buY9UUWxK/vdoncgBhb63S7xFFdsda7/4IeBw8KVrmMU
i+7fkix6jdL3yZunKym2d+p0sHXH4FFqYF8x1Z+i6Nt4rgsGjl3FEVYUC7zS
W7Z0EQP1EaJomNLHpmO+08AeA6/Z/kvnKM79l50Va0vFry3wbSelL1PczmvA
htJvbP7+LorNddYZKh7FYGaf6PaE/8XjTOM6HwsMdKKfnR2k4jcXcmPkgykG
55eFHpekOLnpV4jtXgxqqXzvPkPpP5VmlauDwVhqNRZB+WGXqJXMEoFB8Uy2
bizll8Fj5dWxqhj8Em6JuT5F6e1/NW5AAYPCs2EFtpTfQh7JnlPcgQGPVX6X
JuXHHT9juWslMHg7v/1S8S8cvAWN2kX/w4AtNzJ6gfJzoyKWYbsWgxeMX3EC
lN9drzroLwlh1PgPTN/2g9KHvStQcZEB69elP6j7Rukj89fMZ5YBq/QOpa/q
o/TZnyVVO8WAjXBT+mAPpUfMqve2IwwYVhqvSu+k/CY+gsW1M+DtC/vAN9R4
L62m5ai2MiA3Wo27vBkHDedVx1obGPBHumG4rJEa/2XarwUrGbC1x2wgtRYH
um3shcACBgR9EEsbKMPBfdnzNZI5DEiUfDGVUELln4KyipIsBoRpVvXqI8pf
7F9i/1IZoG1tme37lsp3GbofXaIYYFtUOO2WTelhcsRfOJwB+l+u0L88wyFt
1knuRTAD/Ez4hpSp/Hd7X2LwD18G3DfgHKt5ROXTnxP4CUcGcJ78a/KKx0Fc
/kG6kSEDfjnXOrP9cYhtLzj4U58Bvj/fZn7wpvTx+0AL2c0AoftI7abn/+aH
P1bvNRmAdNef6XXFoc1lvyBnKwNO5ytMbzqDw61Xc1e2shlwrdTqcO9eHP7s
NNvLpNatqzVt1Hy4cWC/a96zu5AO9lyvlIsxHFZrGe/xf0mH/vK13ycWOaCu
ZqBPe0YH72eqifg0B67KaesuxNGB97OL3OFeDiz8t0N7yoUONzov/ZfzigMY
naXRv4UO+8ZpRpLW1Hzq468uIUGHH17jS9ssOCD5b0nt5EY6pHXFh8mYcEBn
dk61R4QO60PYNvy61Hw5/lu5k04HwYeanae2c4C3r1O+9QsNzCde0O1ntUCo
LF+6PIIGl/xz54TCtEC3Iop1KJQGHNNPLtcCtcCj2qnvWyANrjmSI30+WtDf
sD0R86bBvmLR8VhnLXjTmSa4+wINnGq5NuZS65WTf2L+lOyhwZ9rn/+7L6YF
BVsvlyM6DYZNHl+JeaYJeWLnwW1oEXlUPvp2vkADGvmi+KLeLqDDdxetsRg1
qC9LDTE/NodkucjVezEVkBGYeRMsM4Oq/KYVGq8qwlkptQ12ldOIkFRIzTWT
A7mwhKOOjpNI1fAUf37vVjh0c5fhEDGOpkpv/7izKAkFiRndQqWjKP5wcsYD
fjG4dsDkprzZd3R3WWeDWelqyN4TcYCx6zsSM3neaPNgNfRp161ulf2O3EKP
Jvh4rwY95b0ZV7i/I0w4qnxGczUIrNGuLi4cRnWHsJ6O/FXwoE+eb/+mYdQb
un3wXNZKKL0sFHHu1yBqM/lhL5C5ArgTG+6mBPejvii3JNNmQShGY+/r3PrR
7AbhNLF4Qbj8bdn0zKl+FLGqt3jtSUHokzE8eGBnP2L5GQdETwhA0ZsqwYWJ
b6iTfiMybqUAOH0qCTI7+g1VBfD78pzmh/bl+R7ccn2o7LODFSbBA+GqLU+U
1veh1i8rqzx+c4Ou1UT7MZ4+dL+uvVismBtyH8qrFXzrRefD9W7PHOaGW/LP
Jk/E9iKOZXbV52guqm5Lv1BI70Veu3FNZyE2HFih8K4zoxulj3xacKXyVN91
F/bbG92ovfYAXyeGgetUwYF7J7vRgwy3qw4dDIj/qNlnsr4b5W+tzxAMYsDg
PR2uyoguFHXUpsh0gA5e6y1Ncty+ovcy2nVdj2nwVMpn4IbOF1SgVRdbFb+A
8LslsqfEvyCJvcafj5kuoEY2051c7EA7ou/0GvIuoD9DQbzzrzpQVPOnFHnP
eaT9NErOaVsHyuidPrjmxBxql02/arX8M4qcW+boj88glnrdMrmeNiQ5oRuo
qzGF7MyMfqx624aSL1Ryff4ziSqcGyoWo9tQC9ZU2pY/iYKeNfnU67ehwMdd
OsKKk4hfom3c4cVHRNtdzXdDYQKJCHR/zPJuRQWuWq89dX6jy9tscmMsW1Ft
+52sd9y/Udue3nAvxVb0biQ+tC3+F4q9/k3fcLAFdUdZuK/IHkPrZ4fejOxv
QT4MH96s/p9Iov93ksyGZlTkGdvi6fYdBdCdPZb/bULuHPHcm/zfUf/GSfO5
xibEK/HGxiF1GKUfnhasCWhCd7++KK9oGUIyDbN+5342IrGXlvkFOwfRaVdW
rfGVBrSjeiEiFf+GrottPWqYX4NMG8wPHSz5giKfKY1sdahB2dPjx0H2C0rW
3OnBtbkGbf2xwSQ7qQO9PXQwtvReNZIVl45d4/sZ/Q661qruWYX0Kw+ErLL4
hKzHmwyldlWgff5JM11UP+y9O78w5t+jLcVe7uEtzcidb8i+J+89MvKPcyuz
akYxUgtBCVLvkVUY63qxQxOqObz5vTBPORrMicieNWhAaqUe+GJDCaKbZ/td
QlVI58CN2i9BJcjy2RbLh/OVyLQz4sgb7RJ04+3usz2alejin7SrrnmATraZ
SISVvkd7zJLPf9yBUFlxrvHjP6XolGNecOT9YiRe/F3PwqAUeQdXPTYQLkaG
llUaoqklqODdxLeSqSK0ZXdXf90RQJs26x99XvgWNUUeD1vXX4hw8qjHuR1v
UWbAlp13i98iS6tLsZL336DrkdunVKhzRHhCa7z/a5Rc9ahpwPkVWvjzy/Dm
3peIXRgYLXQ6D60WZp3fVViAnvCXFxU55iLFbWuD/20vQP9dErkW6ZeDzh3X
ee8ilI9OPVduOO74ArVVxuI2n3LQik6FqcwvGUhE9VXUoEEOMm073Lba+jEy
Tfs4dAGykc2m9ceO/niE4ulSkpOmL5BY2/kVl6RT0cquE/VLWs+R8fPHy3d9
fogi3ya780s9QwZvOqxG7zxAN11E66T+PkU75rxuZNgmIoax2RXFnieIxfkk
J745HnlvjxInqjPQ4HXhXSaL95DrAJ+bZUI6EpML39wxHY1+l+wRsw14hCZN
bLcpr4xC55Nv1FxySEOFs7r/9A0j0UmLpY2hRAoS9b1J7MRCUJcSp/qe9EMU
u1biY8VSIDosdNUlTfgB+ng1ZrRiWwDK+Hxe6+R0EuIvrTtO3PRD96MGIjwr
E1DMZuPvJyS90V2D4/0xcXGoeXllnXrcVXSL+Vn9+fl7SNrdqILpcBldf2ca
VonfQcHXGEKV9y8hD7fa3h7BaCRyPf4e/dQFdElOT3WuNxK9za9bsNWxQw2N
Piu3nA1DDzOfir37ZoOKdrkUH+YPRkcHctWE/S3R03y7M7eyAxCDm5MU/doY
xW62EkKHfFGLxInrXG06iFchwfnb+BUk3iQmFG6rimq2MoNvu15Et/9ER6ds
2IRo31IPv+a1QttGX92puTZXLL3O793px9pEsrL+E/nDVcUiPlGhAp9tiQQr
uQCDR8vRiyN9k+JpLsSOhcAnVyVkUeuV+YdFR7wIFak7UqPnCLSwlzcjM9if
UJl85/WrfR8SbF+15D4QSATdaf150uMQ2mQnYa6nHUqkP8gv0mRaI+UpuWcr
kiII/+Io08WAU0hCe6O/08JtIrZgV1uz7jm0PShth4VMDCGqq6IcV+6IVBtk
PuOWd4n+grPosa8LIlblBEgGxhKNfMuqZq9dQXus1eT58uOJieWfArQ7PCn/
vfsy3ptIVIgqfize54sU19jGdSc/IESiHr61i7mBXnKkfzUXPCRO1NnPX/QN
Qlo2IzoVtSkEQ63NcCwhFOk8vvQ7ay6N+Bpgo/BY/jaqrlHWeyCcTuw3MYy6
y4pGRmN/E6KlHxMvTve6ExMxyELFW9/D/AmxNPMxsHB5HOq01E5ycHhKLPe7
5hqml4BsvJiTNgGZxOFjx1xXRSUh+7KQZP3cZ0SP/ndXKfWHqDjjgwcvVw4R
Xzd3ISYtHe25mdt+ODmHOOPeYNKMZ6Bm2zjVJyq5RFarNS994Aka3HRmQv90
HlEhNv5Q1voZEkhi2N8oKSDucvYFHPXIRbGe3ytbLV8Sx2/7S730zkObrBql
JH+/JPgn7RNZIflIdXVyb+nG18TT7R+jAgpeIuvbGodpXm+JTSli9X+PF6JB
R7FXB1YUEoU3aVbTCUXIyYhr5f2nhYRT/fbQga53KIDvYyP+uYg4LXeBr54D
KOuG0x5PVUQYm9pdlKGXocWilnWeMyXEQ5mcgl3y1Wj39sqaTTqlxGmeh15v
WDUoKOHt1ZqIUoKxwc/zUVcNWu7x8NOaLWVE1slnv77E16LNao7Rr83KCSPn
Bh7rjY1ofw4v35/cCuJCBW377PJWFCW2+CZpsYJ4ufPZZoO4VtQWMX5Wd18l
kTaJVpiJf0Q2F9srYnorCdt1lqxI1Tbkui3dX0mompiLHRpIvNyOEh9pzzk5
fCD2TETGDuh+RXdKt7fw5n8gdtx/HF/W+RWFd6/OSpv7QCQHlwxtuNyF/NaM
WbffrCWkqjMe6z3tRnZh8SVESh0xoupTqrCiF8lfngwS+NRAuMudz2vI/YZO
pjTzmYs1EzGXF/3Mfb6jLvk9Mym7mwkPN4vLln3f0RH0rv+XXTPBNTQqt1Lv
BzrUmfEu+Fkz4VQV7FMsOIL0V/k4vtNsIaqUb66vy/yJtodsa5E0ayXYPOUr
j2O/0fSlgPjJ4DZiYO99Jb/USZR2sHBSJbuNuGrwOzd7YBKZqkwYure1Ec4/
pq0NpKdQ9szxpYVNnwjlubyPJc+nkL2P1ml20SeCfLwhLhumUdetiR1rxtqJ
fVsfmvrM/EUVj21Kdpp+IST35etJv1pArsH31vq5fyE8VUq4Q9n/kMT5epey
5C+EsdvuJDPzf8hXlrN5z8gXQnG2rlL87z+kWbA61CSgk9jtJdIbhS+h56X1
h06//Ep0eIVVdo3R4MPFjVM6y3qI8eGowW1U3b+xoP0Nv1gPcYsn/PHpPqpO
n4/yaVXsIeounb5RJ8iEVUFcfKcte4jiIXVzufNMOPnwt/j11B4iUMTZW0GS
BXMtpQdKNHqJRgl7TfH7bJDROJOJ2/URvKr8bJXXPBCEZZ9URf2E7DfJs1Ea
QrBHZTj3bWM/Qf4aXo4dEgLuM2IY0ddPOAluTQu8KARBNZGp+qwBIvPUN4uK
VIpvX+q3NBggbi6uWrFFUBiC/lOy8/w0QFiTSWp23ynWenkOfg0SJ/M2vUmk
1s/BLkVO+8S+Ez4z4vzdp1dD1d7JVfw9o8Tqj0dDvWXE4NE1U1n3LeNE+vrS
g5HVktDJYl9+d3CSWNn5V8cyZSsoltTfPPximhi4v22t1AY5kPlx6Edg318i
eC9t4ZKUIpB6v0X5dOcIHXcGrXBQGWYE994T81kgLtKDe6bN1GBLsJcGz/NF
4q6fc88tXw1oz1RR83+1SGjNMQIOBWtASP2Y8jwsEqcf8hKrojTg54oT8qMt
i8TcurgvN1M1IDtZd0vT7CJhFdZZv6lCAzTzBVbG6S4RHW+07snzaoJR94Pf
0l+XiNzZ/TPOYZpAY1iNPRxcIswtyoYd7mhCjuSKn2t/LxHlzXU/TyRpAm9B
qUsgnUYuEn4CKlQ9dWFO2dFdhEb2SU40BNZqgvyNNXZHNWmkzwOHpUYeLXgb
33dQMpBGut2zUHrvrQVj6cemI0JopFWQvZrVDS3YlNdxdz6cRvq/l9k7HKoF
IR+aPzffo5Hh2e+v/orVgsMLpcf9ntDIpgJvgye5WjBjnXq+q5ZG7m54Glre
rwWq4qevx66gk62fXCfO7OaA/Y4eSaYonVRcPk0X3suBZI2jFY7r6eTk1q2c
XCMOsE0P8ehL0Un9jsYVXw9z4KO/TsS0Kp0MVMq50eLIAdd+yQRTKzrpdEpu
LR7PgdzHA7n8D+lkb9yy9oZhDhh2zdI/PaKThT7LG5tHOTAoImDy8Cmd1Hu0
w+/DBAfW+qv+Usmnk5VPC4eTFjhw/ejNbccr6aRugEbZe0EcDglvTcsZpZMH
f5zav0YZhzF9fNJzgnr/vV/HXdRxCPI22aX3l04WKBdGlXJwKBq52tNBY5AB
mf6KpC4OUhU165kiDDIk2czwlRlV/3tcuGOuySA3ueRfuOWKQ2SOb78YwSAj
r66ZVXLHQWY4RmlkN4NsHTPjbfTE4ZjZuyaf/QxSnkc8ZsAfh0o5AYEnNgyS
XxNTvBGJw0m7TdYutgxSZ1K9uSEah4VE1SzcnkGu5knIELiHgzzv8X3NLgxy
cMi68WwSDrH9LwLnAxnkaPnDP2FPcFBcV/7xfSiDXF8gqHQ1C4dak3bJyEgG
+fyUlbnlCxxoiFYmGc8g9x18tnUiH4ezcSZL+58xSMmB2pEohAOj0dZINJdB
usq/1F9fikMi2yOp7yWD/C4YpBlXjkOjS4rWFWCQ8YlvixyqcdAwmrzyoIVB
Vp1PXuPbTLWvecDhUDuDjPFrk01oxWH75syT3F8ZZNtZVdrTNhw2Lp7c7zTI
IE+SG3JSOqj2njdvImcZ5CGb+p1LvTjMx8mKTv1jkDPsJOlX33CYuhGyLIOB
kWfD8v1ODuAwaL1rRpAfI62PiR+JHsahZlluXfdGjDy2f1Pi0TEcymaXlUVL
YOTzIffx57+o+A2ce60vjZHSkQ/OTv3G4fk78dQXChh5EK7esZzE4fGTa7Gn
VDEy8Um22pUpHB7c+Ry2Wgsjd50uaw2axiHK4ba7jw5GHqm50B7wF4fQw6MO
Snup7ym8vM1xBocA3b2nhvZjJBcPYWo4i8M1hUeWCaYYqft1ftf6ORzcNtCN
DlhgZM5i52QXxY481ruxoxhp0Sh0JGae0n/6tforG4x8b1J2kbOAw4leEdnz
thjJ+99GqU8UW9U5Sfxnj5G5TntcT//D4eCbWtGWixhZu+6Maf//9ocfSQvc
dMHI4duJBeaLOOjeDsC03DFSqJc7ppDindd6Zsa8MLI9r/rb8iUc1M5xxlL8
MHKfyVz8UYrlzWK/mQdi5Exi3otYirdqT7XzhmLkz1X8opX/27/dYVxfHIGR
RV9W1wxRvG5NVplzDEZeShsunKNYhMX9ZnMcRiZXhH37337wsvFTzzuSMNJY
WUTtL8Xsryg1PAUjV3sFZvVQvFS1Lm7XY4zEqn9qFFE8k38l/E8mRqb1GX4M
pnj8Qcv1p9mUnjueuu6l+MctuavHCjASMlgC81R/vrmHXlz+FiM7J6zvJVPc
eXroVEUxRo7qvGArU/zRePdhjzKMZFyeNCmk9Knn3DeSrcLIZ9PijsoUV0rP
7+6rxcjFj3KH7lP6goiFxt0mjAwoEfw7T8Uj96eA5GIHRv5xYxqFUPHKbLdf
k9uNkdfTJ0YLqfimlVcI2PVj5K0sW4luKv53E71n60Yxsg6cN8/9wSEiqGPM
bwIjn4q2dI9T/glyVe1X+YtR+U6H/YXyl6fhWH0SjUkGDtVf8pvAwTjv+yCN
xSTr1spUHhrHQXLtwOIpHib5cLeywTrKr7VDX2RlljPJ+u2GxX6jlD+NPumF
rWKSzLLGRPGfOFwuaD72ey2TvDY3HpT/gxpf16vDX0owydsr+s/mDeEw8b08
fY00kwTTDYb/DeJQYQzFXtuZ5JGxsnXe/ZQfN74a26XCJBOFVh0XocYfvEkz
atBjkq8iom6lfMYhRuyBnaIBk/z7netH2ifKrzcTvO8cYJK7dFXG4z7iIGwW
9fyIJZNMm9T8cqSJyl+/fQSGzzHJlXfFlXZW4aBq4bnZ4CL1fdzRk63vceAt
dtv53JlJGh+LXnusDIe8UIeLrp5MsrAy2EO/GAfmliP1tDAmyWkcunM5D4f2
MPPBU7eZZLvuleTkbByypkwWK+4wyYXimeo3z3AwK90jG5bMJFXHes5UPMYh
3Vo1fE02k9xpYdCkloCDR7lCulc+k2Q/8cLGqfx5YNuO4u7XTFLuaIRIYgzl
vxmJsUclTLJPTTanMgyHvTHCRootTDI9r6TfxYfSc57f7s4nJumb4bGxkMrf
Eye4vWe+MEmz+MiJySs4xMstPSvuZ5LcAxf1NZ1w+Fnzc5nBHybp8bUhV9QG
h3B6Vd2pNSxyF4eXvhLHoSrqSLTURhbZMToivIyabzDJX5ZDm1hky6ql25OK
OLjrreq3384i25IN80KlKT1DT89dIljkpNLCrqHllJ4r6Vt8bVmk/wvVZu1+
Djilx/zUtmeRa9apJa7r4kCmmnQu5sgiV6hHbfr2iQNiVgfwm+7U86YGalof
OMB7P+lgeCiLHE3p0RHI4UC3tKZvYg6LlFYV41G9Ss2fb+t0j71kkYcTlxsO
XuLAIYMTfGKFLFKul/vudXsO1DgE3U0tZ5EnGw8K3zjCgfzctqynn1jk8vdr
bVM4HAjiuHx+/Y9FBnRPuXHmtUDeOEvx4142OTP78ULSOS3QO9q9Vs+ITbLG
zs5622jB0bPLsVembFL2YMZbIwstuOnr3hJ7hE2qj/7Lf62jBV3ZOq5HHdik
4blD1wo2akGY8NeCb5FsMslkcmZvgyb8aF6mMfGJTeZ/PLM2YRO1fuomxU91
ssmMuv/i5VdrwqoRF57WHjY5rHxpTR6fJmhjHZ8LvrNJ+oviX95TGhCrlO5x
dZ5NOgc8H5Z/rwF6MTuLaP9xkcub/zpPn9SAVDNHQtCOi+S1kCkujFAH0dU/
6s7Zc5EnndavkPRXh1vtp4+WX+QiL3r1Trm7qoPbEaurV69wkZsJcY1hS3XY
c0I371sQFxk+WVz4RUwdxi6s2/I6k4s0vj1qLfBMDTQDKgVOjHORDY2N1sdf
qsIL3V1JhdNc5E41l169dFWQ5Hq3bdUcF6nKugJr7qrCspDcPR8Y3OStdUvn
/C6rQk9Ekr+KCDcpWK981EJJFQITXP7wqHGTsddvkyszVaAp97+uXC9uMtim
oTImRBmykhXXXvDjJpvYj8Q4bsoQGKJrLhXITc5s2lBUfUIZOCfP19+L4CYN
uz2D7qkrQ4bwq2KvFG7SRX3DyoV+JfB1MrqvV8VNvl6mM/RVXQnkZa/ZdKzg
IftWb9XMrFUAvrWRidGiPOT63DY9RoECDLJS2w038JB8se/+4UkKkPi1yhht
5iGNdG6qnnJQAO4wEe00DR7SfSTn3Cl+BegZyRS/eJyH8kuGp5yuPEQ86eij
Z/KQ/Rv3jKvs3gF6QmHa9i94SOP9KRd8hXbAghvxoDmPh6xPFboS+3U7nNVJ
s04t4iGFeJW/yV/ZDmS3Q7tOPQ95dq1gMS1jG0yI0OtvjvOQbiuqk3hoMmDu
u+XNMnVeUnLwuLZ08GbYaOEaseY9LzmTIFSWNL0Bklu+S7NqeMmMQwLJb+w2
wH/Gx0t/1/OSVYM1Qvs+rQexvfumK9t5yfIvQuWVL9eBhJbYEbefvGRQOxkm
57gGpP+r3dyygo8sn9nSc/W9CCgNSRTfOslH+nIlv/PjZ0P+qTgL9zN8ZKxK
jMDPGiYo9wiMn7rAR3J3nKmVC8JA9fOshJYbH9keaRapvUQD9Q8Nwd+D+Ujj
zyt9aegv2vnC00wvh4+kuc0npPhUoOJt42MKLym2CbxlgK4jIsMuaEMh1V4i
/72UteUE+dCkcKqcut7+uMvct5vYHb1FPLWdj/xNSHNJvJwgygWT3oZ/5SMb
+W9fSr40TejcWn7Io4+PhDMnNvrIzRB6N/4Fmvyk3ufMvd819x9RQXcRw8f5
SKGX68+/16KR+t7Db6T/8JFBerstb9ynk1Vz1gdF5vlI9TdcTh5MjPx//5OR
//9/sv8D7b4HKw==
        "]]},
      Annotation[#, "Charting`Private`Tag$23549#1"]& ]}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1:eJxVmHtcjdkax3fpft21c3KXUJQGE5GMtTTMkLtRlCKJoUhO0QhROBRyO1Fh
RhhRnxoipFgrpFK6THLv4ppLGYlGbvvMevez1ttZ//isT/be6/u8632e3+/X
K2DZ9AXaCoXCSUuhYP9qlhXN2X20+MbDEbS2hi0VvbhLs8/LZUtF83do9slJ
bKnonq2afYS0VLQsRrP3lJaKJoRq9s7SUlHXCZq9hbRUNFF9RNr/9ZotSxq9
SLO/UcqWJf3vqMPSPj2NLUua9fE3aR+7hS1Luv3Qfmm/UFqW1GvuHmk/RlqW
1OPlBmlvK61/Pu/1s7TX8FrSpwOc2/Fa0CT76iKZ14LOLncqknktqE66fqHM
a0ENlYYFMq8FDT90MF/mtaD6XatyZV4LGtuvd5bMq6RmPXodlnn/2ZurN8u8
Srqk6o6fzKukOakZXWReJdU+8eJkqeBV0k7JM01KBa+Showab14ieJX0SXRO
fLHgM6cpY20mFQoec7rE5PeWK+L85vSov6chEec1o6dT1A3nxPnMaPdZnpkZ
4jxmtElHZ+Bv4vfNaEv81gdxor6mVKeCngoR9TSl/8rqbT1O1M+UJg5YU6AS
9TKlDY47j92o5/UxoQtqnbND63k9TOj+pctrW+s4vwmNCNR9NquO85rQDWkN
U+NrOa8xtXPV8t5ew3mNaXLhiiaPB5zXmCaYqy9fuMd5jej67pkR5Xc4rxEt
edpcGnmL8xrR5tYPbRlVnNeIvjocaO1TwXkNqWvfm0dCSzmvIV0f263nk0LO
a0g/ZfY9f/wy5zWkl8zW6mfncV4DWrbpYZn2Wc5rQBdHRp/Zkcl5Dah96Oa/
/I5xXgNa8Yfu/fCDnFef7hqwIvDhHs6rT5ek1U04G8t59WlKn3Ank3WcV4/O
tEuZrBXOefXo8KgCx5xFnFePzmhuuDbbj/Pq0We9I3OtpnNeXRoxJ6uH5Y+c
V5fWZ4wetmEk59Wl53zudd73LefVpd3cX7iu7s95dejI6Mav3r04rw7deLUm
xLsL59WhdxyGfEmy4rw6tFBpu22okvN2oL6VBumjTDlvBzpi3Z3O1JjzdqBf
fg1JyDPmvNr0bvqYpm9MOa82XVjbba6RkvNq045Wqm/drDivNtVV5GxO7cx5
tahXWNXMQTacV4ueiVHHZtlzXi3qnKLuaTCI82rRxwFp8w1dOa+C1rj4mMS7
c14FvT9m8LSQiZxXQX0PBtRt8OK8Curd9mdGmj/nU5PWhYdO5Adxnq9krZ+n
a3o4P/9X0pKftHdSFD/vF7L2ibZiz2Z+vi/k++G9ri3eyc/zmVRnmQ6/msh/
/zOZHBcVnniI1/cTOZN1q099Kq/nJzK/z0X7xExev49ksseBQfQMr9dHElyh
M8/nAq9PG/mpv399EOH1aCMvVdkr/r7C+T+QTalb7PSLOO8H8vHsgJqUEs77
N8n7qUunijLO20riXWccSa7kvK2kXHuUr9FNzvueKPrXqO1vcd73RM+mc4fP
tznvO3Ls8Y/h8Xc57zuyMtr26bN7nLeF3O7V09dE9IcWMrHRZqJuDed9Sw5f
Cdl1u4bzviUJtk3/3lLLeZvJrJC0Y93qOG8zcR/9dFZiHed9Q166lQ9Ri371
hnT4FBQyo57zvSbmy9WlyfWcp4kcUmRn3xT9sJF03WPgoiP6+Stys+MtU0fR
n1+SWvOy8x6i374gAf6uEYFinjwng6999Fwl+n8DGV9aODRO9PNn5N285Mp9
oj8/JfNNA64eFvPmCYk7oN6eLubFY/K1IHFfluj/j0hO0vRh50U/f0i+DIw5
nSfmUT1xfBkwlor5UEOSded1vSJ47pN33nqzC8T575II7b228ry6TbquCYgr
EuerJr4bn/9eLM5TRbZdP7fxuvj9SrLbe7Bzifi9G8Rns21uifj+YpI01L1P
qfi+AlIxNiG8VHw+n6RMvSTNW83/zyG937s9kP9+ipxcmtgm71PIophtRrLe
UCiuBFkrZT2QggrOaP4On0ch1ZrPw/ej0MSR7b4/H7m4kpPtzocio/eGy/+/
GGnf/l46P/Ahy9Q+Eh/wo6XWQyR+qA/ym5Ir1Qfqh/rrNEn1g/qiR8MXSfWF
+qNfpxyU6g/PB+07ZC49H3h+6M/iJdLzg+eLkiqXS88Xnj8qNUyQnj/cDxS8
KEi6H3B/0IySs9L9gfuFPv/cNz5dvn9o9/Zd0v2D+4mOtVVL9xPuL1ofbOkS
J99vZGwwy2uVfP9RVGaGdP/h/UCK0jk5HvL7g05fjzVzFHqsEdk6NUjvF7x/
aJN50dmb8vuJeoRNL2PvJ7y/qDrLOHSG0CdvkItFmYtafv+RW4bnbPb+Q39A
F8KOnGD9AfoHGlcZu5L1D+gvyK2wLIH1F+g/6Ls+i6ex/gP9Cc0dHRnA+hP0
L7T/TH4j61/Q39B/Vsxfy/ob9D9U0b3ZlPU/6I8o91OOST+hZ1rRxw+hwax/
Qn9F/h+GZbP+Cv0XldmpnFj/hf6Mvp4+/p71Z+jfqOt+tTvr39Dfkdrx+F7W
36H/o+hp3nrBRMwH5JmdsI3NB5gf6HGbbwCbHzBf0At3D382X2D+oMZR5YFs
/sB8QoHfROex+QTzC+kezd7C5hfMN9SYrm0TtFPMP1RjlzqfzT+Yj6hIsVpn
cpSYn6hy1L1TbH7CfEUr46ydLgeJ9xebbQkZme4v5jMOVQ5ZtdFLzG+8YEff
Vja/Yb7jnetd8th8h/mPR0cb9jByFfoAr4mc+oTpA9APuGj9xpmn7YW+wJF9
jzgNthH6A2coaODxzkKf4H4jrTuOtBL6BT/Kz//BWCn0DY6eZHFnoKnQP9ho
xM3oi8ZCH+HmYSP08o2FfsLPlFcTkKnQV3jcD/vCXJRCf+HlR8vrkq2EPsM+
U2wm+HQR+g1XrQur8ukl9B3u0LRCd01/of9wVcPM+0z/gT7Er+2uNzF9CPoR
+3zdVcz0I+hLHNx7sE/H6UJ/4tBLDt6+fkKf4vSg1aeYPgX9im+kPyxk+hX0
LXZ4FZPM9C3oX2wZZ5/B9C/oY9w3OOYC08egn/FGus5uxUGhr/HzSIfBc44J
/Y2rm6ybmP4GfY613nynZvoc9Dt2CA0fxPQ76Hu8alncPabvQf/jN44X3Jj+
B3+AXxQH5zJ/AP4Bx/ilOTD/AP4CL367yzCzSvgPPG9c2F3mP8Cf4E6JB6KZ
PwH/gsPUZdeZfwF/gy3Lt7YwfwP+B3/nfNqP+R/wRzizdu0M5o/AP+EbD3Of
zxL6xAR3+2VVPfNX4L9wgm/2Wea/wJ/hcr30VObPwL9h68Tx11Syv8MVXuck
fwf+D4+u6p8VIvtD7BZR/UDWG2bYfM0wyT+Cv8Qlpb9I/hL8Jz5RYv38nOxP
cU3aAsmfgn/Fqhd/tMj6wRzPXmYv+Vvwv7jA6ZLkf8Ef48OjJ0r+GPwzvrPJ
W/LP4K+xXt1Lad6C/8ZvFmV2aefPcYTHXb92/h1vm6nx7+Dv8anxGn8P/h9H
uWv8P+QDeLyDJh+A/ABPO6HJDyBfwD07avIFyB9wQ4Ymf4B8ArdVaPIJyC9w
VD9NfgH5Bp7v5Nw+/8CtkH9APoJDIB+B/AQvhvwE8hW8D/IVyF/wOchfIJ/B
eyGfgfwGx0B+A/kOToJ8B/IfzPMfyIfw3tD/y48wz48gX8I8X4L8CfP8CfIp
zPMpyK8wz6/+By8HUF0=
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1:eJxVmHs8lVkXxw/OOa4nl6OPLlMhEiXKyJvD7J0pvA2mmnSRmkmmmTClqQbV
dJmpxBQZE5EuUhSlECa87a1EbgejUuN+XCKMbkiU98W79nNa//isz+d4nvVd
z7N/6/ktA6/tK79V5PF45go83ujf8dClH9IvFJc329KG+tEQU8X/53m5oyGm
wpvjeWzMaIjpk5TxPGAsxFScMJ67j4WY1p4cz63GQkz3+47n2mMhpg0zxvPe
f0ZDhxYdOz+Wl5eNhg6t3XhuLE9JHg0dOjwlbiwPOTYaOrSORo/lW8ZCh6Ye
CB/Ll4yFDs1QOziWG46FDpUEbB7Lx3l16BVXCzlebXrPueoBx6tNP3tp+oDj
1aZzpUpFHK829bYW3Od4tWlUcUw+x6tNw5ZV5HK8/7u+14x0jleL9m+ddpHj
1aJVAUPBHK8WzfF5tIHj1aJWIclTOF4t6jzSfrOM8WpRvUR3jTLGq0UbNzlr
ljJeLfrBNSesmPFp0hPhM12LGI8mlahee32P1a9J+0s2qRJW7wR6vUvckc3q
m0Bvdu9Kvc7qmUBLzlhZnGf3n0Bzo6rqQll/RdT/lXH6NtZPEQ3fnaHnzPon
ojhraaGY9UtELY2SksqboD8a9J/AtCz/JuiHBp0WubupvxH4NajOUHbH2kbg
1aB3+oJWhTUArzo94nRjw4l64FWnssbg18vqgFedflAvLcn5G3jV6Pbzpw9V
PAFeNbrr39uf7nkMvGpU0H1CNbUaeNXoardEM49K4FWlh29+l+tfBryqtFiY
JWktAl5V2md39O8rd4FXlSbM87fMzANeFVp9dtGIYhbwqtDvQ8Q94anAq0Kp
4qz5GxOBV4W6Wu2dtfss8CrTwqKfc5ojgVeZ3q4wvJ4VArzKdOPk/bEaB4BX
SPfdrStS2AW8Qjrf56e0298Dr5BeTjJe57kBeIX06sAcj4krgVdA95DjxTpO
wCugbjUFPb/aAa+AOoeurI1eALwC+uiwv2CfKfDyaarWtmoPA+DlU/v6KV94
TAFePo2zKmmM1QVePp1VG7FzoRbwKtH+G3dOIRHwKtG0tk+F+erAq0Rl76SH
/qMOvIr0hrHGEwsR8CrSLZl5jupawKtIc9x0JtrpAq8iTbfO9b4yGXgV6NsD
58zn6wOvAvVROrgmwwR4FWiYiUuriiXwKtAcD8F0tUXAy6NTjy3IC3MAXh71
LzTo3+YCvDxqF2gZdHg18PJogYGvXco3wDdCHNbomt/1AZ4PZBjVpKXsgvo/
kIc2gXy3/VDve5J86tLmyGCo7z2pXcXT9zkJ9QwTw9CMYwWn4f7DJML9QN7p
C9DfIaJ3rdy7KQn6OUSch52/OZ0K/XtHrJQ9vegt6Nc7Yql/6rhHDvRnkOQZ
rxP6EujHIJkUeCVq4B7wvyVl/rzPlR8A71tSPzu5L74UeAeIvvtE80op8PaT
yTxJZmwV8PaTl7zdvmoPgbePWFsRjdmPgbePeN4ZEA3XAO8bsu6+789hT4H3
DdmrWtbd/jfwviaO/GAvDaYPr0nno8AVgnrgfUU6BLJTNfXA+4o8/jr+p2MN
wPuSZDjQq580Au9LMqc9cP3pRuB9QQaMBheOML16QeJ8sf+qJuD7h3ypHimN
bQKeHhLlppf9kOlhN7E57mzDZ3reRSYlKGjOYfr8nJj//ur2Mqa3ncTU3jvQ
m82TDpI5smhNENP/Z+TTa2Y2oUzP28mizxZURzN9biP58z8vvMjmTSvx+dbh
ZAqbFy2kfNgjNp3pv4zMNLlt+yfT82bSZp+bncfmURNxirqyjLL5UE/OSYcN
7jGeWnJ/n/vm+6z+pyRSXdOcm1c1xNE7LvoBq+8R+b0oIauY1VNN8oTPY0rY
/atIkKmuWym7Xzlp3+9YX8quX0yCZyZ9Wcaud5/kzS1OKWP/n09k3fyBMvb7
22S1Qb41N9/TiOWqm75cHk9OuAriuO8NHk91Srzc9088utRtNyD3/yjnbYSJ
lLs+4rkc2iDl7o/23rSPk3L1Ie2MoGfc74vRO924zys4PpRu/j6zguNHn022
XFrJ9QddGfYYrOT6hxrnX6yr4vqLlkiTh/7i+o9cbi3a8pB7PsjCts/iMff8
kNB7+Y4n3PNFeneSnGu554+uK8fUNnDvB9qsc2FtC/f+oPgf+YMd3PuFfqsw
UnrBvX9ob7Z5+Vvu/USz7y6jSjL2/qLv1m/y1Jax9xu5JnvbGcrY+4+6AldM
tZGx84EKIxqfLpex84P2BL0+7C9j5wv57K7xjJax84cemdjXF8rY+UTWGxUK
eS3s/KJzGfFGTi3sfKMMPaeNcS3s/KOZPf+yVWpl+oDem+7p3t/K9APNyrLT
F7cxfUF93kShoI3pD3Is1nKKamf6hPb/MtEm/BnTL9RyUjf1VgfTN3TH6uV0
0XOmfygh0eDk+S6mjyhH+HXkzh6mn8jPc2RhRC/TV9Rl/LyX94rpLzJsM9pb
+obpM1ojEWcNDjD9Ru86s/3+GGL6juYoH592aYTpP4rf2pxuyZfAfEAdc+wX
LFaVwPxA4ZqJXrUTJDBfkG/IEV+liRKYP8jFyW9b7lQJzCeUllkwXWmmBOYX
spVar68xk8B8Q++OGJbPt5LA/EMy8eJIFTsJzEc0b1vysOtSCcxPdESld90L
NwnMV7TV6lLn07USOL942sMdbS+84P48zPeSZej9IIH5jZd2iR3MA6AeHr47
u+uo6JAE5j+Wmp2x+D0U6lPA7ZMcd0ZGSuD7AT/a5KjaeQbqVcDuMT9KfBOg
X4p4xoIT6m+uQv2K+BdstembG9A/RYxPmX4akQE8iti4RSHRLwv6qYRXKz95
35ANfEp4ge22oNps6K8Spv32HZ5ZwMvHR/ONlLdkAC8fm1zXiVK4Abx8fFd3
q5HDVeDlY7G7xx+LLwKvAEtObFinHwu8Avxhq18QPwJ4BbhLReA5KRh4BTjC
6Y9dIfuAV4iF28tqju4AXiGOP76xDG0BXiH26zz4ncwDeIXY2OzyktgvgVcZ
u+v+9W34EuBVxnoBW5zaFgGvMh6sr5yXYwG8KjhiCf5z1izgVcFzt99JsJ8G
vCp43oqCBvWJwKuCQ628C06LgFcVv4l58Fu7EHhVccbzGbWveMCriqsUTXdl
DzF/gFev39FrNsD8A/arbtq7+DXzF/jsTy4xPb3Mf2DXg18V6vcwf4K/coie
Wvac+Res/oVjZVMH8zeYhlVcXv6M+R+cN3mJ7YR25o9w9OUNDqI25p/wD53o
ukMr81c4vKH61qUW5r+wn592gxnTMxGWTcvsLpcx/4a//6S4PJjprQivijLY
9xXTTxEeCDjcPFfG/CHO+vN2lpaM+Ud8yGGx9zDnL7FJb29rD+c/8c7LS1O4
eaGJf2jvDanj/CuOtr1wvobzt3iNgrHjQ87/YtH93/h/cf4YH1AZ/rWS88+4
+lrP0QrOX+P2s+tlUs5/43nnowOlnD/He3b6WUs5/46f2DiqSzl/j2tmG72U
8//Yc7phs9x+ADfO+bFGbn+AdyQmVcntF3DdQjup3P4BN5+xL5PbT+DQAL1S
uf0FdpnhXyK338C8KTolcvsPbPWiXn4/gs945svvT3D4szT5/Qpem3hVfv+C
rVwuy+9n8AqVBPn9DfZukP++EWNXp3j5/Q++NvTRfggvf/zR/gjrFXy0X8Ir
cz/aP2Gj7I/2U3h25gW5fY4unntrPP8vsh5LNg==
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1:eJxNWHlcztkaf4v2Rb0RkiFcyxBqek2WOocso7Jlu21SloYmIUthRpbLuC6m
kO0zt4hBhetFw7WckyVCUqmEslSWshfSwtxzfs/z655/fM7n1fue73Oe83wX
p7Aov1mGGo3G2UCjEf8qqzWfx0J9Cu+48bJSsex4xWVlf+6sWHb8bq6y371L
LDt+5KmyXyqXHR9gHyb3k+Wy4/Yxyv47uey4FZkh97Zy2XGXWzPl/s1rsbR8
YkW43OfcFEvLi6oj5T4tVSwtj94YK/cbfhVLy3MObZH72XJp+fp+Z+R+uFxa
Pry7sa/Yd5FLy73fJ8i9glfLH7vGj2nGa8vtoqaMa8ZryzdbLPJrxmvLD+WW
Tm3Ga8sTH3UPbcZry8NvP5rfjNeWt45z3tiM15abxe3JaMZrw1eciGxqxmvD
A3cuiypS8drw5+9KuxWreG34oqPXht5V8drwKf63GkpUvDbcc3K3vQ9UvDb8
2e3AfY9UvDb86CSXpKcqvlZ8xKh2S9+oeFrxgja9pjWq52/Fp9aZfLIuxPNa
840a14W9CvF81rz33GL92EI8jzVfd/pLzOpC/H1rPjWi7W/ZhVhfK549fobm
2yKspxVfvOgUTSvC+lnxssammVOKsV5WPG2T4YgBd7E+lvzC4ITtU0uwHpb8
Pyt2vbp2D/FbcqP9947tfoB4LbmLXXleWRniteAxucNjDz1GvBb8c7DPHItK
xGvBcw/M9ejwAvGa85qSLVFVrxCvOe/vMMh5Qw3iNefXnNINW9YjXnPeZen0
H8MMdIDXjD+tyfc6YKYDvGa8SwePBVe0OsBrxq0r4qP0jjrAa8bt5gR6T+ih
A7ym3GrmwdLlrjrAa8o3lCZu1njqAO//9lcGbtk3Wgd4TXnrwV0uOEzWAV4T
HjLzaq/203WA14SP8r+rGzVXB3hNeGNJ2mTvaB3gNeYdgu56XV2mA7zG/Ijb
jm2z4nSA15gfbJeztGCNDvAa8wx7j9jstYjXiF/c5mpuvQbxGvH6gSQ55hfE
a8SL2vzhXrsE8RpxJ/2Gtqt+QrwtudnXxft1IYi3JV9Tn+7nOQ7xtuTl5Vnx
D4Yg3pY8zfJ43syeiLcF7zPjtn6wFvG24F4xZuvz6/F+W/Bfcu9NSHmC92vI
lxz+sLzPdbxfQ/5nl7gFL4/j/Rpyq9XBocG78X4NeULXM+PercF+NuB1z1of
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

        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1:eJxVmHtczOkXx6frTKnpRm3yW4VKxLYYRPU8uZUuCMktKoqlLVbRrt1WsZI7
UShWI7SkaNMiPE+/hFKkMV0oXVSUlO5Jl982zXlmfuefXuc1zXzP+7zO+Z7z
OSY+gUt9FTkcziQFDmfw75ANpys+nHYQv5pG35YPmh6trB7y72cMmh5tLB7y
z50dND1qkDnk75KYHj16Ysh3l5geTf5uyJ8qMT36z+ZTEl9HYno0qvSkxG9u
GjRduj3rmMTPzxs0XdqUESnxr18bNF3qNipU4kceGDRd2tW/SeL7SUyX2obY
Sfx5EtOlv4e1LBj0x0hMl/58e6PEH+LVpVVBfvNlvDr0xsz4uTJeHfpd3F4s
49Wh2iWGs2W8OtTwScH3Ml4dal2sP0bGq0N/Ms/lynh1qLv52rJXjFebXmyL
PP2K8WrTlfzfxr5ivNrULM0wQMR4temZzsluhYxXm1o6WcQUMF5t2uQsasln
vNo0Oy/2cw7j1aaiuY/bshifFv17YYVRBuPRos7bnk9LZvFr0dWhzbGxLF4+
3eOVbRzG4uPT6pLRlWtYPHz6h3e34Xj2fD5duatCsUoE+dWkpo5RJ/eIIJ+a
dF8WXjpQCPnTpMsedE1aXgj50qRHD7W6Br2E/GhQJ12fvqUFkA8N6v9q1eWq
58CvQR/sNHinlQ+8GtTluGbms1zgHUYNRlwzVHwKvMPoxV/iLf58BLzD6NGi
392PUeBVp1c7PMbSDOBVp+kZ13xN0oFXnb4MFhy/kgK86jTg+m8THBOBV412
R3MXq1wEXjVqUHDWpDYaeNUoL8x+bPdh4FWj7v8EOa4KB14eLa0zvT15F/Dy
qIf1NOVrW4GXR5XbjynxvICXR4smXX11bDnwcmlhu+IPJxYCL5c+8GpfuwEB
L5cGl46z9ZoOvKr0nWr/oneTgVeVTklY0D/PAnhVaUOvoVGxKfCqUqeWNMOq
ccCrQtO7nh2IMwNeFbp0Sn7r9xOBV4WmOgavTp8CvCrUyyN+t4Ut8CpTe9Xs
piAn4FWmP9ecx/6rgVeZZsyMUnjuD7zKtHTaP5nzw4BXid4JTKgMiAFeJWpe
E6xRkgy8SlTrcpI99wnwKtIG/RiD0ArgVaTqr/hjHnYBryK94GU1xVVLIOVV
pHz7grl3TQVSXgU65pB/Y+wsgZRXgX6aeNDivKtAyqtANy7U3BW8TiDl/dcf
ttak2V8g5eXQyiVWhXUhAikvhz7/YYq3c7hAysuhB3yse0ZFCqS8HGqS0npr
6xGBlG+ApHT8dsX9mEDK009aIy3ylP/1h+LvJ4kzeRFJhyHePjKvMMcq4gDE
10fKz/ldFYVDPL3E/eaEvsLd8Pxesr7+vefjHQJpfr+SmjtNMz5tEUjz+ZUU
ucxL3estkOavh3TsvhaU6QH56iErTW5llrhCfr4QbvOqio65kI8vZNSc5id2
s4C/m4TvjBopsgLebqJmfM8+zxx4u0jlN99m244G3k6yPSb7vsAAeDvJLP7Y
NQ+0gLeDmK5Df5TygLeDdG3+su2QIvC2k5lLkua87IX6aicHnCsTrnRBPbWR
5mGd7iptUD9tJDCvNbG2CeqlldzOSOyy+wj90Er8H/mq8D5A/beQbz7oL51R
C/XeQjhrN6/Lqob6/kzczpRVCSuhnj8To7Vj2vPeQn02kWfDjSdal0N/fSJ7
PFFKxRvol0Zieyfc4e5riPcj2bSgYh0phfgaSFvaTOXGEoinnlg8nVVnXQLP
/0CqFpi6JBRDv7wnNqN3aZgXQ/3XkbYIu/CHRdC/tYSvlRK2qQjyVUP2t/7q
MroI8vOOJHqs3/9ODPmoJvUzFCakioG/iliaRIVGioG3kvgpfcvfLAa+cpJf
mxjnIgaeNyTWeKbxdDHEX0oWTE24O1YM8RaTe/o4ebgY4hOT/DNzfHhiiEdE
LoS/W9bP5u9LUn3LyKCTzft8Mi62062ZzfccohG/4W49m+fZZLP+Tn4t+34m
OfuT0qgq9v93CTY4nlbOPr9F0t/vvvma+fEkIcersZjNXw5npXSfkn6O4npy
hYWy76PZb1LevpD9Ptr2V+zrPNnz0TOn8TtyZPGhMOHtPdmy+FGfzlMxlfEh
L22BbYaMH437rBWSxua7CEXoOc5OYr8nRqeaPlgK2T5QjDas+1h5mv1+KXKb
GCHez/aHN8hlTFtAEHteOTKfHd7qyXgrEa9dI2wOe34Vir4Uo23C9oNqNGGx
hW+3iNUPCqvJ5T0RsfpC1U1Jcw6JWP2hmxt/0ZwrYvWJhJsaNBoLWf2iiO9v
he8tZPWNop0V56oWsvpHfXUfE7e9ZP2BjnxsPPiwgPUPav5mvtXHF6y/kMfE
iw4tz1n/obTHVRW5+aw/0WbFgQ3b81j/olD3nnPluay/kcVi2xvcHNb/iL8k
2er9Y/Z+QGlqvTY7HrH3B7KsS4wUZrL3C3LV8I7Z+pC9f5BloE7do3vs/YS2
fuRaX05n7y8UJdRvUEqF+NtRT9Ycl9IkyF8HGt/V+J/RV4GnA5n+eF7t5UXI
Zye6Oi9l6qezwNeJnL0VCoNOQn670JbrcTn+B4G3G/16qc3lbRjwdiOP0xpB
xSHA+wUVhQgfbw0E3i9oC88iJc0XeHuQRsF/816uAd4edMjvnmG9G/B+RTMy
dcrMHIH3KzrIXbXigR3w9iLxxqVWNQLg7UU7fJROFE8C3j6UKrpfV2QGvH1o
cesSz7EmwNuPtJEGt38U8PajKM/3mZdHAu8A6t558v3ykax/8YgrxmV2o+D5
HOwfWhl1xBj4ObhE1GK53hzi4eCyKYr3s6wgHwpYL/GDf4YNxKeAfX5wNRA4
Q34UMM+4YaPmWohXATsKxwn5gZAvRez3V6VTy162n+C7ccK1nufY/oJ9O9/7
N95i+w0+dmTfLstctv/gO5anXC9Vs/0Ij0huDi/sYfsT5qXXJM/WhfmrjDUv
tOVvHA/7gDJ+kDb9aJkNzGtlbNDtsNhuMcxTZXzW0DpesB7muwre37tteJg/
zF8VvLMxSdC+E/YBFWwf6HU+JBTmtQpWj9/M5e+F/UEVL1sYvjNnH8x3VVz2
xChYtBf2DVW8p6H+hO8e2AdUsV6/hf2TX2A/4eKfcruWOu2A/YGLzU6MnOqw
BfYZLs7d12tm6AW8PFwS7ZAx0h14efhvH9fDwoXAy8NvAmMOceyAl4e97U+9
3j0FeNVwecg0Bzdz4FXDwYc8/FNHAa8a/mr2+cdsXeBVw5/DgvBlNeBVx5cq
Wjb6KACvOo6pnjyg1MP0By7NSrGIbGP6BB8Y+LK14RPTLzjhRa61UT3TN9hv
QOg7rJbpHxyKTgcnVjF9hJ9GTHr+9i3TT5h8Z5x0rozpKzyf/6b+6Wumv7DJ
nwUnPEqZPsOCADv76SVMv+FZH2Z4ryhm+g53ln+yuV7E9B9uOHWu16KI6UM8
QeR6OEfM9CNu/3VacLiY6Utcn66RskjM9Ce+2ekXYMHmuxY+c9Omjc/2AS28
Qei5ulemb7HXbZcdzTL9iwtu+MbWyfQxzjY6fqFSpp/x/uiV58tk+hrPOaXY
XSrT33h6ba9tiUyf4y5TXZNimX7Ht3KTtxbJ9D2+XxP/RU7/47ibL1Ll7gPY
5qZ3hNz9AC/ijPhR7r6AV2iv8ZS7P2C3AZ3lcvcJPGF24iK5+wW+euGgs9x9
A2/3yV4od//AxSZPHOXuI7jAfZaj3P0E667/JH9fwStLsuTvL7jv3g35+wz2
MhLK329wuV6c/H0HZ/Sdkb//4JiAGPn7EL54NVr+foTp/Gj5+xKeoR8tf3/C
PgP/d5/CAe1DvvR+hbubhvz/AcpBLIk=
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1:eJxNWHtY1cUWPbxBQF51y0cqCAp6jkel9Nq1OxPmI/MVhYGVCvlIQLlq3RTN
QMsorb4oNMm3PRRUskJFyBn4NK+KhSiQKChKgqCioiYIej37t/ax+cdvviPn
zJrZe+21VmBcUuR0R5PJZHEwmWz/GusRvfmlPxZl9uunq6tsK0DrMGNfkG9b
AXpleQXtM9fYVoBe0sfYv0MrQA8/VEb7KFoBuup6Ke3DaQXozf86Rns/WgH6
3bOFtG+6alv+uk9GNu2PFduWvw6dk0L77Czb8tepDv1o/1Gabflrj6z0ZNt+
Bi1/nfK/uQtt++do+WvT9inv2PZBtPx13Z4N8217A6+/Xj30cuJDvH767YOd
Yx/i9dO5u9PGPMTrp9eEDQx7iNdPx7mPvLLGjtdPj550P22NHa+fLhs58cJX
drx+etHSgWWr7Xh99cl1MUGr7Hh9deDcSUlf2PH66sSTseGf2fH66neP5XyT
Zsfrq4cc6LV+iR2vrw69+fTiJDteX73OK74p2o7XVx8umFU02I7PR+fMXZTu
Zsfjo9NGnl9QZOHz++huS2Z/O9XC5+2ot1xNbqww8/k66tanjj/Xxczn6ahL
44ZO6NyXf7+jfr+59qQO4/v11peHH5h4uzffp7deq4KL14Xw/XnrC/fiP8wI
4vvy1mPCTAl7uvH9eOmCoE+WnOrE9+Gl3X7u3/ZbAOP30veOxl6a5cV4vXTI
eyOff9eJ8Xrq444Drpy9YwFeT53x9tLTSZctwOupD0ZGDPpHtQV4O+i210ct
PHrMArwddFlwSPnX+Rbg7aALQk7HZX9vAd4OuiJjetGQdAvweujkxJrabxZZ
gNdDn6q5nRw/zQK8HtrRZ/H+3mMtwOuhK/4YHLF6kAV43XWHtElfrgy0AK+7
PlNZuelKRwvwuuuuE5bf2HbfDLzuusjystMPN83A66Y98nIH1lw1A6+bLlWt
Z5ybzMDrpie1d52Vf8sMvK7aYdeMrvOcGK/rg/oclR79OON11eOypmZHP8l4
XfXMafuz/F5hvC56afRjXhXvMV4X3UP+9MZPOxivi/6xbWNU0lnG66Indl8R
vzaA39dZn9r6+LAto/h9nfXh7+8knlzM7+usd23c25i8k9/XWefdnjOz6TS/
r5PeHbHzYpaTFXid9Iz1Lg7RwVbgddIz69en1wy1Aq+jrh5WHLJkjBV4HXVN
9ZaUPZFW4HXUnY6PcZ0z3gq8jjqozvNcRYQVeB30+TnW4MUWK/A66M/CGhL6
+FqB10FP2dttYVMj17ODfmp6VI5bEeM16VL3sEElXzBek960Y/iGPXGM16Tb
fXee7def8Zp0jw1zo75u5/q9r96o954/upjr9Z4qHvvZspnr+L3uqdjrbx5v
nsvv064ezXB6sXA0v0e7yh9w7nBSKNdbm6ra6RCd6Mn11aas/97o3NzM9XRX
rf3pQKD/ea6fu8pv0wfuOWVm3F+rWp5ac3LFb2bcV6vyNpXkjy02435aVM7z
HhuWPfjcuI8W9UvmpZXbT5qB/47y35JU/0w11/Md5VUV47ytgev3L2UdvMdz
agvX621V7F/fo9KD8d5WH12I3LaqC+O9pb7MnXeoez/Ge0vt/rFLR69nGe9N
5b6ycMn9lxjvTVVuHn4pe4YFeJtViWfqryULmB+aVe31vO+f/pj744Zatirj
5aJM7ocbqrouI+eFLK7/62rEk1n/PbCX6/26qr6RfCPoV+7na6r+RuOWaaUW
4L2mYi4Gtq2s4ve8qkIbxoZ+U8d4rqj4l/b9lXuNz39Zpcie50ru8HkbVVty
VJCLifm5QS3IjfWZ5sp8e0k9cmr67PueXG/1an98a0u9L/N/nZpbud1t4KPM
5xdVWa9PwhsfZ37+U41I32YN7sr1WavaFkRuaOzG8+KCerW8u+P4QOb/82py
5/qsST25/muUV0JX3SmE6/mcuvr16GGrevF8qFKD8088cao39/NpNTsgfEBD
KJ//lOrkkzyrJIzPW6Git9WVfN6Hz1emrjcUbAnvy+c5oQZf2vzGvr78+8dV
zInAhjAz/94x1aFv8cIPzPz9h1Xq2apjv5v5+w6qrTEhoZ4W/vtCdTr2ideH
WPj/56n1l/tUv2r/fJfa6tNaON++36R8JrceSbXY+9fUeUp7wvKHn4sWfI6/
F8v8jL/H94tFTX///kJxfLrx+zifqJxsnA/nF10uGucHPhERbuADfvFWlYEf
9yM+vGXcD+5PVLYY94f7FRPyjfvF/Ysdwcb9433EMIvxPng/4V9pvB/eV/yg
jffF+wu1ynh/1IcIH2fUB+pH/BjQg+oH9SUSC436Qv2JtXVG/aE+RbcVRn2i
fsW98TuoflHfIvSmUd+ofxGxcAbVP/pDbE6Ko/5A/4jsyInUP+gv8emQYOov
9J9wnZdP/Yf+FIcGjqf+RP+K3Nd7Uv+iv0XzuivU3+h/8UP5Yup/8INwmbid
+AH8Ib4d8xXxB/hFPDvsK+IX8I8Y2FhA/AN+Er9GvU/8BP4S5UdGEX+B38Ty
lIPEb+A/0XavO/Ef+FGkxLxD/Aj+FOOqXiH+BL+KvMlXiF/Bv2L27wXEv+Bn
MS9vCvEz+Fu0732b+Bv8LlrONBG/g//F/K0+xP+YD8J7VjnNB8wPEXKujuYH
5ovYWL2C5gvmjyjec4TmD+aTSG/6luYT5pdY3uxK8wvzTTheq6X5hvkn3vzZ
jeYf5qPo9WoizUfMTzH+6uc0PzFfxS85PjRf0b7SZ+k8mr+YzzLbw5jPmN9S
FDxH8xvzXXo+2ZvmO+a/nLwvkuY/9IH8zwtdSB9AP8jSRy6SfoC+kDGlfUhf
QH/I7XWupD+gT2T06pGkT6BfZH3GetIv0Dcy77FDpG+gf+Tnzpmkf6CP5D/N
DqSPoJ9kzcws0k/QV7LxRALpK+gvGT9hN+kv6DO58Jm/SJ9Bv8kR/Q39Bn0n
X1tr6DvoPxmbsJn0H/ShDMvIJX0I/ShvpXYm/Qh9KXeNLiJ9Cf0p4wdMJ/0J
fSo3fjeW9Cn0q8zsnEj6FfpWLvguiPQt9K90TzNV2fQv9LGsTc0nfQz9LHef
jiH9DH0thxxdQfoa+luO9DlH+hv6XD41Ywrpc+h3+WnUUNLv0PdycM8U0vfQ
//LFj1tJ/8MfyNe21ZI/gH+QPePfJP8AfyF3r6oifwH/Id8a0pv8B/yJnNpt
NPkT+Bf586Fh5F/gb6TX1mXkb+B/5I67hv+BP5IVI0aRP4J/kpPi48g/wV/J
oP4DyF/Bf8kzSw3/BX8mz88z/Bn8m/x0UAL5N/g7OfSS4e/g/+TOaYb/gz+U
dz3+JH8I/yjd5xv+Ef5SrnjW8Jfwn/LIbcN/wp/Ko8sMfwr/+qCfDP8Kfytf
ecvwt/C/Mn2/4X/hj2Wxt+GP4Z9lE/wz/LXcB38N/y1L4L/hz+VG+HP4dxkB
/w5/L+vh7+H/5Yfw/8gHZBXyAeQHchzyA+QLchryBeQPMhP5A/IJyfkE8gvJ
+QXyDcn5BvIPyfkH8hHJ+QjyE8n5CfIVyfkK8hfJ+QvyGcn5DPIbyfkN8h3J
+Q7yH8n5D/IhyfkQ8iPJ+RHyJcn5EvInyfkT8inJ+RTyK8n51f8B8yDRXA==

        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1:eJxNmHs81OkXx4dhMKQZareiFkWlGYPQ9ed5JFsuKSnd2y5I61L6RUo/3RTZ
zaaE6KZVuqgQYqt9ntitFBVdtVFKyv0uRP3W9D2Pef7xOq8Z8z3vcz7POd9z
DNdsmO+lzOPxpEo8Xv/fb2cILXH3dY43M6MV5f1HlzaN/2bfuN5/dOkfz36W
24lH+48uTTP9Zm+RH10aeMdHbi+UH10qaPWS2xPlR5fenrZKbovlR5fGv14g
t5sa+48ONTtiK7eLi/qPDlUO0JXbFy/0Hx2qpXTLqd/eH9l/dCjvvLHc9pYf
Hbr2topjvz1TfnRoXWrrj/22kfzo0Jnplvb99jdeHXrSbMf0AV4xXZZ2yXyA
V0ydovT0B3jFdNSrv7riGK+Yqu0puxHHeMW0YEvM4jjGK6af7n/IPMJ4xXTP
oIKUWMYroiFHP7YcYrwieq292vYg4xXRnO21yr8yXhGN2GO5eS/jFdFI/1P+
oYxXRCWqqc5+jFdEG9tv/bmQ8YroodEpMVaMbzDNmPTLahXGM5g22GfPIlLw
fzBtqav97wop+KtNX+3elfdEAv5p0+YyK51hEvBHm9bGFuh/PwGer03PvHA4
dXM8xHcQjdqVbNA2FuI5iE6wEcYmGkP8BtHTOfdcDhlBvAbRR9EyadYoiI8W
FakXTH82HOKhRR9vDM++rwv8WvRI8/1j3lrAq0XtYlI6tvKBV5N65PwY86pL
yvFq0rQCtWC/einHq0mts2r/1qmQcrxCWmdX2nunWMrxCmnUHl+XhOtSjldI
swpr7qWmSjleIR3p85uezSEpx6tB1916bpYcKuV4NWjRljfZ3p5SjleD7rcQ
1o2eI+V4NWhv07XVh22kHK867XDJPxdpKOV41em5sOJLNdpSjledJuq5dZ/5
KuF41WnCrkr1tHYJx6tGu8qCppU3SjheNZq8Pb+B1yTheNWoaXPPvmsdEo5X
QEviN7oE8IFXQCM715QtGAa8AjrVg6+90Ap4BXR9RJ5EexHwqlK/qmXpj3cA
ryqtO24kSb8EvKp0n+DDDL/XwKtKDxqpbj+qC/lVofpB94NPzYb8qlDRkzhS
sh3yq0JPTM5bHHIZ8qtC3xdMrKn/B/LLpx0t14LP8WUcL596mE5MWDhGxvHy
qZd60PjX02UcrzK9LLmVFeoi43iVafoGX172fBnHq0wHexhu9J0r43iVqeaH
JunTGTKOV4meDTV22yqVcbxKtGKRweaxIhnHq0TfTtBaWl8HelaiB6wK16nk
Ay+PJh50ul10GHh59Io0Qj1rDfDy6Ivvr46ZYA68PDrLpW5rfB/o9yu5uf63
0B+LQK9fyHLpiqC1xyFfX0j8Q4fMpkDITx95WdxrctMJ8tFHHqbpJ/mOA731
klu3Y019NEFfvWSn/ZqKxjbQ02diZGKprv0W9POZXLh3hnfxqYSLXw8Jy7V6
F/FAwsWrh8hCHaociyRcfLrJrjG9VTv+/fxbPLrJVv8xbeeeSDj+LvKwxjpw
agXouYu0zw/OOFML+v1EqmZGVyzvBr12EvOQAyOeawBvJwl8mXzvsB7wdhCv
2rHikWbA20HS45p3atgBbzvxyojU63MH3nYS+6taxnlvKcfbRsbNOvbHgxCo
D22k7cnXwslRcD9ayf88/FNpItyHVhJU/ION0wXQfwtpTKq2KsgFvbeQ4YVB
DYa34T43k9ihjZVrS6UcbzNJHlUb/ms55LORqO93V035ADwNpOR1qFVOM/hf
T7aMCo8q6QJ/68gVvrazgAf1uZZkVe+95yWAeltDfOLUHitpgd4+EivnBpN6
EdT/D2Rq9qZRNkOhnleTLuHmFc3DoD6/J2YnjE+Y6oM+q0i32akDbaOgX7wj
ysa21xYbQv1/S74L7A31Hg36rySBHR6644xBz29IAfI6nGoC/aGcJD1z/tIw
Fu7zPyR2rac7fzz4X0Ykd++ebhwP/j4nGiXmRjmm4N9TUpPpOuOnCeDPY3LJ
XfOvxgnw/BLy+JR5sY8EnldMNCbZ9D6SwO8XkoBufqipFH7vb7L0ZLwoRAr/
f4tUhURb3JDC9/OI+ZaUwd3s8wwy84TDOXPW75NJkmhxqSfrvzxe/QZfhfef
ZOT+MOyvQmZnoDq7mMY+9r6RhwLWW0ZYy9jz0VKf2V6bZMw/lDcD7cuRMf9R
bk2pnoo540NBl04lrjBn/GiBw9nCv81ZfFBY7P1SZMHih65Oilzw0ILFF+3U
P7s5xJLFH5WP025HE1l+0MmYTfYTrFj+0P7RvyRga5ZfNJkG8iNsWP6Rn3jn
HsFkpg9UcfzliLtTmH6QX1vC66fTmL7Q3nYbjWm2TH/I7FBGF9+O6RO5Wa2d
YjuT6Re5JnmGdM1i+kbS4bUbZrgw/aO8qocFEjd2P5D3Zbeiux7AU4fqLxc6
j1sB9bke7c5211rhCXwNKHP48jUhfvA+1IjCEsNjooKAtxklT2wUn94Bz29G
yzbWZt2LAv4WlNix5rxWPPjTgjJXta72TYF4tCKLTXmrqjLBv1b0g4Vfk38+
xKcNTf5aVtRRCv62oYvl/3n1UxXEqx051pe+D+8E/9tRx8j5oRYa0I860IaD
tUON9aF/daBVsVf3imXQ7zqRtGdKUaId9MdOFHvZdfsid+inn/6VimtuyVoZ
1Gc029P7feQmGdRv1CZINW4Pk0F9R4lXcn/fGwn9sRuNGFqZcTka+mkPOn83
PrPqIPTfHvRp57mrZ6OhX39GN+ZMitsTIYP+g6pzL0QbhMqgP6Hc2dty0XoZ
9C9EFs/yu+0GvH1oXv2fn/OtgLcPuUsqNgTqAO8XJAyKrbKtg3x+QSqu2w3v
E9DTV7RtsqPex4Ps/uKIwHr9+J9Yf8ZZ10dv4ktZ/8YPr7tGb+uB+szDO4Ki
Hq0uhPqvhLd/FspMk6AfKWHRjDvTZwRCv1DCDgGZRmpzoN4r4Yz8NIdsGfQX
ZbyyvdJnyQjod8pY2zndpGAQ9CNlbGnkHbdVCP1DGQt2i95miqB/8fGJxuX+
cw3g/YGP3WxPfnkxGfoHHwu19Qz2LYF+pIIN209estsF/VEFt7jp2eZchv6l
goOO2T5f/gZ4VbBJg9AgegjoXRXPsS4dccQR7q8q5tm3uOf/D/Svijtjcn4O
uwL3SxW//iGsemk53AcBzp1i+LOBAPIlwNc1X0SWjQO9CPDIhpCbZTNBrwL8
e5qvE10C+lHDxYcrB29ZB/pVwwEmI85LA0BPavhGofcytwDQszqepPb5wG4f
0Jc6Xjn1l+ORK0Df6vj4Qe2ama6gN3Us9hveeGYa6F0Dx64bbZ1kAvrTwOE3
H10UikD//9qaPW/udAGvBnb3UPY5UAm8QiyY5RTadQ/qmxCP3N10f1821AMh
bvD1d4pLBr0K8bwlgkTv36A+aOKYpIZHejtAv5r4d8dHBvkb2fyDV46MUZ3v
yeYj7CiemJy1hM1P+FSkZs+deWy+wkbV8yvXOLL5C9dYDlm62J7NZ/jkkdT1
21h9HoTfLdNyOjaVzXfY9UGRcuwkNv9hnRDr4GnWbD7EF4fFdG6cyOZHPNZD
d9v3lmy+xKFap8O/s2DzJzZetbB8Cetfg3F8e51RiYzNr/hpouHcDTI23+LS
M87WpjI2/2JxnqVqz8B8jPU/DHnxYmB+xsHPZM75A/M1fuxvM/7qwPyNzy5K
MTo/MJ/jxSvrD58emN+xfXXTohMD8z0OtmtMSRqY/7FnsW7r0YH9AK7TbnqX
MLA/wHprHWwTBvYL+OmivjKF/QP+84v4hMJ+AsfMu75NYX+Bd5qN91bYb+Bp
aYuWKuw/cJxpirvCfgQ3WVbNVdif4C1DSuco7FfwS4sMF4X9C35QNtRFYT+D
X/gVKO5vcJpDguJ+B9t/3qW4/8FDTgYr7ofwk48bFfdHeL1ugOJ+CZul+ynu
n7CBip/ifgrXpX97n+L2V1gj4pv9fwVYsiw=
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.363898, 0.618501, 0.782349], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1:eJxVWHtU1VUavaA8RETuRXylLrledaUj2iItUDmfk0lSWRbhWxBTMFRS1PAF
y7TykQt1HM1HKD6GMTHHBfgI4xwHTR0ER80kfGRZ5gNREVRQYbr3299tzfmH
ddbl9/udfb7X3jskIeWdSZ4Wi6WXh8Xi/Murlem8p/zA+BldzJXLzhVkonv+
6NofLnSuIHOhS4Vrv3GDcwUZHXLJtf/ItYLMu/2uuvbvuVaQOTbvhmsf5lpB
5nfPOtfe6lpBZviWdged+7tVzmUzR4NGufalp5zLZqw/nXXtd3/lXDZzIu3Q
Ied+2VLnspnkXkmFzv1k17KZ4OOLipz7wa5lM7bRjqPOvd21bGbJ+6rMuWe8
NtMxv/PVP/Faje45ovFPvFaz6li7vnFuvFbzecacVXFuvFaTfmXX8/FuvH88
X9+1+wQ3XqvJv2s5luDGazWbdxbFTXLjDTRvfPKvxVPceAONKk31/NCNN9Dc
uTk5cJ4bb6DJ6NZ36jI33kATfuu7NVvdeAPNjAnXPYrdeANNF8u2FbVuvIHm
izYnCiNnCr6WpupA1ls5MwVPS5PY0LYoIlXO39Jk9Ox2ymeWnDfArBo4pGvI
bDlfgCn8PKHyyzlyngDTtrT3ixvT5PsB5uGAWUNfmi/328JQRF3+pnS5zxYm
InbKheqP5f5amBDSjclL5b5amII23a+8nCn342+iovtGrFgv9+FvBuy5dGl1
tuD3N7fGee+ZtUfw+pvoaz7WtwsFb3Pj/dmhot4lgre56fD6XyKbXRa8zc2U
Zd8u3H9P8PqZzILsqnteDuD1M/8p2ZD3ZgcH8PqZ+ckVs/qHOYDXz+y9+SjJ
M9oBvM3MY++UwONxDuBtZvrvLm/ITHUAbzOzKCiuYtgSB/A2M7/0uTO3cpUD
eH2N1WI9MuILB/D6msSVBSvWbXAAr69pcaJ13oW/OYDX1zSOzX285FMH8PqY
CVnB89+d4QBeHxP10qPo4TEO4PUxyU3Lvqvq7QBebzNnU946Tzdeb5O7dPTM
499LfL2Nza9T1LmtEl9vMzjj8BmfZImvl4mJ3jx4YV+Jr5dJr41uleQp8fUy
Dd/4znpyzg68XmbS7NXx0bl24G1qerwYFvX8SjvwNjXBq/qPs6XZgbep6blo
8rqA6XbgbWrm5j+u2JFiB94mpiY05Ov/LrADbxPT7vpvlZa/24G3ibmR2/1Q
pwN24PU002OaBW7+2Q68nqZn+b4my2yC19MMzK/o/HWU4PU0WXteCP8qXfB6
GEock20tELweJq/x2p3PbwheD+Oz4NCY2tYSXw8zzKdm+LRIia/FfNZ/4tHU
cRJfiwkOOplzf6bE12KsEQvbDkqX+FpMeNaYQaEZEs9GXdKQnFo9W+LXoM+O
j+3TY6LkZ4M+mBHe7XiU5OMzHZB/mBodkn/PdNjTfh4RT6W+nuoP9ka/9qxM
6umpvpawJrsiS+rniY6f2L5+3DSplye6x2nvuQ39pR/U6/nfbHli9Zf7qte+
dydkFF+x437q9JnVo1b7F0j863TmtvLcfZkS78d6efzyYYNSJL6P9bxFzScF
x0g8H2k1/XRBbKTE76He82ZxsUeoHXj/2J8/X1xptwNvrV6T8bBPWQc78Nbq
iICCTa88J/lWozM6fx9X3lHyq0bvXze6vrlD8umBjmmZVTKil+TPA9194+CQ
F8MlX6r16Lg5qR2i7MBbrW9OKy1dEyt472uP4J2J9kTBe1/79QlOm5AmeO/p
srA+I6uXCd57+lx5qN+STYKvSk+Jiok8myt47ui1r56t2vGtnL9Sx33i2H26
VM57W5+NWbOrz2U53y1d07513t7bcp6bul182ycD6uT7N/SZyan3T3tJP/xd
9xz9SvvJVsn/63r4Uarx6CD5/JselfbTg11dJT9+1SMfhq9PDJV8uKY9ox6t
HdJP4v+LDv/hQreYgdLPf9afnExKyXpF+vNVPXPEwrqwoVJPl/XI2TPe6jJM
8u2ivrX2h5x570h9/agLSh7tiIqV817QFw+vdawfJec7ry9WU8fZY+U85/S6
No8/rRwv3z+jW1XmvOEzQb5Xqj2W7xpcliDvP6njvOJDh74v7zumZxxIyUuf
JM8f0SuaD0yeNVn+/5Bu+9zGn0IT5fd9OvtR0ep97n22Pl9b3tCQKHgtltU/
7treNsn9u6rF73he/Yrn8X618P/ef0S19ufv43yqy0E+H86vBnjz+YFPtVzB
+IBfjbzD+HE/qk07vh/cn9pSw/eH+1WVRXy/uH/VsYzvH/FRees5Poifykzj
+CG+yjGG44v4q+JSjj/yQwVd5PxA/qjlb3D+IL9U9lPOL+SfmpvB+Yf8VHGn
OD+Rv2rARM5f5Ldq+JDzG/mv5iVz/qM+1NbuXB+oH3U1gesH9aV+Xcv1hfpT
O2K5/lCfqtVork/Ur3Lc4fpFfauSoVzfqH+VH8X1j/6g3grl/oD+oUqWcv9A
f1EF87m/oP+o8we4/6A/KXso9yf0L5W0n/sX+ps6Qdzf0P9UcSj3P/RH9XAL
90f0T7Wglvsn+qtKmcr9Ff1Xpa7g/ov+rL7czP0Z/Vu1mcv9G/1d+Rzk/o7+
rwq3c//HfFD1T3k+YH6oTkd5fmC+qMjveb5g/qh/Y/5gPqnM8TyfML/Ux//g
+YX5phqreL5h/qn6bTz/MB/Ve8k8HzE/1bkonp+Yr8rzOs9XlC9lLuH5i/lM
GZ15PmN+07r6E675jflOtq483zH/6dSDB675D35AQ6YyPwB/oLE1zB/AL6gs
nvkF+AeNymX+AX5CYQeZn4C/UO+fmb+A31D7BOY34D+UVcT8B/yIAp4wPwJ/
on5DmD+BX1HDKeZX4F90YQPzL/AzKsthfgb+Rr8MZf4GfkfdlzK/A/+jupPM
/8APKcDyuosfgj+S79vMH8Ev6Sr4JfgnZXox/wQ/pZczmJ+Cv1LySuav4Lc0
tLrUxW/Bf2lvCPNf8GPy/pT5MfgzZf+V+TP4NX2Qy/wa/JtemsH8G/ycGq8F
uvg5+DstCWb+Dn5PsXXjXfwe/J9y1jD/hz6gV+9Nd+kD6AcKOM/6AfqCvEax
voD+oMWFrD+gTygph/UJ9Au9tpD1C/QNVRDrG+gf+iid9Q/0EalLrI+gn+iF
kayfoK9o5z9ZX0F/0fYhrL+gz+hyK9Zn0G90dyDrN+g7WhnD+g76j569zPoP
+pC8oQ+hHynpFOtH6EvqD30J/Ul9oT+hTykS+hT6lcKhX6Fv6TT0LfQvLYb+
hT6mYOhj6GdKgn6GvqYw6Gvob5oP/Q19Trehz6HfaSD0O/Q9vQ59D/1Pov/h
D5D4A/APSPwD+Ask/gL8BxL/Af4EiT8B/4KK4F/A3yDxN+B/kPgf8EdI/BH4
JyT+CfwVEn8F/guJ/wJ/hsSfgX9D4t/A3yHxd+D/kPg/8IdI/CH4RyT+Efwl
En8J/hOJ/wR/isSfgn9F4l/9D+Hzui8=
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[1, 0.75, 0], PointSize[0.004583333333333334], 
      AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1:eJxNmHtczOkXx2dqusxUamZi0dKaht2Vilis1PMsbcmm7eKyuSXp6lbpQkRb
SJtrLlH0iwiVy1ai0POQsklhyS2RSCjddE/sr3zPM3P+6XVe08z3vJ/P+Z7z
nDNi6WpnTxUej2fC5/H6/n41fWrt7umc4m9En1f2mZTGvPjqX7ncZ1I687FX
v59wqM+kNPGhT78f2m9Sqlm/ot+f029SamYe3O+P7zcpzbu6pd8X95uUPlqS
2u83NvSZhNpX1/T7pbf7TELDi9xc+vz0tD6T0PG7bGb3+THb+kxC5ya2zenz
vfpNQi+X67r2+db9JqGNsVmL+3xZv0nou6S7Pn3+V14Jdd18IUzBK6YHJrcc
UvCK6bKt5I6CV0w93EyNjzNeMTVTjbhxnPGKqR/f9PoJxiums8Tzl5xkvGJq
XX2o5zTj1aNdGa7fnWW8enRnxOLkbMarR40+4/P5jFePao3j6ZYxXj2art/z
cw3j1aNXPiWf0wgAXj1avLN62pQA4NWjy47kR0QFAJ8uPdms80N9APDo0tL9
ZX9vCoT4dal+XUyN/RqIdwBN2PslwCsI4htAGy3EG18FQzwD6KSV40ZUhcLz
B9CdJhlnwsPgfHVoncb2zOpwOE8dmrt/XvyUSDg/HTqt0yYzOxrOS4dW7ynL
i9wJ56NNt1i7bXp4AM5Dm97GhWXPk4FfmyY7ifYVZACvNm1wGD7paB7watGN
YyQrom4BrxZVF7Zmuz0DXi36bv2wNt0m4BXRS8PlO2apyTleEf110uSYMwZy
jldE9Y7oBSeZyzleEV0YbO/pYyfneIU0cHhLlpmbnOMVUq+a70q6A+Ucr5DW
WWwbdTlKzvEKaWiBdpDrbjnHq0lzDEMCb8TLOV5N2pxgWMU/JOd4NekJx8eR
eK+c49WktR5rBr7fIud4Nega8f38LH85x6tBLR2MTqW7yDleDSrx1nedZibn
eNXp+p8bMh0EwKtO5Q1/Z2s9AH3V6QUtkyTdZNBXnQbnZG+Z6gf6qlHXb5K7
0iaAvmq0xTX85i4+6Pv/zxtN1gy/L+N41WjtX+FT/dJlHK+AfrBKvWa7Xcbx
Cui38+Uu40JlHK+Ahj4urTVbKeN4BdRqt9D51ioZx6tKb114/KZnvYzjVaXf
/tNoNX6fjONVpT9W2I50zZFxvCr0146J5i+qZByvCp1OLojKxcCrQv8d/7pE
xRZ4VWgSXV2hvhF4+XRSt7VxcDbw8unWDxE9bbXAy6dD7Vptlg4Cffm0x/um
7TNL0JdH5x05WFG9EPTl0WsLOjoWB4K+PPosRONuWjjoy6Om0S65cRtBzy9k
8d3V2DEY9PtMsjOIWcRSyM/PZKPqxGh9W8jHXmKUbBIzXQ7510s61gYOCO6B
9+sTsf1eYm9WBu/TJ2IWeMVAkATvTw/J0d51btMKeF96SOc64jPEAupBN6lr
Xer8vRacVzdxN2n460GljDufLpImPJ41NBv07yJ2g5t+z98JencS/tG9T2at
An07iVPieXMjF9Czg9inLtL2tgT92omHcPCdgSYyjredzM4esUdNJuN420jI
gRkZ9QYyjreNzJpltstnKORbK5FGLwoSDIP8aiXWnxNzkRHk00fSckiSsncM
5M9H4lMwymvtZMiXFhJ+do63r42M420h7uOSUt7OAd5mEnNVZvenF/A2kxmW
f8QWhwJvExmR5l7oEQO8TWTOBnv+lwTgayCbRSq9czOA5wOZa21VNP4qxF9P
OldoqfuWQrx15IN5mKT8GcT3noQ7Vj51q4N43pHi1l7S1QnPf0tCfQu9EtSg
HtaStpja3Yjl/xvSk+EiqDeAfK4hBTlno1NHQn68Jg43azvWmkI+vCIVku/W
rZ4I+leT7mVJBfGWUM9fEt7KBdt51lCfq4j7y3KNXDt4nypJVMj0LXcdIN8q
yL559w3nusD79YS0vdoS9cc8iPcROdYlLqiZD/GVk9yWJVO1FkM894n9qd9j
ypfA8++RV377wxw94HmlZPb0+qHRnvD7xWSV1/1LUd7we4XEQRjZ9rsvfP8a
KRVWPGr1g//PJcjCuzpsBXz+N/nZNtb4/Urwj5Ipg+aGzlwNvDxeg9RT6f5z
FB0XB5l8CmDfR2eqrNYtXMN+H2XVL71eEsSejyYNb7ztFMLiQ2XDZ5xrD2Xx
o5Jr7XXX1zE+JKypjCHrGT86cXXC6PZwdj7IPyLMICCCnR+ymujrYxHFzhcl
ml16uWQrO3906FfrEQ0xTB8099/2zU07mH7oXtZWw5A4pi9abtd6eEc80x/N
yV812OYIyw/0scj45dkUlj8of0ia8aM0ll9Iy6s6ozST5R/yCzUYlnyZ5Sca
HhmSPL+Q5S8alVot1bgL94O3KP+mwCqjAuJ/h5Isb7+2fwv16j0a/6q++E0b
8NQhuYpjXIAA6nM92lWcn1Qphfr5AV3+GPtcIod624BGmv1zsnEC1Ocm1JMf
nmJrA/W8CT2N83lRPQ/qfzNy4wcOCfeF+0Azuh55ckFhGNwfWlC43hj+4ljo
vy3o6b4gy8oE6Ncf0bQ/U6zKTkF//4iepF/kZ2VDv2hFvjNM69TzIf5WNI6u
GDvtBtT7NjSxO2Hg8yLgaUNvz//Z6VoI/aIdBcedkv5CgK8duU7NLB+bDf2m
A1UfWXHwRQrwdqLbqUMCjXYCbyeKTppY0hkIvF1otPzp7G3OwNuFLMxGNRub
AG832qHxbEigKvB2o2wLb2fDh6y/oMGZoqkmqaz/oNNDLdqKglh/QmHndWKm
TWf9C91pv/jHN1LIl150N3negXs1UD97UUHwYQPVq9AvPqPBuvuGmbN6+xnN
8BAFF22EfvMFPbCcv6x9OdRnHpZvDanLWgr9godjD1x/kOgB9ZSH8zL/zahd
BfWZh03XjCv22Az1n4/D01UW+aVAP+Jjw7LyRa9vQX3m42GmdqcduyBePnYa
tWXdvTHs/oEHe84vRh7sfoINO2oeT0+AfFbBl/31EwLuwP1VBbtb7g305kH+
qOLoRZGbPowGPVXx/TVPPaWzIJ9UceC25qszPUFfAbY6R503sPuIABt7f7oy
KAj0FuA9r084DfSDfBNg0mv06vNs0F8N3zlr7/PsJ8g/NRxvc3jcDwMgH9Tw
/kf2lTkv2P0ROw8cnZ6Ywe6X2DBgoKEolN0/8fVBR9Qn/QK86tjDbHDTFB3g
VcfBLyqaO55Bv9bAJWcu/CbIBD01sHFB6qeEHdAvNbB5b3tNnD/oq4nzTs3d
tXAB6KuJL+Y1j1B3AH01cdXqtBvWM0BfTTylzsU80g70FWLTGVfHfnAEfYW4
4e4vG2MXgb5CLPrx9JPfVoG+Qvyy+VHToEi4P4iw8Eg4eh4P+SnCm0JzzU6d
hX4uwmtf7DE4VAj5KsIju09801UBvFq4Kynj3MRm4NXCedKHjW8EbP7Brc0X
JxcMYvMRVr+XvvLEKDY/4RN3iF7UBDZf4cSXgofemM1fuPy530j/mWw+w9Pj
et4VOLP5DW8bE9Wyx5XNd3j/rkAdbTc2/+HSYVYtHh5sPsQbOod1/OPF5kcs
zT0Y5eXL5ku8/f2lUR7L2fyJBXtvmVex+6cuTrXApGslm18xb09PS9EqNt/i
CT9d2TCf9V89HBGjJS9YzeZjbHSw1l1bMT/jn0b/2GalmK+xneSOn7ti/sZ1
bcX71yrmc1z+Q0xrtGJ+x36pywVxivke88L8Nx9UzP84x3rs6cOK/QA+M9Df
+n+K/QHePfJwdbJiv4BLjGZWHVXsH3D8zcR1xxT7CXwgWVR+TLG/wMsaHomU
9hv46DH90Ur7Dyze1mWhtB/BWomDbJT2Jxg55f2mtF/Bx2MfOCjtX/DN+ChH
pf0MDl/i56S0v8FnrV87Ke13sFGRkfL+B2Nfa+X9EC5pna28P8ItUxYp75ew
m6O78v4Jn3fwUN5P4QDbZc4KXn2cU/jV/w+wJMt5
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.004583333333333334], 
      AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
/hL8Jyr9J/hTVPpT8K+o9K/+B5el0qo=
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.571589, 0.586483, 0.], PointSize[0.004583333333333334], 
      AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
oP1/F/3CJA==
        "]],
       FontFamily->"Arial"]}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.86541357846204*^9, 3.86541363269973*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"af61346c-a552-4274-8f09-332158c95d10"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Discretization (our model)", "Subsection",
 CellChangeTimes->{{3.865410180182604*^9, 3.865410198686184*^9}, {
  3.86541745104632*^9, 
  3.865417465733119*^9}},ExpressionUUID->"52eeacdd-c05b-4680-a387-\
380e122bcba6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"latexCouplings", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "->", "\[Alpha]"}], ",", 
     RowBox[{"\[Lambda]", "->", 
      SqrtBox["\[Delta]"]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"physicalCouplings", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", "q2"}], "+", 
          RowBox[{"m2", " ", "q1"}]}], 
         RowBox[{"m1", "+", "m2"}]]}], "\[Tau]"}]}], ",", 
     RowBox[{"\[Beta]", "->", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]], 
        FractionBox[
         RowBox[{"2", " ", "q1", " ", "q2"}], 
         SuperscriptBox["r", "3"]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         RowBox[{"m1", "+", "m2"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", 
           SuperscriptBox["\[Omega]2", "2"]}], "+", 
          RowBox[{"m2", " ", 
           SuperscriptBox["\[Omega]1", "2"]}]}], 
         RowBox[{"m1", "+", "m2"}]]}]}]}], ",", 
     RowBox[{"\[Gamma]", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]]}], 
       FractionBox[
        RowBox[{"3", " ", "q1", " ", "q2"}], 
        SuperscriptBox["r", "4"]]}]}], ",", 
     RowBox[{"\[Delta]", "->", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "m1", " ", "m2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            SuperscriptBox["m1", "2"]}], "+", 
           RowBox[{"3", "m1", " ", "m2"}], "+", 
           RowBox[{"2", 
            SuperscriptBox["m2", "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"m1", "+", "m2"}], ")"}], "4"]], 
       FractionBox[
        RowBox[{"q1", " ", "q2"}], 
        SuperscriptBox["r", "5"]]}]}], ",", 
     RowBox[{"H", "->", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"m1", "+", "m2"}], 
         RowBox[{"m1", " ", "m2"}]], 
        FractionBox[
         SuperscriptBox["HBAR", "2"], "2"]}]]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HHrule", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "->", "0.6099"}], ",", 
     RowBox[{"m2", "->", "0.6099"}], ",", 
     RowBox[{"q1", "->", "0.7080"}], ",", 
     RowBox[{"q2", "->", "0.7080"}], ",", 
     RowBox[{"\[Omega]1", "->", "0.4273"}], ",", 
     RowBox[{"\[Omega]2", "->", "0.4273"}], ",", 
     RowBox[{"HBAR", "->", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramRules", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "->", "1"}], ",", 
     RowBox[{"\[Tau]", "->", "0"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.865417597034564*^9, 3.865417685352819*^9}, {
  3.865418543969873*^9, 3.865418544077344*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"ced0f5ab-f71b-49e7-acfe-9eeac32023d4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"v", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"A", " ", "x"}], " ", "+", 
    RowBox[{"\[Beta]", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"\[Gamma]", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{
     SuperscriptBox["\[Lambda]", "2"], " ", 
     SuperscriptBox["x", "4"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "[", "x_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"v", "[", "x", "]"}], "//.", "latexCouplings"}], "//.", 
      "physicalCouplings"}], "//.", "HHrule"}], "//.", "paramRules"}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.865410440070257*^9, 3.8654104555054197`*^9}, {
  3.865410573522439*^9, 3.865410593314836*^9}, {3.865417541064334*^9, 
  3.8654175634802628`*^9}, {3.865417731129198*^9, 3.8654177542204733`*^9}, {
  3.865417798061221*^9, 3.865417815145299*^9}, {3.865417895149723*^9, 
  3.865417902217391*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"4b4e8b6b-cf49-4819-b9ce-2e8d9a2f0f33"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotV", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"V", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8654105962790318`*^9, 3.86541065498062*^9}, {
  3.86541785343839*^9, 3.865417878025732*^9}, {3.865417909275345*^9, 
  3.865417909481786*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"ea1224fa-2077-40d0-9648-5875e75eccbd"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
5mA7D///rwU19jksTNfm4X/EQgIJ
       "]]},
     Annotation[#, "Charting`Private`Tag$86199#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-20, 20}, {0., 73295.92084200642}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.865417866370287*^9, 3.865417878603217*^9}, 
   3.865417909775137*^9, 3.8654185555264397`*^9},
 CellLabel->
  "Out[238]=",ExpressionUUID->"f752c275-6750-47a5-8dc1-1bb77f98a9df"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "2000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]x", "=", 
   FractionBox["L", "n"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.865410727784152*^9, 3.8654107424994583`*^9}, {
  3.865418026672928*^9, 3.865418028490274*^9}, {3.865418439024941*^9, 
  3.865418448268615*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"177a731d-1a8c-455a-8739-2936a27dc784"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M", "=", 
  RowBox[{"SparseArray", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", "i_"}], "}"}], "->", 
       RowBox[{
        RowBox[{"V", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["L", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "\[Delta]x"}]}], "]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            SuperscriptBox["HBAR", "2"], 
            FractionBox[
             RowBox[{"m1", " ", "m2"}], 
             RowBox[{"m1", "+", "m2"}]]], "//.", "HHrule"}], ")"}], 
         FractionBox["1", 
          SuperscriptBox["\[Delta]x", "2"]]}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"j", "-", "i"}], "]"}], "==", "1"}]}], "->", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"2", 
           SuperscriptBox["\[Delta]x", "2"]}]]}], 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           SuperscriptBox["HBAR", "2"], 
           FractionBox[
            RowBox[{"m1", " ", "m2"}], 
            RowBox[{"m1", "+", "m2"}]]], "//.", "HHrule"}], ")"}]}]}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "+", "1"}], ",", 
      RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8654107489514227`*^9, 3.865410780436141*^9}, {
   3.865410816275703*^9, 3.865410903285276*^9}, {3.865410938964745*^9, 
   3.865410939253684*^9}, 3.865410971430784*^9, {3.865418186910654*^9, 
   3.865418189611549*^9}, {3.8654182300280523`*^9, 3.865418331982036*^9}},
 CellLabel->
  "In[242]:=",ExpressionUUID->"579b719a-ea96-4776-b7fe-fbbfc4885bff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6001", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"2001", ",", "2001"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6001", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"2001", ",", "2001"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.0014987508744378436`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "182625.4628217816`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "2623.380882111822`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "2623.380882111822`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "2623.380882111822`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[Automatic, {2001, 2001}, 0, {1, {CompressedData["
1:eJwl2YMOIMqCQME72LFt27Zt27Zt27Zt27Zt2zZeZaeT+oFOn7TiN2hboU2A
//7770LQ//5/BOT/CEZIwhCeSEQlBrGJR0KSkJxUpCUDmclGTvKQn0IUpQSl
KUdFqlCdWtSlAY1pRkva0J5OdKUHvenHQIYwnFGMZQKTmcZM5jCfRSxlBatZ
x0a2sJ1d7OUAhznGSc5wnktc5Qa3ucdDnvCcV7zlA5/5xk/+EMAEByYoIQhN
OCIShejEIi4JSEwyUpKG9GQiKznITT4KUoTilKIsFahMNWpSh/o0oiktaE07
OtKF7vSiLwMYzDBGMobxTGIqM5jNPBayhOWsYi0b2Mw2drKH/RziKCc4zTku
coXr3OIuD3jMM17yhvd84is/+B3g30INRBCCE4qwRCAy0YhJHOKTiKSkIDXp
yEgWspOLvBSgMMUoSRnKU4mq1KA29WhIE5rTirZ0oDPd6Ekf+jOIoYxgNOOY
yBSmM4u5LGAxy1jJGtazia3sYDf7OMgRjnOKs1zgMte4yR3u84invOA17/jI
F77zi78EDKR/ghGSMIQnElGJQWzikZAkJCcVaclAZrKRkzzkpxBFKUFpylGR
KlSnFnVpQGOa0ZI2tKcTXelBb/oxkCEMZxRjmcBkpjGTOcxnEUtZwWrWsZEt
bGcXeznAYY5xkjOc5xJXucFt7vGQJzznFW/5wGe+8ZM/BAisf4ISgtCEIyJR
iE4s4pKAxCQjJWlITyaykoPc5KMgRShOKcpSgcpUoyZ1qE8jmtKC1rSjI13o
Ti/6MoDBDGMkYxjPJKYyg9nMYyFLWM4q1rKBzWxjJ3vYzyGOcoLTnOMiV7jO
Le7ygMc84yVveM8nvvKD34H/bVKBCEJwQhGWCEQmGjGJQ3wSkZQUpCYdGclC
dnKRlwIUphglKUN5KlGVGtSmHg1pQnNa0ZYOdKYbPelDfwYxlBGMZhwTmcJ0
ZjGXBSxmGStZw3o2sZUd7GYfBznCcU5xlgtc5ho3ucN9HvGUF7zmHR/5wnd+
8ZeAQUwtwQhJGMITiajEIDbxSEgSkpOKtGQgM9nISR7yU4iilKA05ahIFapT
i7o0oDHNaEkb2tOJrvSgN/0YyBCGM4qxTGAy05jJHOaziKWsYDXr2MgWtrOL
vRzgMMc4yRnOc4mr3OA293jIE57zird84DPf+MkfAjhbBSYoIQhNOCIShejE
Ii4JSEwyUpKG9GQiKznITT4KUoTilKIsFahMNWpSh/o0oiktaE07OtKF7vSi
LwMYzDBGMobxTGIqM5jNPBayhOWsYi0b2Mw2drKH/RziKCc4zTkucoXr3OIu
D3jMM17yhvd84is/+B303wE1EEEITijCEoHIRCMmcYhPIpKSgtSkIyNZyE4u
8lKAwhSjJGUoTyWqUoPa1KMhTWhOK9rSgc50oyd96M8ghjKC0YxjIlOYzizm
soDFLGMla1jPJrayg93s4yBHOM4pznKBy1zjJne4zyOe8oLXvOMjX/jOL/4S
MLj+CUZIwhCeSEQlBrGJR0KSkJxUpCUDmclGTvKQn0IUpQSlKUdFqlCdWtSl
AY1pRkva0J5OdKUHvenHQIYwnFGMZQKTmcZM5jCfRSxlBatZx0a2sJ1d7OUA
hznGSc5wnktc5Qa3ucdDnvCcV7zlA5/5xk/+ECCE/glKCEITjohEITqxiEsC
EpOMlKQhPZnISg5yk4+CFKE4pShLBSpTjZrUoT6NaEoLWtOOjnShO73oywAG
M4yRjGE8k5jKDGYzj4UsYTmrWMsGNrONnexhP4c4yglOc46LXOE6t7jLAx7z
jJe84T2f+MoPfof4dzkNRBCCE4qwRCAy0YhJHOKTiKSkIDXpyEgWspOLvBSg
MMUoSRnKU4mq1KA29WhIE5rTirZ0oDPd6Ekf+jOIoYxgNOOYyBSmM4u5LGAx
y1jJGtazia3sYDf7OMgRjnOKs1zgMte4yR3u84invOA17/jIF77zi78EDKV/
ghGSMIQnElGJQWzikZAkJCcVaclAZrKRkzzkpxBFKUFpylGRKlSnFnVpQGOa
0ZI2tKcTXelBb/oxkCEMZxRjmcBkpjGTOcxnEUtZwWrWsZEtbGcXeznAYY5x
kjOc5xJXucFt7vGQJzznFW/5wGe+8ZM/BAitf4ISgtCEIyJRiE4s4pKAxCQj
JWlITyaykoPc5KMgRShOKcpSgcpUoyZ1qE8jmtKC1rSjI13oTi/6MoDBDGMk
YxjPJKYyg9nMYyFLWM4q1rKBzWxjJ3vYzyGOcoLTnOMiV7jOLe7ygMc84yVv
eM8nvvKD36H/PUwFIgjBCUVYIhCZaMQkDvFJRFJSkJp0ZCQL2clFXgpQmGKU
pAzlqURValCbejSkCc1pRVs60Jlu9KQP/RnEUEYwmnFMZArTmcVcFrCYZaxk
DevZxFZ2sJt9HOQIxznFWS5wmWvc5A73ecRTXvCad3zkC9/5xV8ChtU/wQhJ
GMITiajEIDbxSEgSkpOKtGQgM9nISR7yU4iilKA05ahIFapTi7o0oDHNaEkb
2tOJrvSgN/0YyBCGM4qxTGAy05jJHOaziKWsYDXr2MgWtrOLvRzgMMc4yRnO
c4mr3OA293jIE57zird84DPf+MkfAoTTP0EJQWjCEZEoRCcWcUlAYpKRkjSk
JxNZyUFu8lGQIhSnFGWpQGWqUZM61KcRTWlBa9rRkS50pxd9GcBghjGSMYxn
ElOZwWzmsZAlLGcVa9nAZraxkz3s5xBHOcFpznGRK1znFnd5wGOe8ZI3vOcT
X/nB73D/HqUDEYTghCIsEYhMNGISh/gkIikpSE06MpKF7OQiLwUoTDFKUoby
VKIqNahNPRrShOa0oi0d6Ew3etKH/gxiKCMYzTgmMoXpzGIuC1jMMlayhvVs
Yis72M0+DnKE45ziLBe4zDVucof7POIpL3jNOz7yhe/84i8BI+ifYIQkDOGJ
RFRiEJt4JCQJyUlFWjKQmWzkJA/5KURRSlCaclSkCtWpRV0a0JhmtKQN7elE
V3rQm34MZAjDGcVYJjCZacxkDvNZxFJWsJp1bGQL29nFXg5wmGOc5AznucRV
bnCbezzkCc95xVs+8Jlv/OQPASLqn6CEIDThiEgUohOLuCQgMclISRrSk4ms
5CA3+ShIEYpTirJUoDLVqEkd6tOIprSgNe3oSBe604u+DGAwwxjJGMYzianM
YDbzWMgSlrOKtWxgM9vYyR72c4ijnOA057jIFa5zi7s84DHPeMkb3vOJr/zg
d8R/H1KBCEJwQhGWCEQmGjGJQ3wSkZQUpCYdGclCdnKRlwIUphglKUN5KlGV
GtSmHg1pQnNa0ZYOdKYbPelDfwYxlBGMZhwTmcJ0ZjGXBSxmGStZw3o2sZUd
7GYfBznCcU5xlgtc5ho3ucN9HvGUF7zmHR/5wnd+8ZeAkfVPMEIShvBEIiox
iE08EpKE5KQiLRnITDZykof8FKIoJShNOSpSherUoi4NaEwzWtKG9nSiKz3o
TT8GMoThjGIsE5jMNGYyh/ksYikrWM06NrKF7exiLwc4zDFOcobzXOIqN7jN
PR7yhOe84i0f+Mw3fvKHAFH0T1BCEJpwRCQK0YlFXBKQmGSkJA3pyURWcpCb
fBSkCMUpRVkqUJlq1KQO9WlEU1rQmnZ0pAvd6UVfBjCYYYxkDOOZxFRmMJt5
LGQJy1nFWjawmW3sZA/7OcRRTnCac1zkCte5xV0e8JhnvOQN7/nEV37wO8q/
z+hABCE4oQhLBCITjZjEIT6JSEoKUpOOjGQhO7nISwEKU4ySlKE8lahKDWpT
j4Y0oTmtaEt7/gdJrTRx
     "], CompressedData["
1:eJxtnFMQnWcXRmPbtm3btm3btm3btm0bbdKwaVPEatTgf5/peuffcyYXz6y1
9uW5OnPmO1/SZp2rdQoWJEiQrrGDBAka5L8Fg8HxYHgIw5BuoYz7Du0WxnhY
c5OHw8Pj/haBm2dEFombPDIdCY9iGNUwmlt0GBWPYe7ymDAWHhN3H0OQONB2
XBgP94zvlgDqltC0PBHtPbFhErekxn0nM0zOUtAp6JRMnYql5iam4ZYW1y2d
ae/p8Qx4RqjORFvPjGfBtay0mC3AsxvmcMtpXMvFLSee2y2Pcd95YT48P8zH
1AWYvCArxE0szK2I6SKwKF4ML4oXZ/ISuFjSsJRhaSYvw8pyk5ejyxuvgJfH
xYpulWAFvLK5V6G1qnQ1WJWpq7vVCPCaxmvRWm3asw5eFxfr4fVx3RqYFhty
a2S8Id2YNTHdlNaa0WJz4y1osSXeCtettWmxDbe2xtvhurWHunWA7fGOeCfT
nWl5F9NiV26e3dy6097FHnhPvBfsyXpz0/rQnn2Zuh8u9mcD6IG4v6kHMflg
tyG096EBPgwOx0dA9Ug4go3iNtq4OIbbWDgGF8fh43HPCWwit0m4v6knwym4
51Q2jdt03N9mcPOc6TaLls+m/V09B87FxXm4OJ/bAtMLaeuLmHqx2xJavtTc
lsJlbsvhUnyFua+kV8GV+GpcXGNu8rVu66B6vekN+Hqm3sjkm9w2w43Gt7ht
peXbaOvb2Q5u3nca7nLbDXfie+g99F62j9s+ej9+APc8yA5xO0Qfxo/gh/Gj
hsfcjkP1CXM7SVs/5Xaalp+hvZ+lxXPmdp7WLtCeF3Hxkttl41do71fpa6a1
69y0G/RN4z+Z9v4zU99i6ttM/Qt+B79r/B5+l93nJj7AH9AP2a/c5I/o36D6
d6jbY1r+h+k/Tcv/or3/DZ/g2lNafGb8Of0CPmcvub3AX7m9hrbfwLf4O/gW
/8f4e/qD8Y+mxU/ctM/0vwH+hRa/mts3WvxuXF/wv3OTBw36fwZzCw5th3AL
GeBiKFwM7RbGeFhaHs60GJ6bGAGPQEdk6khukWnvUfCopqPQ0dyiQ3UMc4sB
Y7rFor3HxuOYjk3HNYznFj/AE+AJcX9TJzJM7JYkwMWkbsnopKaTM3kKt5S0
91TGU9NimgBPC9PhnumZOoNbRpjedCYmz4xnwcWseDZct+yms9E53HIaz0XL
c5vORedxywvV+Ux7z8/UBdwK0vJCtL+rC8MiuFaUFovhxU2XoL2XpEvSpdxK
Q93KmPZeFi+Hl8XLwwp4ebwik1dyq0x7F6u4VYW6VTPtvTqrwc17TbdaxrXa
3OoYF+tyE+vh9U3Xoxu4NYS+G3FrbLwR3QQ2xT2b4c3xFrA53jLAWzF5a7c2
ULe2puXtaHl7WutAe3bEO+FiZ1zswq0rrls3XLfusBsu9nDrCbub7uXW27jv
PqwvLfbj1t90P3oAHIh7DmKDuQ0xLR8a4MPYcHqEafnIAB8FR+PaGHrsD3yc
23haPsHcxtMT4SRcm0xPwqfAqbg4DRenc5tOz3CbCaebnsVm03NMz4FzcXEe
m08vML0ALmTqRWwxtyX4IuNL3ZbRS9lybisCfCXtfZXhaiZfw9Zyk6+j1xtf
R29g8o1sE7dN9Ga3LVC3raa34VuZejuT72A7uXnfxXbTe0zvpXdD9T6237T8
ADyIH8APGR52OwLVR017P+Z2nD5m+gQ8iWunaM/T+Bn8LDzDznHTztMX4Hlc
vOh2CV4wfZnJr+BX8WtQfR3qdoOW3zQt/4kWf+Z2C9ftNn4LF39h6jvsLjf5
PdrzvtsDeA8+5Kb9Sns+wn/DH+G/uz2G6j9Mi39y+wuq/4a6PaGtP2XqZ0z9
HH+BP8dfur0y7vs1e2Na/tbtXYD/g4vvze0D7fkR/4Rrn2nPf92+wM/4V/or
/c3tO/2N6Ud93YIG+7+LwYL9d/MMjoshmDwkC8UttGl5GDwsrls40+HxcEwd
wTCiWyTjkWl/V0eBUXEtGq1Fp2PA6Ewdk8UyHZuOA2PjcXExnrnJ47MEdELT
WiJuYmI8MZ2EJeXmPRlMjqcI8JR0KtNaam5pYGqmTgvT4elhOpaBm5aR9szk
lhlmhFm4iVnxbHgW49ndctDexZxuueicLDe3PDA3LubF8+F58fyGBWBBXCtE
a4XpIgFelC5mWl4cF0twK4n7WyluWmm6TICXpcuZ1spzK4dXcKtovBItr2za
exWmrsqqcauO+5u6BqtpWl7LrbZx33WYvK5bPahbfdMN8Pq42JCpG7HG3MQm
5iZvyuTNmLo5U7dg6pZurWAL2Jqb2MZ4W1prR3u2x8UObh2hupPpjnRnwy5M
3pWpuzF1d7wH3hP2YL24ab1psY/xvnQ/qO4P+7EB3AbCAbg4yG0wLR9Cex9K
y4fRQ/HhcAQ+8gc+ChdHG45hY+mx9DimHs8mcBMnchMncRMnm9sU2nMqLk6D
03FtBu05020WnGF6NpyDz4VzmHoek8/HxQWGC9kierHpJbR8Ka7bMrgUX46L
K8xtJb3K+Gp8Fb4mwNe6rTO+3tzkG4xvpDfgmww3u22Btrcy+Ta2nZv3HW47
oe1dbrvhTuN78L34PrgXF/e7HYD7jB90O0TLD5vbIfoIO0ofpY/hx3HPE/hJ
XDtFn4ancPEMU5/FxXPsvOkLtOdFdonbZfyi8StMfRUXr8HruHgDv2n6Bv0T
k/+M38I9b7v9Am/hd+i7pu9B3e5D3R5A3R7S8l9NPzL9G/4I/x1/bPoP+Jip
/4R/4Z5/409w8WmAP2PP6Rem5S/xV6a119zewNfsLTfxXYD/w96bln9w+xjg
n3DxM7d/8U/4F1r+lf5m/LtpPcTjWwwa/L+bJg/mFhyqQ5gOTodkoWgxNLcw
psPS1sOx8NzkEWgtIq1ForXItBgFj4r7mzqaYXS3GMZ9xzSMBWPjcQI8Li3G
M7f4dALjCfEELBG3xDARUycxTAqT4Vpy2jOFW0raeyo8tWktDTcxLS6m4yam
Nzd5BibP6JYJZjCdmWWhxazcsuH+lp1bjgDPSXvP5ZYbqvOYm5aXW74feH6m
LoAXxMVCeGHc39RFYFHcsxheHC9hXCzJrQReyq208TK09bJu5WAZvDxdwbS8
Il7JtFaZm1aFrmpcrMZNrI5Xp2vgNXGxVoDXdqsD1XVN16HrMXl9twZQt4am
G+EN8cZ4E7wR3pT23syteYC3wMWW3FqZbg1bMXUbt7ZQ3c609/asA7eOprVO
3LTOtGcX1pVbV7ob685N7MGtJ65bL1y33rS8j2mxLzetHy32xwfg/jaQmzaI
1gbTQwJ8KD2UHuY2HA7FR9AjTY+Eo9xGw5GmxxiOZeNMj6cnwPH4RHwiPQmf
jGtT6KlwClNPc5sOpxqf4TaTls8yN202tzk/8Ln4PHy+8Xn0AreFxheZm3wx
vphe4raUli+j5ctNL6NXGK5kq+hV9GpcXGO4lsnXua2n5RvMbSMt32Ra3Mxt
E77FcCvbRm/HtxrfwXZyk++id8Nd+B7je+k9+D7D/YYHmPyg2yF4wPRhwyNu
R41rx7hpx+kTAX6SFk9xO0WfdjtDexfP4uI5dt60/AK8iF/AL7ldDnDxittV
eNn0NXgd97zBbnLz/pPbz/Amfsvc5bfhL/ht/A6T33W7R981fZ/JH+AP8Qf4
r4aPmPw3t99p+WNzewz/wMU/mfwvXPybPaGf4v72jNtT/Dl7QYsvuYmvuL02
LX+Dv8V1e2da/g/9HtftA/4eFz/in/CP+Gcm/9ftCy3/am5f4Tem/o6Leng/
aIj/e7AQ/78FpYO7hYDBjId0CwV1C23aexi3sDC06XAwPB7BeEQ8AlNHYvLI
uBjFLSpURzO3aDA6U8dwiwmjm44FY+Oecdzi0nFYPG6e8d0SwHh4QjqR6cQw
EUvCzTOpWzJantzc5CmMp6RT4KlYatNp6LQBno5Oj6fFM9DyjLSYyXhmWstC
Z4XqbHQWqM7O5DnccsLsxnO55ablecwtL50bqvMZ5ocF8Px4QbdC0HZhVoQu
ivubuphhcSYvgZfES/3AS+NiGcOysBwulscrmNYqcquAVzKszKrQVU1r1bhV
xauzGnRN0/JaxmvTnnVYXW71cH9T13drAH035KY1orXGdBOobgp1a0Y3germ
bi2guqXpVqblrWl5G1psi7cz3ZZuz+Qd3DrC9sY74WJnty7Gu9LWu7Hu3HqY
7knLe5nuSfdm8j6sL7d+eB+8P+19ABtID6QH4eJgJh/C1EPdhtHexeFuI2j5
SHMbQY9i8tFsDDf5WFoch4+jx+PiBDgR95yET8bFKfhU01PoaYbT3WZA9UzT
M+hZbrOheo65zYVzmHoenI/Pwxcw+UK3RXCB8cX4EnwpXMLUy5h8udsKqNtK
c9NWcRNX46vpNW5r4WrT65h8vdsGuM74RlzcBDfjW4xvxbfg2/DtuL+pd7jt
NL6Llu/GddsDd7O93Pbg+wz3ux2A6oOmD9CH4GFcPBLgR5n8mNtx+hg7wU08
iZ8yLT+Nn8H97Sw38Rx+3vQF+hxUX2TyS26X4UXjV/Cr+DXj13HdbsDrTH2T
yX9y+5mW36Kt38Z/wcU7+B36Ln4Pv4vfN3zAHtK/mn4EdfsNPmK/c9Me09of
9GP8T8O/4N+45xOmfsrUz/Dn+AvjL02/wl+y19ze/MDfsnfcxH+4vcf97QO3
j8bFT9w+G/9E/8u+0F/or/g3/Dv8xtT+j7vyoI7BaHlwWh7CdEg8BAvFzTM0
C8MtDB2WheMW3nQEGJ5F5KZFosXIeGQ6Ci5GdYsG1dFNxzAd07T3WLgY2zCO
YVwWj45vWkvALSFMgIuJ3BLTiVgSblpSOgmezDA5TIGn/IGnwlPjWhraMy2e
Dk8P0+FiBqbOiGfCM+KZYRbcM6tbNtq7mN0tBy3PaW45YS633LQ8j7lpebnl
C/D8tLwALRYM8EKGhd2KQNtF3YpB28XdSgR4SeOl6NKwFFOXgWXxcj/w8rhY
wa2ica0SN8/KblVgJViVm1gNr266Gl0D1sRr4LXcahv3XYfVpevS9XCxvlsD
474bwka41pgWm+BNTTeFzXCxuVsL2Mx4S6Zu5dYa6tbGtNiWm2c7vD3u2cGt
I2xvupNbZ+NaF25dobob7b07Lfbg1tO0vBfei+7N+nAT+3LrS/dz6w/74gPo
gXh/fBA9GNdtCD6YqYeyYfQwejhTj3AbSctH0fLRuG5j6FFQPdZwnOF4NsG0
fKLhJLfJxqeY2xQ41W0anAKncxNnBPhMOAufbXwWPcdtLpxtfB6bz02+gJ6P
L3RbBBcYX4wvwZfCJWwZt6X4csMVbiuNrzK3VXA1vgZfja91Wxfg6wN8g9tG
uN74JrfNcCPcws1zK1Nvc9tOy3eYm7aT2y7jO+ndcA8u7sX3md4H9+PiAbeD
UH3I9EH6sNsR40fN7RgtP276BH4cF0/ip/CT+Gm3MwF+1vg5+jxUX6DPQfVF
Jr/kdhleNH0FXsU9r7ldp6+xG9xuwhtM/ZPhz263jN82t9vwF1y8w+R3cfEe
vI+LD/CHpn+FD9kjbtpv9CP8d8PHTP4HU//p9hfU7W/T4hNuT+ET9oyb53P2
gpv8Ja29oj1f4+Ibt7fQ9jv4Dy6+x8UP5ib/6PYJqj+b/hf/zL5wE78a/0Z7
fmd6Qc83qA4a6r8FC/XfLTiuWwg8OB7SeCg6JB7aMAyTh2XhuIXHw+IRaHlE
OhKMiIuRWRRuUfHIeDTae3QWg45pOhZtPTYuxmHyuHg8XItPJ4DxmTqhWyLj
iWl5Ely3pDAJUyeDyXEtBe2ZkqlT4WJqtzQBnjbA0zF5eqbOgIsZDTO5ZYa+
s3DzzOqWjc7KsnPLAbPjYk5czOWWG9rOA/Pi+X7g+XGxgGFBVsh0YdqzCC4W
dSsG1cXNrQQsjpfES5nWSnMrY1wsy00rR5eH6gqwPKvIzbMSq8xNrMKtKl7Z
eDW36nQ1VoObZ01Wi5v32m51Alysy+pxq0fXd2sA6xlvyNSNmLqxWxO6semm
TN7MrTntvQXe0nQLupVba+NaG25tYRumbufW3ngH2ntHWuzErTPeEe9Ce+/q
1g367s5N7IGLPbn1Mq315ib2wfua7gf7MnV/twEBPtD4INpzMFMPwYfi4jB8
uOlh9Ai3kVA9yrQ4mtuYAB9Li+O4jaPHswncJtAT2SRu4mRuU0xPhbpNo6fA
6dw8Z+Az8Rn4LLfZxueY2xw4F5+Ha/PpBT/whW6LaO/iYnwJri2ll8GlbDm3
ZfgKuBJfZXy1afkaeg291m0d7X09Lm7gttH0JriRqTfDLbi2ld4W4NvpHaZ3
Qt120dZ3M/UefC+u7aP3Gz9gWn6Qlh+itcP0IfwIkx9l6mP4cVw8gZ/EdTuF
n8TF0/gZ/KzxM/Q5eB4XL+AX8fPGL7ldhrpdMbertPdrtPw6Ld4I8JvsJ1r8
2dzkt+Bt/Bb+i9sd49pdbp738Pv4A3gff4iLv5rbI9rzN/x3/LFx8Q9uf0L1
X7T3v2n5E1p8avwZ7fmcveAmf0m/wF8x+Wu3N/AV/tbc39Ge/7i9h+/wD+b+
kf6Af3L7HOD/4l9wf/vK7Qv+zfA71Es55UFD/9+D4UFZ8ND/3UJAdUg6OFSH
cgsNfYfhJobFw5mWh8fFCNwimtYicYuIR4ZRcC0qLUbDxejmFoOOjsdksWgx
NrfYdBw8Lq7Fo+Mbj0cncEsI4+OJzF2e2DCJYVKWzHRyOgVMjqfEU+G6pTYt
puHmmZap0+Hpcc8MuJjRLZNx35ndsgR4VuPZaDE7nsN0DpgTz4V75sbz4Hl/
4Pnc8tP5TBdwKxjgYiFWmFsR00Vp68XcitPexRK4WBKWwkvipQ3LuJWFtsvB
8rhYAa9AV2SVuMkr01WMVzVdha7mVj3AxRpuNWF147XcatO1TNeBdXGtHu1Z
360BrGe8IS42YvLGrAm3pri/NeOmNafFFrjYklsr061ga1xsw+Rt3drBNsbb
u3WgvYsdcbGTYWe3Lsa70ta74d1xrQft2ZP14tYb9zd1H7e+UN3PtPf+TD2A
DeQmH0R7DmbqIbg4FA7DxeG4OIKbOJLbSHqU22g40vgYfCw+LsDH094nGE50
mwRtT4ZT8Kk/8Glu02n5DHObSVuf5TYb6jbH3ObCOfg8fB49n6kXuC2kvS/C
F9GL8SX4UrgEX4Yvo5e7rYDL4Epuq+BKpl7N5GtwcS1bR6/H1+IbaHGjuW2i
tc30FriZbeW2Bd8Gt+M74Ham3gl34eLuAN9juNdwH5PvdzsA98GD3A7ghwwP
syP0EfooLh5zO278BC0/iZ9g6lPwNC6eMX6WPgfV52nrF3DxotsleMH4Zaa+
gl/Fr+D/A/ruyO8=
     "]}, CompressedData["
1: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
NtieNNROIvN/IewCHg==
    "]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.865410972119693*^9, 3.865417914126273*^9, 3.865418031300404*^9, {
   3.8654183035492287`*^9, 3.865418333013651*^9}, 3.865418451111994*^9, 
   3.865418559242023*^9},
 CellLabel->
  "Out[242]=",ExpressionUUID->"11bc7ea1-5801-4465-a4f3-ff422a942d22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "@", "M"}]], "Input",
 CellChangeTimes->{{3.865411911561184*^9, 3.865411917769059*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"dc2400af-2854-4428-800e-a619a1b45c84"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
5z3g0hepZeJw9c6VEx88oHMQERFRG1XdsjbjZNTbNU3xP/TOhpcLyiTu6JXD
y9vdp3MQERFRG1XdklPzSrVxPxjSadeIoUNeL5PWRx12F929S+cgIiKiNqq6
pWN2muPDx4ZMXjSyz5vppXLs/eb3Qzbn0jmIiIiojapuiXXKin2SYci1OCvy
+sJSCbDdPH12YA6dg4iIiNqo6pahl4KSPE8ZkuUYm5DXoFTqbuwY2Cgrm85B
REREbVR1y74Vy852jjNkaoTPfvfjJVL7Re+Ztrm36RxERETURlW3tLmX3Pf9
zwwpiMr5ouj9EgnPG5F03MyicxAREVEbVd3ybdW0tneWG7LtL6tKw54VS3BE
YVT2opt0DiIiImqjqltG96nw2z/DkIbzPdY6bymWGp6hX8w8fYPOQURERG1U
dUunli3Tk0Yb8nWdxjvHdC6Wqjp+gzxCMugcRERE1EZVtwSlXA4z+xiyKGvg
O81OF4n1+f4BnfpcoXMQERFRG1Xd0uutLhUfNDHkS4/L60e5Fklk2q4fItIu
0jmIiIiojapuSXsnxmZU2SXcY3to0u1CKbne5cq7/c7TOYiIiKiNqm5ZvjN3
wM5HdkkrrDm47fRCMVx+NHbUTKVzEBERURtV3fLesrPDx6XbZdP8kUl+eQXi
VmNs6Ha/Y3QOIiIiam/ZlJYtv020y/K2P0V896cCSUi8mrL+dDydg4iIiP9v
/QfJ3ALk
   "], {{0, 0}, {96, 96}}, {0, 1}],
  BaseStyle->{FontFamily -> "Arial"},
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{95.976011994003, 
       FormBox["1", TraditionalForm]}, {72.0359820089955, 
       FormBox["500", TraditionalForm]}, {48.047976011994, 
       FormBox["1000", TraditionalForm]}, {24.0599700149925, 
       FormBox["1500", TraditionalForm]}, {0.0239880059970015, 
       FormBox["2001", TraditionalForm]}}, {{95.976011994003, 
       FormBox["1", TraditionalForm]}, {72.0359820089955, 
       FormBox["500", TraditionalForm]}, {48.047976011994, 
       FormBox["1000", TraditionalForm]}, {24.0599700149925, 
       FormBox["1500", TraditionalForm]}, {0.0239880059970015, 
       FormBox["2001", TraditionalForm]}}}, {{{0.0239880059970015, 
       FormBox["1", TraditionalForm]}, {23.964017991004496`, 
       FormBox["500", TraditionalForm]}, {47.952023988006, 
       FormBox["1000", TraditionalForm]}, {71.9400299850075, 
       FormBox["1500", TraditionalForm]}, {95.976011994003, 
       FormBox["2001", TraditionalForm]}}, {{0.0239880059970015, 
       FormBox["1", TraditionalForm]}, {23.964017991004496`, 
       FormBox["500", TraditionalForm]}, {47.952023988006, 
       FormBox["1000", TraditionalForm]}, {71.9400299850075, 
       FormBox["1500", TraditionalForm]}, {95.976011994003, 
       FormBox["2001", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{
  3.865411918422111*^9, {3.865417919328376*^9, 3.865417920724969*^9}, {
   3.865418309310161*^9, 3.865418335967342*^9}, 3.8654185628151207`*^9},
 CellLabel->
  "Out[243]=",ExpressionUUID->"ae920bc8-e238-4943-a4e5-b3af885ef3fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Table"}]], "Input",
 CellChangeTimes->{{3.865411937447259*^9, 3.8654119412092333`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"447f47d5-b808-4537-8d5c-2f53f81f8bbf"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{17., {5., 12.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{17., {5., 12.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Table",
              ButtonNote->"paclet:ref/Table"],
             "\"paclet:ref/Table\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) copies of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a list of the values of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) when \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) runs from 1 to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\
\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives a nested list. The list \
associated with \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) is \
outermost.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Table", 
                    "paclet:ref/Table", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Table.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Table.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "HoldAll", ",", "Protected", ",", "ReadProtected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Table\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{13., {4., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{19., {6., 13.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{19., {6., 13.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Table",
              ButtonNote->"paclet:ref/Table"],
             "\"paclet:ref/Table\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) copies of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a list of the values of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) when \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) runs from 1 to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\
\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives a nested list. The list \
associated with \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) is \
outermost.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {5., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {5., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) generates a list of \
\!\(\*StyleBox[\"n\", \"TI\"]\) copies of \!\(\*StyleBox[\"expr\", \"TI\"]\). \
\n\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}]}], \"]\"}]\) generates \
a list of the values of \!\(\*StyleBox[\"expr\", \"TI\"]\) when \
\!\(\*StyleBox[\"i\", \"TI\"]\) runs from 1 to \
\!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]\). \n\
\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) starts with \!\(\*RowBox[{StyleBox[\"i\", \"TI\"], \
\"=\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]]}]\). \
\n\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]], \",\", \
StyleBox[\"di\", \"TI\"]}], \"}\"}]}], \"]\"}]\) uses steps \
\!\(\*StyleBox[\"di\", \"TI\"]\). \n\!\(\*RowBox[{\"Table\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"}\"}]}], \"]\"}]\) uses the \
successive values \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]\), \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]\), \[Ellipsis].\n\!\(\*RowBox[{\"Table\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"j\", \"TI\"], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"]\"}]\) gives a nested list. The list associated with \
\!\(\*StyleBox[\"i\", \"TI\"]\) is outermost.", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Table", "Web" -> 
      "http://reference.wolfram.com/language/ref/Table.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {HoldAll, Protected, ReadProtected}, 
    "FullName" -> "System`Table"], False]]], "Output",
 CellChangeTimes->{3.865411941782308*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"1a4ba5f2-420c-436c-8362-55487dd89ef7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"N", "@", "M"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865412253134474*^9, 3.865412259019137*^9}},
 CellLabel->
  "In[244]:=",ExpressionUUID->"30521130-5756-4c9c-9c27-c84af8b9d604"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "@", 
   RowBox[{"M", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", "10"}], ",", 
      RowBox[{"1", ";;", "10"}]}], "]"}], "]"}]}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.865412194256069*^9, 3.865412215805976*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"39f7b520-93d5-4c3c-bd46-fa3877882c21"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"182625.4628217816`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`"},
     {
      RowBox[{"-", "2623.380882111822`"}], "181923.21538306156`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`"},
     {"0.`", 
      RowBox[{"-", "2623.380882111822`"}], "181223.0553584034`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`"},
     {"0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "180524.97860679863`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "179828.98099135066`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "179135.05837927497`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "178443.20664189875`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "177753.4216546614`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "177065.69929711398`", 
      RowBox[{"-", "2623.380882111822`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "176380.0354529196`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8654122160165777`*^9, 3.865412261882722*^9, 3.8654179277904577`*^9, 
   3.865418036043001*^9, {3.865418320105496*^9, 3.8654183405338917`*^9}, 
   3.865418459022246*^9, 3.865418570149781*^9},
 CellLabel->
  "Out[245]//MatrixForm=",ExpressionUUID->"40d644f3-5c16-4cd9-a3c2-\
48628f5d8b05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigensystem", "@", "M"}], "//", "Quiet"}]], "Input",
 CellChangeTimes->{{3.8654122950672197`*^9, 3.865412296203314*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"a21240a6-cf07-4508-8c0c-2fa29ccdf33b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "186069.6449815847`", ",", "184264.08707088383`", ",", 
             "182834.70188306563`", ",", "181611.89321113657`", ",", 
             "180531.16584843415`", ",", "179559.94228800992`", ",", 
             "178678.87870109867`", ",", "177873.31971334456`", ",", 
             "177126.77181853703`", ",", 
             TemplateBox[{"1983"},
              "OutputSizeLimit`Skeleton"], ",", "40.729682693829126`", ",", 
             "34.52976104235813`", ",", "28.59429762739848`", ",", 
             "22.95011673987278`", ",", "17.63202625983119`", ",", 
             "12.687531533054475`", ",", "8.187031542611937`", ",", 
             "4.240993111385384`", ",", "1.215585724217334`"}], "}"}], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{80., {3., 10.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{72., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 246, 29175677562456745665, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{81., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 246, 29175677562456745665, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{61., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 246, 29175677562456745665, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{110., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[29175677562456745665 === $SessionID, 
   Out[246], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.865412296653784*^9, 3.8654179332536707`*^9, 
  3.8654180410656652`*^9, 3.865418345092157*^9, 3.865418475392324*^9, 
  3.865418581169784*^9},
 CellLabel->
  "Out[246]=",ExpressionUUID->"cc7b48ab-55d7-4d0a-94de-b30c4f48fc6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.865412483077238*^9, 3.865412513711831*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"cdf95512-28fc-4049-8043-4e8db7070fb5"],

Cell[BoxData[
 TemplateBox[{
  "Eigensystem", "arh", 
   "\"Because finding \\!\\(\\*RowBox[{\\\"2001\\\"}]\\) out of the \
\\!\\(\\*RowBox[{\\\"2001\\\"}]\\) eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\\!\\(\\*RowBox[{\\\"Eigensystem\\\"}]\\).\"", 2, 247, 21, 
   29175677562456745665, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8654124999101963`*^9, 3.865412513984161*^9}, 
   3.865417936866255*^9, 3.865418042692342*^9, 3.865418346432743*^9, 
   3.8654184755993843`*^9, 3.865418581281212*^9},
 CellLabel->
  "During evaluation of \
In[247]:=",ExpressionUUID->"8fde141c-f7bf-4654-ac4d-f5c1f90eb117"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.0055000000000000005`],
     AbsoluteThickness[1.6], 
    StyleBox[PointBox[CompressedData["
1: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
kSt43DR42xioJFfyiD3rpuY7nFzN42yO1ZMtH84w18p5G5m7f2s9uU5+L0FL
27+A3MBDXVDt2xNHbuSx+nrDP7E7yU085prYRmUvJTfzGLt9NW5akVt5WPu9
sfprKPk1j6fK4u2j3qUxd/BYF5ik7Xqb3MVj328Jow7lknvkfb/IK6iMJvfx
+GbesBYdX7KagMFmn66sWUjWELDp7a11eePJQwSUCN23NbXI2gJmaQ4Z59OW
yqwrYOnc9KB7lWR9AYFdCQ9mZ5ANBDxKL1x18SDZSMDW6f3Dpm0hGwvYZxOu
X+pENhXgMiYg0HkcWSHgt/7R8xsHkS0ErEt4kxLUksJsJaC6dTM34hrZRoB2
zCSHa6lkpYCiiVq5QRFkewE6Dx68n+xFhoD3wYnfds0hOwp44+rjeWks2VmA
xapj52PUyS4C0ko3TvF5cZrZVa7XxbtnUTnZTUD4hxnDbVPI7gKuIj3NIpzs
ISC2PPKiYiPZU8DdjDZvyzlkLwF7LLqq7MaSvQU0fPPhvas62VeA6Y4NvTte
JDP7CejPrP6QUE4OkOdztPPfyhRysIB5JwvN1SPIofJ5pPFRJy9ymHz++do5
cY7kCAFf2Zd7tpmSIwUI8+58ch5EjhagPnii9fmWJOYYAT+qMr8yu06OF2Bk
NrMs+Qw5UcBuB90FioNkQc7Pkx03i7aQkwSk32rwWO5MThUQvL/z6x4FOUNA
bdUJvXRNco6An+sP3CmrUzHn/z8fazc5nyQXCBiyLPDLlpXkIgEjz/ylk2BI
LhWgGLj68LrHEnOZ3I/NqdLpIrlCgFdg//2J68mVAlIMHYcqTcjV8v25B7mV
L0TmWgHducvPHkkj1wlI9k4Ke7SF3CDgcendeTPHkxsF6A4us7v4WmBuEuCU
mhezMI/cLCCvzWPv3/7kVvn/qfjoWGhDlr+bVWKpH9vNM3cIyBw3WhFeTO4S
MG3mD8VHfib3CNBbazXoHMh9Avoyh855o05WE6H1w/i82b9zzBoiejco9p+L
Ig8RUepkO8BuMVlbROGM4Z6Nw8i6Iky3aT5NrD/FrC9ivPiyZMcpsoEI+/bh
UzesJRuJWHKIP7TNhGwsIkAa/DG+JZHZVMSRcUfKH2SSFSLSunrNv9tOtpDf
Ly/blm9NthLx09r3tU7dCcw2IoY9WHDyYwlZKULRPGlAVRjZXsQJhwsrLswl
Q8QoZVLDJS2yo4gZSp+alpqTzM4iPh6bHzb+BNlFRNz0CdZHVpNd5f7vllno
GJPd5N879ktRbssJZncRD3anjfbNJnuIsMuZkTnfn+wp4uJF0xSnaWQvEfen
feG+8VM8s7eI3Vsj9JPKyb4i9ut0m306RPYT0eH+30chruQAEZqan/YaDicH
i1h2vsvn4ZM45lARyeNL2opTyWEiFpl5L7rkQ44Qoden1/7CmhwpIjW94UuL
3uPM0fI82p59k3CFHCNias5WL7ND5HgRquPlygeu5EQ5P5Xf/51jQBZEjBvy
rPNMUyxzkrzvxkHHrmWQU0WkfHt7jKY/OUNE9atd2jttyTki9jr+mKU2kJwv
4vSLZI8LN2KYC0R0RxlGxMSRi0T4D1sfftyDXCriVYrHpRIzcpmIFVcbbQz/
OMZcIWJLSkOflj+5UvaerWmLNMjVIpKebRv4POEoc62I4uS+9soJ5DoRjwaG
2qqXHWFuELH4xsWbsW7kRhEPHTXCA9uimZtEtC5ydMzbQ26W87TJoGeWPrlV
xIGmjihF1mHm1yK0F1i+2Qpyh4hPPXZfDnoQxdwlYkRPwd+928g9In5fsD/W
ZRC5T0R96uDWXuEQs5qE7EzL/s+mkjUk2FalPvO/Fck8RMKSu58k+81kbQlz
3O4v9O4/yKwroaFdfeCHRLK+hJHHrzS9tCYbSIgxeaptf+sAs5GEZN3O/A9b
yMYSKjKOfhquTjaVcLA6wDxZ2s+skDBozz3/ODuyhYTPl4WN6LgfwWwlIW+A
cnvRLrKNhMlLnl16o0tWSrAMvrcp9mw4s72E0F3GFakuZEjYO/PFbPM/9zE7
Srgafny5cRTZWUJc+0q/w+ZkFwlrtvga+VbtZXaV4PTn7ubyrWQ3CWsfD1wf
r0V2l+BWVmPxNDuM2UM+z974MW0R2VOCmP/uQ93TX5i9JLQ4/tvuYUb2luD6
bKPvK589zL4STAQn6+Bff2b2k2D/9rLOl32hzAESFvtZdZTMJQfL8zTNfv5j
zE/MoRKG+oYMc24MYQ6T8JnGlcop5uQICZeybINmBu1mjpTQvMYg3/d6MHO0
hIs+upblX5NjJDyfGF7r5B3EHC8ha+nj9L7iH5kTJbw7YPi2TYcsSLC7m6Cj
7xXInCTf/14zI6w4gDlVQkf5b8em6pEz5H2MnFSv9NnFnCOhZk7ztZhrO5nz
JaQ/yv9rjgm5QMLD9nWTVu3xZy6SUHC8JvlBox9zqbxv5enfrtuTyyQsvNoq
edjvYK6QMC9OGmQ5cDtzpVz/yKJ7Q2/6MldLSLHs/nx4gg9zrQTl46rTKzb/
wFwnIXXTy7inyq3MDfJ+pmT2Vul4MzdK2HEn23JC62bmJgl1LmZ/jLi2iblZ
zoNWxfTzaV7MrRK+q344SjtqI/NrCR93vrSeu/N75g4J0UvvTAtdt4G5S0L4
zWDl3cWezD3yfO55F9YfWMfcJ8FBQ/2nh8EezGoq1DRVX1APWM2socKRr3cr
8oPdmYeokDRxReKcg/9h1lbhh9sVKy2T3Jh1VQhpGja5rXwZs74K294uqR/Q
6cpsoMKtihg1hcdiZiMVxo29Y5P25wJmYxWcRt6MNTg5j9lUhUF2X83cvNaR
WaFCWU3h1Jo5DswWKiytyHwxNtGe2UqFy2OuPbTr/I7ZRoUJVvq7q5MnMytV
MGrSG6Phac5sL9efa3nq6npjZqhwsuFdy/UPusyOKoR1T9LQ2tU563842tPL

      "]],
     FontFamily->"Arial"]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 2001.}, {0, 186069.6449815847}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.865412499919272*^9, 3.865412516583048*^9}, 
   3.865417936908535*^9, 3.865418042733584*^9, 3.865418346463285*^9, 
   3.865418476061956*^9, 3.8654185819227667`*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"89712480-a16b-4f38-9943-abfc9e4c38d6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"es", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Eigensystem", "[", "M", "]"}], "//", "Transpose"}], "//", 
       "Sort"}], "//", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "10"}], "]"}], "]"}], "&"}]}], "//", 
     "Transpose"}], "//", "Quiet"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8654126511839027`*^9, 3.865412781502482*^9}, {
  3.8654130006882668`*^9, 3.8654130019843073`*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"f0ddacd2-2094-417e-8b28-d7b40b2b90e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"es", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.865412786037085*^9, 3.8654127893742847`*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"553a5d4a-37dc-439e-b171-14f424c2adc3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.215585724217334`", ",", "4.240993111385384`", ",", "8.187031542611937`", 
   ",", "12.687531533054475`", ",", "17.63202625983119`", ",", 
   "22.95011673987278`", ",", "28.59429762739848`", ",", "34.52976104235813`",
    ",", "40.729682693829126`", ",", "47.172624801800836`"}], "}"}]], "Output",
 CellChangeTimes->{3.86541279010159*^9, 3.865413005931826*^9, 
  3.86541795836368*^9, 3.865418046097472*^9, 3.865418349589469*^9, 
  3.865418487427959*^9, 3.865418586681953*^9},
 CellLabel->
  "Out[249]=",ExpressionUUID->"5cc1b8ae-1afa-4915-b0cd-d3348afd5c97"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"es", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.8654130245163794`*^9, 3.865413030691194*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"7e22e44f-1378-485d-9e0b-2c8d609d31c4"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    StyleBox[
     PointBox[{{1., 0.28429415632440985`}, {2., 0.9102888036386949}, {3., 
      1.6415252801642688`}, {4., 2.4498440053979897`}, {5., 
      3.3213225850072585`}, {6., 4.247121823115208}, {7., 
      5.221015085872336}, {8., 6.238325086064666}, {9., 7.295381384261223}, {
      10., 8.389210379119456}}],
     FontFamily->"Arial"]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10.}, {0, 8.389210379119456}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.865418488749592*^9},
 CellLabel->
  "Out[226]=",ExpressionUUID->"8d4f3014-93ae-47ed-96f2-8b42410c6b48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"es", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}], "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.865412791683913*^9, 3.8654127939664297`*^9}, {
  3.865412865184679*^9, 3.865412871505904*^9}, {3.865412953746071*^9, 
  3.865412957343277*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"6bb12f4e-4395-46eb-84f8-678da8b221bd"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
    AbsoluteThickness[1.6], 
    StyleBox[PointBox[CompressedData["
1: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
9UXPrd4+VmO4cBdGH2jJlMhZynDlLtRGL/gkcUyD4epdkAnp/a65Xpvy7wK+
HIi3CllJ+Xdh8qbYopf79Sn/Ljzo+xIyYrsh5Y8FLzpqa0X+GoalYzEvdI1Y
67r1dD9i0f1Xo7471Yxh+VhwWjYr+SyzpPsTi88jbk21lNjEsEos8vTqsxpW
2tD9ikV1hl5AcJ89w5qi18t0+Zj2nxPdv1hM5T4/FpTlzLBxLJoFegcS7N3o
fsZi7yxXtxaOJ8M2sRg6XL3J0cCb7m8sOg1UpqTr+jHsGQs9X+nZ00sD6H6L
8hgr/ejaEcxwWCy+Z4TdMueH0f2PxZXldW2BS6IYTo1Fbd02u9K5seQjFht2
rDg7NCmeYWEsWkbpnM9ZlkR+RD/PgnO/3hmlMlwaixiZLe+16zLIVyxutCfN
c6jJYbgqFuW/B53HzOGQv1is2WArq3uBx/CNWEg92TrNpzyXfMbiWeeg4jnx
fIZbY/HQuUK2+u5e8huLW/pJ2/xyihjuisUcJbeoZeLF5DsWSS1+zj43DzHc
L/r5Dl3vG9dbRv7jcGzzpMjw+CPkPw6HO7bqob6S/MehXZp36tnYk+Q/Dnmb
wtRby06T/zjoxRpO+iusIv9xOP3w/BibdxfIfxyOl59u0T18hfzHwfvwZw/D
r1fJfxzGfdeMcdhcS/7jsC/PZbv8iHryHwfbuofl8yfeIv9xCG+4KxOUcIf8
x6GzYUpXemUj+Y9D6S2/y41P75P/OOzawDOaZvGQ/MfBYMuo5W/HtZL/OKzT
yZuap/qE/Meh1UKj5UzpM/Ifh8/Fvf6Ra1+Q/ziM3nDZZ0nUK/Ifhz+67xdd
+/qa/MfhYbfzE/2qLvIfh4HtoZsP339P/kX388Wv7/0mn8h/HC7kfb43I+8z
+Y/D764RzX71X8l/HHwrOVY6mt/JfxzWmh0znvK1n/zHQTneYF+A2CD5j0N6
ZuYv/va/5D8O4mUx17wKhqxk/MehR+pj9t2LQxkWi4fZN+2+NQqSDEvHY/jd
Hc8eXJVmWDYe50Y8q5p/eiTD8qJ/Lzlfo/XPaIaV4vF9z+D7GVZjGVaJx6T3
6459cBjPsFo8dkdOn522fyLDmvF4t+rsHWMVeYYRj43bVsXN/j6FYeN4yKPX
9s74aQybxyP/onTy41olhm3ioTk/yo1fOYNhp3gcYSfuXHZ/FsOe8ch5OeaX
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
j9y4ReZunNb/AMqwzb8=
      "]],
     FontFamily->"Arial"]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 2001.}, {0, 0.029070629432404307`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8654127941944323`*^9, 3.865412872232629*^9, {3.865412954464182*^9, 
   3.865412957847583*^9}, 3.865413007583696*^9, 3.865417963509491*^9, 
   3.86541804890578*^9, {3.865418353330317*^9, 3.8654183548277063`*^9}, 
   3.865418490603092*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"edb30051-48c0-4146-ba06-1a8d8b99728b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"es", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "4"}], "]"}], "]"}], "//", "Norm"}]], "Input",
 CellChangeTimes->{{3.8654133866944933`*^9, 3.8654133942124434`*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"6ab1d2c3-1541-42fd-af39-9b2a4ea5db6a"],

Cell[BoxData["0.999999999999999`"], "Output",
 CellChangeTimes->{3.865413394386067*^9, 3.86541796582152*^9, 
  3.865418050666403*^9, 3.8654183561963253`*^9, 3.865418492967421*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"52c395e7-2a36-4046-983c-20ab9a9b376d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotWF", "=", 
   RowBox[{
    RowBox[{"Table", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["L", "2"]}], ",", 
           FractionBox["L", "2"], ",", "\[Delta]x"}], "]"}], ",", 
         RowBox[{
          RowBox[{"es", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "j"}], "]"}], "]"}], "+", 
          RowBox[{
           FractionBox["1", 
            SqrtBox["\[Delta]x"]], 
           RowBox[{"es", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "j"}], "]"}], "]"}]}]}]}], "}"}], 
       "\[Transpose]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "]"}], "//", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Joined", "->", "True"}]}], "]"}], "&"}]}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.865412878996447*^9, {3.865413125776569*^9, 3.865413311601396*^9}, {
   3.865413343380562*^9, 3.865413359473984*^9}, {3.865413481861712*^9, 
   3.865413519394951*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"e996734b-2e08-46fa-8bd1-dae6f0bf06c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"PlotV", ",", "PlotWF", ",", 
   RowBox[{"PlotRange", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8654135551785583`*^9, 3.865413576866531*^9}, {
  3.865413626021346*^9, 3.865413632082696*^9}, {3.8654179929193583`*^9, 
  3.865418006892345*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"f4779e6b-3bd8-425e-8f5c-571dc6ad7a31"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
Etc+EufvMv5aG3ZCs66xzdnLjUTqd7Lp1i4HZB8if1/Cu4HwFX5UleZ2EFXF
f/TO/vaBKFZQ3KHttkYST3y0JCzqiC2mgmeb+y1Q7Ft6muwqTAT4Sf+OkzRB
g48OPjM8XENoT0+6q7gYopdtSUaGuu+IYRM3nS9Tuihi/csQiFYS7reNQ873
ayELWc6LQPmaYBK+12x9Ww3x2dsJwlgJUf3nvtKXDTnUuiPtf+nOS+JOqN3j
PEdx5HPk2Ysoh+dE2HHhpSQ7bkRTJjN2UTCbkLzyMOv6Z1oEAlb6GziVCJ/n
+mHxYMFg/n6650L6VcI14MX+zTfNBpFUKQ2me06hOy168ooZ9wxUMjyauLUT
kP/tEpldzCMGgwIlc0xsWWhflJhMgvi2gT25tzrG8ClieDRbf92WFVX0Hbp6
IyIfGQ6SrrwaFEAseEaq3rkYCT78/FCqXAqh5IKY+tAyVFHxavPfsCI65336
V31KBfJdPLCiWaWBcvYqWjWUvEVc6GhSiPYe1MU886qhvRqJUboQ8Z4GiG44
n6NxhkAPY9DOz2wjlHVES8cjuhZdz530rzhlirSMU0+Pcn5A0a5c1H5x+1G7
0kqWR3Y9ctQV5HpNcQBRULze8ahpQtb9XY+cwh1Q+i9u9TGrZvSr/e1Dtz2H
kMbX8+6e/S3oeaa1fqqEM/LM1Wzw/PsJzYqPa4XouKHthJTVsZjP6PLytpnn
nxOoVW8jufRmB3Kh2m2Q/dYDeco6N2gIdKKju3uom26fRGpCjIOBw53I9Ltm
UeK9U2ibrWq19PlXRF30dNW34jRKWxeQJ2t3I1FDXsd4gQDU1NZ3k2zfi/gr
ZxXOcwUjn7DvTS6KfahQe5A1NS4E0Uv300RTf0cdX8tbh5jC0P6Igaiusn6U
PzWg0acZgdoUhgKDuYcQyUhWZJDpCjrTPVT0YHYIZZlKrexbu4JiIGDV3X0Y
JWY4lRVMXUVyswHkWzo/0XUB28pzP6KRj3Hgy/7pEbSR5p/5hjUO7UlfbP3j
NIrmKJ3ElxVuIvo/gdPUH0ZRY3tLq6zlLfQiI0hOKXMMVT46wnb20W00vXA+
O9JyAtWpZejUmCWhM49DU0UKfyFSejCjYFMa0ltdK1Pnn0Z3GVRNr0TfQ8xW
YZ0m0dPoxp7cmul999HLtTA2v6MzaJHa0aS5PR3N2YTH1TD/Rq1JbK/76R6g
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
        "]]},
      Annotation[#, "Charting`Private`Tag$63998#1"]& ]}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
OrzeHTqW1WeLXw5GqB6NZ/XZYtfsZembJrL6bPHFIpfs5CmsPlus6bZq3LRp
rD5b/FSReWvZDFafLY5YobiXP5PVZ4vB6/v/Lp/D6rPFlc8ST2+cx+qzxXyP
0oNhC1l9NjhgSsTQz4tZfTbovKBXSWkaq88GB8/WRL5aweqzwWZa4847r2H1
2WCfu45jZmey+mzQ9PamEVpbWH02uEqdVn54O6vPBnOTR9ov28Xqs0GHyjj1
mhxWnw3mKIenXz3M6rPGNTtruwYcZ/VZY0fl10MXT7H6rHFOQaP5inOsPmus
bL7m36WXWH3W2M7k8Jd/r7P6rPFkOfi43GX1WaN+oHKH5iGrzxpD/rM9t6aM
1WeNs2MmPttZw+qzxuTxeslv37D6rPByH5enyQ2sPiu09fdcCLJCrj4rrOqw
ojhCr5Crzwo7OPwdlW5ayNVnhX3lMQNs7Qq5+qzQT99qdJVzIVefFfbeuvxz
oxfnqaxwzuoFy/oHcZ6dFVovW5L5MZzzZFb49Jf7myu6cl6VJV6Y3tTesR/n
FVhi233307cPYfVZoqH959nTR7P6LDF//sWxG6ay+izRqfrrneZzWH2W+Gjt
wo5Ff7H6LNF1g0fwhzWsPktst7ub35jtrD5LfJux7UjgQVafJbbpXa+OOcXq
s8D9aVdj7lxm9VmgxrjFbwfus/os8FSOrk1VJavPAh8FLDk26z2rzwI3a/tc
TdK+w9Vngfbncy4XmN/h6rPA65VHXf9yucPVZ4Hb4hZ13Rt4h6vvhzdmx9aA
Tne4+ixQvnjuKnl/zqsyxxc33ef/PorzCszx+bKaq21mcF6uOWbFGF0a8xfn
ZZpjWs6Yy9qbOC/FHIOCWjgaH2T1maNblrdB6jlWnznqjgy+Nekeq88cV0aY
5lx9zuozR0XN79c2fGf1meNvQ/Lin1je5eozw5nFff9a53WXq88MTxzbNvwi
3OXqM8Puh1d8nzjwLlefGTptbz1u+cS7XH1m2O348r89UzkvwQyzu1v83X4L
50WaYcjopJgbxzhP9cPzUm97dIPz7Mzw9oeVQ0bXcJ7MDE0Ono2ZrH2Pq88U
U41Mohsc73H1mWKCeV99Wdg9rj5TrC885L64/z2uPlM8vrJft5WT73H1meL8
ns2bOizjvARTzHnsWa7cy3mRptgEdX89cZHzVKZYMqvy6ZVKzrMzxZX1G6/G
69zn6jPF+BXRU2e63ufqaY7H+nSzte10n3v95njVdEld2Ij73Os1R9/rGu+S
P+9zfnM8EfCy2GAn85qj0dA2eifzmWeC5i3PHH5ZzTwTDJ/R49xOwyLOM8En
Z9pal7Uq4jwTdOjUY+b2fkWc9+P4r7h9VdOLOM8Y74WPiTmwsYjzjHFLaaht
IzLPGDuE/zI7v4p5xmi//0sTa+NizjPGnb3+M3umKuY8Ixze4lyzsF+KOc8I
p3/u2crwz2LOM8LU4ndnhuwr5jwjXIXjy3zuMM8IRxrOPzTzK/MMcU2OoX8X
jwecZ4hvVpfELO37gPMM8Xj4Xf3IWQ84zxDnDT7hkLrrAecZovex6H6tCx9w
ngEmhk8eMuw78wzQoPXjh9+9H3KeAd48PDPePPYh5xngb+Zdx65Lfch5Btin
fNLIZf885Dx9fICjDr4re8h5+rh3Wt3a/8wecZ4+9g4aNFCnwyPO08f/vo90
2D/5EefpY4T95iZnsh5xnh5uXxtrHnzrEefpYfXr191NtR5znh4+3/kwI0r1
mPP0sOTO86vPRz7mPD1sd2bCmcq1jzmvGV4PHatsd/kx5zXDfvVXj7/4zLxm
2HRXtuG7Vk84rxn2vprwT+TwJ5zXDFt1twxqXPOE83SxzfaV395ffsJ5uuhx
7kly+LcnnKeLnQfEfbsR+JTzfhyvc7y/Z/RTztNFn7+cOl7a9JTzmmL/2Tsm
K28/5bymeD/p7Ply7RLOa4pm/sd733Iq4bym6Fu2a/jDsBLOa4pbjkTOlg0o
4TwdPGl9w149uYTzdLBxwIdDa5YyTwenf+x9SGsX83SwufGYBQvOMU8H7/V9
lWH3hHna2NzsBWAj87TR8Oqr6ulWpZynjbJlnSrbBpRynjZ+eeO01DiqlPO0
8frJO97Px5RynhZ+1TWwurmglPO0cKysZsXpLOZp4QazAVWHTjFPC3entozd
XcQ8LXRb3c5r+3vmNcGeJxrWbTIt47wmaDm+1ZM1PmWc1wS/mM0KSetWxnlN
cLXPzKLZI8s4rwmeP/C2cUxKGefJUDPb/EbPTcyToW7TvUvcTjBPhnFFsXFv
C5knw2mDrs889Jp5Mozp/aF5vGE59/zvmgszg6K+Kcq5x3/XrG7cOuyvjuXc
633TTF3lP+v7r+Wc/01jfqXxalxyOed909w5MzRl52rmfdXMxMjLtw4y78fx
hoT7pVeY90VzflGnR4WVzPuieZS/xSBbVsF5XzSv/0tbG9OigvM+ayoeHzha
HlzBeZ818tUJW3v2qeC8T5qpv+gtSxtXwXmfNPOvGp/csYB5nzRlXbuOXLWF
eY2aKhPjgugTzGvUTN0zKejZLeY1aK78M7q8xwvmNWjKvuu4zNap5LwGTcGH
Te1mOVZy3keNqnfD/IiQSs77qAlsmtLtQa9KzqvX1MwdWxE8upLz6jU7Ppce
HjiXefWatS3DTNuvY94HTcxZgxHPDjDvg6bh5mjzfvnMe6/pMvbbklmPmfde
M1bWof2o98x7r4k7mrbdwLCK8+o0p471Uo13ruK8Os0ZjXLKwtAqznunMdpj
WTYwqorz3mkUBovMSodXcd47zfqaFSta/s68t5q9ybJ6s2XMe6upfZry5Ng2
5r3RVDfNqzU6xrw3mvVTxl42v8K8Nxod979cLz5mz3+tWfXnsEPKt+zxrzSv
2u3xDtF5xr3eS82ldlsGvrJ+xvm1mjVbnb729nzGebUahxx8Edv2Gee90MTc
rmk0iHrGec81OQcrdIbHMa9Gc8+u/s2vk5hXrVnvP2XP17nMq9Y8n3FFDiuY
90wz9POePm5ZzKvS/D7rS9ieg8yr1Izer1157QzzKjTbk0cNW3mNeRWa43Ft
8t89ZF655ts9+8C3Ncwr03Qu8r669CPzSjXtx3ppzupUc16JZmTv6Z1WmVVz
XolmVlGLNV8cq7nnP9HonXvU8N2TPf6RZk6H1v9uDK7mXu+hRst/qv8NqOb8
Ys3TIZn/ZPZkXpFmov6yfZ8GMO+epnhlk3lvhzLvjiahy4Lds8cyr1ATMXXO
5i1TmXdLs2BXaHn0H8y7qbngf19n85/s+QWaPjdGrkleyh5/WbM695JfzSr2
evmaopNXpr/IZP55TY/3plYpWcxDTcoUx9PZ2ez5eZp+o3p6Ds1hj8/VfFl9
tcWew+z3ezQRLbPiFhxjx5ma9E3rzr85ybwfZ/TGrm6vzvC/Vxel6A6fdY5/
vnrxhYpRG//jffX7LTvlPS/xr68+Y398ydIrfH3q8es8dwwp4OtXp57Onnbm
Gv/+1PXPRhsevs6/f7WRrs/coBt8PmrrRp9X3W7w+amXTLGc84p//C31t6g3
v7hf5/NXx6QoTr0s4P9/1FUzxzzoepX//1Pv8MxuVF3m/3/V+cmykUfy+f9/
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
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
zmIcmgn6kzOTc9qC/uTs884f3/n+5Cwv5+t3vj85G/e+8jvfn5xNlb77zvcn
Z5rWz77z/clZ6N183kuWs5vmV3kvUc7mZ5/kvXg52zIvg/di5Kx3yAbei5Kz
2h0LeC9CzoZMGsd7IGevB/TmPYWcbf/ix3vyn3mqmvOeTM6e5ZfV8/3J2Rf7
i/V8f3J2OWJ9Pd+fG3vKhtfz/bmxhLvO9Xx/bmx7TnEd358bMz24sY7vz41J
T3eu4/tzY/VPSr7x/bmx8dXzv/H9ubGxOc2+8f25Ma07y7/y/bmxl7u/fuH7
c2O+Swd+4ftzY6NWp3/m+3NjS/c8rOX7c2Pasz/X8P25MbMF9Z/4/tzY9OJX
1Xx/buzegoNVfH9urF1530q+PzfWdcjdj3x/bsxhi3M5358rs5OGl/H9ubKQ
w4GlfH+u7GJR6Vu+P1emFTfsNd+fK7t2YHkx358rYy4xz/j+XFn60fIivj9X
Vhgtfcj35/rzenQvn+/Ple1+a3Ob78+V6ctfXuP7c2Vjfe0u8f25suoHZ8/y
/bmygxuPHOf7c2WShPeZfH+urPFj5B6+P1dWlPlfGt/fz7zJ4//m+3Nlj4eU
LuH7+3mc1WYW35/Lz/Ory3i+PxdWZvZuCN+fC+s+t6kH358Le5I1LoTvz4Ut
NK135vtzYS7xy4z4/lzY8evFNRZcfy4s437+YwuuPxc24ZbTWQuuPxf2j0FK
mgXXnwvrvPXVDAuuPxfWq/haH86LcmGPjGtdOS/ChbHzZl+kXH8ubFLMlUtS
rj8XNu3u3pVSrj8XNnNOn15Srj8Xdl8vvJmU68+FwUKji+Zcfy5M85BsijnX
nzNTdS2SmXP9ObMZrQ6eMeP6c2YXl77qb8b158z2Prry0pTrz5l5aK+IMeX6
c2anO/1e3Jzrz5md1+zcuznXnzNrfT7ysAnXnzMbmZ2gacL158wM09aFG3P9
ObPpvqNmG3H9ObOzZ9O2GnL9OTOn2fkHm3H9ObOuZQszDLj+nJm+vuEqfa4/
Z1Yx7tAgPa6/n///9iua6XL9OTP7kK07tbn+nFnWbypbLa4/Z7Z4xJ54Da4/
JzbkSsH+Jkfsz4kpMvafaXTE/pzYbWXk7u+O2J8TW/ztVnSdI/bnxMoGPKn8
4oj9ObFDKqNetehlOLFa95PTqtFLdWIn48tGVaCX7MQ6XZkt/YBeohPruqp6
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
tE0Bai/blB34vZ3WKCu1l2rKHMcf//ys7p06nyl78sbI0/jZO3U+U+akUftX
teqdOp8pa8xvtSV51zt1PlM2LHbtieIl79T5TJnylPn1yhi1JzFlL/LPfT3b
Xf39ec3ZX5JtC7p5qb8+tTm7Z3bmyAZD/HnN2b6Ahup/y0vUfnPW4GzG5t0u
UXvN2encnofss0rUngnTajbrj1VrStSeCdOxPJ2aG1ei9kzYm1vdPAp6o2fC
rNN61Gb7oGfCPq1YVjfBBD1j9vyAb/cfH9+qPWP27eZK7bjbb9WeMRu88lDM
hcy3as+Ypd9zOfNp1Vu1Z8wWZm0cbjLhrdozYkmnYi9Z9ETPiNW8HBNr4Ime
ERvV0Kq6Ug89IzbrZvnXWyVv1J4Rs3v6JHTn1Tdqz5A5Bp6eG7/njdozZN0f
DNwavviN2jNk13s1T7Qf9UbtGbIzQzs6NAF6hgxyzy4od0CvGRu43OdE2Y/X
aq8ZexG7vrjx2Wu114xltV3t63X+tdprxj6m5v8Xv/W12mvGpBdne72Y81rt
GbB6vzETJg9Fz4CFL573rVVb9AyY9zLbIKsW6BmwsXeUqxXfX6k9A7a28MO0
5f+9Unv6TFI+7E/ZuVdqT59taTGgpGzrK7Wnz9JsByZozH+l9vTZoU2vM/8Y
iZ4+06w/b2baET09lnXLsp2ZC3p6TKPx6qW/dNDTY8f8l3WwL32p9vSYaQ/n
HopbL9WeHnvWf+fcQ1kv1Z4uu+q8YOq69S/Vni4beOLBpdczXqo9XWaXukpr
/1D0dNmzNYnX3gJ6usxrQ8627XL0dNiXVcmmj43Q02Eep2/t2VhTrPZ02PGQ
6sfPnxSrPR3W/VxP1xOXitWeDjM46Pal5cFitafNNj75frzlhmK1p83WO+08
f3oeetqs77spo2r+RE+b3SxdVJbfHz1t1jjq/t+DO6CnxeYWzF68ygs9LTZ/
wbtXcdboabE7Vc0u6uqgp8WKfHw7ZpW8UHtazGru9NJrV16oPU32uiG77ag9
L9SeJjO+mvHfkqUv1J4mG3UmsUvIuBdqT5M1rZyZlxiBnibr2DBw17gA9DSY
1yuLvM8y9DTYSZM5br5a6GmwF0uvjGhR8VztaTBT6PedPXmu9jTYistD+8pv
PFd7ElZVdGpxv5znak/y83qRurL7wedqT8Ku9x/rYbYDPQlbeWTZxyMb0JMw
+weDglsn4/c3qSJaanqtWopf36QqPjw3524i/rwfqsKzS7c3zUP/h0p758Eh
DvPQ+6GK8x8ZrJiPXqMqKsgUlAvRa1SNGTLgt25J6DWoph6zqeq9Gr0G1ec3
z1ZEbUSvQRXq3xQ8fid631UZI7QfL85C77uqx4kfJvvPo1evmiut7vD0Dnr1
KklI51UOr9CrVxV2h0fTvqJXpwo5m371mQn+/upUeksdTg/1wN/XN9XMy7Z3
Kzvj7+ebyuW68n3aH/j7/aaq29hp9/CF+Pv8qvJ/kD4odDd6X1VP5ZPtW11D
74vqz68ht4M+ovdFda//hO8Hm+H5/EXlrpMz/boDnr+fVbkZYU8rg/B8/awK
/BG+wakXnu+1qknu718OG4vnd61qfte379Lno1er6nk6f2/5ZvRqVE63fDWV
x9GrUQ25u/LkxnvofVL99s/W0Z8+ovdJFRE0c1lfI3w++KSqtzm+4HArfPxX
q0YF7lthHIHPH9WqPcO3XRo3EZ8vqlTFR0w9VGvx+aZKlfbx8yaTbPSqVG1y
mu4NeITfX6lKO1Y+dW0Dfn2FyrVj0Y+zzvh8+FEVY7Dx0aMe+HxZrkqr0uxU
PAWfT8tVjzfFjb2fhs+3H1Svg+t/O3gFnz/LVNsvaLz+sxK996rNnsu/a7fA
60Op6uXLvT0XdMPrR6nqipPe+IJpeD14p0oM6vu4cRdeL0pU9YsO1dXn4/Xk
rSqpXQ+baxp4/Xqjmr373pgRAXh9e/Pz59d/OTcar3+vVenjzO88/wevj69U
69MW56uu4/XzpWrNgwn5QxvQK1ZNX9t6WZYfXs+LVfuW6m7MHovX6+eq+sf7
VsVswev7U1X1g4fFl/Lx+v2fql2ERv1lfbwfKVIFDS51Hwt4v/FYNWphh307
Z+H9yUPVOdPeGdOO4v1HoerKwvS2RWV4v1KgMq/eO/mmK94v5auWTRjfvvNI
vL+6p3LX8F3ZIQ3vr/JU2+Z7+516gF9/Q/X8SFj9XjO838xVuVgt+NewN95f
XlZ9fOH56ulKvJ9kP39fjgOsruP9YY5qVbeTKcd08H45W6UlHeuT2Rnvb/er
jlkt3Nu4EI9TVc8SP83ayfD+WSJZp/ooXd/E/buy9mDmyxsd8P59v/KNp0eX
zvPx9UK2cobT/Y3fzuO/5ygbTvXxfdOIrxeY8nCWYoSkA77+uawMv316Urf5
+HopV2mlnJuZfQFfX91Q7r8RMkTZhK/H8pQ/Ls859wZfr0ruKX+cGGe5PRFf
z+YrvywblzH2Ir4+LVCGeb07EqSJ7xcVKqdtazZTvzO+//NQObLL+HaPF+P7
OY+V5uOuhu+4gu8fFSm7Pj79fJBOBZ4fyqHr4vs2dK3A80fZp//48qSkCjy/
lI+Nmul/yq3A80+52/avHyF6lXh+KjOcv/pFdqvE81f5MbWVfodllXh+K8/c
Cqj9lFuJ578y9kBecLBWFT4+lH801c++71yFjx/l4pruyb91qsLHl9Ju8rIT
2/+owsef8maDTrcbiVX4+FSuNH6z8foO9EqVX/r9oZF2Ab1S5esG7/dtnqH3
Xpn6PfvUvu/olSnDLOKeFcuq8flDeeeV5/3ikGp8flE+yxxkmTGwGp9/lKO0
In184qvx+UmpbHUwc8bf1fj8pRzcZbzHvEPo/ezJfWgn5U30qpQHP/fac6YE
v75K+annUI2Pmp/w+VO52UZuVWj/CZ9flSss7PZPbPMJn3+VBeePrzw18BM+
PyvtP2b9c3jyJ3z+Vn4tizgcuQq9T8peOmuv7fwXvRqlzfbYok0q9GqU+zIN
PyiK0KtVfjn4xXjaJ/RqlRcq+4783bAGrz9K3aEG+kUuNXh9UgZPNWxf37YG
r1/K5ZfjlKcja/D6poxL3zPMbEINXv+Ujc57KrQWofdF2Xq2xbA1m9H7qpw6
a7rN4Sz0viqvjAzfM+YKet+UV0q8Vh8qQu+b8tBUk7jlFeh9U35e2LWyRrMW
r+/KlM6HciusavH6r2wz6MapmV61eH+gzD32ImV1+1q8f1Cm7zdv49u3Fu8v
lOnmCZuGjkLvu3LTisC9ZtPQ+64cemPp1L5L0WtQVrV4YWq9Eb0Gpevz2r1j
MtBrUPazyJsQehK9RmV/k2vb111Fr1F5xubIukmF6P1QpoRd2p3/Cr0fyoSv
hzudqkLvh3KM574yhx/oNSmP3xksNzT8jPd3yi4VlWtmWX/G5z/oP9c270+X
z3h/CBfCNTY89vmM94/w9F3ngzfD8PslcExV/aZ9l894/wnTaxOdA3qjpwFV
sy9H7h2Engbscn8yY1s0ehqgddNts8Vf6GnAv5HB942moKcBKUaneyXNQk8T
1jwa0XHhAvQ0wWb53erGpehpwu+9lh1tWIWeJiwPvFg8bx16mjAzN+rjwo3o
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
gHhFxCsmXgnxyolXQ7w64knCuOP/A8gf/ng=
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
jqL8/ldvN1F+Xuh6KkqUnxcmhA8U5afCgGvDRfmp8M708aL8VPhheKIoPxUO
0/4myk+FDodTRfmpMCFxqyg/FRqGHxblp8KgAZdF+anQ1KBAlJ8KzZdUiPJT
obqznaE+PxXaZYQa6vNT4THnAYb6/FTYuuEiQ31+KnQPPmioz0+FN3+81Hsq
FY70URjp81PhymmxRvr8VLj3xG4jfX4qdHv13Uifnyc+Mog21ufnif5BaKzP
zxMvnw420efnie2tDpvo8/PEk6fbm+rz88TC+a9M9fl54rpOf9fR5+eJO5vH
1dXn54ldMjrU0+fnid/btDXT51fjPRpQX5+fJ5YfWG2uz88T/2j/qYE+P098
O2eqpT4/T+y0w9Nan58nGs4zttXn54njWjvb6/PzxLPpE+T6/DxRaW7YUJ+f
Jx4Y99RFn58HfpvYQKnPzwMzktd46vPzwJOf5/no8/PAkGe3A/T5eeD6pK1B
+vw8sGWDL830+Xng8Kq7v+jz88DTpgPa6fPzwA89VnTR51fz+vMXRurz88CZ
xV0H6vPzwEbnasXp8/PAJQ5ZE/X5eaBxyLLZ+vw8sMXeVUv1+Xnggy3v1+rz
88C7n07v0Ofngf9O9MnS5+eBYwOjcvT5eeC4k6Of6vNzx8Xj15Xr83PHfw5Z
WR0Q8nPHHmMbNDog5OeOj5pfiTgg5OeObz8uHH9AyM8dx1csSD0g5OeObbOt
Twqexh0LOy59LXgpNd70X+QHhfzcsUv+qm4Hhfzcsb1D8ZKDQn7umLztyqWD
Qn7uaDdoo3mmkJ87/h7+oX+mkJ87arp225cp5OeO2+361zkk5OeO9R4cjz8k
5OeOX6K88g8J+bnjnOPDux8W8nPHyksdrh8W8lNiv6eHBx4R8lNibGj6lyNC
fkr8WN/976NCfkoste3S85iQnxIn5/ayyxLyU+LgOslFWUJ+Slw2v9Pt40J+
Sjy3tOHNE0J+Sgy9vf7FSSE/JQ7vP9f8tJCfEm/13NxTK+SnxDs9ZftRyE+J
fy056XdWyE+Jj21dLp4T8qup97c1iy4I+SmxYPy5uItCfkrc0WTSxMtCfkos
LNi47T8hPyV27TbbOFfIT4kLYbrmupCfG9bOC4nNE/JzwySD9bF3hPzccEJM
7qZ8IT837GgIzo+E/NywsWbH0wIhPzdMyzD79ELIzw2P+17p8UbIzw1fW6Qa
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
/h2jyKvSRjlfPT24KXk/tDE7DHa8tCXvhzbCcu31gi90ffquXTRhV4eo23Q9
/K596HqtWTvh+vZdCxUx7w79Sderb1rXa8ev7J5I18dv2i2JUwb4diOvUvvf
X6nq5n7kVWoVQUdC8oXreaV276ZQa6sXtH6o0C5f1/HqKy2tByq0xXUtxg/Z
QOuPcq3L5gMOc6fReqJc2ytukEmnnrR+KddeORC57IIfeV+1yZteGFcYkfdV
u6H7mLLXT2i9VaZ99mvrl+uzaH1Xpq37Zdckm1Rar5Vp8x3zOg+g9abmi3b4
oa2BU9vTeu+L9ox63/uRLuSVaof2NI8J+0qfB0q1b++1H//xGq3vS7X50fb1
/thJ6/USbfaQQcFu8+nzQYl2wLQnRTujab3/WTv0vUf7gCDyPms3HGjf41Bd
8j5r3y7I8mr3vELnfdKeue755tmJCp33Sdv3N9/Da1ZX6LxibX/TRvtGjKvQ
ecXauDPeX3uHV+i8Yu2EoRMPjnOl53/U3mqzUJZZXq57/Aft3Hq3qvxulute
7732eYM12Y/3lOv8Iq16+rKxN34r13lF2lObcivrxJTrvHfa+S/2JK5oQd5b
bbVq9IvhtuS90b5o4RKQWvxV573Wxq1f2sI156vOe62dtfJ1ofnOrzrvlTZf
frNq5KKvOq9Q2/W6DTSO/arzXmobfl/bb1xr8l5oy/3gpUdD8l5oj8+8O3Fg
ZZnOe661vlAxWZ5fpvOead1MjbrHHivTeU+1LdzMI8PWlem8Au0k1f0j6TPK
dF6BdtTyh+v3RdPzH2tNe7cw6dOSHv9Q22DEzbebnen1HmgNe3dxXCsjP187
+4qqe4sXX3TePW2fjfdVf1z6ovPuaI99+Oi2ce8XnXdLO3iw99YRqV90Xp72
yuJdH94nftF5N7S7PzbyaRFL3nXtx8W/9u3WiZ6fo43/OGtgoyB6/GVt9z+y
Kx850etlawtP77sRY0z+Oe3x8sODjn8q1XmoLY7d9/X9o1Ld87O0WzY636q6
Uqp7fKb2hdOOWsXH6N93aePK5ow7v4OONdoOCY/vzV1Lnky2su3KZ25LhH9X
d1w1xmB/ovB89YiPHxb5xQu+um6re6vXDBFeX/1wITYuiRTqU68uuRTYthM9
/pza8nlnWKIupd9Pfaz2qlfnQun5l9W1j6+b/7VRKeWjzt75ADy8ybuuXj3Z
rVEXJT3+hnrToWjvcc7k56lftpz7Ypmcnn9LrZo65/02O3q9O2oT24BtJ2zI
u6dO+NJOfc2avHz1OeXQ/55Yk/dAPcXKyu+9DXkP1YcrX9p9FbzH6hVtVjj/
kJNXoHYs/7G1ypkeX6CuilrzslKo96m6laJ/abE3Pf+ZWinzyXoSSK/3XH12
Ta3SC83Ie6H+b2DPVluAvBfqMNUvBgmdyXupbt7SaFlob/IK1bM+xJa9jSHv
lTpI8771inHkvVY/eLa6qcss8l6rE1qYJ69bSt4btfmIfkcq15H3Vj3FELx+
3UXeO/Xsr+9s4o+TV6TuOWXi2qk55BWpP58YtXXAE/Leq6+1W1vXqYS8D+op
YSmz95vQ+fxRLfPqtdjBmf4+itV+RxTrugfT+V+sHtXR9nvPzvT3Uqy+3fNT
gdNQev4ntabD4967ZtLfzyd1eEVoRFkqeZ/VJn591lXtJe+zemD7MZ9PXSLv
szr2Q9evgS/IK1HPGjLCp4fwflCi/tYp6ZPcmd5fStWZTvjPkhb0/lKq/mfK
gvi1/ej9pVSt2Ng9sc10en/5ou6Wk3Nj/hryvqizzA7GRx4hr0ydtvyc/4E7
5JWpTwXkPv3rK3ll6qVmOzp9d6D326/qJ+8DLJ+0oPfXr+oXLXvdbj6I3k/L
1b6THT0Mk+j9uFx95+TeOS230vtvudpqzZDe+dnkVagP+p2yuveWvAr19j5/
WwU1oOtHpXr2e7+dT4PpelGp/t7CyOVpP7reVKpXx7Y+6juXri/f1EFT5uw/
tpWuJ9/U9eubtfntMnnf1b/7vtuw7CN539UbHV8Vn7Wl6+N3tbbVnnHerej6
90N9Yejt1oeH0vX1hzp3nemqYUvpelmlXtOwelXAfrqeVqlPRGyYVP8ueVXq
Rf2+Dv3xg7xqtXFiwsavHnT9r1k3zj47qEy4fy+D/hNKC0vo/m2wDDqo5i18
q6Hrvww85rZLvoX0fBloLNd0yXhF6wUZPGga2iLenNYvBlBp0ue8Od2PCzYA
p75/jFoxgNY7BjCo+dODL+fT+sYAtJbrf2mwk9YzBtDgbc+DRrnk1YKzOTeu
nCshrxb4Wv7o2U5O67FasKL3YY8FrWn9VQtiqrOCZgyj9VstuGS1cJ7bElqv
1YYTIfbuiRm0PqsNh/c87DzzOnm1YVTIiBaKUvJqw7GkkIg4e1pf1oaBzed/
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
Z14B8wqZV8S8EuZVME8WJhz/H/elrTQ=
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1:eJxd3HlcTfv3P/CkQqV5Ok0aTyOlkjFnIZkyhsoQJZnH+JAxU6a4kSlTmXKR
IRnKvZxFZAoRkUuSypQMZcj48/1p7bP38s997EfnPM+r12d/9t7Ve73to6YM
GK2upqZ2u5Ga2v/998+/tjj02dCCbikNYWvK7391bYRj3//7V6M6vpH/+1+V
6jjm//5Vqo7/P1faRuoVM6+QefnMy2MeMi+HeVnMy2BeOvPSmJfCvGTmJTIv
gXnxzItjXizzJjIvhnkjmRfOvBDmBTMviHnAvLbM82WeJ/PkzLNjnox5xszT
ZZ4W89SYV9eanX+tpV5Va6lX2VrqlbaWesXMK2RePvPymIfMy2FeFvMymJfO
vDTmpTAvmXmJzEtgXjzz4pgXy7yJzIth3kjmhTMvhHnBzAtiHjCvLfN8mefJ
PDnz7JgnY54x83SZp8U8NebV+bPzz1/qVflLvUp/qVfqL/WKmVfIvHzm5TEP
mZfDvCzmZTAvnXlpzEthXjLzEpmXwLx45sUxL5Z5E5kXw7yRzAtnXgjzgpkX
xDxgXlvm+TLPk3ly5tkxT8Y8Y+bpMk+LeWrMq2vFzr9WUq+qldSrbCX1SltJ
vWLmFTIvn3l5zEPm5TAvi3kZzEtnXhrzUpiXzLxE5iUwL555ccyLZd5E5sUw
byTzwpkXwrxg5gUxD5jXlnm+zPNknpx5dsyTMc+YebrM02KeGvPq/Nj55yf1
qvykXqWf1Cv1k3rFzCtkXj7z8piHzMthXhbzMpiXzrw05qUwL5l5icxLYF48
8+KYF8u8icyLYd5I5oUzL4R5wcwLYh4wry3zfJnnyTw58+yYJ2OeMfN0mafF
PDXm1fmy889X6lX5Sr1KX6lX6iv1iplXyLx85uUxD5mXw7ws5mUwL515acxL
YV4y8xKZl8C8eObFMS+WeROZF8O8kcwLZ14I84KZF8Q8YF5b5vkyz5N5cubZ
MU/GPGPm6TJPi3lqzKvzYeefj9Sr8pF6lT5Sr9RH6hUzr5B5+czLYx4yL4d5
WczLYF4689KYl8K8ZOYlMi+BefHMi2NeLPMmMi+GeSOZF868EOYFMy+IecC8
tszzZZ4n8+TMs2OejHnGzNNlnhbz1JhX15Kdfy2lXlVLqVfZUuqVtpR6xcwr
ZF4+8/KYh8zLYV4W8zKYl868NOalMC+ZeYnMS2BePPPimBfLvInMi2HeSOaF
My+EecHMC2IeMK8t83yZ58k8OfPsmCdjnjHzdJmnxTw15tV5s/PPW+pVeUu9
Sm+pV+ot9YqZV8i8fOblMQ+Zl8O8LOZlMC+deWnMS2FeMvMSmZfAvHjmxTEv
lnkTmRfDvJHMC2deCPOCmRfEPGBeW+b5Ms+TeXLm2TFPxjxj5ukyT4t5avx8
82Lnl5f084q9pH6+l9RDL6mXxbx05qUwL5F58cyLZV4M88KZF8w8YJ4v8+TM
kzFPl3lqzKtpwfprwfprwfprwfprwfpjXjrzUpiXyLx45sUyL4Z54cwLZh4w
z5d5cubJmKfLPDXm1TRn/TVn/TVn/TVn/TVn/TEvnXkpzEtkXjzzYpkXw7xw
5gUzD5jnyzw582TM02WeGvNqPFl/nqw/T9afJ+vPk/XHvHTmpTAvkXnxzItl
XgzzwpkXzDzwxCGS/lTHf/pTHf/pT3X8pz/V8Z/+mFfjgeGS/lTHf/pTHf/p
zwPDJP2pjv/054Ghkv48cLCkPw8cJOnPAwdK+vPAEEl/HjhA0p8H9pP054F9
JP15YC9Jfx7YXdKfBwZK+vNAkPTnge0l/XlgK0l/HthC0p87yiX9uaO1pD93
NJD0547qkv7c8UOZuD93LCkT9+eOV8rE/bnj4TJxf+64pkzcnzuOFXux7hgg
9mLcUVvshbvjjafi/txx+VNxf+7o91TcnzsWlor7c8fIUnF/7vjoibg/d4Qn
4v7ccWWJuD83PPFY3J8b/vNI3J8bbvlP3J8bBj4U9+eG2Q/E/bnhqyJxf254
+664PzeMuCPuzw0Tbon7c0P/fHF/bjj8irg/N6zIFffnhifPiftzw6PZ4v5+
f3+Z4v7ccPsBcX9u2CFN3J8bRm0U9+eGhSvE/blhnzni/lxx2Thxf67oMFjc
nyueV4j7c8VqZ3F/rujSWNyfK96tGCLqzxWDzw0R9eeKV5KGiPpzxXHDhoj6
c0VvuyGi/lzxy8NwUX+uOHN1uKg/V/T0Dhf154qTLoeJ+nPF3n3DRP254o5L
oaL+XLHMJVTUnyv2jB0s6s8Vd+8dJOrPFbtnDxT154I2B0NE/bngzJkDRP25
oJZpf1F/LliwuK+oPxfUze4t6s8F9Q/3EvXngs3De4j6c8GU40Gi/lww8EgX
UX8ueFwBov5c8GZYB1F/LpjzsrWoPxdcV+oj6s8F/dyai/pzwU8ZclF/Ljh0
QDNRfy7473czUX8uWLG6qag/F8z8T13Unwuuzv10S9WfHN+bvryl6k+Oj1OL
b6n6k6OD65Vbqv7k+O/kE7dU/cmxoedOlZclx5v6y1ReuhzjcazKS5Hjp+Lu
Ki9RjmFVTiovXo6Fc77fVPUnR6evN2+q+vv9ebe23VT1J8exwVE3Vf3JMSXT
/qaqPzlquxbfUPX3+/j88huq/uToHut5Q9WfHCea5+Wr+pOjfUxIvqo/OS6s
uXNd1Z8zPvTocl3VnzMu67v7mqo/Z+w1ufqqqj9nnBrlfFXVnzN2vx54RdWf
M7Zr1POyqr/fx8198lT9OeNeza8XVf0543T1nbmq/pwxw9/ygqo/Z7TrPR5V
/Tmj94KV51T9OaNy6fR/Vf05o2x9szOq/pzxKqw6rerPGTslHDqh6s8ZA/bM
zVT154w3jT4cVvXnjJWzNA+q+nPG3isP7VP154Rl3x6kqfpzwp/jF21T9eeE
jzpu3qjq7/dxks5fqv6ccGbTm8tV/TnhkcL8har+nLC6f+3/VP05YU0zr0mq
/pzw8L3RUar+nPBxyYLBqv6c0KVXRA9Vf04YsbWinao/J7y8tMZd1Z8TGipH
yVT9OeGBHD0tVX9O6Dz06rsgoT8nnHIyujhI6M8J+588rAwS+nNC3fyJe4KE
/pxw3frRS4OE/hyxbvTgKMGrdETl988dBK/YEUfUfjcWvHxHLBhs+Lyr0J8j
DjF/eLKr0J8j9kqoXdhV6M8RP535GNhV6M8Rp9eM0+gq9OeIU14Wng0U+nPE
rVYZUwOF/hzxtvZI60ChP0dcMr4/dhH6c8RVXe4N7SL054gnGvtWdxb6c8Tg
7Xv+11nozxHPde1X20nozxGTN/WP6ST054ivA45cB6E/R1xwNdwRhP4cMTzE
d6JC6M8BO1lp7Oso9OeAT7QX5AcI/TngQcd2TzsI/Tlg3L1TT9sL/TngpQ6D
89sJ/Tng9G7DUtsK/TlgY2VVWBuhPwf0a93ks7/QnwNOe7J2ViuhPwdM8fd7
4Cv054C+qQlmPkJ/Dtil8LmXt9CfAw72X23fQujPAZM0Yl94CP054NThkxa5
Cf054E9Xw5dyoT8HtC86Y+Uk9OeA+e9WmNoL/TngqbVhd2yE/hyw/7rzvS2F
/uwx5x+jJWZCf/Y4cFvvSUZCf/b4tJNDIz2hP3vMvPWqZxOhP3ssy0/30RD6
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
7KPcQ/kMcO2P5oG4nfIZ4J5z0/c12ET5DHDCJM26ZX9RPgMcdNO0pO9KymeA
nm6d3kYuoXwGOD/78Plz8ymfAUZVO5aPnU35DDDrqXNJVCzl+/31NppeRydT
PgPcXvE5uN94yqOPpiaee7vH0Ofr46BN/23cGkWfp49t2oyY1X0E+fro1afz
uoHDyNPHrCeDbc+Hk6eHY69f65kUSp4eWgd29L04iDw97K/16FnEQPL0MC49
NjQqhDw97Bq26X8FA8hrihF/nTI7NIC8pniluGddzQDymmJlSO21jBDymmK6
6QGH+wPJa4oLPpfFzxhMni76Ny3skxBGni4u9936uOlQ8nTRXXf5aN0I8nQR
L4RrLokkTxeja9acnz6aPB380uTQkkfjyNPBFVO2yc5PJk8Hsx9ot7KfQZ4O
jtHKH/8jjjwdNOkW5DM4njxt1NZ8Xe6xnDxtfHYw6+yCteRp432nvx/0ofPH
Vxt3dZ7ss30nedq4tF3Z/pj95DXBS6uyPx4+Rl4TPB7rlj3tDHlN8Cikj8+8
SF4TnJO8ZczEW+Q1wWulHi92PSSvMWr2tNfoX0leY8z8djhz9gfyGuNcv+hL
5r/Ia4xrTVw+eOrS9aUxPu/ndvWUjK4njbBP2aecLBe6fjRC59yVRg7+dL1o
hEHXx/36FUjXh0Z4/sT91b0GktcIa/o23K0eTZ4WOrwM1nGcQZ4WJjxeN/Xg
UvK00CV86ZBNG8nTwmwfPZ/ydPK00LvoHKzLJk8Tt7sHZm69Rp4m9hpa/deP
R+RpYoexHa+fekueJoYPX+iXq073I0201R0f38yM7j8aWGxb2O2KG90PNfBp
2KjGZwLo/qeB7++EO7/vT/c7DTT6FfpiXAx5GhjfvvViu7nkNcTe2c91DJPI
a4gPpoQtb72PvIaYWj2m9K8z5DXEmD2P35gWkNcQ10+aMP1SBXnq2NT6tM3W
b+Spo3/ihDV/GdLzlzoqTPv32eVCz1vquPjlxMfXAuj5Tx3PmLgcaDSQnvca
4Kh//mcUMp6e7xqgXYDJ5L/jyWuAyuJjmg3p52XfBjj0f76yiMPkNcBGtl+f
nMglTw3/ud9slfpD8tRwwbi8Tp3fkaeGPVNHeU7R0qj31PDeQcOJS6016j01
9PUus5vvo1H//l/K4PW+4wd2p9f/UrobNh6rGaFR/3k/lXt6RXRYHatR7/9U
up5cpft0BXk/lYqkderqO8n7odT+Gd/n5XHyfih/Hb/msv4yed+Vw59uv/n5
P/K+K9++bLvG9B1535V9ovvkVDbUrPe+KYcbdD0ZY65Z731TTumy5X2Su2a9
91WZFG1XPTJAs977quyvO6L9nb6a9d5XZcnwvLmlkeTVKQO9v0cvjyWvTrks
zeL8haXkfVFuTH8yZe1G8r4oW/T4OKZyH3lflIP1dLPzTpL3WTm6e9MVHpfI
+6xMftrO0vAueZ+UoT175seWkfdJ2bHlbIt+78j7pJxweMOm3T/I+6icsrzR
jzHaWvXeR6Vp33z7HWZa9V6tss/b0d86OmjVe7XKiTOu7urZXKveq1VW/KPo
e7a1Vr1Xo7x0OSByQyfyapSusb7hN3qS90E5pXu/x6NDyPugrOjQMWfoUPI+
KO1ld0oyosh7rzwVlhkTOo6898rufd8khU8h750yITr5UuYM8t4p3Tr4bIyI
I++d8uTukJyI+fT+t0pHq9cmmfH0+mrl3DfZJwYuoc97oyxN2XWr+zLyq5SD
NtflJSaQV6V06nFJbrecvNfKlbI3+9SXk/dKWXJotNwvgbyXykjr4JMnlpL3
Qune7dOqpYvJe6E8ZPxZe+9C8p4rT18yu2g8j7xK5ckwxdS7s8irUHq8GVZb
OZ28cuXwgT4jgyeRV66cftW+WnMMec+URa9eqpuOJK9MaaMd2nxuGHlPlS2r
Xji360deqfKg2aSbId3IK1Xeu7am5bUAen+Jsuz2oMWpvvT6R0rTTgesilzp
8/5TPhiRtXCqDfnFyoOPeoROMyTvgbIqvuu0/zTIK1KGbio4n/mZzt+7yue+
hyI/v6Tzu1B59ODoNUf/o/P1tvJK73V7H+fT+VygtCp87rrsLL0/Xzlszbiz
Bw7T668qn5+f7tx3B/3/IU+5fcSVLnGJ5OcqNSK2yzznkofKXnqrLk0YR+/P
Ua49sGpxh1B6fZbScnxZ+u5A+voB5ecFWnt2t6TjFOVn93lqnWzJU1NrEZU5
crG28HVFp3a35k74RNevA4q1SxKaNSij61eWYlJZUfPuN+jrOYo25wu2dc2m
6xUqimcMmPpzN70+V5FXjRdmraHrW56iTdi/Oadm0fuvKgbXFKzESLoe5ise
pDrN2NqLvAKFb6T9pR6t6PW3FWZdbQoLbckvVAxuovYjoDG9/67idmnl32ve
0/W/SGF4Oq/zlYd0/3igSBrQtH1NLt0vihX7T3bSNDlM95v/FI1t95p50+9L
8x8pEtVvlgcvJK9E8WTygPIpY8krVbSwHrF8Z396fakibV9Eh5J25D9VZPtv
n+jnRO8vUwQYvpyT3pQ+75lierfAC20/0/23XJGstWxDTSndf8sVZ/IbtS2+
RvffCkXr8ojXb0/Q/bxS0WW+1sMOqXQ/f674cNba+dJK8l4o8mxtH6+ZQd4L
hdO49AbbR5D3UjHgkH98bU/yXilcZqj5bvcn77VCtv/Uk83Cz9NVimmto/2r
9MirUjw171Gw4xs9D71RnDtwtkXmC3oeqlYEfbQ+4y78PPxWEfnhJOpdpOer
d4o2LhdnRh6n179TVD+Z8k6+i5633ilWQpH7qCR6/3tF+RRZA8t4+rz3Cn+L
OO++U8n7oBgyK3awViR5HxSp/m/fdh5A3gfFZMXksMbC82ONYq6yx9Vwf/Jq
FNcTP4e1cyOvVqFvHv41w5q8WsVgQ5N5JwzIq1V4fK9dHqJJ3kfF2ZNDdyd+
pefhj4r9Psfdot7R8/MnRZeFbwYVVdLz8SfFIrmszevH9Dz9SbHC4k3O7nv0
vPxZ4eU6ecfPG+R9VtzyTZmndpm8L4oT2rKrB5C8L4p9No3yv50h74viP83T
+z6fJK9O8fZVYu+dmeTVKRxulKx7d5i8r4qZp0rN3x4k76vi8+1tQ7f+Td5X
xaHR745+SCfvm2L+37s7ftlH3jfFzvHTGx/aR953xZElARXa6eR9V9h99lxq
Lvw88l0x+N+qCQV/k/dD8dCk+qvfIfJ+KKLCTowJPELeT0VrK8/zPzLJ+6k4
l6T7dsQp8n4q/Jp0OT7uH/J+KdbHjN0nO0/eL4VuFARMFvpTg8zZna+Ovkmv
VwOPEM8ZP++R//vrcTsC/Uvo/Wpg4Pivjc5z+jw1OPaqTDlH+N+3Afi1Dr26
+Ct5DaChrPFpO006fxrAyNGDKvob0PnWABIKSpKMrel8agAOl4fcj3Kl808d
ZJdmZHdoReeXOmyvOG62szN56jA+Jip7ST/y1KFD0aruryLIU4d5e5+H3pxE
XkOYkfd8uOd88hrCWaesHLU15DWEq4taZXXbQV5DaLiyxbwfh8lrCH+fCGpp
qyRPA8pPuf63r4A8DbhjmDolqYw8DVi94uSd4lryNOCIUcn9+Y2En39g11eL
LrMt6fqiCfKbza5dbE7XH034dHm96YhOdH3ShENhrhc6D6LrlyasnFESOWEc
eZqwrFfz+Xfnk6cFUw3ab4hbT54WeM4wsBu8nzwtSIy7kTz6X/K04F5QyfA9
t8nTguMpXi+1n5PXCGoWR+3c/J28RpCp/6s80Iiu741AI2Gfk54rXf8bgfGj
gLzqALo//P66oXOrshC6fzQGuUFY6bNxdD9oDFmXt7V/K9xvGkOqzW78Jfy9
rTF8nuTxziCDvMbwQOEUYnuBvCYQ8OTcXMcH5DWBv1av0LKuJq8JDK6K29ZQ
g+6nTWD4QvW392R0/2wC7U7q5a71ovuvNgTENn7h1pXut9pwNut2wJ4hdD/X
hre/sk98mkKeNqyOH9PHbhl52lAbfcXWeit5OlAZ9TK48gh5OtDS+K7x3Fzy
dGDDhxG5RffJ04GpBd/x42vydOCfWTNX3P1Fni5MjzyYMcWYnn90YWnnwAe5
cnqe0oU2PSNu3mhLzze68OWFy4RVwfQ8pguRX+fv/RRBz0NNId177ir9aeQ1
heG7f3W7s5i8pvAxwsuxwwbymkLQ++fze+4jrymUnfEs+nqSPD3QN1uV1zOP
PD1Y4TVFq00ReXoQn7hgPFaQpwdr/O6VP60lTw8S5nRftrUhPZ/qw66orXEv
DOl5Vh/67t/b9Fozel7Vh8LIOYcCmtPzrT6sjYj/r1M7eh7Wh2jXeYH3gsgz
gILilEOfBmjR7wch9NLY2r0R5BtAkPYtuyfjtOj3i5DWvLbfXuHnGQOYcMch
t2ZBvRdvAC2O7irMX0GfbwAVT5d8b7Fei36/Ce8vTb0n20Z5DKBx7CjjNXu0
6PejMEYvasWKQ5TPEMIsmzvqZlE+Q6j+UFltfobyGcLPv7OMMpDyGYLFlP63
r+RRPkOIuXlgxeR8ymcIR/8bmrnjNuUzBGW6omRwEeUzhGy7Z/9sfUj5DGHs
aTWD8SWUzxBeVbzNvvSU8hlB4Hf9w0fKKZ8RxEc2/+r8nPIZQeONTy96vqR8
RnCwVXW3i68o3+/XD0oufPOa8hlB0qin+QerKN/vr9dqHf5eRfmM4MmJrWoV
VZTPCLoWPI0ZXUX5jOCahfG6heSpGUN4+82dWr2ifMbQs3dQrxUvKJ8xOKnt
SZpTSfmMYdAV44Z65ZTPGN51sdwdSN9vvDG8aL5yjl0J5TOGaPecfXseUj5j
0M/+t3tBEeUzhsp1ycl/36F8xjAkfzi2uEn5TAA/rzUafZXymUCXdfZFvS9S
PhOI1L4e8foc5TMBvSPejSCH8plAuwM23n2yKJ8JOM09o7A4TPlMYKZBXlpa
OuUzgZxrBedfplI+E7iWFWfyaQvlM4ENVkd0r6yjfKbg/Oh1s6hVlM8UDi1I
uJi3mPKZwo64t1O/zKF8pjDrXINtddMpnym0vt7vdP54ymcK+6fNbTND+P2B
KbRcunjth3DKZwpnNjrKe/anfKaw8XPrsfO7Uz5T6GxrkbNWQfnMICi54ex4
f8pnBsrNa34ObE75zMA2RS9Nz4nymcHOTZYHjlpSPjM4lvw9oh39/BtvBi+9
W/861ojymcGixdpK05+a9PdFyG3z69p44fpkBgGes4KOv9Kkv0+C0fAuvapL
6fpnDnXTFC/t7mvS3zfB4fwH5+AbdD00h12v/L9Py9Wkv4/CxCblQzfk0PXR
HLbPX+x28mi9F28Odv3UOxbto+ulORxpPjumbhvlM4dJtU9G2a2nfL+Pb5S/
Cl5B+czh5ZUje+IXUD4LePn+pNvZGZTPAt5e36qjMYHyWYCph8b1wZGUzwLk
gxY/OhVK+SzAM2zWfuc+lM8CvBZpJOwVfv62APVH3y/6tad8FtB5z6M991tS
PguwTbg0cK0r5bOAx/sXfg9vRvlksLv9wuPtzSifDA7uqI73a0r5ZJBz9d/o
rhqUTwbzmx7rPeUb3U9l0P/uPNusD/X3y3gZfBxbmmH4iu6vMjizQnl+9VMN
Wh8A5bu7yxyK6X4rA4+dslH3CjRofQEc/zG2c/oVuv9agmtHnz4bUYPWJ0Cn
LqMN92TT/d0Sph220Ck4pkHrGyD67bkj1gconyXEfR0evXIX5bOEheFXV5ht
pXyWkJ1UMuniespnCeFbc4ckr6Z8lnB+sEvikqWUzxKuXV7it3E+5bOCRm8j
5135H+Wzgpvy1MU2UymfFRy8mTVswzjKZwUaTt/Mmo+ifFaQaPf9xPNhlM8K
xrTJanlxMOWzgi93Hi280I/yWUFqOKwq60n5rCA3+5uvU1fKZwV+3rfCliso
nzWU9ht3Q6cd5bOGk1pZIzL9KJ81bFhrdX+WF+WzBs+25bUR7pTPGtIfTZgR
40z5rMHyQZzOWjvK99tPXDH+nhXls4b3PvoBHcwp3+/Pq77mdsGI8lnDP/qN
CmP0KJ8NOEWWF7lpUz4bWD0z9Za28Pt0G0gpvhfSRJ3y2cB22bVPTj+F9Uuw
eXl69+FfhfVNkHbsXFHmJ2H9E8ycdsvDoUZYHwXLtwUUHH4rrJ+CfOuQngOr
hPVV8H7HHFvTl8L6Kzi9Ou7W2wphfRYMWPR3ybMyYf0WvNN2z3/3RFjfBYuz
m5mbPRbWf4HLnMcBIQ+F9WGwHqzO7b8vrB+D24+cTI3vCevL4KdVY9xwR1h/
BoHW59t7Fgjr0+BgcbRm8Q1h/RrofOixdet1YX0bzErzmj31qrD+DQLeR9kM
uSysj4P53mWNQy8J6+eg+aYFZ2JyhfV1YOH7/fiK88L6O2jm6D3jX6WwPg8u
NbFZ1OCcsH4P/i5pGhH6r7C+D9oZHE06e0ZY/wfzGsrTfHOE9YHQ6YvcNOe0
sH4QboY3mdP7lLC+EDoufTjk3Qlh/SHENZrSdVeWsD4RvkydfnXEcWH9IpTs
mznbI1NY3wgD7n+raHhMWP8IXa0S9r84IqyPhCYndgwsPiysn4QZho8T7mUI
6ysheNPn4keHhPWXoNccX1cfFNZngs3pFsN0DgrrNyE1MvpGywPC+k5o/frI
s8i/hfWfUFexquu2/cL6UHiptm/b43Rh/SgERT9Mck0X1pdCmUebO3P3CetP
4bz2V737e4X1qaDvuOJL273C+lWItpnRee8eYX0rwKqZu033COtfIXrL6II1
u4X1sbDNvV2C7m5h/Sz0DFWLX7dLWF8Ln4YWzbXeJay/hT16FW0Ppwnrc+Fh
Udi8LmnC+l0423pIoyepwvpemFyruWthqrD+F27cjzZ0ThXWB4Ov6yiHWzuF
9cOw69bl1Pk7hfXFsBU8Qr13CuuPYWazavPnO4T1yVBw2itr1w5h/TJEdb34
bcQOYX0zBJp75NnvENY/Q/CGpS8qtwvro6GRy4p2R7cL66ehv/mcjXO2C+ur
YXao/d3u24X11zCp59k7su3C+mzovOLb5DfbhPXb8Hzfm+W524T13fBc49eP
bduE9d8w7eir4//bJqwPhzeBmStDtgnrx+HB17UxPuQlOsCek+9bGJOX4gBX
O0y5+nGrsD4dBq35x+bhVmH9OqzrnWqCW4X17ZAUXb15/1Zh/TtUn16wPmmr
sD4enhk2ezeHvEoHONJy7Y4Y8moc4Huj6StCyFNzhDd2fVM7kafrCJ87xN/2
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
87KYl8M8ZF4e8/KZV8i8YuaVMq+SeVXMq2FeHfPUWrLzr6XU020p9YxbSj1Z
S6lnxzw58zyZ58u8tswD5gUxL5h5IcwLZ95I5sUwbyLzYpkXx7x45iUwL5F5
ycxLYV4a89KZl8G8LOblMA+Zl8e8fOYVMq+YeaXMq2ReFfNqmFfHPDUfdv75
SD1dH6ln7CP1ZD5Sz455cuZ5Ms+XeW2ZB8wLYl4w80KYF868kcyLYd5E5sUy
L4558cxLYF4i85KZl8K8NOalMy+DeVnMy2EeMi+PefnMK2ReMfNKmVfJvCrm
1TCvjnlqvuz885V6ur5Sz9hX6sl8pZ4d8+TM82SeL/PaMg+YF8S8YOaFMC+c
eSOZF8O8icyLZV4c8+KZl8C8ROYlMy+FeWnMS2deBvOymJfDPGReHvPymVfI
vGLmlTKvknlVzKthXh3z1PzY+ecn9XT9pJ6xn9ST+Uk9O+bJmefJPF/mtWUe
MC+IecHMC2FeOPNGMi+GeROZF8u8OObFMy+BeYnMS2ZeCvPSmJfOvAzmZTEv
h3nIvDzm5TOvkHnFzCtlXiXzqphXw7w65qm1YudfK6mn20rqGbeSerJWUs+O
eXLmeTLPl3ltmQfMC2JeMPNCmBfOvJHMi2HeRObFMi+OefHMS2BeIvOSmZfC
vDTmpTMvg3lZzMthHjIvj3n5zCtkXjHzSplXybwq5tUwr455av7s/POXerr+
Us/YX+rJ/KWeHfPkzPNkni/z2jIPmBfEvGDmhTAvnHkjmRfDvInMi2VeHPPi
mZfAvETmJTMvhXlpzEtnXgbzspiXwzxkXh7z8plXyLxi5pUyr5J5VcyrYV4d
89Ras/OvtdTTbS31jFtLPVlrqWfHPDnzPJnny7y2zAPmBTEvmHkhzAtn3kjm
xTBvIvNimRfHvHjmJTAvkXnJzEthXhrz0pmXwbws5uUwD5mXx7x85hUyr5h5
pcyrZF4V82qYV8c8tTbs/Gsj9XTbSD3jNlJP1kbq2TFPzjxP5vkyry3zgHlB
zAtmXgjzwpk3knkxzJvIvFjmxTEvnnkJzEtkXjLzUpiXxrx05mUwL4t5OcxD
5uUxL595hcwrZl4p8yqZV8W8GubVMU+trXD8/wB0Z3jZ
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
ov580EZ9V9SfD/Zf+lbUnw+uHae/XNefD/pEuC3X9eeDkyMbL9f154MJT3ov
1/Xng/G7py/X9afCSsetOq9chXFHS3ReqQrbhhtm6PpTYTm0yND1p8LqHTMz
dP2pMLbv5Qxdfyqc1FWZqetPhem50zJ1/anwUE55pq4/FY7Z2XeFrj8VHmv5
YIWuPxX+7v3nSl1/Kixu4qLR9afC5jtuaXT9qXDDP9tX6fpT4cc2mat1/amw
V+11a3T9/fz8qLNrdf2p8NUc8/W6/n5+v8cpWbr+vDE932Wjrj9vDH36YpOu
P2/cUfxqi64/b2wyMXCbrj9v/DZ853Zdf9546tPEnbr+vHF24PI9uv68sftT
4/26/rzRpOrJIV1/3njLJfiYrj9vvNL2A+r688ZdaS0KdP1549suqkJdf944
ceyea7r+fv57j/eluv68MUj144GuP288+OjlC11/3ng860qVrr+febaf/qHr
zxu3ah+ZWAn9eeHFVh0VVkJ/XjhilpevldCfFx5/Pb+RldCfF2J8TnsroT8v
PDZmR3/By/v574jjBS/bC/N7uiwUPI0Xjqr1eavgpXlh1YHlZwUvxQtdjULK
BS/JC/tsdDC2Fvrzwrzjq0Oshf68MP6gZT9rob+feVaXplkL/Xmh7dXeJ62F
/rwwIr/uF8FTeWH0qG5RNkJ/XliaeukvG6E/L3zz7PMlG6E/Lzy3Y7qbrdCf
Jw4ykk2xFfrzxJz4iPu2Qn+e6NPuWYyd0J8n9smvOGMn9OeJRyGwrb3QnyeO
6LHxpr3Qnyc+O95/vIPQnycerj3HTSH054nj5L3+VQj9eeKAQp9sR6E/T/xc
9/dZTkJ/nngkbNOfzkJ/nrhw3tzpLkJ/njjG7vFaV6E/T8zVz77hJvTniU0N
H/u7C/154vdrt9d4CP15ou+ND0FeQn+e+EJ+/pG30N9P74vDCR+hPw+8dPMh
+gn9eeCS2z3eBAj9eaDX+bKYIKE/D+yywv9usNCfB1b1V24OE/rzwJe/V22J
EPrzwMGTPZ9GCv154PCByYlNhf48MHurbePmQn8eWHfxmF6thf48sF/r+Ivt
hP488FRP1xUdhf48MCmhw9lYoT8P9HP60SdO6M8Dlw8+MmiA0J8H5r2b8WCo
0J8HnqhzuyxR6M8DW04oGTZe6M8DXziapU4V+vPAUcNRPVvozx3txpzZsEjo
zx0rrdYcWin0546mOZMXbhL6c8cxdzoE7xb6c0fjhwU7jwr9uWOtOkNsLgj9
uaNZ8uSkm0J/7thoHdwuF/pzR5sxt/p+FPpzx2kJvY2N0qk/dxy7tuw/p3Tq
zx1XdlkWEZxO/bljxq7d91qnU3/uqHy9tm6/dOrPHScUVJ6aQF6YO05SpdZf
Qp7KHVObThiaS57CHZcURqZcJE/ujpeO71vzgjyZO97/EVoqX079KbHOhsXd
Q5ZTf0oMVwWF9VpO/SnR2dE6Y8Zy6k+JN/95u37ncupPiUkdIibfIS9Pie1H
usaYZVB/SrQ31apbZlB/SvyU4DBjSgb1p0SPSV7NDmVQf0r8e3x59n8Z1J8S
XzSd/Coyk/pT4qvrntEzMqk/JX7E/k8LM6k/JS7t/MrIZQX1p8Soi0+fjV1B
/Slxy4BLJy+toP6UuLBibon/SupPiSdGpg9evJL6U2K81+u86pXUnxIf94wy
Ha6hvtxw5rYz+WUa6scNJzxaqt9/FfXhhlvajWj5cBX9/G5Y3ejFqZGr6ed1
w/0+M/+VraGfzw3rPlj8cPUa+nncsMm7XhHqtZTfDVfVd23wci3ldcNOsa5N
s9ZRPjfclLL2QP/1lM8V3x15oeeTRflccafPkIzqLMrniq3MJpfc2ED5XHFc
yp5Q7UbK54oRmes98zZRPldM8H3vkreZ8rnivqpBq7VbKJ8rHrQ97FCaTflc
cUX+MVvZNsrnikdqRdqG51A+F/z64emaSdspnwua/zki/NIOyueCWdbNhtfb
SflcMBg3Xli/i/K54LnIZY899lA+F6zlkd3x0F7K54KDd9Ra1y+P8rlg3IWG
I+wOUD4XLL4S1OXhQcrnggFjar06eZjyOeOaWnfvHjhC+Zxxpt7dMyeOUT5n
HFX0qNXdE5TPGY37j6ltdZLyOaO529hN/U5TPmccf9P6Cp6lfM44LnFZvSbn
KZ8zRq7/+nvRRcrnjDnbv/tMv0z5nPH+sc320UWUzwmt2jg98C2mfE54xy0x
yOcG5XPChxMa5TQvpXxOuH3Z6M+T7lA+J+w9uvbFy/cpnxM2dFt+Ah5RPic8
Y+sz7Vo55XPCtZ3PbZv5gvI54aTRIQ+7vaZ8Tlhe8Oe56PeUzxHNp62rjPuP
8jni/ZMtvy/6TPkc8VREyJTy75TPEdeuqa6Or2NSk88RIx4srPvDwKQmnyPq
bSvyPCk3qcnniN8Tfa5vtTSpyeeIhwYZLc+zM6nJ54j/1k8reexU48kcsXTf
6zpN3Gu8cgX2+OA+N19V4xUqMGdKZ22/wBovT4HT3Yb88A2t8TQKnLB1foZT
I8qnwIad88+GN6N8CvSdXv/ixFaUT4Err3669qA95VPghdJRdcd3oXwKPLbl
yJSgXpRPgbbje7SyHED5HPDG2cUDnRMonwN+Uhhf6DSS8jmg0aoWg3eMp3wO
KK9ta1J/KuVzwNfmLRb+O5PyOeCM8x+37lxA+Ryw5EEf423plM8BAzc7dLuw
mvI5YPzyChvLzZTPAac1blo4PZfy2eOt+J3PLA9QPnvsLj907sJxymePOVvb
HdhSQPnscVtG4svNVyifPXqsKF9acIvy2eOdbi+OGz2kfPbolXB+7MiXlM8e
vQO2rnlbRfnsMe0qOC77TvnsMa50677OhvKafHaYM8rKMcBKXpPPDr+9zH3r
5iyvyWeH9jeTTtVTyWvy2WH+NluD2GB5TT473LDzjvuiqBovwQ6vx2wYeLdV
jRdjh8++npGpO9V4YT+9+hHee+NqPIUdBo6fVhYypMaT2WG5U0l97SjKZ4uK
tFZfeyRTPls0mlfi+HEm5bPF/ZvzY9Yuony2OER/pbqNhvLZ4tJDlxa+30T5
bHH5umMn1uyifLa4oX3TNi3zKd/P491V8x6dpny2GPvy2s3J/1A+W0zwWTpG
v5Ty2eDX7CYzZz6ifDYoN7wc9OYV5bNB/6Nn/47+RPlssP2uh3+l1jatyWeD
R5VFDrly05p8NthtyavQ/XamNflsMC7HaetqpWlNPhtUOme0GOBvWpPPBgsa
XDv3JazGk9n8vHROfDOyaY1Xbo397WOG7Yuu8Qqt0e4L3D3bqcbLs8YrYckV
m3vVeBprjJo+KDRmIOWzxmWZJa0PD6N81qinH3XkyVjKZ43Rm04qryZTPmvM
SFhpNHEG5bPG6f4BdUvmUj5rLKoYveXxYspnhXOcI/7akkn5rPDPKdMCrNdS
Pivca1Pc1n8T5bPCrFN5U59uo3xW2PJI5fg2uyifFZ5Z4P88Oo/yWeFvdTzX
PDxE+axQr3PHfvbHKJ8V3r8WafxQS/ms8L93+kvUpymfJY5r97gisIDyWWKX
xXNCtp6nfJbYfcrWv3dcpHyWaF57gmPDQspniSOCrNu3uUz5LNH7kXxK6WXK
Z4l9L50LfnmZ8lniSW2l0eTLlM8SEx9/ODmTPJklHjvVMVT/EuWzwFMbPsf+
OE/5LPDugEswsoDyWWA3i6MNOp6mfD+PsyIWZ9HPm2KBJucHlAw6Svks8PrC
1rvSD1I+C8zdZPU6ZC/ls8DA58ELm+ygfBbYZ8DAXfs2Uz4LXHPv3Lr0tZTH
HM88fH7jXgZ9f3OMObv+S/pC+n7maHPq4719s8g3x/c+xjMaTyHPHKc4nbAI
ovOt0AxVvaZXzE8gzwzzBt7d2LUPeWYYvc63cjad32Fm2PLW88veLckzw8c7
e3QPiyDPFJ2m7ry725c8UzwW99erNY7kmaINljf9akKeKQakbj9y5StdD0xx
3Z2YvxWv6O9fjttl+uW379Dfuxy/DN0+TFFI1x85KpVTT5ccoeuNHF/3e3rb
Ioc8Oa6+5ne5KJM8E4x6//ih/SzyTND43SrN8zHkmaDbX3br2vUjzwQ/tjxe
2LgdeSaY53M5+EwD8oyx7t+z6jx1I88YKzqH79hmTJ4xPtnU8ojpB7qfGKPj
OPPXjvfp/mGM2c4X610/T/czI/z4tOG85vvo/mWECSf7NRy6mu5XRgh7nDJa
zyLPCD377Pd8lkieEfa2aTGna3fyDHH8c8Xs+U3JM8Q1jV1qZ3qTZ/jzeeyz
bIopeYbY/7d+WeoP9HxliMuzzRUv7tDzlAGGmpkcSzlDz08GmGwz9a1RLj3P
GeBN2eGQNOH/Hw1wwgZvU7Mp5BngnLqOysxB5OnjsNc5tgHtydNH58Ixm4tD
yNPHi24d0zIV5Onjai/H5ZNrkaeP0zd3nZP63KjGq4v9H2HYyatGNV5dPLhY
8XvIEaMary6O2rGi4u5GoxqvLmYOTp9/eYFRjVcXVxTZygwmkKeHQauH117a
nzw9PD9rT9S4tuTp4fDiYS33hpKnh2c2mmZ3cyFPD/OdV98aZEheHXRYU7/x
w0rDGq8OVh3Nsi29b1jj1cH13Z0yOhQa1nh18MvI8xda5xvWeHVwomXy5nPZ
hjVebbzl1Lvq1nLyamNO+Z4hf80krzb+uL5hMo4jrza+PVQrfcMg8mpjwtPQ
Mp9Y8mrhKFfzP3q1Iq8Wbrp/r1ajCPJqoU/cgG6XfMmrhbXW3Sy2cyavFr6X
N0NXC/Jk2OfAKM+neuTJsN6spCtJnw1qPBlWfbnX9/xbgxpPhiPCovyePTWo
8WS45J/U7jfuG9R8/Q/ti7XXz2Tcos//oc2f897R75pBzff7rj3WXXV0WSH5
37U7q83OlZwj77s29uoil3enyfumPTKsOO45kvdNO67h+GsnTpD3Veu5J2fl
uOPkfdWu91k7se5x8r5qNeevVk48Tt4X7ZP/sttfPEHeF+3D/lVjvyJ5n7Ul
L7T2ZmfI+6ytddl043ch32et96mLQZcLyavWLtlSlD7pGnnV2uFD6w74cYu8
T9qrvZffGFBG3ift++/Nq1c8I++TdvrL0ulb3pH3UdvW+NCt2V/I+6gNvjw0
NEKffl//aUObxo/Ls6Tf93/aos2Poj670O/3P63xkvsv9APo9/lBe/Hqt3XX
G9H58EF7rMHp0EFtyKvSHks633xbD/KqtL/LTfw2JZBXpb09vrthx4nkVWqX
NDhxetNc8iq17j2b1l2/irz3WtetPZtF7STvvTbD7n7OaCTvvXblvnMdIkvI
e6dtOdHi25Jn5L3TvuyijRvzjby32icr3twosqK/57fakJD3R3b40t/vW+2y
3dPdPzejv+832o6zqr7t706f/1q7M2WHy/VEuj680s4919U/dhb9vVdov3bu
l+uzhrwKbWPnKaa/7SfvpfacynX1gULyXmijmxjPG/CEvOfaWrteV8J38p5p
i74ZPu5iT9e/Z9qKWVc6zQ+m6+NT7XjnTa4P29H1s1zrfCk1oMtgur4+0SYk
32lzZSpdfx9r++V6N+uWSd5j7bjW50pu7ibvkTah9ZWiLhfIe6g9svjop/yH
5D3Q+uSCveFX8sq0t2eafw+zpftRmdZXoZkbHkT3m3vaDpFX1um1ofvTHe08
vwcNNQPo/nNbu6FrZd+XE+l+Vap1elsUULmYvFta70uZpdu2kndDayPvcUBP
S16JdlXwLv8f18kr1uY26ndmSQV5V7UlbmeD9tWm+3mRNvD40Ki+DnQ/L9Se
9m1/b049up9f0AZf/CMqqAXdzwu0sZEfNG170PPBae0xt00TioaRh9qGnUon
aKfS1+drr7UpGW++mD4/T9tq1KGUI1n07zna0Ki0u0f20rFGO2t7kIHJKfJk
sl7dVXlbrgr/rg4YM+La7DLh69VbGtinZ78WfPVF0x8D63wVvr86t1ZUxQpD
el5D9bjixcp4G3r+Oq3+MvBqcC83ej4rUJ+7okif6kfPbxfULYw+1b4YSs93
heombVL+btqYvCL1bw1a9ylpQZ9/Vd1/SCO3tHbkF6sDb47NGdSJvr5EjdH3
XHt0o+93Q/1aXvJ6SC/ybqmbJS0qXtiHvFL10PaLr13pR95tddvd5U38B5B3
R233Kn73mgHk3VM/Hr/KymcAeWXqoxXVqy70o88vU1sOXHJ+luA/UF/KvZ8Q
14u+/qHaJXxOWttu9P0eqZPdbq6K7UTeY/Xn4PZNp7Yj77G6+eLyP84IP/8T
9fVNs/sENSavXL1lRJ3Vx0LJe6reM6t71Vg/8p6pM7rNn9zFjbxn6tvb98zu
b0Pec/Wzdtv2rjEk74X64IXbd8y/0u/7pfpjx8eqY6/pfKlQ22vs32wpo/O5
Qv3oraz4qnD+vFLfnns2t9UpOp9fq0Oejl9aZx95b9SdPrW+Yr2BvLdq1eiT
Lycvps9/q3Zw+3dDs2nkv1Xb1qq6P2Q4ff07debqf89W9qDv9069dP7Wje9a
kPdefeq55v2QIPLeqwv+uN+3m4K892rX6532FtQhr1J97oVT+alX9PdbqVbA
GNvON+l6UKVe7G06ZQLS9aBKva57ydioHLoeVKmNu3UYm72Urgcf1N/7u5uc
TCbvg/r1jcXPlg4k7z/1aL0755TtyPtP3dn7QPKEYPL+Ux/Zobm3wp68j+rN
qyMeLxZeT/yo3ld5+u+hT+h6+kn9u/mAI8pCun5+Ul94O3jJhX10vfykPjig
QP6Hhq631eq8whEN9VLIq1YPf5xqm51A3md1HfyQ3b0DeZ/VTdZueuTYgLzP
6hEGbw5/cyTvi3p7L1sD/drkfVG7Tdq8rvFzuh99VWcfqmyaXUT3n6/qqD2b
F3U4TPebr+rW1YGekVl0v/qm7p0+bPyYuXR/+qauc7vJ/c9jyPuublDScOP9
OPK+q4es6nTbuyV539XZx9bPLgkk74f6Q5uoie/tyPuhPt9Ef0BqLfJkEOCz
81RmBd2/ZeCyYOVXv1t0/5fBuKIfkdFnhOdLWBlrkPxuj/D8CbmR71JD1gnP
p7B9ffx3kzTh+RUyD+xunTpZeL4FZae4hVuGCc+/cH3En/+MihOej2FFSOcL
5e2E52d4d0lfz6qx8HwNv63ucKEqUHj+hlV2TX3S3YTnc/A6EvX6rZXw/A5z
u3/cbWkgPN/DgtqzTnwSns/qgFx/ekDOO3q+qwPNi7uc835Gz3N1wG5ghnLs
fXoerAOzPiXPXHiTnv/04Iyme/XUIvL0YIFpq7bNL5KnBwN23X9/+wx5etDs
lWWjjsLzqh5cXvDFSnOMvLowelpV1PF88upCZs9NnkcPkVcXXgYHflt2kLy6
YFTw5/5WB8mrC0V7F1ReOUiePmyfbujR4DB5P487bB865gh5+nD23OuNM4Xn
a30YUffStMST5OlDU4tJvf0KyDOA26u69T98iTwDePD37TH218gzgNicXU1a
lZJnAEnZB4KbPCDPAFbf6DTj63PyDCEzQuP3dyV5htDkr5MVF76RZwgjno/v
WWRIv19DMPzW/eRSG/r9GsK9c3M6GrvT79cI9IrbvAsPovPFCEJ9V4ywaELn
ixF45L3rnNGePCN40draEIXzzwhqz7xQuGAYecbw7MXVvZXJ5BlDdpvTG9/P
J88YNubWSpi5hjxjuNH02LqsXeT9vC68rvyn1UnyTGDm0Plxw0vIM4Hhwb1m
mTwjzwSqx7ab7PGVPBPoF5zSIceC/r5NIG3ElGqNN/39ykGrbDH0dRT9vcsh
JH7p0KzOdH2Qg98quTYngf7+5TC/7WhfvWnkyWGnozYmJ508Uxh/cdrlZdvJ
M4W1p0pbHTlJnimo8U4bRSl5ptB39Yo/ct6SZwo4pH2jIYZ0PTWD3sZz27VU
0vXSDJwPdguFRnR9NQNzt2aLunWm66cZPDEYKZv8B11vzSDVf3f49hTyzGF4
yaTyeyvJM4fmU+/estxLnjksWzf9YZML5JlDrQZjXsQ9IM8cChVWLwdVk2cB
Sy/erexiSe8/WMC9Sz4B7n50/7GAOo1LrlwEev/CAma++BbVrhfdvyyg1tzF
DzJH0/sfFpDf7p/uu1Lp/mcBGTnX285fS++fWECPo3XSvPfT/c4CnuzrbjXl
Ir3/YgHtG+5/N7uM7peWcFlVf0jz/yifJcyb5Hthmwndvy3hxJuR2YeU9P6A
JbTv1zxnWDjd/y2hJKzT1iP0+lqKJYxonL4+ux89P1hCWmTAUb+x9Pq/Jbwc
bt8RZtHzgiXE7n92szyT3j+whDWT+uo5Cq//WcF0o/IdN47Q+w9WsGKvd8n/
Xj/8lc8KLvXrsKfsDuWzgrFV4zb4vqJ8VjB1TFHEG3p9MsUKiu69qxcqF14/
h8zBV8e9cRReX4d34x+4efsJr7+DbUrd6VcjhNfnYUeDZL1K4fVTa3iVn91r
bmfh9X1Isa/osKSv8Po/lHl0fmL0h/D+AKxp69Ohapzw/gHIF28r6zhNeH8B
ysOTfBRzhPcfwLFv3etdlwjvT8AhR6/zX1YK71/AnbnhxjYbhPc34Lz7wn9W
bxPe/4DFxjvGpu8W3h+BVfmjJn05ILx/Ak9nN11cclR4fwX0t7nMczspvP8C
LlEF/e+eFd6fgW7nNtczF17ftwGz77ciDtLr9Xk2sNfR515xEeWzgQcbH2wb
Vkz5bMDT5FKT5OuUzxZcHr7pr3eT8tmCrevk9/JblM8WHPynf1x+i/LZQn7n
U/PW3aJ8trDNY8b9gFuUzxaaT/RpqyZPYwvHNpsF3L5O+WzBc2GYfu0SymcL
95xeJh68SvlsYfs/y/W//EP57MD20W8Lr12ifHYwTbuiUE3vd4TZwb+Bzlmt
z1A+O8ivbPe+XEv57GBAosVR1VHKZwc/Fi35bnCQ8tnBBdNrlxbuoXx24PFj
cuOj2ymfHeSumj8qfTPlswPTufYLFesonz34Rlmd7byC8tlD38sm7ZrQ+RJm
D1//rdXp/lzKZw+zd9c3bzqD8tnDpJgnp3olUz57KNMM2RQ+lvLZw0zV2Wc3
/qB89lBQdO+8Op7y2cPH3MZ/JvWkfPawbJKl24SOlM8BNj9uUdGmNeVzAP+v
f8jeNKZ8DrD/yeM/R9L/n8Y4QKeoz4MKfCmfA5ir3v/z1ZXyOUDEjDZHrW0p
nwNMNbnjYkbvR+Q5wLhXEQ9eyyifA2xfV/jo8H90fXGAB+06fxxVQdcXBchP
m5VZP6TriwKUrrHdtt+k64sCyt+UfGlwma4vCpjVNHj0QeH/vxRg7Ph7w5DD
dH1RwLmKxMtbd9L1TwFuPY5qnDfR9U8BrTe/rVy6kq5/Cph7ZqKH8SLKp4Bc
TWTvOTMpnyMsWt3zhEky5XOEmKw3AzSjKJ8jtN/xrGnoEMrnCBdWnW91K47y
OULAvGUdF3aifI5wOG+nR2xryvfTP1AyIaAx5XOEkQ/lL+xDKJ8jNJ+/xczR
h/I5QsHLZvFhLpTPCcJX3Wo71JryOUGO/VO3vUaUzwmsh4zxd5BRPieY3az+
6tX/0f3NCWKvH1vW5BXd35zg4np0+/qI7m9O0MZJpb79L93fnKC1V687/16l
+5sTwKYZV7+cp/ubE6S2Kn7aDOn+5gz7312+ufkQ3d+cIeL00nZBu+n+6wwO
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
Iq3Qag==
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
UforY526P3cc36pJ7+Xq/tzRu5l95EJ1f2549pHX1unq/tzwYXQbj3Hq/txQ
XrD39hB1f24Y5VKwtae6Pzd8b7tyXjt1f274a+yN4Y3V/bnhq6D/mvqo+3ND
84jjZTbq/tzwtipgZi11f25odvfA+U9V1J8bxp+6n/WoivpzQ7397ZpeqqL+
3FAjan3r/VXUnxs+XzrgeEoV9eeGrj1qz5xGXqAbvlxdMqMfeXI3bOccsrEZ
efZuaPvo0TlH8ozcsPevFXk/Kqk/N+xveXFvfiX1J8OldVc0yKyk/mTYw/ho
m3mV1J8MR/dKOt+zkvqT4eb33xbJyUMZ1u0fO/5rBfUnw/LZD3oqK6g/Gdo2
32C2qIL6k+GYtQlTO1VQfzLsU3x8kFEF9SdDs6Scjbk/qD8Zlu1crDH/B/Un
w/xdnv0a/6D+ZHjkRfX04u/UnwyP3TkdsPY79SfDra+Cmrb4Tv3JcPrRuHHP
y6k/GUZa7V8xp5z6k2HxtmbD7MqpPxm29d26f9836k+GgzG+bug36ssVh96Y
n4FfqR9X3PAuLb/lV+rDFd1PZE04U0av3xWDlEVN6pfR63XFC6NGvtn4hV6f
Kx43XVlH6wu9Hlec27bw3KDPlN8V74zQ6n3sE+V1RYcZ9zdpfaJ8rrhyzIy2
7UopnwtuuNa1at5HyueCb7/pjj72gfK5oOrtoRZPSyifC2ruyHX59Z7yueCu
lh2OmL+nfC5oc+3YZsd3lM8FdxYEJzkUUz4X1DXfZ27ylvK54MgE5eNvRZTP
BR+W6y259ZryOaOyl2t2+ivK54zzy07pDX1J+ZzxjPYdG7sXlM8ZAxpcTFAW
Uj5nNOwa87LPM8rnjO+ad3v08gnlc8bF2vm1oh5TPmdMcez8U/WQ8jmjXKf1
QL8CyueMC01XXZ56n/I5od6IrXeP3qV8Tnh/8Br583zK54QjDRZG/rxF+ZzQ
5tVhE908yueEK1+de/PrOuVzwuL1VYteXqN8Tjh+xoLVx3MpnxPOarv16JTL
lM8Jx035sdLjEuVzQvvT9x6cOU/5HLG4y+TGrZDyOeKVRq2GZp2lfI54p6mf
qdlpyueI57a/+tb7JOVzxOkxcHfJMcrniMtqxY3bfYTyOeLCqSOXHjpI+Ryx
4UGrb9syKZ8jri25NGvOHsrniJW+0362zaB8Dji4s2+X8m2UzwFHaNTttWIL
5fvz+1qLqi03Uj4HHHM5uPHcdZTPAQ0apVbdX035HHBLx4Pt7VZSPgdcNC/J
u9UyyueAdsfn7+65mPI5YNfO+191X0j5HFB7rll16FzKZ49XJ+nLDGdRPns0
LVkzJ2ca5bPHf/vv6Bc7ifLZ41mXwb9+jqN89nhuxtyT00ZTPnuU9U5+/yya
8tnjvgYyjcAhlM8erVsFj544gPLZo8+gIfs396F89lg+xTTiZATls0OrLie/
KrtQPjvMa+kUcrwD5bPDHlfGXdvQhvLZ4adRSeMmKCifHfqXan8MaUL57PDV
nBiXT0GUzw4zxnd6vb4e5bPDQTN7BIX6UT47/OI71EDlSfnscKfLirgerpTP
Fs1lQYvz7SmfLbZeUjShoxXls8VCjcmDT5lQPluc4nlnnac+5bPFN7b60Uu0
KZ8tmnSwbf+wyrQmny2u2NRy8sZPpjX5bPFdVL9mA1+b1uSzRbcXtba4PzSt
yWeLvSc0OVFyw7Qmnw3eqcw9rrxQ46lssJ7sZNHmkzVelg3+Tl+dsWx/jZdm
g1s/nB29fFuNl/Dn+ZdTcFdqjRdtg1VP17V+mEz5bDBz0PwMv3mUzwbPTmu2
f+NUymeDaS9uBASNoXw2eCihjcG3IZTPGssVcaEv+1A+a7wdlX1aqyvls8aB
0Xs2925L+azxyKedla+bUj5rvJ4/5vPhhpTPGqdcWZep9KV81nhFptPf0o3y
WeODb8FBh+0onzVadtsTu8mM8lmj1gPzFo/1KJ8V/tidWjhBk/JZ/fn3x6/F
QypNavJZ4YTX50cfKTOpyWeF99oGHR7+waQmnxXOGxY/K+GNSU0+K2zXZ3Wx
7guTmnxWePtEX61fj2u8wD+P/xSdE/2gxrO3wtee2p7t79R4GlaI/5p835FX
4xVZ4opRT3XnXq/xVJb4b5xjrcKrlM8SZY6bEi9doXyWmD2ltWGjy5TPEs0C
bn1ukEP5LDFmYs505SXKZ4ljBre4VHiJ8lnixAs3VetyKJ8l5mZMHPGOPA1L
jPowuvWDXMpngVHO8HqYivJZYMmJAztX3aR8Friq/4mDQ/MpnwV6ae6tLrhP
+Szw6MLW/b8/pnwWOO/9/YFn1f1Z4OhJS0fUKaZ8fx7/YUN6+0+U78+fN/x0
lekPymeBqxfPqr9Ag/5+zTHgyYNTO/Xp79cch+qcLZhkSeefOV5rp1z22ZnO
P3OcEf001dGXzj9ztPg8cNqXIDr//nhO58ZMbknnnzkOlN+K296Fzj9zrA7L
bzWjP51/5jjFVtWlKobOvz+P71eU4zad8plhZnX56pLFlM8Mm1jKBkSup3xm
uDIpZdbwfZTPDJd3mGJicpbymeGpfq+ed71J+cxw31KbBd4vKJ8Z3pTtbbry
G+X78/gEnYUXa9H1zwxLumj00jGl658Zdiurez1Jfb0zRU2IWRjuSdc3U9Ta
PflH53p0PTNF+9DkOUua0PXVFB+2/h3xuy15pui3vWj5nn/IM8G4JS/qJtL7
Q5oJppz4aLJqFHkm2PZR2OfcyeSZ4GKN/jP85pFngiMPPww59C95xui07Fxq
7w3kGeOmikVlTrvJM8bpK3ok/zxKnjHqPmm17Ms58oyx8vsJo6ob5Blh4PxL
xhaPyTPCXbPXzw0sJs8IE6I1O/QrJ88I+2m+b7RQ27zGM8LnzXSM95uZ13iG
mDJ2wKIbzuY1niEuCDPu8drPvMYzxE/Zn+0/hJjXeIbY2HN0/PM25Bni+bte
Jv/9Q54BLmv5bvzsgeQZoPnXuFCX0eQZYLtpXTTSppJngA06noh6N588A5z3
eX6l8Qry9HF+X8NJvzeQp4+T55jPPLWLPH2sN+HotSZZ5Onj16uRPjP/I08f
f6/fMHx6Lnl6OPdy4IgGd8jTw5Hlr9w3PSVPD/f9GrQt+y15ehj/3FNn/hfy
9LBu9MB536rIq417m52IMdaxqPFqY/db3n6XjS1qvNr48vLpDq42FjVebbxZ
v8sECxeLGq82eiQ1HbXJy6LG08XJK/WczgaQp4vrfX6ljg0kTxczPY6YHQwl
TxcdR64snKEgTxe79G235HYb8nQw8a7nqUMdyNPBXYXj21l1IU8Hp/fb06jq
H/J08Pubw8eG9iRPB9/3/SQP70NeLWyk18suqy95tTCmXc8Oqf3Jq4XdUs/v
/T6AvFponpc+KH8gebWw7dP7Z30HkaeNdkvvdqkcSJ42Hii0zWszkDxtTL2Y
Hqiv9rRx3Zju6e36kaeNjYYHTdSIJE8L699KbxLUizwtfKGKxJfdydPCbhmJ
v027kqeFJU/X+Z7qSJ4WGj+22/myLXmaOFPR1/hfIE8TD5TYNjzdhDxNnHvt
u82YIPI08eLw8i8765Cnia+STtUbKSdPA+Pcbo087kKeBrZcdSsmxYY8DTx9
J6ahlgl5GghnIt/r6JCngZvOtS/dWkXn72/l+stpFws+0/n6W7m4h4Pz4Td0
flYrXa9su+P/hM7vauU0162lnW/T+VytPP1yeZrjZfJ+KXXeRXqknSbvl7Le
mn2a1w6S91M5N6LhtWPbyfupTHa8FjwwlbyfyjZH0+1zl5BXpcSNTYZXzSKv
Sqk/fpZX5XjyKpVFuzfNvjqUvErl4UM6+yb0Iq9SedOvfsXX9uRVKDMmTc2N
bEpehXJS70dLd9Yh74fy4MezZ5+4kvdD2fDquje1Lcj7odzQe99631rkfVe+
3rp9bHv19fK7sm98q9+j3tL1tlw52+5nccpDur6WK4/2X3vtmoquz+XKHXsv
NbdV0vX4m3J9au6dGYfJ+6YMnGDg/Hs7eV+V586cXJexlryvytKccWenLibv
q9K83+PPU2eSV6Y8dmLk0sxx5JUpL+R/vOYwlLwvyt21Jj673Iu8L8rDFs8L
TnYk74uy8OLzo19akPdZ6V2c0Xl6IHmflYEFt4b08CHvk3LOlKhVC53J+6TM
WbW7t4UleZ+Us7MG6//Wo+eXKh0azDy4pZre3z8qw294rzEvofuBD8qkHXXn
9HtI9w8lykOenW8tyKX7jRLlhXfdVq/Opvf/90rZip8TV+4l753SeIvlibkb
yStWftdeETZ6OXlvlefbam2NmE/eW2XMKecnimnkvVE6FEzICBpLXpFy57F/
mgYPJ++1st7GdzHtB5D3SmlyYEnK2F7kvVJO62i3dV838l4qF38/ZagVTt4L
pe6o4/fi2pP3XDnMf9pyrTDyCpUxQx6EH2xDXqGyQ9myA9Pb0POfKhP63ns8
rC09/rFyXK9/ksa0oz/vkfLSVLN3KR3JL1CGr3x44V4X8h4og4q3RQX1IO+e
ckJ54Jq9fcm7oxw/wPhc8BDy8pXdr0y6eTeGvFvKd67ZjRdMIi9P6b96l3aL
OfR8lbKRqsHl6iX0+FxlTEKbzHPqf4/lKF32XR83dyf5F5QTR3we1vgoeajU
mhs7tfACPT9b+X2bR924O/T4LKWf5tP9xfTvybQ9Ss3Wfmea/aDjNOXMhsGD
j+jQ+ffnCpO2+G2mKZ3PaYralfG39B3oeI/ifeTwvIuedH5mKa48HTuxoB79
fraiuvVg19ZNyUNFh+ZbHX+F0eMvKEa8rrtEi/79H52jeN3z2Ngug+j5uYoF
s3cdfDSa/n9RKTw6j7LbOY28PEVxgwX9di6kx99S7NMtsrq/ivx8RYf+vqqg
dHr+HcWzgKLyk/vpz7unaP1Rv2rAafIeKIb+atTAJZe8AsX6Ph5vyu6R90hh
sclgSIH687vHClWo6fMr6s8znypu5WZuOaNB179CxZhErwcHTOh6WagYcP7T
pTQnuh4+V2gN8tk9VX3/90Kxp87XC60a0/X2pcK9/pfob23Je6U4vX998eII
8l4pbltuOVwZRd5rxdsNrYJajSWvSNH86L4ffWeQ90Yx07/OekUSeW8Vdp6J
V9+tJu+tIuSBbY/eW8krVlg1M3NK2E/eO8X9lUmeUdnkvVesqp3675eL5JUo
vGd339gwj7wSRcjmy0ccH5H3QaE14mm/Pa/J+6joFlOv/f1S8koVL0ovd9ta
Qd4nxY1Wj6dpa9P79SdFw7gRpRWG9P7+SVH32QmzuVb0/v1ZcfjpmxFrnOj9
/rMCy1seCvSk9/Mvio+aK+718Sfvi2LCpR6Vmg3J+6I4HFc6NqAxeWWK8F27
z9xtTl6ZYsbo3VurWpH3VVHv8x2Lje3I+6qIWZ/W7Fgn8r4qgs3Wzm+rvv/5
pvjp1mhhp+7kfVN8CvG3y+lBXrnCtM7j8KO9yCtXWI3fPcZafT9YrrjY0+33
2z7kfVe8XOmJdSPJ+65wv/90T1Ef8n4o2u45VmrWh7wfirNT7X7v70XeD8Vt
t9A5//Ugr0LhbZbZrbU6X4Wil8On5OZdyatUHI1/uvBAJ/IqFbbW2pdS25FX
qZg/44nB//qpuf9QWHw06PJQ3V+VIuBl5KmQxuT9VPhNvXzQuiF5PxUv2404
N8WfvJ8K81bBRwd4kvdLsePTg1nX1X+/vxTnitq2zrUir1pR8rp/7x5G5FUr
tGNGh07UJq9asSl8S4q8Un3/prAKHRk6+ZP6/k5x7vAVryFFdP5pwLMxqfGf
H9HjNcD16eF471t0/mpAvUzZMr0cer4GtDat1zTtFJ3/GmB5d7Lv0wPkacJz
7Uf2j7eRpwkLqxPfpq4lTxMe2OYttlHfz2lCYqKz3oBZ5GlC0v7zc8ePJ08L
Vh3Kl/caSp4WaHT5GmzZizwtKKpw+52pvp/Tgu4h0+/7NCVPC4rrVMuS65Cn
Ddum92j92JU8bRjXZMleFwvytGFM5zsX+6jv57Shfd4/Givo+yOVNvS+kncl
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
DtjrLT+dR9dnJ9iTuKJXzDW6PjvB2jwY6ZVD+Zwg36k04wNSPie48qRj8YXT
lM8Jzg79UrH7OOVzhoC+y1I3HaZ8znD4x/tJ2zIpnzNc3e8XenIX5XOGar2H
c55to3zOELbHr8BuM+Vzhm5fna4OS6N8zvC171HVhdWUzxlMSut0C1Z/X+UM
/qZNss8spXzOkFTSeEjvRZTPBaYdit+gO5/yucAq3Zn7rs6mfC7w9Fbgze3T
KZ8LlOd3abJqCuVzgdvGM23XTqR8LtB0+9Gkg2MpnwtcMEjc9TSG8rnArJ4D
FnqMoHwu8KVvvv9s+ry96M/zUys2fhxE+VwhY8mu/En9KZ8rqEZfuWAWSflc
4UD17r7ne1I+VzAY3nbO4u6UzxU+nF1rEd2V8rmCZ2xhae9wyucK8ic/SwZ2
oHyukL9vz8PpYZTPFeDn7QX7WlM+VzhW+uTIJ6B8Mnhu/sW7Ywtz+vlAqLOt
5fYTTSmvDLQ2dytsHGpOP18IZyc2Sb0eTPllUKwonzk5qMYDGbRfnda6fkN6
PTJ4vTJt/a96NV6kDGaNMKj3pA69PhnYmD7Zd8O/xouTwYbWjqdu+dLrlcG9
dDfNIu8aL1kGtV7elxvK6fXL4HqzNzfBs8bLkMGX0x+3JLpTHzI4ffxY6GNZ
jYcymNe8v6KlK/Ujg47LFnc/Rt/XFshg89x1Vo2dqC8ZDNA5L891qPHKZBA2
v63fSHvqzw2i+ixHKzvqzw1mdhqw9IYN9ecGjibPA9ZYU39uYKsqbDfSivpz
g4F5d+e0s6T+3OBzW/34hhbUnxvUdz74wMec+nODni6/2/iZUX9usLph+PBg
U+rPDVw/2r8IN6H+3OD28PrDxxhTf27wtN+BtFQj6s8Ngm/aB1wzpP7cQLdy
7NXahtSfG/x3rY5nZwPqzw02vR/+bj3dz6rcoKTbuZuf9Kg/N2g5e1lSFz3q
78/rG3PhalZt6s8NwkNNushqU3/uMGd13rUUXerPHY7Z+f421qX+3GHE7G87
/tWh/txhfO6dGdY61J877Jrm02ZbLerPHQouWWFQLerPHVZrJ2SptKk/dyj1
Mn81Spv6c4cB8+vYG2lTf+4Q/PCbY5YW9ecOm3a1OjFQi/pzhzePtpww0aL+
3GHRj3bvz2tSf+7gtt3FfYYm9ecOztl764RoUn9/8n40fV6uQf25wz1tPfNT
GtSfO9Rd/yglQYP6+/N6j/Zt2VGD+nOH9u/ufLFRf/7sAR/6mM8v+q3++XxY
Exl24+Rv9c/vg5Gu+ZFlv9U/3w/TUmKNh/9W//w/lC7Zgy1+q+cDwOLNsP0O
5IV7QJLznOM/qtXzBfDGwRIfVKvnD0A3ZMzBU9Xq+QRI9dYavblaPb8APcuH
P5xfrZ5vgLzfrYpiyEvzgNW/u02LIC/DA97XCZ/RnLysP8+PK3noQx56wMBj
j+dbk6fygDpwZKg2eQUe8Kvrq5FfhPkNqH/2wrwXwnwHpF6fuDVfmP8AeZ0n
xy4J8yHgYnbo8ElhfgSGJnRflCnMl8C6+098twrzJ9B4hM2ytcJ8CjzoOmxn
sjC/AjFJqhHzhfkWaGPzLne6MP8Cg6e8OTdRmI+B9o2nhY0W5mfg2tXbXYYJ
8zWwa/re2wOE+Ruo2OZ7tbcwnwO9TUvqdBfmd6Dh8orycGG+BzxOoUt7Yf4H
lr8y39JamA8CqzYOExXC/BBUtxq0qqkwXwRWWqcqQ4T5I7hXOyIjSJhPgp5O
m1c0EOaXILNbr2N1hfkm8G0w3SxAmH8CM7f2m32F+SioeNqkn7cwPwVH6uu2
8RLmq2D6sZSeHsL8Fax68jvZTZjPgrc6qW9chfktuHL89hAXYb4Lomv1/ukk
zH+Bj9mnw47CfBhM3bN8roMwPwYGxp1G2QvzZTD/XJ8RdsL8GTRbYTLdVphP
g4Zpz7bYCPNrUJXQ9761MN8GmSe8Xa2F+Tc4fL/2FCthPg4WO95+aCnMz8HY
4onhlsJ8HbyOe5drIczfQcTYTt0thPk8WHMn+5W5ML8HeRdHJZgL832wKGaz
p7kw/wcelbvzzIT5QPA882a+mTA/CHW9LzU3E+YLwU/vxC9TYf4QVCeaXzBV
9yeHs/1fLjNV9yeH3NCmA0zV/clhQO3n9U3V/cnhcu9pemqv4M/r18l8aaLu
Tw6d9tU5b6LuTw6nPI9tN1H35w2VthpJJur+vEFv0a2xJur+vGHbyM+91Z7c
Gzq1D2it9gK94U1J9/pqD7xho04TV7UX7g0LH2ebqr1Ibyg2OaCp9qK9YVnH
b19F86nwyHRCsWh+FeZM03kmmm+Ftlppd0Xzr3BvgNV10XwsBLQcckk0PwtD
m4/7TzRfC1dTfU+K5m+hwGvuEdF8LlT5j9gvmt+Fpy1u7BbN90KA994dovlf
iL9cmi6aD4aWtdZsEs0PQ97+FetF88XwYfTDVNH8Mfjvi1kjmk+GU0ubpIjm
l2HPrdYrRfPNMPJewnLR/DMkzShZJpqPhhUu85JF89PwYFnzpaL5auhX7bBE
NH8NA7RsF4vms6E4oW6SaH4btA8MXCSa74Yl2jsTRfPfkN3k90LRfDi0CBu9
UDQ/DjfC3ywQzZdDsx0TFojmz0Hzut4C0Xw6eIzdN180vw5J//SZL5pvh3+j
TOaL5t9BZ6tqnmg+HoY2XDVPND8PrToNnCearwfrkPrzRPP3YNuj9jyhP18Y
a/5yrtCfL0z6cH6u0J8vBE3KmCv09+fPb7FsrtCfL7T9OGWu0J8vtGw4VPDQ
F3zwH8FT+YJ7r1aCV+ALs7ODBK/IFz4d8xG8Ml946+QieBp+8PWileAZ+UHj
xUaCZ+8Hpe11BE/uBz+LqsX7F2BhhwrxfgZIi/wq3t8AhVqfxPsdoGtgiXj/
A5Q8fCveDwEr378W74+A7D4vxfsloJvtc/H+CVjm/Ey8nwKuDnki3l8Bw589
Eu+3gG3JD8X7L2D5sALxfgwoHfxAvD8DvBPui/drgPz0PfH+Dehrek+8nwO2
xN8V7++ABt/viPd7wM6Fd8T7P+CB+x3xfhD4oMoX7w8BmJcv3i8CQ1vmi/eP
gKV+vng/CQQ/uC3eXwL3998W7zcBl8W3xftPoOuo2+L9KJDT+bZ4fwqUNRJ5
6A+RbiJP5Q9LTUVegT/4aYi8In949UWy3wXGv5Hsf4HlTyT7YcD4rmR/DJy8
LtkvA6MuS/bPwM9zkv008M9Zyf4a6Jot2W8DT45J9t9A8RHJfhyIOiTZnwNB
ByT7daB3pmT/Dij3SvbzwOA9kv09ELJbst8HQnZJ9v/AgAzJfiDYvlOyPwhq
7ZTsF4JZOyT7h0B/h2Q/EezaLtlfBBHbJfuNwGi7ZP8R3Nwm2Y8EG7dJ9ifB
+G2S/UrQaZtk/xL4b5PsZwJzsZdQByql+53gjXT/E9yX7oeCXOn+KPhPul8K
jkr3T0GmdD8V7JTur4It0v1WsF66/wrWSvdjwSrp/ixYLt2vBcuk+7dgqXQ/
FyyW7u+CRdL9XpAo3f8FC6X7wWCBdH+Y+vhvf3VhvnT/mPr4b391YZ50f5n6
+G9/dWGudP+Z+vhvf8Lx3/6E47/9Ccd/+6sn9YzqAdvfBtL9WsLx3/6E47/9
Ccd/+2NeJPOimRfHvATmJTMvjXkZzMtiHjJPxbwC5hUxr4x5GvWlj9etL/WN
6kufb1mf9Vtf6smYJ2deAPMCmRfKPGBeGPPCmRfBvEjmRTEvmnmxzItjXjzz
EpiXyLxk5qUwL4156czLYF4m87KYl808ZF4O81TMy2deAfMKmVfEvBLmlTGv
gnkaDdj510DqGTWQepYNpJ59A6knY56ceQHMC2ReKPOAeWHMC2deBPMimRfF
vGjmxTIvjnnxzEtgXiLzkpmXwrw05qUzL4N5mczLYl4285B5OcxTMS+feQXM
K2ReEfNKmFfGvArmaTRk519DqWfUUOpZNpR69g2lnox5cuYFMC+QeaHMA+aF
MS+ceRHMi2ReFPOimRfLvDjmxTMvgXmJzEtmXgrz0piXzrwM5mUyL4t52cxD
5uUwT8W8fOYVMK+QeUXMK2FeGfMqmKcRyM6/QKlnFCj1LAOlnn2g1JMxT868
AOYFMi+UecC8MOaFMy+CeZHMi2JeNPNimRfHvHjmJTAvkXnJzEthXhrz0pmX
wbxM5mUxL5t5yLwc5qmYl8+8AuYVMq+IeSXMK2NeBfM0gtj5FyT1jIKknmWQ
1LMPknoy5smZF8C8QOaFMg+YF8a8cOZFMC+SeVHMi2ZeLPPimBfPvATmJTIv
mXkpzEtjXjrzMpiXybws5mUzD5mXwzwV8/KZV8C8QuYVMa+EeWXMq2CeRiN2
/jWSekaNpJ5lI6ln30jqyZgnZ14A8wKZF8o8YF4Y88KZF8G8SOZFMS+aebHM
i2NePPMSmJfIvGTmpTAvjXnpzMtgXibzspiXzTxkXg7zVMzLZ14B8wqZV8S8
EuaVMa+CeRrB7PwLlnpGwVLPMljq2QdLPRnz5MwLYF4g80KZB8wLY1448yKY
F8m8KOZFMy+WeXHMi2deAvMSmZfMvBTmpTEvnXkZzMtkXhbzspmHzMthnop5
+cwrYF4h84qYV8K8MuZVME8jhJ1/IVLPKETqWYZIPfsQqSdjnpx5AcwLZF4o
84B5YcwLZ14E8yKZF8W8aObFMi+OefHMS2BeIvOSmZfCvDTmpTMvg3mZzMti
XjbzkHk5zFMxL595BcwrZF4R80qYV8a8CuZpNGbnX2OpZ9RY6lk2lnr2jaWe
jHly5gUwL5B5ocwD5oUxL5x5EcyLZF4U86KZF8u8OObFMy+BeYnMS2ZeCvPS
mJfOvAzmZTIvi3nZzEPm5TBPxbx85hUwr5B5RcwrYV4Z8yqYpxGqPv4/59Kv
GA==
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1:eJxd3HVcVOn3B/BRASkVGGrIoYYaSkDEmmMsFiaIYGJhYWJhYmGha7uYrCIW
xoqFrs5ZAwuTNVgLCwsTUFHEH9+fnDv3Hv/xdV/Cmw8fLneuc5/zuAwc031I
bZlMdqOuTPa/v3/9CUf/bzHnuz2xhPXp1X8qGgvHwf/7U6o7vpJf/adEd5zw
vz/FuuP/54oaS71C5hUwL595ecxD5uUyL4d52czLYl4G89KZt4p5acxLZV4K
85KZl8S8ROYlMC+eeXHMi2JeJPMimAfMC2deMPPUzFMxT8k8BfPkzDNlngHz
ZMyrCGPnX5jUKwmTesVhUq8oTOoVMq+AefnMy2MeMi+XeTnMy2ZeFvMymJfO
vFXMS2NeKvNSmJfMvCTmJTIvgXnxzItjXhTzIpkXwTxgXjjzgpmnZp6KeUrm
KZgnZ54p8wyYJ2NeRSN2/jWSeiWNpF5xI6lX1EjqFTKvgHn5zMtjHjIvl3k5
zMtmXhbzMpiXzrxVzEtjXirzUpiXzLwk5iUyL4F58cyLY14U8yKZF8E8YF44
84KZp2aeinlK5imYJ2eeKfMMmCdjXkUoO/9CpV5JqNQrDpV6RaFSr5B5BczL
Z14e85B5uczLYV4287KYl8G8dOatYl4a81KZl8K8ZOYlMS+ReQnMi2deHPOi
mBfJvAjmAfPCmRfMPDXzVMxTMk/BPDnzTJlnwDwZ8ypC2PkXIvVKQqRecYjU
KwqReoXMK2BePvPymIfMy2VeDvOymZfFvAzmpTNvFfPSmJfKvBTmJTMviXmJ
zEtgXjzz4pgXxbxI5kUwD5gXzrxg5qmZp2KeknkK5smZZ8o8A+bJmFcRzM6/
YKlXEiz1ioOlXlGw1CtkXgHz8pmXxzxkXi7zcpiXzbws5mUwL515q5iXxrxU
5qUwL5l5ScxLZF4C8+KZF8e8KOZFMi+CecC8cOYFM0/NPBXzlMxTME/OPFPm
GTBPxryKhuz8ayj1ShpKveKGUq+oodQrZF4B8/KZl8c8ZF4u83KYl828LOZl
MC+deauYl8a8VOalMC+ZeUnMS2ReAvPimRfHvCjmRTIvgnnAvHDmBTNPzTwV
85TMUzBPzjxT5hkwT8a8iiB2/gVJvZIgqVccJPWKgqReIfMKmJfPvDzmIfNy
mZfDvGzmZTEvg3npzFvFvDTmpTIvhXnJzEtiXiLzEpgXz7w45kUxL5J5EcwD
5oUzL5h5auapmKdknoJ5cuaZMs+AeTLmVQSy8y9Q6pUESr3iQKlXFCj1CplX
wLx85uUxD5mXy7wc5mUzL4t5GcxLZ94q5qUxL5V5KcxLZl4S8xKZl8C8eObF
MS+KeZHMi2AeMC+cecHMUzNPxTwl8xTMkzPPlHkGzJPx8y2AnV8B0q9XGCD1
8wOkHgZIvRzmZTEvnXlpzEthXhLzEpgXx7xI5gHzgpmnYp6CeabMkzGv1J/1
58/682f9+bP+/Fl/zMtiXjrz0piXwrwk5iUwL455kcwD5gUzT8U8BfNMmSdj
Xqkf68+P9efH+vNj/fmx/piXxbx05qUxL4V5ScxLYF4c8yKZB8wLZp6KeQrm
mTJPxrxSNQZI+tMd/+pPd/yrP93xr/50x7/6U2OgpD/d8a/+dMe/+lNjkKQ/
3fGv/tTYUNKfGoMl/akxRNKfGkMl/amxkaQ/NTaW9KfGJpL+1NhM0p8aNZL+
1NhK0p8vRkj688WOkv58sZukP1+MlfTni/GS/nxxuKQ/X5wo6c8X50r688VV
kv58MUvSny+elPTni3cl/fniV0l/vuj0Xdxf9ffzXdyfL6Z8F/fni9rv4v58
0ahS3J8vDqgU9+eLFyrF/flgqx/i/nzwxg9xfz44tUrcX/XH/xT354NqWU9R
fz6oqdVT1J8PzqndU9SfD1bV6SnqzwdP6PcU9eeD5+qKvCQf9DEWeQk++MVU
5MX5YAszkRfpg5aWIg98cLmtyAv2wSuOIk/lg2/cRJ7CBxv4ijxTHxwcLPJk
PqhoLvJKvXF4O5FX7I2re4i8Qm98MVjk5Xtj7iSRh944dom4P2+ctU3cnzeO
0or788Z/H4n788ah+rGi/rzxY2CsqD9v7DcoVtSfN/69KVbUnze2fBwr6s8b
uwfEifrzxnmL4kT9eeO+j3Gi/rzx2fBeov68cVlZL1F/1flW9xb1540rIvuI
+vPCLcq+ov68cKdlP1F/XtjDr7+oPy/8PCZe1J8Xpj8ZIOrPCz3TBon688Jp
E4aI+vPCeZlDRf154SjVCFF/XnhGf5SoPy/c3mWsqD8v/GoxQdSfF26OnyLq
zwux4wxRf15o9nqOqD8vVEYvEvVX/fHbl4v688JBVX+I+vPCtbO3ivqrzt9z
r6g/T0zdmyvqzxPzjpwX9eeJ37LviPrzRJ8br0T9eWJ6YpWoP088ecPqgq4/
TxzQN/CCrj9PvDu58wVdf57Yf+3YC7r+PDGz2boLuv48cULVaZ2X4ImbZpfp
vDhPrJ2ivqjrzxM/XBx5UdefJ+5ol3NR158nhtfSu6TrzxN32vS/pOvPE4fd
PHdJ158nBm4Ov6zrzxN/s/j7sq4/FbqUd87X9afCfS3L8nX9qbBUve+Krj8V
JqpnXdX1p8KyyuHXdP2pcPTucdd1/anQ/4/0G7r+VBi++PlNXX8qHLs/7l9d
fyo8kv3tlq4/FQbvunJH158Kz/a+W6jrT4X7FS73df2p8FLxvoe6/lSoXLDo
sa4/FbZcmftM158KByxs91LXnwoTXkGJrj8VOnXe90HXnwpz5m4q1/Xngbt3
OXzX9eeBC7s3rdVd6M8DB+wwNuwu9OeBy5dtatBd6M8Dr98ytO0u9OeB3/sP
cuku9OeBGJPnK3jpHrg6vlOY4KV5YJN71m0EL8UDG9m36S54SR6YeqBigOAl
eGD9v/onCV6cB9obbU0VvEgPHHvzwwbBAw+MOZiSI3jBHqjWLLkieCoPrBrV
5bXgKTzwsKGFcZTQnweO83PyixL688D9d85FRQn9ueOjpIEzo4T+3FE5s8fe
KKE/d/xXbfRY8PLd8Y7nR0W00J872nZaEhst9OeOKXPjN0UL/bnj2436r6KF
/tzxt3YOzXoI/bnjHMvodT2E/tzx0vyR33sI/bnj4uZBw2OE/tzxRKP5j2OE
/txxhE2vIT2F/tzx4B9HynsK/bljL4Ojq2KF/txx0J1lECf0547n4xf/iBP6
c8dr28zyewn9uWP38O17ewv9uWO/3q+39RH6c8Nd9bcd6Cv054YDRx2+1U/o
zw0fWvpZxQv9ueHBo83HDRD6c8PCW7+VDBT6c8O5G28sHCz054ah7ze1TxD6
c8PnGzYEDRP6c8O/T3xqPULozw2btzKYlyj054bJf08uHy3054b6rXw3jhP6
c8OJ6R2nTxD6c8O3Kzqvnyz054YrV1V8myr054ajhyVsmyn054b9NYbpc4T+
qvt4feBxqtBf9ffbe+3cJUJ/btisb+z85UJ/rrhjqcG7NUJ/rhi3XnVug9Cf
K248edxiq9CfK76a1e7RTqE/V/zr5KPgA0J/rhjzycXumNCfK1pfbL8Rhf5c
sW9Zw3MXhf5c8XzHgRkFQn+uWCuofpOHQn+u2K+p55ZXQn+u+MR7wINyoT9X
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
Tx46MebRI/JqoYtLm8Z/vyOvFq6Z9bpy5Q/yZGj6ru3CPqZ0vZRhgyL7LHN7
uj7K8O7bStUeb7peyzCstckzl8Z0fZZh2Zatp0dH0Of/1D4uNDq2OJo+/qd2
2HXHK6MH0vW6Stv/dLmLJf1/IKFKa14x82PSDPKqtGdP1VuzYDF5P7RHNzxe
0G4deT+0Pf5bP+LANvIqteN6bTHI3U9epXb+mcRufU6QV6mdFnB7zOo88r5r
88f55va+Qd537Q6fdsez75H3TTv0ycLGc56T9007bXJmyJ135H3T7gwb9jbr
C3kV2lH1ejwp+UlehdagqcPtzLr0+v5V29r/2/VL9el+4qv2mfE7195WdH/w
VbtlY/6Q7vb0ev9FazTJb9ZeJd1ffNHOtw7aOtyDvM/aMgPnbvO8yfusrfr0
X7/vavI+a/feC/iQH0Beubbjug/TvwSRV338uuR6cjB5ZVrVpuOmUSHklWl3
mHTPmhNCXpm29pkZww1DyCvVKh84THnWkLxSbX5RWAebIPI+acvrvtz7pz95
n7Qzi83Oz/Ml75P2wvyS+qeF+/+P2tGuI6J6u5H3UWte0P9IdyfyPmjDp/ye
vduWvA/adqNnVQ6xIO+DVrXK8+QCE/r899qt7ZOi5Xr08e+0c5qlTzStpJ/X
W+254+2dJ5fSz7tEO3fTofSer+nnW6JNOzV0wsEi+nm+0f7uUHde2m06H15r
fzx89Oj1ZfJeaYel9Hx0E8l7qX2U3Nimw2HyXmq/3X8QE7OLvBfaEX00239s
JK9YOzj6UfOI5eQ91+6bsHFpo7nkPdPuOzks4NZE8p5pU5a/eOk1jLynWtxS
ltVY+P/6E23bDVZTTSLJe6z9Z/rdlTuF+6Ui7ZQhyhY2AeQVaT3rDnrcT0mf
/1D7I/3u51Rz+vj72obDM4zW1aavd0+7Qv/+X2tL6fpTqI1veGa58H6n7K72
dubByLm36Hp0W3vrQNjSWXl0vflXG/bT7suio3R9KtAGjUj02r2TvBvaxfYr
D71IJ++6to1BX2WHJfT5+dq2N90f3p1OH39R2y7ybfsNo+nr5Wl3JKzb/kc8
+We0W244W93tTh5qO3i/XR//G31+rnbM/gDL8Mb08TnakBnRocN86d93afXq
L0stc6LjdG1ARVL8MwvyZLL3W0+8bF5X+HfNlS0mDepW0uvRLk3mpDeLfvtI
r2c5GpN+NwqqiunfczVDZ3fxavyAXt9Q80+7gbM/F9DHn9GMN328usVlen3M
09RaYnHT8gx9/kWN4eCE/jNO0Othvsb4fLTt9EPkXdeoxw5ZYrmPPv6GJv9L
v6/td5JfoPlv0JbOztvo8//VXCnY7LtOuD+6rWlntKkwZz15dzXxU6Z2nryO
vEJNeNJJn6fC/cQ9zd2SM8e+riTvvqZNmGvJMeH+46Gm2DBggPsK8oo05ZV/
92kq3F8VaQbtrpX/YwX5jzXLone3GbmKPv+JZonSSX/uGvp6TzX//vm2rPUf
5D3T/JwyZnv2BvKeaZrvWNT9xBbynmvOuex4OiqTvGLNXdvCkn92kfdCY9XF
7cCh/eS91DQ4/8mp9RHyXmoKP5+8N/wkea80kzdcaepxjrzXmvxAv/bjrpD3
RlPy45+z7W+TV6JZsmKB1+5H5JVoLk76sGvpK/LeavDO8GbvS8l7p/H+S7b6
YhV57zW1vT29bIzp/Pug2broj0Y3rej8/6DB7r3yylzo9+WDJubM3d1T/On8
/qh5Hui4oGdTOl8/ap4kOdxY3I68T5pdmfa3TGLI+6RpEuedWzCIvE+am4t2
pdwbR16pxiv8UwOHFPJKNSVlnwOWLSOvTGPWrNZKn03klWmcbiYVvNpDXpmm
Xu11s88eJ69cc/fqSMeci+SVa/rVm+e87y55nzUNBzz4vpeeTyR81nS1Oumx
5zN5nzUGlxbLN+vT9eqL5tWnHa1mWdL18IvGxrVV07ZudP37Wn0+OK1+F0TX
v6+a3Mdxn0cBXf++aozauLmc6iy8vmva3Rvw9k4f4fVfozzUrduhEcL9gaZB
p3qDI6cI9w+aLy/1BqTPF+4vNNeTBuxZvVK4/9BkNOt2I2yLcH+iGf9vs9+n
7xHuXzR7xjy52eeocH+jiQqNOXXztHD/o4n58nz33SvC/ZEm5+FD3+F3hfsn
Tbcdweazngj3V5ortrVHWJUI91+aq9M+p3qWC/dnGueHSyoP/BDu3zSrTby2
79Wn1+ufmqRQi22KevT6K4PKmNYDP8rp9VcGk6Y2WB9kR6+/Mrhls6PzHWf6
fBmcuTfm5iN3en2XgUezkPPtvMmrBTk9vJ3N/MirBa8zLzmGBJJXC9a1XhKb
05C8WpAwss/RtBDyakGBpdFEbSh5tWHInwnOHRuRVxt+ru21LqARebVh+qLD
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
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[1, 0.75, 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
uObvKxqv2B3vbC7TeIXuOPaEdYKmP3fcFdUlQdOfO9p3m5Gg6c8dHTocT9D0
545RAXUJmv7csVLRLVHTnzum+KYlavpzx67btWZr+nPHWe/Gz9b09+N4Z9ls
TX/uOGbjzDma/tzxxlX7uZr+3HFT/M25mv7cUdtp8zxNf+54d/nc+Zr+3PHq
i/lJmv7cceH6XQs0/bnjxpVlCzX9KXGF7R+LNf0pUda4bommPyVWZVxZqulP
iUu/FyzX9KdE9/W2qzT9KVGvYPdqTX9KfH4t6R9Nf0pstPbkek1/Srzt3Xez
pj8l/rar3zZNf0ps8evNdE1/Sux/8fZeTX9KnNJ07CFNf0rccHL/MU1/SrQM
3nla058STU/H5mj6+3F80OK6pj8lHvrvxD1Nf0qsqZn8XNOfEjNGjSjT9OeG
ld8P1Gn6c8OzH8fr6Qv9uWG8xx1bfaE/N2z3l66vvtCfG04/27KDvtCfGyoN
Nw7QF/pzw1/8Y8cLXqobLvj3dbLgJbuh1dff9gpeohvaDNW+KnhxbnjDr32F
4MW4YerKUbYGQn9uOM6vuKuB0J8b3n9lP91A6M8NzdYtOmwg9Pcjb+WeMgOh
PzdUjTIKMBT6c8Mu7n1mGgr9uWGiifV1Q6E/NzxcZeNpJPTninoHFclGQn+u
uDWxQa2R0J8rdhu6a5yx0J8rmiwyrzIW+nPF/KqB80yE/lyxr2KXs6nQnyum
XG1/w1TozxVPli9cZib054pjT3753VzozxVDL4d0tBD6c0WcVNfGUujPFXd1
a9bTSujPFau23ZpqLfTnirenKNVyoT9XLPplrout0J8r7ug+fZed0J8rHkrP
7+0g9OeKno0THRVCf674tvsJK2ehP1dcOKGijavQnwu6nHi4Sin054KjZBPt
PYX+XPDuwG9F3kJ/Lhj93uSZr9CfCxY0Xu/WQujPBV9OfngwSOjPBYN9ExaF
Cv25YBevZUfaCv254MSts1t3EPpzweezOjl3EfpzwX5erceHC/254PbNv/j3
FfpzwRU3ngwfIPTngquHf1L8IfTngl8uuQ2LEfpzwWMzt7QbI/T3I+/j9scn
C/25oF6zjY8ShP5ccEdZzYlFQn8uuOTw8CGrhf6ccZjNxZtbhP6cUbvPdc8M
oT9n7HvJbkKW0J8zeg1sfeqi0J8zvtp/SH5X6M8Z/9Q32PRK6M8ZR414F1kr
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
zZ5/ljxtLImf+Vf6NfK0UO3dpWW3++Rp4V+uL82HvyRPC/tp9R5UW0aeFlaN
2JBVW0ueFn70tvAbqk332wZ4MDXYuJk+3V8b4H37YU37mdP9tAHKVie437al
+2cD3I1B+buc6X7eALcucr91xYM8GbbdfWloK1/yZDgl28D6QwvyZOh74kpt
aTB5MnR7XzLNW3g+leHiyq4z97Sh7/+uPmk0JGJEO/r67+oNh9ae+VNFr/dN
fa1k0vcNKvK/qV++G3zcWEXeN3XVJbn+2bbkfVUPuuK+/GBr8r6q9eW7fnnU
krw69aN+Jqe6BZFXp57ddu2tT/7k1akXDetY88abvC/qF9Nu1TkryfuizpvX
3iPdkbzPapvihn5TrMn7rI5uZNtivTF5n9XjM0+dMtMlr1bdbO3tM6+/0e+v
Vh2i1zLV4SP9/mvUh5xX1J0ood93jfrTTKuG55/Q77dGvVlX3wVu0fnxST1o
71uX4FzyPqmDYYrrvpPkVauvByWszNhPXrW6w8QZzm22kletDgqtufUnPY+k
flQ3Onvhlfd88j6qe58wvrNxMnlV6o1zOvZVDyevSt19Vi5sHEBelfr3Q7sP
t+lGXqV6hYFp0e5Q8irVY59nOr/zJK9CPeObVbmRDXkV6kLtwgLbpuRVqM8e
vzbS5jNdTz6ojz/1GWBRQtePD2rPiandLIXnj3K1xYO2r5SX6XpTrg42u3uz
9wm6vpSr8/7KTdu0h76/TD0sMfCm5Qb6+vfqqai4fmEJvd47dUX39KLMGeSX
qkdcDfQuGU1eqbrJiJJd4/8g763aLqmha0Qf8krU8Qajm//Tkbw36mkTh3uH
BZP3Wv3CPtpnhCd5r9Wnu79u0sievFfqm0V5vVxNyCtWnzcY0/pqI/JequUl
Icd0vtD95oXa+UHEb3fL6X70Qq23eFnvzq/ofvVc3UV38qzfHtP955n60KbD
/Yzv0P3pqfrbmo0vp1wjr0g9sY3JrZUXyStSy/UXDRx6hr7/sdrjw7iO707S
1z9Uz++R+yroGL3eA7V9WKNmqkzyC9VWh2Gu3kHy7qkt7u55vnEfeXfUncq6
Xa/aS94t9b0w7Z7me8krUNsuL3v3ZQ95+Wr325/P7t1L3g119MAbMS776Pvz
1D0Gm9ZGH6Cvv6SG3Y8cYw7T6+WoLQ+s0/U9Sv459Z+zDUYeO0Eeqk+6Xkv8
rqbvz1JXtX1mo51DX5+pnm2Rvfx0Hv333eqEQ9MuNrtFx6nqbxuGtgkXng9k
sjbq/V/NXwr/XTV57erDc94L368amrts0/IawVdlW73cEqRNv+8s1YCx49qO
MaTzBVUDdq9La2FD58s5lWrpos3TlXS+5KjuDdl4sn0Aff8l1Xi/Sr+ZQOdf
nuqMY8dSt57k3VDlj7q8OWAwfX2+yr/z2OOb/ia/QDXSt+GEQfH0/bdUL5fv
z/9zIb3eHVUnp9iD+/4h755q2cFMtd9O8gpVFthsedFR8h6olg2bvepoDnkP
VWW5zd133SHvsarun4Xr9wrPB0WqmpOL/I4JzwdFKrP1pa5n6O+V1Keq0a5W
J9WWdD15purbwKrVbiVdf56rBhmv+RQXTNeXF6o1qerBlmF0PXqhSo13L03q
R95LVUJ6cpdTf5FXrDKZtDZoXxx5r1QtzSbu7D2HvNeq0aeiT29aQd5rlY3K
KH/JZvLeqMpmvhhnKrxfVqIavV8x1jOLvLeqDr75T3MvkFeqCny+0eNNPnml
qgVB0R/mPCLvnerkzU1tlr8m773KNSkjurHwflaZqtfas6Yv68grV71tmRXl
rEP3q3LV6oL1p7MM6X5Wrpr4sqJhuiXd7z6oPm58PPGZPd2/PqhMOz888bcr
3d8qVHZP+n9o5UVehWraiMptvfzIq1BVTl6U928AeZWq6VpvHrcKIa9S9e2P
bqgvPB9UqVSbJ12VtyGvSjVl+/77UW3Jq1KdXNcx8Glb8j6q+v9etHm9cP//
qPpasbL/0jbkVatev0w0O9GKvGrVVpuh352E54FqVV3fzadzAsn7pMpzav73
Hn/yPqn0LGH5dW/yalQFNqOahSrJq1EdDbz7X4nwPFCjkpdXab+2Jq9Wte2b
9rAgE+H+r2q8t9+Su7rC84HqdkWvFQXf6ff3WfVfm4By32r6fX9Wzbq4I6ns
Lf0+v6i2m8qW2D6l3/8XVbft45OzbtPvt051dc+j0Tfo/dOYOtWdFmuih2eT
V6dyWPnwxfyD5H1VmTQIOxmwnbyvqv2Dnr+Zuoa8b6rAb30O/+/95PrnL9VW
nR1LS6aS9031XeHl7vE3ed9Vj1s49XccRN53lX+HLvaF9H67TAartQZt+L0N
fb0MriYsMsryIV8GY4ddvfbBjr5fBh/+7qgypc9T8mQQOG7KTZevdD1oAK6F
+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
eZXMq2WeLFQ4/j+VZaXU
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
Pw+8tueWxjPywKqGlpM0/XngkO39J2n6c0f/fTsnafpzxx19dSdr+nPH7XUj
J2v6c0dDh3uTNf254+Hp8ama/tyxhWFtqqY/d3z8LCdN0587/r24zxRNf+54
b4f3VE1/7titk900TX8//v9V7+ma/txxS7O4GZr+3LEXHErX9OeOZx1bzdL0
545l717P1vTnjku33p+r6c8dnYoaz9f0544dFk9aqOnPHfcolYs1/bnjmKPt
l2n6k+Ny/4NZmv7k6HPsj9Wa/uTY7GTlWk1/cmzXAHM1/cmx6JBPnqY/OU4+
D/ma/uTo9LxJgaY/OT65svmIpj85Zg92PKXpT44JL1eXaPqT4/0kz5ua/uTY
99ybh5r+5BhvZFmj6e+Hd/XwN01/clw3R7dZqtCfHAcWy51Shf7kuP5qj+BU
oT85qp4e65Iq9CfH8stbhqYK/clxWaeodMGrdcND27+sF7xKN/RN0DsheOVu
GFF8olLwStzQcNFSkzShPze0PFDeJk3ozw03xZiPSxP6c0O/YUU704T+3PDM
+SFP04T+3PBzxxzfKUJ/bmiSpz9litCfGw69NeTyFKE/N/wrMlkxVejPDUd5
6mdNFfpzQ50GzXWnCf25YSuPZenThP7ccP/s1QbThf7c8Ft0n9zpQn9u2NXE
InKG0J8bZmwI+zJD6M8Ntwxrfzpd6M8VpxXc3TBT6M8V6yLPL5sl9OeKb+o+
ZM8W+nPFZ+tmHJkj9OeKT/Q2f5gr9OeKjzqW9Zwn9OeKUpfDl+YL/bni7b89
xywU+nPFjqo2QZlCf664bnQn1yVCf664b+6/bZcJ/bkiWD5e9ofQnyseupJm
sVLozxWjd8vKVgv9uWKDvtuurhH6c8Xgp63M1gv9uaK6euz6jUJ/rvitUJW6
VejPFdc6Ntu5Q+jPFTcOU4f+JfTngsO37/YsEPpzweIlx+YdFvpzwVcDB/Qr
EvpzQffRWTtPC/25YOpnvVkXhP5csPdI3efXhP5c8NbNhTW3hf5csIdf7/WP
hP5cMHrJY8kLoT8X7OK8yO2D0J8LFv4+yUbHj/pzwfeV6pfGftSfC/r4Je2z
8aP+XPD7pGUTPfyoPxeMSG/VNdSP+nPB41V5nTqSJ3fBri+80/uSJ3XBaX/E
6Y0iz8gFTzhZ1U4nT+KCceaz4laQV+uM32L8huwir9IZ15U6SU+TV+6M2WkP
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
zPB5UuuTz67Y1eczw+75N80CTtrV52uO10Zv25lfUO+VNEeXO/esh22t9wqa
48GPF58NXl3v5TTHdQFNN+1cUO+lN8eNExf+HTm13ktojpPiFqa0TqJ8zbHs
wl++q4ZQvuaIB57p9e1D+Zqj4lTa1wWdKV9zLJ/64FmgivKZ4qmqe6mxQZTP
FJUJC511vSifKR4vHuwWLqN8pmg9ZnzGN0vKZ4rDF21r3K8p5TPF/R1MPHvo
UT5T7HAx0ebpN9v6fKZYrVSj/KNtfT5TXPzYeHfTN7b1+Uxx5eyu0q3VtvX5
THB8zaTHL6ps6/OZ4E3DsiXVj+q9AhM8eGZsyJaKei/HBAe/v5dldb/eSzfB
Xr6mH365W+8lmKB5yZ/tW9yp96JMcG0naW31bcpngjp5txoPuUP5TLDHnw+k
a+5SPhNEL4/IlfcpTzOUHfMLi/mXvn4zjDUtdSl9TF+vGQZcSz1j9pT8Zvg6
JWuw2UvymuH4pwmnL9eS1xR7xYS0i/xEXlNUbT90KKUB9dsUPYwfLexlQK93
U1wUY5X/2JRe36bY+OqK1Y629Hoa47sZ3X6VuNHrZ4xvzUznzvQjzxi3jvge
ta4FecbYedRvyV0jyTPGS/2u/bKoJ3lGmPF204XoePKMMPZBweKsRPKM8P6Q
9LPd0sgzwtKgmbGp88kzwtH/3bhiuJq8JugZ2DLx01bymuDbjiFOqgPkNUFD
XLHx8mnymuDzKpvBm8rIa4Lnd41du/sxeYY4sn2nflVvyTPELSt3T+nQiH6+
DfFu3bzDxy3oemOIzxp33tVBTtcXQ0wqOnbjGr2/KzHAFq1e5fcT3r8Y4Lu2
sOoavX9IMMCOMdM++o0gzwBXjmzeZsRk8gxw6vv295Lnk9cYDZ6Mj1dlk9cY
H0bHjTi/jbzG+KZdn+O6h8hrjM9mTIuqOkNeY6wd/kg5vIw8fYy/kXUu7SF5
+tjq94XrrGvI08cz9+cuDP1Knj7udji475IB3Y/0MfaqatF1C7r/6OH2sGX/
RjjR/UYP7/WY+q+pgu4vetgtSm4bFkL3Ez28k7ll/h4VeXo4fd2wrLG/kNcI
966Ikk7uTl4jnPv3zLHHfyWvEfpb1Ca3iiOvEf56Y+aYmt/Ia4QGu29GXh9B
ni6u/PRvfFUiebrYv+7lLpdk8nTxb/g9f9448nRxtH7IeNPx5Oni0fL1O9Tj
yWuIJ09UzVs+nryG2Nh/dEVGCnkNsa7NQNvcseQ1xDmtdcPujyGvIb47nl/S
bhR5OnjncHO9Kwnk6SDmjcybP5g8HXQ++65hcn/ydPCaQ7j+wl7k6eCUJgc8
7kSR1wCHrGs7ZkR78hqgrOWX4aEtyWuABUMvK7oFkNcA5cdW9imQk9cAa87d
/jraljwJfghrdWBuM/IkuHn3mDk6DcmT4JPEpw+r39H5IsGola32dX1C558E
Bx62CPO9Tefbd/UmyQer7Av08d/V+yO3Rq08RufnN3Xy/h5O/rvpfPym1rk4
2ytlHXnf1C8en2szcjF5X9VjO/gm2U8j76s6/rdF39ckkvdFva5wY9yL/uR9
UVd/tnKQdSHvi1o5sc+zNi3I+6xuNL/zrN6e5H1Wq9tZ7UmyJu+TWhJR2DJH
n7xP6oznm6vvvafryyf1MP+4SZ0q6XpSp57t5pZWdZ2uR3XqcbPWpJw6Q9ef
j+qYX+YeeSJcvz6q3+7aOWFIHnkf1b/9eiarpXC//6BO1Nl4avp88j6om3Ya
lBiSRt579asFb7YmCtfX9+rpE9QB3vHkvVdPu7I4ZUpP8t6p95zc+XtCJHnv
1M3v9tn1tgV5b9Vl56b19fUn763aeuJxe1s5eW/Vd/xOeJ60I69W/UTnnYeX
OXm16vajV0KsEXlv1Jkujoa9G5H3Rh05ynmp83e6v71Rz4ZpHYrr6H72Wj0i
4HuT9u/ofvharZOZ6r7hNd3/atQrvdrA7Zd0/6xRL7vVdNCHavJq1FffT6/5
8Jw+/5Xacu+5wrvP6eNfqheh5cP//f7w8+u9UJcPinjR8yX51eqKM0bHH9aQ
V61+1Fi9POYtec/VSxQxTTZ/JO+Zulm6jvelr+Q9Vd/o2bX31Yb0/T9Rl65I
6bXdkPp7orbdObB/t+bUV5V6+rDaxkU21E+letKF+6Neu1C//6n/eXlI76EP
eY/Vr5+uKpsfRt5j9dj8xt3uR5D3SH3N4Lcxt6PJe6h2DhhfOH4Aef+qPyYt
aLtlJHkVau9H53bHTyKvQv00tRzWzaXPv6/eO6HsQc8V9PF31QP6T5FO3Exf
7476D8vdPl/2kV+uHv7Q3OL2SfJuqaXxxgt0S8m7oR5sua9J8iPyytQ7F0tr
TN6SV6peULV3yB1d+vm8qv7jS+HYUxb083tFfbLoisVxOf18lqin71zR4n/P
U39+/Hl19peos/t/oZ/XYvWdgau2rYmln+9T6ph9RmWD6fmaBNU2x5/3+5ZG
n1+oTuyeO2LoIvr4AvWWixHd59Pzqpwdarvzn7PidtFxjvrUkdAXd44I1z/J
nePFvd6dF/6/6r8ZasPcW8Lnq6w3Bq2/Win4KvNXe97OeCt8fdVdo6QeGxvQ
9RlVpzsNGKBoStfvUyqLtUUe1jZ0PS5WwcO1LQcIz2/Oqyofnlte40fX8xLV
qfmbtl4MJ++Kas/AxPHV7ejjr6oO9+w+O7IL+aWqzh2+PLrekz6/TLXidXnY
ylj6ejdUXt3uH54RT94tlTrnReDyoeSVqzbvu2pSPIK8O6rQXIy1TSTvrmrW
/LH7l4wh777qlw1FIxySyatQhdZcG3Q+mT6+QnWkxSPPpcnk/6vqMmrs2yTh
ec9DlfUKmxWJo+nrPVK5/Plqesbv5D1WXQ+ILVEnkPdYtefhPKXtEPL+UwUt
GWvw5wDyKlXtjw9sE9mHvCpVVKFOf4do8p6oIpcGT/PsSN4T1ehUv16j25D3
VLVp0ii7miDynqniPR3XHvYi77mqpH1P6SVH8qpVv0dlx4WZk1et6j0iedd3
ffJeqOLnRxcoPtP5/FK1OSB21bkXdP68UsGKC7fvPqDzr0b12zGXhJSr9PE1
qk+Pv01YdZJ+XmpUY5yKsrsX0Oe/Vg1Uv96av5nOv9eqDU+WHzyQRd4blXOA
of2k2eS9USXdsR/4ZRx5b1QDCne69BhCXq2q0dbubWb2IK9WFZbbMCsbyHur
cjy4xGqz8Pe2tyrL08bn8x3Ie6vqFTN08wlj8t6pvuUfyn7xRbh/qZp2ezO/
VbVwf1MNvdkn/Mgd4f6nsl3gETXugnB/VP0WmRSWfFS4f6p0De61Ve8S7q+q
lstvJ//+p3D/VRlKTiyculi4P6scqzoYSmYI92/V+0BH6+/Jwv1dVebxePbs
34T7v8pwjv/xVX2E3w9U+YuaXmzbmbxPqvjT+dGL25D3SfVi+29jZirJ+6zq
k93stpsneZ9Vr56cPDPTkbwvqs6XSv9da0neF5VqSqdf05qS90W1ZNOuU876
5H1VTfELDV4jIe+r6sbpNPf/PtH97ZvKqv3AdP33dD/7proQvWyx7hu6H35T
eY9O1nnwku5/31UXrXq9zxbun99Vn891fqR8Tp4EZJuitv79jD5eAp5Wd1Kb
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
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.571589, 0.586483, 0.], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
bMfqM8NJ+eG/fFux+swwrebgYzHNWX1m+GpNkwbXm7D6zLBxWGfPjX6sPlN8
PdhDesab1WeKDbL77Gjtyeozxfvrrk2XKVl9pmgX5Wzcx43VZ4qyzlbzvruw
+kzRtzTg008nVp8plh2fYR7vyOozxYdzIkb4y1h9pnjZIipkhAOrzxS7Rj/Y
Wt+B1WeC/hfMw60dWH0m2HTP8sNLHFh9JnjlkqPDWOZlmOD1Z0vGn3Jk9Zng
WL8n/cc7s/pM8Nuxde1WurL6TPD02ZbBMgWrzwT7HnIwNvVg9Zng+0CNZpgX
q88EC+6saOjmy+priCbjRyeGBLD6GqK8iZVZQVNWX0Nc3/1g5BYNq68hmh/o
GVnahtXXEA80Tno1LIzV1xBV2V0OduzM6muIy85e+vFPNKuvIT75PqOsZh9W
X0M8I3vof2kAq68hTv95dM3dYayeBuhXcnec21j28xvgj6g3H/cmsZ/XAFOe
z5Um8PO7Aa74PvxgzDzmNcBdG6sGjF3KvPpYb+KBXfszmFcfMdbnYf3NzKuP
Rk2eBs3Zxbz6eLnY77ZZDvPqY2H7fcf3HmdePawX3vNOlzPMq4cth9g2+MKe
l+LrYfDBFoGrbzKvHr6N1HNq/IB59fDxyJCNuRXMM0bvOU3/cX3LPGMs3yvN
mvSFecaYsvjlhx2/mWeM7fpD//1G7PpnjHXufa05rwG7HtfFd3Wq9Dwbsetv
XWzncHznSnt2va2LGqnbYGT3g+q6GNij7PpWFfPq4sQGtw60UDOvDn7Yu/zb
3CDm1UGHPtNLpmuYVwfrHig7ZNOWeXUw+X25d68w5tXBmYGd1UGdmFcb3d66
PDsQybzaaNv1t/bf7syrjefWREwb1It5tfHOzTae/xu//nq1sUb/3Y378Puz
WnigZ9cm2QOYVwvb9OzbZfYg5tXCK77t71fEM68Wpo9Zs/oKGy8ltXDj0SFr
WwxhnhGuV8/oqeb3d0bYYUf7HXsGM88IZ5QNzd3DPSO0GmZi4jeIeUb46sW3
HS0HMM8QI2e4nr8dyzxDzP3azOZrH+YZYk5p7ratPZlniC5z1l14GM08Q7T8
2igkuyvzDHDMr0xVvY7MM8Dsd2+eG7DxOd4A473XBq1pzTwDVJpN87rcnHkG
2LwmumYFMk8fu73KPSf3YZ4+VjYfUitKyTx9POnyUhrgzDx9vLhh5NgrNszT
x7YLXPPl5syriaduPP7Ykj//1ERz53RnN/b8FF8T/XfNzLj3nZ3PNbFeydgL
Q6rY56Mmzrm5quP1l+zzoYfRJX3vOzxmnw89/LbNpX2PEvb50EO/+Ivj/rnK
PD3cOjK4xzY+v6aHPQdff1d4ink10GDqWXify7waOBamtFfsYV4NfKv3WDJu
K/Nq4PMOhVGla5lXA9f38ZcNSmeeBNt1LJVZLWCeBE1Pp3z79g/zJBifu01l
PoV5EsxR/q43LJF5ElzSNq5QL4F9/29tevfFHZ8MZP/+t/Zuu7A4877s5/3S
ZmbOTl7dnfm/tI4jLr4a34V5v7QPK6+vOxDOvJ/ai187tO4cwryf2vUX3kF0
S+b90LpsP7KtsBnzfmjP5I1Q7eDj7w9tUtCkwO9+zPuujTvy/FK+D/O+a1OD
S1brN2beN63ZKvNHWhXzvmk7mdVb+EXJvG/a8v7ODnvcmVetjZyoOfSIj2fV
2hGrTuitVDDvq7aqaGfMBQXzvmpbTuqXOd2deV+1XZYMiz7Ix/sv2rlFl9IH
qpj3RZuSvbr2ci/mfdYernVDT+PDvM/aRQvzBw3wY95nrU3TKbm/Apn3SSvP
KTSr34x5n7TLPg5uvQiY91FbuXXlriltmfdRu7nOo6jrYcz7qO3SL/T7ws7M
q9Le/3Hg504+PlZpX2cuGu3Yh3kftLUK79i8HcC8D9oRD1sn1xvOvA/a5Pd7
Sifw8fG9tqv+eU/Xycx7rx0zobqZ6T/Me6f1hUFrA+cz753W+X3j7EXLmPdO
62L6cEfDtez732rnj32cdXgL+/dv/tQTvD4pm/2819r0pzCsay7zK7U/ryWW
BPH73UptwvHhOxV8fvyV9tj380sb8fm6l9oF9gGhv+8w74UW3vZacOcR855r
28+vsF/3knnPtd6jE0tbsfkf9TPtkQ2T9p39zrwK7cZTVll2+ux681TbblZZ
ZWtjdj16opUkDCnxMWfXqyfabZ633pTx54ty7UvXoPIwZ3Z9eqxd3ePk1qFK
5j3SjsnY3zeQzX8UlWlv746avjeQeWXaRuEzj5xvzr7/gfZI8M9aKfz56J52
8eE9eKc9+3ml2l4Hx8/I78D8Eq1x4a1m0JV5d7SbNoaGhUcz75a2tUdE9KMY
5t3Q3vvhNOp3b+YVa+/PDTfY0o9517SD1Otfn49j3lVt+0GNBozl41GRtoFL
r1prB7J/f15r9e7y81Z8vCzQVlUNTxrK5jvU+dqyO+qM+nx8Q23W/Y5Lffn3
52lXWl43v9Wf/fscLRh5wTc+3u3UXmkQsjqzLzvO0JqN8al9kc+/SCRrPmQ9
mdKD/73mwDTzstxu/Ps1Y0MGmk7tzH3N09gx76+F85+vWVTu2el4CK9PE/5t
anSzlrx+ze4F+XNigvnvpwnv7JvbyJ///pqWE4p+TfHi+WjeOHldXuDG89Nk
9LS8HiHj+WpWGx2tPmPF89c8qn1r1LeG/P9Hkzxg74qqWvz/T/Py1NGfhyX8
/1dzZn+z+PCv7Pwv0RwPPJPzv/nP/84PTXfrUa/0nrHPwz3NjVIPTz/+PPpA
s9mydE9XPv9cplHa9j8wiM/Hl2leFhxIGZfP/Eeay+MKJqYeY9//WLPFJev2
5gPs55VrQg7GPb+6g3lPNDPd7R82ymTeE42jzOPe9FXMe6p5/F351Jg/f1Zo
vn/t8vBcKv98apofxHl50/nnV3Ol+NfEpxP451tzc/Ya48hR/POvKfvxLrHW
EH590GRNdtlYN45fPzS/HrfW9O/Jry+a3Q+2o0k3fv3RNO8xL8ShI78+aRa/
uZG1uD2/fmk+nWkRP7g1v75psh9nHNrVgl//NM2tJwzt05RfHzXGAUY1ZvHn
o3eajS+6Z9ir+fVVs6Dwwltfb3791SQ0fdX3tCe/PmuCmy25d9mDX781d1p1
/Rqj5Nd3jXl61N2B7vz6r7n7ZGirdwo+Pmjq/Jgx54eCjx+a40vHr5rnzscX
zdNNgV9Wcu+jZuiLpvnOfLz7pHljFbbfy4uPX5rz1TuMD3vz8U3zZMqCf4+o
+fin+dLnYTefQD4+ajT34185BPPxU1O10ik8mT8PftEMT6n1oGMbPv5qNhw3
yJ0TysdnTb3Y9gvknfj4rWn16fJ5eRQf3zXmdZsumNWLj/+aBob3Nwb25/cH
mjPL6ixrPpTfP2j2OmXsWjya319oHm9Z+8ltEr//0LyYHNZOkszvTzSjN1q1
NJ3L7180wzPeRXdfwu9vNPd/LL9xbjW//9Esq3Ao77eJ3x9puj9Zt8hiF79/
0tTeePTi44P8/kpzIW3mNDzO7780U5/6Tdl+ht+fabbWNVu55BK/f9NkrgrY
OO4Wv7/TRKiHjuDvZyQSMJ/0/nHD5/z+EDbVjqo69o7fP0JvdZ2drav5/SV8
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
/Fvrcvn75xw5RB57AB66/Y1gbvp5ladu/yNMlJw51Vi3PxImJlUc9dHtn4Tf
LU7MU+v2V8Ko7CF+/rr9lzC/6+3jAbr9mdBqkNapiW7/Jjz5kTU8SLe/E1xU
Faub6vZ/wtbKndnBuv2hMKT8845muv2jcPHX7sXNdftLYdbblP4tdPtPQT7d
1lnD83ODY6feXNfw/NzgnHOvROD5uUHM2CyDljw/N+i1+sf8ljw/N9DGj9Vv
xfNzg/3eRomteH5u4Ncl63Yrnp8bpKxWqFvz/NwgZHNUamuenxt8sXh6rTXP
zw2WXJ9h2Ybnp4D1hv92a8PzU8BZ/8CFbXh+CnisGoRteH4KmP/09Js2PD8F
2PY8ZdWW56cAh/ATLdry/BTw7LNVXFuenwI0ZxTJbXl+CvhV1mRdW56fAhQ3
F+dyL1kBo+qOLOJemgL2d6r/iHsZCmjUJquKe1kKmHspXl+wfxseTpxqJtjf
DcuuN3AU7P+G4IK2noL94TC7XNNEsH8cPu62bSXYXw4fbnwJE+w/h8WzX3YV
7E+HiMV1ewr2r0OPzaNiBfvbYeE093jB/neYah02XLA/Hu7dLBsl2D8Pq5d/
TxTsr4fTT7MmCvbfwx7HN5MF+/MhJrV0mmD/PiR1mZQs2N8PPneK/hHs/4fz
68pSBP0BYEL/Y6mC/gEwWBM7V9BfAAL33J4n6D8AD1e5LhD0J4BewzumCfoX
gLEseqGgvwFUtYVFgv4H8K5+w8WC/gig1+PcYkH/BDh4YPgSQX8F2D/4xxJd
fko4NmfqUl1+Srj77PVSXX5KMFZ1XabLTwnRF3ct0+WnhIHm1ct0+Skh16dF
ui4/JUR5TknX5aeElh/3p+vyU8K4mLJ0XX5K2GxVZ7kuPyXk3PFarstPCR88
Oy3X5acEy3XDl+vyU0KN1SnLdfkpIXbeGp1XpQTboj06T+IB6w+c0nnGHlA9
85LOk3rA56l3dZ7cA77efarz1B5w69Jbnffnbil95ledF+EBRnYSYX8RmHDa
UNh/BCyWGAv7k8A/mSbC/iWgqGsp7G8CO55Ihf1PQKaxE/ZHgRlKmbB/Cpw9
5CTsrwJNXroI+6/AhptyYX8WGJqsEPZvgYcf3IX9XUDj5yHs/wIPwlTC/jAQ
2sxT2D8Gout5CfvLQKvTXsL+M3Cib2Nhfxr49bSxsH8N3OrpLexvA0e03sL+
N/CvpY+wPw5cjfMR9s+B6Zt9hP11wO+uj7D/DrjV8RX254HBal9h/x64H+0r
7O8DUeN9hf1/YMZiX2F/IPiwTeBVqECdJ/CqVJBzXuBJPOHWbYFn7AnvygWe
1BPC3gg8uSe4fBF4ak849EvggSe4G4j6J0F2HVF/JejXQNR/CeLMRP2Z4KKl
qH8T5EhF/Z1AZSvq/wQh9qL+UNBAJuofBemOov5ScN9J1H8KPjqL+lPBIxdR
/yrY5SrqbwXd5KL+V1AuF/XHgj5uov5ZkO8m6q8F1gpR/y0YoBD154JNClH/
LripEPX3ghri/l8gF/cHg7bi/mHQT9xfDMaL+4/BHHF/Mlgp7l8GW8T9zWCv
uP8ZHBH3RwOtuH8anBX3V4OL4v5rcEXcnw2Kxf3b4Ja4vxvcEfd/g1Jxfzi4
J+4fBw/E/eXgobj/HJSJ+9PBI3H/Ongs7m/Hj//m1xjKxf3x+PHf/HTHf/Nr
DE/E/ff48d/8dMd/89Md/81Pd/w3P28g/QFB3K9Nd/z/32+mO/6br+74/zkZ
8eTEUxFPTbwg4gHxQogXQbxI4sUQL5Z48cRLIF4i8ZKIl0y8VOKlES+deBnE
yyReFvGyiZdDvDziIfEKiFdEvGLilRCvjHgVxKskXhXxqokn8SHnn4/YM/YR
e2Y+Yk/qI/ZkxJMTT0U8NfGCiAfECyFeBPEiiRdDvFjixRMvgXiJxEsiXjLx
UomXRrx04mUQL5N4WcTLJl4O8fKIh8QrIF4R8YqJV0K8MuJVEK+SeFXEqyae
xJecf75iz9hX7Jn5ij2pr9iTEU9OPBXx1MQLIh4QL4R4EcSLJF4M8WKJF0+8
BOIlEi+JeMnESyVeGvHSiZdBvEziZREvm3g5xMsjHhKvgHhFxCsmXgnxyohX
QbxK4lURr5p4EjU5/9Riz1gt9szUYk+qFnsy4smJpyKemnhBxAPihRAvgniR
xIshXizx4omXQLxE4iURL5l4qcRLI1468TKIl0m8LOJlEy+HeHnEQ+IVEK+I
eMXEKyFeGfEqiFdJvCriVRNP4kfOPz+xZ+wn9sz8xJ7UT+zJiCcnnop4auIF
EQ+IF0K8COJFEi+GeLHEiydeAvESiZdEvGTipRIvjXjpxMsgXibxsoiXTbwc
4uURD4lXQLwi4hUTr4R4ZcSrIF4l8aqIV008iT85//zFnrG/2DPzF3tSf7En
I56ceCriqYkXRDwgXgjxIogXSbwY4sUSL554CcRLJF4S8ZKJl0q8NOKlEy+D
eJnEyyJeNvFyiJdHPCReAfGKiFdMvBLilRGvgniVxKsiXjXxJAHk/AsQe8YB
Ys8sQOxJA8SejHhy4qmIpyZeEPGAeCHEiyBeJPFiiBdLvHjiJRAvkXhJxEsm
Xirx0oiXTrwM4mUSL4t42cTLIV4e8ZB4BcQrIl4x8UqIV0a8CuJVEq+KeNXE
kwSS8y9Q7BkHij2zQLEnDRR7MuLJiacinpp4QcQD4oUQL4J4kcSLIV4s8eKJ
l0C8ROIlES+ZeKnESyNeOvEyiJdJvCziZRMvh3h5xEPiFRCviHjFxCshXhnx
KohXSbwq4lUTT9KEnH9NxJ5xE7Fn1kTsSZuIPRnx5MRTEU9NvCDiAfFCiBdB
vEjixRAvlnjxxEsgXiLxkoiXTLxU4qURL514GcTLJF4W8bKJl0O8POIh8QqI
V0S8YuKVEK+MeBXEqyReFfGqiScJ4sf/BygfpHQ=
        "]],
       FontFamily->"Arial"]}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->Automatic,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.86541357846204*^9, 3.86541363269973*^9, {3.865417978561264*^9, 
   3.865418007918109*^9}, 3.865418053903922*^9, 3.865418359054146*^9, 
   3.865418496696948*^9},
 CellLabel->
  "Out[230]=",ExpressionUUID->"bd451973-634b-4441-bca6-7db302197ca2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Discretization (our model)", "Subsection",
 CellChangeTimes->{{3.865410180182604*^9, 3.865410198686184*^9}, {
  3.86541745104632*^9, 
  3.865417465733119*^9}},ExpressionUUID->"e5fce193-fde5-4b64-be34-\
c36433a44a07"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"latexCouplings", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "->", "\[Alpha]"}], ",", 
     RowBox[{"\[Lambda]", "->", 
      SqrtBox["\[Delta]"]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"physicalCouplings", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", "q2"}], "+", 
          RowBox[{"m2", " ", "q1"}]}], 
         RowBox[{"m1", "+", "m2"}]]}], "\[Tau]"}]}], ",", 
     RowBox[{"\[Beta]", "->", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]], 
        FractionBox[
         RowBox[{"2", " ", "q1", " ", "q2"}], 
         SuperscriptBox["r", "3"]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         RowBox[{"m1", "+", "m2"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", 
           SuperscriptBox["\[Omega]2", "2"]}], "+", 
          RowBox[{"m2", " ", 
           SuperscriptBox["\[Omega]1", "2"]}]}], 
         RowBox[{"m1", "+", "m2"}]]}]}]}], ",", 
     RowBox[{"\[Gamma]", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]]}], 
       FractionBox[
        RowBox[{"3", " ", "q1", " ", "q2"}], 
        SuperscriptBox["r", "4"]]}]}], ",", 
     RowBox[{"\[Delta]", "->", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "m1", " ", "m2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            SuperscriptBox["m1", "2"]}], "+", 
           RowBox[{"3", "m1", " ", "m2"}], "+", 
           RowBox[{"2", 
            SuperscriptBox["m2", "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"m1", "+", "m2"}], ")"}], "4"]], 
       FractionBox[
        RowBox[{"q1", " ", "q2"}], 
        SuperscriptBox["r", "5"]]}]}], ",", 
     RowBox[{"H", "->", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"m1", "+", "m2"}], 
         RowBox[{"m1", " ", "m2"}]], 
        FractionBox[
         SuperscriptBox["HBAR", "2"], "2"]}]]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HHrule", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "->", "0.6099"}], ",", 
     RowBox[{"m2", "->", "0.6099"}], ",", 
     RowBox[{"q1", "->", "0.7080"}], ",", 
     RowBox[{"q2", "->", "0.7080"}], ",", 
     RowBox[{"\[Omega]1", "->", "0.4273"}], ",", 
     RowBox[{"\[Omega]2", "->", "0.4273"}], ",", 
     RowBox[{"HBAR", "->", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramRules", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "->", "1"}], ",", 
     RowBox[{"\[Tau]", "->", "0"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.865417597034564*^9, 3.865417685352819*^9}, {
  3.865418543969873*^9, 3.865418544077344*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"f76e813d-47cc-4fc7-9abc-e06f2a09df85"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"v", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"A", " ", "x"}], " ", "+", 
    RowBox[{"\[Beta]", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"\[Gamma]", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{
     SuperscriptBox["\[Lambda]", "2"], " ", 
     SuperscriptBox["x", "4"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "[", "x_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"v", "[", "x", "]"}], "//.", "latexCouplings"}], "//.", 
      "physicalCouplings"}], "//.", "HHrule"}], "//.", "paramRules"}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.865410440070257*^9, 3.8654104555054197`*^9}, {
  3.865410573522439*^9, 3.865410593314836*^9}, {3.865417541064334*^9, 
  3.8654175634802628`*^9}, {3.865417731129198*^9, 3.8654177542204733`*^9}, {
  3.865417798061221*^9, 3.865417815145299*^9}, {3.865417895149723*^9, 
  3.865417902217391*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"f2d8931a-c13e-425c-924a-0ce89fad4f1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotV", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"V", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8654105962790318`*^9, 3.86541065498062*^9}, {
  3.86541785343839*^9, 3.865417878025732*^9}, {3.865417909275345*^9, 
  3.865417909481786*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"0446173c-da5b-4397-b0c9-522eaf408c5f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
5mA7D///rwU19jksTNfm4X/EQgIJ
       "]]},
     Annotation[#, "Charting`Private`Tag$86199#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-20, 20}, {0., 73295.92084200642}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.865417866370287*^9, 3.865417878603217*^9}, 
   3.865417909775137*^9, 3.8654185555264397`*^9},
 CellLabel->
  "Out[238]=",ExpressionUUID->"e48a150a-1265-4be6-a4ac-ecdc09a7a134"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "2000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]x", "=", 
   FractionBox["L", "n"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.865410727784152*^9, 3.8654107424994583`*^9}, {
  3.865418026672928*^9, 3.865418028490274*^9}, {3.865418439024941*^9, 
  3.865418448268615*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"2de665f3-b97c-4689-8afa-2c704b9657c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M", "=", 
  RowBox[{"SparseArray", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", "i_"}], "}"}], "->", 
       RowBox[{
        RowBox[{"V", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["L", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "\[Delta]x"}]}], "]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            SuperscriptBox["HBAR", "2"], 
            FractionBox[
             RowBox[{"m1", " ", "m2"}], 
             RowBox[{"m1", "+", "m2"}]]], "//.", "HHrule"}], ")"}], 
         FractionBox["1", 
          SuperscriptBox["\[Delta]x", "2"]]}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"j", "-", "i"}], "]"}], "==", "1"}]}], "->", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"2", 
           SuperscriptBox["\[Delta]x", "2"]}]]}], 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           SuperscriptBox["HBAR", "2"], 
           FractionBox[
            RowBox[{"m1", " ", "m2"}], 
            RowBox[{"m1", "+", "m2"}]]], "//.", "HHrule"}], ")"}]}]}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "+", "1"}], ",", 
      RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8654107489514227`*^9, 3.865410780436141*^9}, {
   3.865410816275703*^9, 3.865410903285276*^9}, {3.865410938964745*^9, 
   3.865410939253684*^9}, 3.865410971430784*^9, {3.865418186910654*^9, 
   3.865418189611549*^9}, {3.8654182300280523`*^9, 3.865418331982036*^9}},
 CellLabel->
  "In[242]:=",ExpressionUUID->"f754b0ab-b3bd-47ff-bfc8-ae4efba555a7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6001", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"2001", ",", "2001"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6001", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"2001", ",", "2001"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.0014987508744378436`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "182625.4628217816`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "2623.380882111822`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "2623.380882111822`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "2623.380882111822`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[Automatic, {2001, 2001}, 0, {1, {CompressedData["
1:eJwl2YMOIMqCQME72LFt27Zt27Zt27Zt27Zt2zZeZaeT+oFOn7TiN2hboU2A
//7770LQ//5/BOT/CEZIwhCeSEQlBrGJR0KSkJxUpCUDmclGTvKQn0IUpQSl
KUdFqlCdWtSlAY1pRkva0J5OdKUHvenHQIYwnFGMZQKTmcZM5jCfRSxlBatZ
x0a2sJ1d7OUAhznGSc5wnktc5Qa3ucdDnvCcV7zlA5/5xk/+EMAEByYoIQhN
OCIShejEIi4JSEwyUpKG9GQiKznITT4KUoTilKIsFahMNWpSh/o0oiktaE07
OtKF7vSiLwMYzDBGMobxTGIqM5jNPBayhOWsYi0b2Mw2drKH/RziKCc4zTku
coXr3OIuD3jMM17yhvd84is/+B3g30INRBCCE4qwRCAy0YhJHOKTiKSkIDXp
yEgWspOLvBSgMMUoSRnKU4mq1KA29WhIE5rTirZ0oDPd6Ekf+jOIoYxgNOOY
yBSmM4u5LGAxy1jJGtazia3sYDf7OMgRjnOKs1zgMte4yR3u84invOA17/jI
F77zi78EDKR/ghGSMIQnElGJQWzikZAkJCcVaclAZrKRkzzkpxBFKUFpylGR
KlSnFnVpQGOa0ZI2tKcTXelBb/oxkCEMZxRjmcBkpjGTOcxnEUtZwWrWsZEt
bGcXeznAYY5xkjOc5xJXucFt7vGQJzznFW/5wGe+8ZM/BAisf4ISgtCEIyJR
iE4s4pKAxCQjJWlITyaykoPc5KMgRShOKcpSgcpUoyZ1qE8jmtKC1rSjI13o
Ti/6MoDBDGMkYxjPJKYyg9nMYyFLWM4q1rKBzWxjJ3vYzyGOcoLTnOMiV7jO
Le7ygMc84yVveM8nvvKD34H/bVKBCEJwQhGWCEQmGjGJQ3wSkZQUpCYdGclC
dnKRlwIUphglKUN5KlGVGtSmHg1pQnNa0ZYOdKYbPelDfwYxlBGMZhwTmcJ0
ZjGXBSxmGStZw3o2sZUd7GYfBznCcU5xlgtc5ho3ucN9HvGUF7zmHR/5wnd+
8ZeAQUwtwQhJGMITiajEIDbxSEgSkpOKtGQgM9nISR7yU4iilKA05ahIFapT
i7o0oDHNaEkb2tOJrvSgN/0YyBCGM4qxTGAy05jJHOaziKWsYDXr2MgWtrOL
vRzgMMc4yRnOc4mr3OA293jIE57zird84DPf+MkfAjhbBSYoIQhNOCIShejE
Ii4JSEwyUpKG9GQiKznITT4KUoTilKIsFahMNWpSh/o0oiktaE07OtKF7vSi
LwMYzDBGMobxTGIqM5jNPBayhOWsYi0b2Mw2drKH/RziKCc4zTkucoXr3OIu
D3jMM17yhvd84is/+B303wE1EEEITijCEoHIRCMmcYhPIpKSgtSkIyNZyE4u
8lKAwhSjJGUoTyWqUoPa1KMhTWhOK9rSgc50oyd96M8ghjKC0YxjIlOYzizm
soDFLGMla1jPJrayg93s4yBHOM4pznKBy1zjJne4zyOe8oLXvOMjX/jOL/4S
MLj+CUZIwhCeSEQlBrGJR0KSkJxUpCUDmclGTvKQn0IUpQSlKUdFqlCdWtSl
AY1pRkva0J5OdKUHvenHQIYwnFGMZQKTmcZM5jCfRSxlBatZx0a2sJ1d7OUA
hznGSc5wnktc5Qa3ucdDnvCcV7zlA5/5xk/+ECCE/glKCEITjohEITqxiEsC
EpOMlKQhPZnISg5yk4+CFKE4pShLBSpTjZrUoT6NaEoLWtOOjnShO73oywAG
M4yRjGE8k5jKDGYzj4UsYTmrWMsGNrONnexhP4c4yglOc46LXOE6t7jLAx7z
jJe84T2f+MoPfof4dzkNRBCCE4qwRCAy0YhJHOKTiKSkIDXpyEgWspOLvBSg
MMUoSRnKU4mq1KA29WhIE5rTirZ0oDPd6Ekf+jOIoYxgNOOYyBSmM4u5LGAx
y1jJGtazia3sYDf7OMgRjnOKs1zgMte4yR3u84invOA17/jIF77zi78EDKV/
ghGSMIQnElGJQWzikZAkJCcVaclAZrKRkzzkpxBFKUFpylGRKlSnFnVpQGOa
0ZI2tKcTXelBb/oxkCEMZxRjmcBkpjGTOcxnEUtZwWrWsZEtbGcXeznAYY5x
kjOc5xJXucFt7vGQJzznFW/5wGe+8ZM/BAitf4ISgtCEIyJRiE4s4pKAxCQj
JWlITyaykoPc5KMgRShOKcpSgcpUoyZ1qE8jmtKC1rSjI13oTi/6MoDBDGMk
YxjPJKYyg9nMYyFLWM4q1rKBzWxjJ3vYzyGOcoLTnOMiV7jOLe7ygMc84yVv
eM8nvvKD36H/PUwFIgjBCUVYIhCZaMQkDvFJRFJSkJp0ZCQL2clFXgpQmGKU
pAzlqURValCbejSkCc1pRVs60Jlu9KQP/RnEUEYwmnFMZArTmcVcFrCYZaxk
DevZxFZ2sJt9HOQIxznFWS5wmWvc5A73ecRTXvCad3zkC9/5xV8ChtU/wQhJ
GMITiajEIDbxSEgSkpOKtGQgM9nISR7yU4iilKA05ahIFapTi7o0oDHNaEkb
2tOJrvSgN/0YyBCGM4qxTGAy05jJHOaziKWsYDXr2MgWtrOLvRzgMMc4yRnO
c4mr3OA293jIE57zird84DPf+MkfAoTTP0EJQWjCEZEoRCcWcUlAYpKRkjSk
JxNZyUFu8lGQIhSnFGWpQGWqUZM61KcRTWlBa9rRkS50pxd9GcBghjGSMYxn
ElOZwWzmsZAlLGcVa9nAZraxkz3s5xBHOcFpznGRK1znFnd5wGOe8ZI3vOcT
X/nB73D/HqUDEYTghCIsEYhMNGISh/gkIikpSE06MpKF7OQiLwUoTDFKUoby
VKIqNahNPRrShOa0oi0d6Ew3etKH/gxiKCMYzTgmMoXpzGIuC1jMMlayhvVs
Yis72M0+DnKE45ziLBe4zDVucof7POIpL3jNOz7yhe/84i8BI+ifYIQkDOGJ
RFRiEJt4JCQJyUlFWjKQmWzkJA/5KURRSlCaclSkCtWpRV0a0JhmtKQN7elE
V3rQm34MZAjDGcVYJjCZacxkDvNZxFJWsJp1bGQL29nFXg5wmGOc5AznucRV
bnCbezzkCc95xVs+8Jlv/OQPASLqn6CEIDThiEgUohOLuCQgMclISRrSk4ms
5CA3+ShIEYpTirJUoDLVqEkd6tOIprSgNe3oSBe604u+DGAwwxjJGMYzianM
YDbzWMgSlrOKtWxgM9vYyR72c4ijnOA057jIFa5zi7s84DHPeMkb3vOJr/zg
d8R/H1KBCEJwQhGWCEQmGjGJQ3wSkZQUpCYdGclCdnKRlwIUphglKUN5KlGV
GtSmHg1pQnNa0ZYOdKYbPelDfwYxlBGMZhwTmcJ0ZjGXBSxmGStZw3o2sZUd
7GYfBznCcU5xlgtc5ho3ucN9HvGUF7zmHR/5wnd+8ZeAkfVPMEIShvBEIiox
iE08EpKE5KQiLRnITDZykof8FKIoJShNOSpSherUoi4NaEwzWtKG9nSiKz3o
TT8GMoThjGIsE5jMNGYyh/ksYikrWM06NrKF7exiLwc4zDFOcobzXOIqN7jN
PR7yhOe84i0f+Mw3fvKHAFH0T1BCEJpwRCQK0YlFXBKQmGSkJA3pyURWcpCb
fBSkCMUpRVkqUJlq1KQO9WlEU1rQmnZ0pAvd6UVfBjCYYYxkDOOZxFRmMJt5
LGQJy1nFWjawmW3sZA/7OcRRTnCac1zkCte5xV0e8JhnvOQN7/nEV37wO8q/
z+hABCE4oQhLBCITjZjEIT6JSEoKUpOOjGQhO7nISwEKU4ySlKE8lahKDWpT
j4Y0oTmtaEt7/gdJrTRx
     "], CompressedData["
1:eJxtnFMQnWcXRmPbtm3btm3btm3btm0bbdKwaVPEatTgf5/peuffcyYXz6y1
9uW5OnPmO1/SZp2rdQoWJEiQrrGDBAka5L8Fg8HxYHgIw5BuoYz7Du0WxnhY
c5OHw8Pj/haBm2dEFombPDIdCY9iGNUwmlt0GBWPYe7ymDAWHhN3H0OQONB2
XBgP94zvlgDqltC0PBHtPbFhErekxn0nM0zOUtAp6JRMnYql5iam4ZYW1y2d
ae/p8Qx4RqjORFvPjGfBtay0mC3AsxvmcMtpXMvFLSee2y2Pcd95YT48P8zH
1AWYvCArxE0szK2I6SKwKF4ML4oXZ/ISuFjSsJRhaSYvw8pyk5ejyxuvgJfH
xYpulWAFvLK5V6G1qnQ1WJWpq7vVCPCaxmvRWm3asw5eFxfr4fVx3RqYFhty
a2S8Id2YNTHdlNaa0WJz4y1osSXeCtettWmxDbe2xtvhurWHunWA7fGOeCfT
nWl5F9NiV26e3dy6097FHnhPvBfsyXpz0/rQnn2Zuh8u9mcD6IG4v6kHMflg
tyG096EBPgwOx0dA9Ug4go3iNtq4OIbbWDgGF8fh43HPCWwit0m4v6knwym4
51Q2jdt03N9mcPOc6TaLls+m/V09B87FxXm4OJ/bAtMLaeuLmHqx2xJavtTc
lsJlbsvhUnyFua+kV8GV+GpcXGNu8rVu66B6vekN+Hqm3sjkm9w2w43Gt7ht
peXbaOvb2Q5u3nca7nLbDXfie+g99F62j9s+ej9+APc8yA5xO0Qfxo/gh/Gj
hsfcjkP1CXM7SVs/5Xaalp+hvZ+lxXPmdp7WLtCeF3Hxkttl41do71fpa6a1
69y0G/RN4z+Z9v4zU99i6ttM/Qt+B79r/B5+l93nJj7AH9AP2a/c5I/o36D6
d6jbY1r+h+k/Tcv/or3/DZ/g2lNafGb8Of0CPmcvub3AX7m9hrbfwLf4O/gW
/8f4e/qD8Y+mxU/ctM/0vwH+hRa/mts3WvxuXF/wv3OTBw36fwZzCw5th3AL
GeBiKFwM7RbGeFhaHs60GJ6bGAGPQEdk6khukWnvUfCopqPQ0dyiQ3UMc4sB
Y7rFor3HxuOYjk3HNYznFj/AE+AJcX9TJzJM7JYkwMWkbsnopKaTM3kKt5S0
91TGU9NimgBPC9PhnumZOoNbRpjedCYmz4xnwcWseDZct+yms9E53HIaz0XL
c5vORedxywvV+Ux7z8/UBdwK0vJCtL+rC8MiuFaUFovhxU2XoL2XpEvSpdxK
Q93KmPZeFi+Hl8XLwwp4ebwik1dyq0x7F6u4VYW6VTPtvTqrwc17TbdaxrXa
3OoYF+tyE+vh9U3Xoxu4NYS+G3FrbLwR3QQ2xT2b4c3xFrA53jLAWzF5a7c2
ULe2puXtaHl7WutAe3bEO+FiZ1zswq0rrls3XLfusBsu9nDrCbub7uXW27jv
PqwvLfbj1t90P3oAHIh7DmKDuQ0xLR8a4MPYcHqEafnIAB8FR+PaGHrsD3yc
23haPsHcxtMT4SRcm0xPwqfAqbg4DRenc5tOz3CbCaebnsVm03NMz4FzcXEe
m08vML0ALmTqRWwxtyX4IuNL3ZbRS9lybisCfCXtfZXhaiZfw9Zyk6+j1xtf
R29g8o1sE7dN9Ga3LVC3raa34VuZejuT72A7uXnfxXbTe0zvpXdD9T6237T8
ADyIH8APGR52OwLVR017P+Z2nD5m+gQ8iWunaM/T+Bn8LDzDznHTztMX4Hlc
vOh2CV4wfZnJr+BX8WtQfR3qdoOW3zQt/4kWf+Z2C9ftNn4LF39h6jvsLjf5
PdrzvtsDeA8+5Kb9Sns+wn/DH+G/uz2G6j9Mi39y+wuq/4a6PaGtP2XqZ0z9
HH+BP8dfur0y7vs1e2Na/tbtXYD/g4vvze0D7fkR/4Rrn2nPf92+wM/4V/or
/c3tO/2N6Ud93YIG+7+LwYL9d/MMjoshmDwkC8UttGl5GDwsrls40+HxcEwd
wTCiWyTjkWl/V0eBUXEtGq1Fp2PA6Ewdk8UyHZuOA2PjcXExnrnJ47MEdELT
WiJuYmI8MZ2EJeXmPRlMjqcI8JR0KtNaam5pYGqmTgvT4elhOpaBm5aR9szk
lhlmhFm4iVnxbHgW49ndctDexZxuueicLDe3PDA3LubF8+F58fyGBWBBXCtE
a4XpIgFelC5mWl4cF0twK4n7WyluWmm6TICXpcuZ1spzK4dXcKtovBItr2za
exWmrsqqcauO+5u6BqtpWl7LrbZx33WYvK5bPahbfdMN8Pq42JCpG7HG3MQm
5iZvyuTNmLo5U7dg6pZurWAL2Jqb2MZ4W1prR3u2x8UObh2hupPpjnRnwy5M
3pWpuzF1d7wH3hP2YL24ab1psY/xvnQ/qO4P+7EB3AbCAbg4yG0wLR9Cex9K
y4fRQ/HhcAQ+8gc+ChdHG45hY+mx9DimHs8mcBMnchMncRMnm9sU2nMqLk6D
03FtBu05020WnGF6NpyDz4VzmHoek8/HxQWGC9kierHpJbR8Ka7bMrgUX46L
K8xtJb3K+Gp8Fb4mwNe6rTO+3tzkG4xvpDfgmww3u22Btrcy+Ta2nZv3HW47
oe1dbrvhTuN78L34PrgXF/e7HYD7jB90O0TLD5vbIfoIO0ofpY/hx3HPE/hJ
XDtFn4ancPEMU5/FxXPsvOkLtOdFdonbZfyi8StMfRUXr8HruHgDv2n6Bv0T
k/+M38I9b7v9Am/hd+i7pu9B3e5D3R5A3R7S8l9NPzL9G/4I/x1/bPoP+Jip
/4R/4Z5/409w8WmAP2PP6Rem5S/xV6a119zewNfsLTfxXYD/w96bln9w+xjg
n3DxM7d/8U/4F1r+lf5m/LtpPcTjWwwa/L+bJg/mFhyqQ5gOTodkoWgxNLcw
psPS1sOx8NzkEWgtIq1ForXItBgFj4r7mzqaYXS3GMZ9xzSMBWPjcQI8Li3G
M7f4dALjCfEELBG3xDARUycxTAqT4Vpy2jOFW0raeyo8tWktDTcxLS6m4yam
Nzd5BibP6JYJZjCdmWWhxazcsuH+lp1bjgDPSXvP5ZYbqvOYm5aXW74feH6m
LoAXxMVCeGHc39RFYFHcsxheHC9hXCzJrQReyq208TK09bJu5WAZvDxdwbS8
Il7JtFaZm1aFrmpcrMZNrI5Xp2vgNXGxVoDXdqsD1XVN16HrMXl9twZQt4am
G+EN8cZ4E7wR3pT23syteYC3wMWW3FqZbg1bMXUbt7ZQ3c609/asA7eOprVO
3LTOtGcX1pVbV7ob685N7MGtJ65bL1y33rS8j2mxLzetHy32xwfg/jaQmzaI
1gbTQwJ8KD2UHuY2HA7FR9AjTY+Eo9xGw5GmxxiOZeNMj6cnwPH4RHwiPQmf
jGtT6KlwClNPc5sOpxqf4TaTls8yN202tzk/8Ln4PHy+8Xn0AreFxheZm3wx
vphe4raUli+j5ctNL6NXGK5kq+hV9GpcXGO4lsnXua2n5RvMbSMt32Ra3Mxt
E77FcCvbRm/HtxrfwXZyk++id8Nd+B7je+k9+D7D/YYHmPyg2yF4wPRhwyNu
R41rx7hpx+kTAX6SFk9xO0WfdjtDexfP4uI5dt60/AK8iF/AL7ldDnDxittV
eNn0NXgd97zBbnLz/pPbz/Amfsvc5bfhL/ht/A6T33W7R981fZ/JH+AP8Qf4
r4aPmPw3t99p+WNzewz/wMU/mfwvXPybPaGf4v72jNtT/Dl7QYsvuYmvuL02
LX+Dv8V1e2da/g/9HtftA/4eFz/in/CP+Gcm/9ftCy3/am5f4Tem/o6Leng/
aIj/e7AQ/78FpYO7hYDBjId0CwV1C23aexi3sDC06XAwPB7BeEQ8AlNHYvLI
uBjFLSpURzO3aDA6U8dwiwmjm44FY+Oecdzi0nFYPG6e8d0SwHh4QjqR6cQw
EUvCzTOpWzJantzc5CmMp6RT4KlYatNp6LQBno5Oj6fFM9DyjLSYyXhmWstC
Z4XqbHQWqM7O5DnccsLsxnO55ablecwtL50bqvMZ5ocF8Px4QbdC0HZhVoQu
ivubuphhcSYvgZfES/3AS+NiGcOysBwulscrmNYqcquAVzKszKrQVU1r1bhV
xauzGnRN0/JaxmvTnnVYXW71cH9T13drAH035KY1orXGdBOobgp1a0Y3germ
bi2guqXpVqblrWl5G1psi7cz3ZZuz+Qd3DrC9sY74WJnty7Gu9LWu7Hu3HqY
7knLe5nuSfdm8j6sL7d+eB+8P+19ABtID6QH4eJgJh/C1EPdhtHexeFuI2j5
SHMbQY9i8tFsDDf5WFoch4+jx+PiBDgR95yET8bFKfhU01PoaYbT3WZA9UzT
M+hZbrOheo65zYVzmHoenI/Pwxcw+UK3RXCB8cX4EnwpXMLUy5h8udsKqNtK
c9NWcRNX46vpNW5r4WrT65h8vdsGuM74RlzcBDfjW4xvxbfg2/DtuL+pd7jt
NL6Llu/GddsDd7O93Pbg+wz3ux2A6oOmD9CH4GFcPBLgR5n8mNtx+hg7wU08
iZ8yLT+Nn8H97Sw38Rx+3vQF+hxUX2TyS26X4UXjV/Cr+DXj13HdbsDrTH2T
yX9y+5mW36Kt38Z/wcU7+B36Ln4Pv4vfN3zAHtK/mn4EdfsNPmK/c9Me09of
9GP8T8O/4N+45xOmfsrUz/Dn+AvjL02/wl+y19ze/MDfsnfcxH+4vcf97QO3
j8bFT9w+G/9E/8u+0F/or/g3/Dv8xtT+j7vyoI7BaHlwWh7CdEg8BAvFzTM0
C8MtDB2WheMW3nQEGJ5F5KZFosXIeGQ6Ci5GdYsG1dFNxzAd07T3WLgY2zCO
YVwWj45vWkvALSFMgIuJ3BLTiVgSblpSOgmezDA5TIGn/IGnwlPjWhraMy2e
Dk8P0+FiBqbOiGfCM+KZYRbcM6tbNtq7mN0tBy3PaW45YS633LQ8j7lpebnl
C/D8tLwALRYM8EKGhd2KQNtF3YpB28XdSgR4SeOl6NKwFFOXgWXxcj/w8rhY
wa2ica0SN8/KblVgJViVm1gNr266Gl0D1sRr4LXcahv3XYfVpevS9XCxvlsD
474bwka41pgWm+BNTTeFzXCxuVsL2Mx4S6Zu5dYa6tbGtNiWm2c7vD3u2cGt
I2xvupNbZ+NaF25dobob7b07Lfbg1tO0vBfei+7N+nAT+3LrS/dz6w/74gPo
gXh/fBA9GNdtCD6YqYeyYfQwejhTj3AbSctH0fLRuG5j6FFQPdZwnOF4NsG0
fKLhJLfJxqeY2xQ41W0anAKncxNnBPhMOAufbXwWPcdtLpxtfB6bz02+gJ6P
L3RbBBcYX4wvwZfCJWwZt6X4csMVbiuNrzK3VXA1vgZfja91Wxfg6wN8g9tG
uN74JrfNcCPcws1zK1Nvc9tOy3eYm7aT2y7jO+ndcA8u7sX3md4H9+PiAbeD
UH3I9EH6sNsR40fN7RgtP276BH4cF0/ip/CT+Gm3MwF+1vg5+jxUX6DPQfVF
Jr/kdhleNH0FXsU9r7ldp6+xG9xuwhtM/ZPhz263jN82t9vwF1y8w+R3cfEe
vI+LD/CHpn+FD9kjbtpv9CP8d8PHTP4HU//p9hfU7W/T4hNuT+ET9oyb53P2
gpv8Ja29oj1f4+Ibt7fQ9jv4Dy6+x8UP5ib/6PYJqj+b/hf/zL5wE78a/0Z7
fmd6Qc83qA4a6r8FC/XfLTiuWwg8OB7SeCg6JB7aMAyTh2XhuIXHw+IRaHlE
OhKMiIuRWRRuUfHIeDTae3QWg45pOhZtPTYuxmHyuHg8XItPJ4DxmTqhWyLj
iWl5Ely3pDAJUyeDyXEtBe2ZkqlT4WJqtzQBnjbA0zF5eqbOgIsZDTO5ZYa+
s3DzzOqWjc7KsnPLAbPjYk5czOWWG9rOA/Pi+X7g+XGxgGFBVsh0YdqzCC4W
dSsG1cXNrQQsjpfES5nWSnMrY1wsy00rR5eH6gqwPKvIzbMSq8xNrMKtKl7Z
eDW36nQ1VoObZ01Wi5v32m51Alysy+pxq0fXd2sA6xlvyNSNmLqxWxO6semm
TN7MrTntvQXe0nQLupVba+NaG25tYRumbufW3ngH2ntHWuzErTPeEe9Ce+/q
1g367s5N7IGLPbn1Mq315ib2wfua7gf7MnV/twEBPtD4INpzMFMPwYfi4jB8
uOlh9Ai3kVA9yrQ4mtuYAB9Li+O4jaPHswncJtAT2SRu4mRuU0xPhbpNo6fA
6dw8Z+Az8Rn4LLfZxueY2xw4F5+Ha/PpBT/whW6LaO/iYnwJri2ll8GlbDm3
ZfgKuBJfZXy1afkaeg291m0d7X09Lm7gttH0JriRqTfDLbi2ld4W4NvpHaZ3
Qt120dZ3M/UefC+u7aP3Gz9gWn6Qlh+itcP0IfwIkx9l6mP4cVw8gZ/EdTuF
n8TF0/gZ/KzxM/Q5eB4XL+AX8fPGL7ldhrpdMbertPdrtPw6Ld4I8JvsJ1r8
2dzkt+Bt/Bb+i9sd49pdbp738Pv4A3gff4iLv5rbI9rzN/x3/LFx8Q9uf0L1
X7T3v2n5E1p8avwZ7fmcveAmf0m/wF8x+Wu3N/AV/tbc39Ge/7i9h+/wD+b+
kf6Af3L7HOD/4l9wf/vK7Qv+zfA71Es55UFD/9+D4UFZ8ND/3UJAdUg6OFSH
cgsNfYfhJobFw5mWh8fFCNwimtYicYuIR4ZRcC0qLUbDxejmFoOOjsdksWgx
NrfYdBw8Lq7Fo+Mbj0cncEsI4+OJzF2e2DCJYVKWzHRyOgVMjqfEU+G6pTYt
puHmmZap0+Hpcc8MuJjRLZNx35ndsgR4VuPZaDE7nsN0DpgTz4V75sbz4Hl/
4Pnc8tP5TBdwKxjgYiFWmFsR00Vp68XcitPexRK4WBKWwkvipQ3LuJWFtsvB
8rhYAa9AV2SVuMkr01WMVzVdha7mVj3AxRpuNWF147XcatO1TNeBdXGtHu1Z
360BrGe8IS42YvLGrAm3pri/NeOmNafFFrjYklsr061ga1xsw+Rt3drBNsbb
u3WgvYsdcbGTYWe3Lsa70ta74d1xrQft2ZP14tYb9zd1H7e+UN3PtPf+TD2A
DeQmH0R7DmbqIbg4FA7DxeG4OIKbOJLbSHqU22g40vgYfCw+LsDH094nGE50
mwRtT4ZT8Kk/8Glu02n5DHObSVuf5TYb6jbH3ObCOfg8fB49n6kXuC2kvS/C
F9GL8SX4UrgEX4Yvo5e7rYDL4Epuq+BKpl7N5GtwcS1bR6/H1+IbaHGjuW2i
tc30FriZbeW2Bd8Gt+M74Ham3gl34eLuAN9juNdwH5PvdzsA98GD3A7ghwwP
syP0EfooLh5zO278BC0/iZ9g6lPwNC6eMX6WPgfV52nrF3DxotsleMH4Zaa+
gl/Fr+D/A/ruyO8=
     "]}, CompressedData["
1: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
NtieNNROIvN/IewCHg==
    "]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.865410972119693*^9, 3.865417914126273*^9, 3.865418031300404*^9, {
   3.8654183035492287`*^9, 3.865418333013651*^9}, 3.865418451111994*^9, 
   3.865418559242023*^9},
 CellLabel->
  "Out[242]=",ExpressionUUID->"d0aec672-24c8-4660-a46e-d8eaff7a1286"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "@", "M"}]], "Input",
 CellChangeTimes->{{3.865411911561184*^9, 3.865411917769059*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"0e6cb240-f18a-40c8-a244-20b32470d03d"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
5z3g0hepZeJw9c6VEx88oHMQERFRG1XdsjbjZNTbNU3xP/TOhpcLyiTu6JXD
y9vdp3MQERFRG1XdklPzSrVxPxjSadeIoUNeL5PWRx12F929S+cgIiKiNqq6
pWN2muPDx4ZMXjSyz5vppXLs/eb3Qzbn0jmIiIiojapuiXXKin2SYci1OCvy
+sJSCbDdPH12YA6dg4iIiNqo6pahl4KSPE8ZkuUYm5DXoFTqbuwY2Cgrm85B
REREbVR1y74Vy852jjNkaoTPfvfjJVL7Re+Ztrm36RxERETURlW3tLmX3Pf9
zwwpiMr5ouj9EgnPG5F03MyicxAREVEbVd3ybdW0tneWG7LtL6tKw54VS3BE
YVT2opt0DiIiImqjqltG96nw2z/DkIbzPdY6bymWGp6hX8w8fYPOQURERG1U
dUunli3Tk0Yb8nWdxjvHdC6Wqjp+gzxCMugcRERE1EZVtwSlXA4z+xiyKGvg
O81OF4n1+f4BnfpcoXMQERFRG1Xd0uutLhUfNDHkS4/L60e5Fklk2q4fItIu
0jmIiIiojapuSXsnxmZU2SXcY3to0u1CKbne5cq7/c7TOYiIiKiNqm5ZvjN3
wM5HdkkrrDm47fRCMVx+NHbUTKVzEBERURtV3fLesrPDx6XbZdP8kUl+eQXi
VmNs6Ha/Y3QOIiIiam/ZlJYtv020y/K2P0V896cCSUi8mrL+dDydg4iIiP9v
/QfJ3ALk
   "], {{0, 0}, {96, 96}}, {0, 1}],
  BaseStyle->{FontFamily -> "Arial"},
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{95.976011994003, 
       FormBox["1", TraditionalForm]}, {72.0359820089955, 
       FormBox["500", TraditionalForm]}, {48.047976011994, 
       FormBox["1000", TraditionalForm]}, {24.0599700149925, 
       FormBox["1500", TraditionalForm]}, {0.0239880059970015, 
       FormBox["2001", TraditionalForm]}}, {{95.976011994003, 
       FormBox["1", TraditionalForm]}, {72.0359820089955, 
       FormBox["500", TraditionalForm]}, {48.047976011994, 
       FormBox["1000", TraditionalForm]}, {24.0599700149925, 
       FormBox["1500", TraditionalForm]}, {0.0239880059970015, 
       FormBox["2001", TraditionalForm]}}}, {{{0.0239880059970015, 
       FormBox["1", TraditionalForm]}, {23.964017991004496`, 
       FormBox["500", TraditionalForm]}, {47.952023988006, 
       FormBox["1000", TraditionalForm]}, {71.9400299850075, 
       FormBox["1500", TraditionalForm]}, {95.976011994003, 
       FormBox["2001", TraditionalForm]}}, {{0.0239880059970015, 
       FormBox["1", TraditionalForm]}, {23.964017991004496`, 
       FormBox["500", TraditionalForm]}, {47.952023988006, 
       FormBox["1000", TraditionalForm]}, {71.9400299850075, 
       FormBox["1500", TraditionalForm]}, {95.976011994003, 
       FormBox["2001", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{
  3.865411918422111*^9, {3.865417919328376*^9, 3.865417920724969*^9}, {
   3.865418309310161*^9, 3.865418335967342*^9}, 3.8654185628151207`*^9},
 CellLabel->
  "Out[243]=",ExpressionUUID->"b1bfef2c-d9cc-4241-8401-9e4ed6bc20a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Table"}]], "Input",
 CellChangeTimes->{{3.865411937447259*^9, 3.8654119412092333`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"1c94de40-ff71-4fba-b695-b544b249907a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{17., {5., 12.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{17., {5., 12.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Table",
              ButtonNote->"paclet:ref/Table"],
             "\"paclet:ref/Table\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) copies of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a list of the values of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) when \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) runs from 1 to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\
\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives a nested list. The list \
associated with \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) is \
outermost.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Table", 
                    "paclet:ref/Table", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Table.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Table.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "HoldAll", ",", "Protected", ",", "ReadProtected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Table\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{13., {4., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{19., {6., 13.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{19., {6., 13.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Table",
              ButtonNote->"paclet:ref/Table"],
             "\"paclet:ref/Table\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) copies of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a list of the values of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) when \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) runs from 1 to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\
\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives a nested list. The list \
associated with \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) is \
outermost.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {5., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {5., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) generates a list of \
\!\(\*StyleBox[\"n\", \"TI\"]\) copies of \!\(\*StyleBox[\"expr\", \"TI\"]\). \
\n\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}]}], \"]\"}]\) generates \
a list of the values of \!\(\*StyleBox[\"expr\", \"TI\"]\) when \
\!\(\*StyleBox[\"i\", \"TI\"]\) runs from 1 to \
\!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]\). \n\
\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) starts with \!\(\*RowBox[{StyleBox[\"i\", \"TI\"], \
\"=\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]]}]\). \
\n\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]], \",\", \
StyleBox[\"di\", \"TI\"]}], \"}\"}]}], \"]\"}]\) uses steps \
\!\(\*StyleBox[\"di\", \"TI\"]\). \n\!\(\*RowBox[{\"Table\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"}\"}]}], \"]\"}]\) uses the \
successive values \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]\), \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]\), \[Ellipsis].\n\!\(\*RowBox[{\"Table\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"j\", \"TI\"], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"]\"}]\) gives a nested list. The list associated with \
\!\(\*StyleBox[\"i\", \"TI\"]\) is outermost.", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Table", "Web" -> 
      "http://reference.wolfram.com/language/ref/Table.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {HoldAll, Protected, ReadProtected}, 
    "FullName" -> "System`Table"], False]]], "Output",
 CellChangeTimes->{3.865411941782308*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"cb0fc2b4-83fe-40d4-9cbc-deb2fb3b7b0e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"N", "@", "M"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865412253134474*^9, 3.865412259019137*^9}},
 CellLabel->
  "In[244]:=",ExpressionUUID->"16699bd4-544c-4d28-84af-b359c2e39edd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "@", 
   RowBox[{"M", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", "10"}], ",", 
      RowBox[{"1", ";;", "10"}]}], "]"}], "]"}]}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.865412194256069*^9, 3.865412215805976*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"d78543a5-1ed9-4cd9-9993-30e53680d366"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"182625.4628217816`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`"},
     {
      RowBox[{"-", "2623.380882111822`"}], "181923.21538306156`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`"},
     {"0.`", 
      RowBox[{"-", "2623.380882111822`"}], "181223.0553584034`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`"},
     {"0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "180524.97860679863`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "179828.98099135066`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "179135.05837927497`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "178443.20664189875`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "177753.4216546614`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "177065.69929711398`", 
      RowBox[{"-", "2623.380882111822`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "176380.0354529196`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8654122160165777`*^9, 3.865412261882722*^9, 3.8654179277904577`*^9, 
   3.865418036043001*^9, {3.865418320105496*^9, 3.8654183405338917`*^9}, 
   3.865418459022246*^9, 3.865418570149781*^9},
 CellLabel->
  "Out[245]//MatrixForm=",ExpressionUUID->"facbaf42-94c6-48bd-852c-\
0971f48ac896"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigensystem", "@", "M"}], "//", "Quiet"}]], "Input",
 CellChangeTimes->{{3.8654122950672197`*^9, 3.865412296203314*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"2832556c-2fbb-492a-8785-324ecd34f4d7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "186069.6449815847`", ",", "184264.08707088383`", ",", 
             "182834.70188306563`", ",", "181611.89321113657`", ",", 
             "180531.16584843415`", ",", "179559.94228800992`", ",", 
             "178678.87870109867`", ",", "177873.31971334456`", ",", 
             "177126.77181853703`", ",", 
             TemplateBox[{"1983"},
              "OutputSizeLimit`Skeleton"], ",", "40.729682693829126`", ",", 
             "34.52976104235813`", ",", "28.59429762739848`", ",", 
             "22.95011673987278`", ",", "17.63202625983119`", ",", 
             "12.687531533054475`", ",", "8.187031542611937`", ",", 
             "4.240993111385384`", ",", "1.215585724217334`"}], "}"}], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{80., {3., 10.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{72., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 246, 29175677562456745665, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{81., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 246, 29175677562456745665, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{61., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 246, 29175677562456745665, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{110., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[29175677562456745665 === $SessionID, 
   Out[246], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.865412296653784*^9, 3.8654179332536707`*^9, 
  3.8654180410656652`*^9, 3.865418345092157*^9, 3.865418475392324*^9, 
  3.865418581169784*^9},
 CellLabel->
  "Out[246]=",ExpressionUUID->"441ecbf9-4a18-4b50-bf9e-587cf69673ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.865412483077238*^9, 3.865412513711831*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"4baa605d-f99e-416c-a689-ae19e669f67b"],

Cell[BoxData[
 TemplateBox[{
  "Eigensystem", "arh", 
   "\"Because finding \\!\\(\\*RowBox[{\\\"2001\\\"}]\\) out of the \
\\!\\(\\*RowBox[{\\\"2001\\\"}]\\) eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\\!\\(\\*RowBox[{\\\"Eigensystem\\\"}]\\).\"", 2, 247, 21, 
   29175677562456745665, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8654124999101963`*^9, 3.865412513984161*^9}, 
   3.865417936866255*^9, 3.865418042692342*^9, 3.865418346432743*^9, 
   3.8654184755993843`*^9, 3.865418581281212*^9},
 CellLabel->
  "During evaluation of \
In[247]:=",ExpressionUUID->"59452195-a6ba-41b6-84c5-c8ec14029810"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.0055000000000000005`],
     AbsoluteThickness[1.6], 
    StyleBox[PointBox[CompressedData["
1:eJw813lYjO37BvBsFVlCSKLsIRQhS5yytVESkmJUWkhN+2gz7dM+zdZMQoiS
KIQohCJK4hVRSLZSEkII3/kdXc/v/ec9Pu65nvM+7/t5HIfxjl7WO3srKCg8
UFJQ+L//9/zXseydRpvOqQuKy+kPYGBofRZhjJXh/MLvgHg9Y1WwXplP3j6D
sRoUbXM2yPozVkeNeXXcstZ+ZE0M9hYpXbzPWBtFL8qT4y8wngDOnHzd+YcY
T4Jg6t/1w+IYT0HpyHN7InwZ68B2oM5k3W2Mp2O67S+7AaaMddFnao3lJxPG
s/C9/JZl2VzGesi6aV5zYhxjfajZeubvGcZ4DjK/3co41J/xXNi1DM051tmX
bICBC6u+TXzPeB504h1bil8yng8uZ7Nt013GC3A7nf9w0A3GhpiUJGtTv8B4
IfJtHx3YfpjxIjRb7jyw4P+9GCWHzjtdSGS8BLyJNRFZkYyN8Mv647yxHMZL
catjtX+pG+NluJk8c6DIiTHg/7Rx8iQrMhfQ2D/9hYYls74cJa3pR88sYtaX
w2nsy0y3hcy6MaZpL7CxncKsGyN/xaN9ipOY9RWQ9bn8fvAwZn0FpoabaLoM
YdZXYmxS48baP31ofSWit/La1X+TFVZB9tJdcrKFWV8FNSMt1sd3zPpq1JiO
Opxay6yvxpmbRwbWPmTW18B1dd6e2OvM+hqcHrjwb9VVZt0E34PbvyaeYtZN
8Dx7d9GjXGbdFIOvHJtxRMasm2JqWfykNgmzbgYj5YyBt6OZdTPc3/TKcHgk
s26OMbwDyb+9mXVz+A/V+GjqxaxbwErIObFsG7NugZf9ei3kb2XW1+JY3h8b
oRmzvhafnrqovVvDrK/Dz4h/vO/zmfV12BQ3LtDcgFm3hONnayP3icy6JTyX
/rEt1WbWrTDzX7V76xAyrNBu+ezMykHM763w4qWFYmh37x6XWuE2UvbW/SQr
rIfx1+wB41rIWI+lpT+yg9+RuesRXn7Fs7qWmV+PNyc+G8z6j5m3xsAhntOT
bzDz1jjYz0G94xozb42KwvR5DvnMvDXKlDTNrucx8xvQfXsqb3EGM78Bo4YO
v3FYxsxvgE/M79HT4pj5DXh4WoeTGsPM28Dd7m/T5ABm3gZ56auc+b7MvA0K
n2nU6zsx8zb4fNkm7CCLmd+IwrtGvyysmPmN4E5YcbV4LTO/Eb4amwwDjZj5
jahVVdBsXsTMb4L4nU1SwXRmfhPGfAlJmajDzG9COGfm565RzPwmzN1+StVz
BDO/GZara7da9WPmN+PC2Ni0272Z+c1492VF+YUvvWh+MwZo99bU6yAr2KLf
Ot/Juo1k2MIrWl2S/ZzMtcUim+1+BfeYeVv8lt36M7OSmd+C/rMVc1cUM/Nb
UPB4gPnNImZ+C54buF19m8PMb0Hcq7f+rseZeTvMaIk9IZEw83YITrIL0BAx
83Zw7XZ32hTFzNsh/tmelQ3hzPxWaFmMeDPJh5nfispvU+ryvJj5rfjXJJjY
m8XMb4XfwpRpiQ7MvD2edn0c3b6WmbdHu+5ZvSBzZt4eV7/Mvda8mJm3x4Oo
A28DFjLzDvjl6KfyZRoz74C/E3YgYioz74Bp/a9/76/OzDvg2MghCzNGMPPb
sPzhzL16isz8NlhkFN8u68PMb4OsriZ+Z6cCzW/Du7Ghb35/JitsR2/nGxNP
NJGxHY/neMQubyRzt6OsRXPJ7xpmfjv+HTqaI65m5lk4M/BP5dZrZG0WqjcD
XSXM81iYdyC88u4pMosFk6Adq91PMs9nYausco5JBjmThdEbdc41y5g8Fup1
//78L57cyEK6U1FYAI/J34E5Z5aO9tzL5O/A+3ULDg8LZPJ34OCpQt5INyZ/
B959rBp2ZSeTvwMLnsTh3iYmfwfWrjpa6W/D5O/AD9UPhoJVTP4OlMa+u7lk
BZPviIrdfXbtNGDyHXF/RPnXoXOYfEcIpihWrZ7I5DtCNcxrwzdtJt8RZqcn
bZ4/jMl3xPhQ9fp3Q5h8R/w6IOxj0IvJd8S+3y397v35h558J5wLHS7c10jW
doJQnxPTXE+GEw6oco3PXSWznHBp+jod7ctkrhNU8LpfnwPkTCfkP2iq95WS
S53w49zFe57B5EYn/LfnTOrrACbfGSO8Q+K/b2HynbHh6MJFXhuZfGf8rSvU
TTdk8p0x0/df+UgDJt8ZhrnNWVtGMfnOcFmcMPnZMCbfGR4KWa8Nvv+lfGdo
XHQ3vfSZrLATe2wCn86oJWvvRObfGRMKa8jYCbeQHwFLC8msnTge65p5N5/M
3Ymuk1fyPITkzJ1YPflCYXcyuVRuP9fdF3yY/J1YrnzB0syTyXeBQZnk6Bhr
Jt8FX672dzy3lsl3gUPz51UZ+ky+CzLm2TYsmMnku8AxYeIKw6FMvgvcLljk
PxnI5Lvg9flnCZ86/lC+C4QtkkpBG1nBFaer76reqCFru0JS+2G8exUZrviY
fvJGfgGZ5QrdlwpH7fLIXFfoLF0oKOKTM12Rcke8zDWRXOqK2EUG7AY2ky9f
v7CrOdmDyXdDHXvH2jHrmXw3nJ6yKvmBBZPvhtva8Rr++ky+G8x/to+fPZPJ
d8O35uCKlqFMvhuuecwXZQ9i8t0w4rayyd4v3ZTvhvBx7bWL2skK7pisrhQ/
8T+ytjvMVD4+aa4mwx2+0vX7ms+RWe6YkzI44Uw+meuOZ0631StE5Ex3vN45
p1HEJ5e6o+Gb+Zob/ky+O3Jyl1QIvJn8XSifdvv3401M/i5k140wOGnN5O/C
/UWTpyoaMvm70HU3V+3FXCZ/FyzLNl22HM3k70JVSZvdjBFM/i7UXLc6fu7X
b8rfBanpgx+C72SF3ViTMrBBv4GsvRtz91g3qNWRsRs6LbEWd6+QWbvRO8rz
Z8ElMnc3ZG1lzSGHyJm7oWWuA9f95FL5+qi7h03DmfzdCG2MObwglMn3wBjT
I256Tky+B9RuigdP2M7ke2DpdftZ+quYfA/0+s+ZM2U5k+8B9vhBb8ynMvke
KF6vXLNyIpPvgXiPyiBufybfAzOapIqh/Zj8PRikVPi6uvUX5e9BC2/uoPvv
ydiDlRffD1lQTWbtgWXez0eL7pK5e+B8LKGjqICcuQeX1YZaluaRS/fg7tY7
ATZCcuMeHGk76rE9hazgiWG3q4X9A5h8TzwobRyn7sPke8JsfrVhnS2T74lY
7q9NH2yYfE/obP27qXQxk++JE6E6io8XMPmemGqW/vL6OCbfE588jo+t12Dy
vVAc9OpmQy8m3wvKLoXJP//8pHwvBN4e9U31LZnlhfrXEjP9V2SuF8w8o523
VZAzvZBeJjGOKCOXemG/amCf8pPkRi/0M+vl1pZNVmAj/pzRzZUpZFU2kkbr
5HklkLXZUCmdJX7uQ9Zjg7dkh8JAL2Z/bEzpk7UrZRPZig1HbaVN162Z/bIx
5vRvA7tFZDYbdyWcgynzmf2zkb5J+tZoHJnPxpta9coADaYPG9+/N+5Z1Jtc
wIY3x/JewN8u6seGZTuuWb4j17ChHsaTpDSRG9moVNCpDL1L7mAjzNxA/fot
soI3Lm0eEFl2mqzqjbjc2ytUTpK1vfEqnFU3UUjW80b83eIBnilkeCPDN7tk
fyDZyhuBSN7W4ktmeWNsLGu8rj2Z7Q0tpet6obZkrjf4IUO7HoHM98aWfc98
phmRM73BClo5RzKZXOCNVeydI9vHM/294T6Id91rANPfG7uVPg+sVGT6e2Pu
NK+0HZ9+UH9vDHmqalLaSlbwgYZO6rHdj8iqPtjQaH/pXg1Z2wfCyrjnSZfI
ej7g7PO2/nqeDB+wlvzUqzhItvLBUO6nvvr7ySwfVAyIStWIIrN9YDw85EYM
l8z1weNZ/3VEuZP5Pvj+oDSkcyc50weJyiIoWZILfKB2ZffkIHNyqQ80WRyf
wwbkGh/cNJp9epQ+udEHs1zmczZoMP19cGTyDeV7I5n+vhhWyFsxVoHp74u/
p19OSe/+Tv19oWAx69bft2Q9X4wJXfMrrIkMX9jIPnz+UUm28oVLxhW/4Aoy
yxc17Ogi5bNkti/ORQzgpZwmc33l/x6sVNGXkvm+4A35PblYRM70Rfb4xOfs
MHKBL6wSWfgbRC71xfHzB7QqnMk1vjiQp3rHdge50RcS06c355uTO3yxO/nt
mbtryAp+eFGmWVKiT1b1g/PlK20bZjH9/XBnr9mvLepMfz9oTgrZ3anG9PfD
3cmm7MH/vlF/P9hNV9bO+01m+eHS5z6qz96S2X6wTlvbHdRE5vphgs+uypIq
Mt8PXZlLvrDukDP9EJ7NFl04Ry7ww9yWO18dCsilfhD8HexwO51cI18Pa//i
nUZu9APPynjUp3Byhx/ynmW/yggjK/iD9Vrl/Ex3sqo/dN/9OPNiJ1nbH1N2
eetEWpH1/GH27c3GBWvJ8IdRv1CnTwuY/v5QvLv32nEDpr8/so2NbH20mP7+
GCgqb9TVZPr7w3ZceZeKEtPfH7876k/e6cP094dPb90FJe2d1N8f+W2PhoW2
kkv9kXk7qV/kY3KNP9J63VNa8x+50R+bzw/YxLpK7vDHd/W3IVOLyQoBmBVx
W8PmOFk1AAsTjJ3HHSVrB2CKzcdV25LJegFYrj2kYEYCGQH4VnriTlgA2SoA
F4bstbb0JbMC4FY9S3p+G5kdAJte54zitpK5ATjw5ezR3mvI/AAsG9Tp9HQF
OTMAu9W8X+yczfSXz5cEXlymy/QPwJGEnEUvRzH9AxCmHDa9RI3pHwD38Qdy
PRWY/gFQcjDPX/fnK/UPhFQ1TVuthawaiHaJjuGPt2TtQPRSfJ18/wFZLxBL
+zldPF9Nlv9t/0D74fvMy2SrQLi6W2jFXySzAvHiy6WxvKNkdiBSfixy9Msk
cwMxKLxzQnQimR+IL5vifPziyJmBOLqisSXNn1wQiIVHJMbxPuTSQOyf0uhc
uo1cE4ha11tl57eSGwMxJH5rzN815I5A2OVyW7+vZPpzwDe+Cmt9pj8HLxv1
T6ydxfTnIFDGiSnWYPpzYPPDrOPSKKY/B3Zr/5ku6sv05+DruuXnFvdi+nNg
K6gMrf74hfpzEHM1+c3DD2QuB/HDtqpxnpD5HDQJzgTse0TO5GBr+2yFBdfJ
BRzMT9G1X36VXMrB55KauSonyTUchH6MiVXPITdyEJdYcbhTRO7g4Ok2i9a+
ArLCXrQ2HV/yNYysuhe/VAYFKYaQtfei9Mq/74ruZL29iBc7TBnrQsZeDBDu
vjl7A9lqL5LVnjSZWJFZexG5Pla0x4jpvxfPNEYdiVvE9N8LpR2d9qVTmf57
wT53bdPLSUz/vVA+ajtEZxjTfy/aHQO/mg5h+u9Fh8+2g1ndn6n/XvTVadl1
5ye5cS/2Hy/snvee3LEXj4PL8h3ekBWCUJQ8eGzDA7JqEDjWVwoV75O1g2D2
Y+IXSQlZLwgbxiR6lF0iIwiqOmc8XbLJVkE4cP3jHUkWmRWEr28Cos0EZHYQ
qvOOXgtNIXODEOe5aNqKUDI/CMOu+2JvEDkzCOER5RZWbuSCIFzdrrMsbie5
NAja9u+avDcw/YNw15V/+pQV0z8I5wq9XmQvZfoHYd38feHvFjP9gzGozHDO
l2lM/2B8Pl6VO3cq0z8YisvHPrAawfQPhrfaxrHiYUz/YHTu+HPqpgLTPxgj
t/ysHPC3g/oHY+rzK8VmbWR2MJbcP3hC1ELmBoPdsubj2ydkfjBur599Yk4t
OTMYB5fGzRPfJBcE49QS2ZU3peTSYPwb4Rdrm0+uCYb/nvtPc/PIjcH4NP1f
7ez95I5g3FhxpyNKSlYIwbriyWpjYsmqIag+HPHNJ4qsHYKRvPcGGr5kvRD0
+vj7mR+bjBC8qDWZMXM72SoEnoMXieLtmf4hcNpj/WGDOdNfbt/VaoUmTP8Q
jMsYujN5AdM/BD8GzV732YDpH4JbBtLkholM/xCkbVScZzye6R+C1pTuLUtV
mf4hEK95XXx8ENM/BL/Vz/m5/vxE/UMQdv/GSaNOskIonmkfWLX3IVlV7vDl
bTb3yNqhcB/2b+DZk2S9UMypTNASHicjFO11084MjSZbheJT49cZXfvIrFBM
9Q5Ul24js0OhMaD2R+QWMjcUcR/Mpq0yJPNDkZkpdJ8/l5wZCo6b6l31YeSC
UOwddsB1yCByaShCJxq9GtbWTv1D8aXJtW7we3JjKJJ2WW6ce4vcId/fSd8j
BtfJCmFYm1U9MCiTrBoGXS3TPO5+snYY7KzM298FkfXCEKkU1PDFn4wwSJS3
N+7dSLYKA8wOj06wIrPCEBCRd2eOHpkdBq9mRzPTGWRuGHbwX/KHqpD5YTBQ
8Ng4U5GcGYbOCac0R777SP3DoFntM37BK3JpGMLM/tuA6+SaMAhOzxe7lJAb
w7DScPRYfga5IwxjtbhpxWlkhX3oWma5vR+HrLoPb65pD5nvS9beB82n63pl
biDr7YPqxq9NtevI2IfQzF8t22eTrfZhfkX9z/TpZNY+8LcsVVilQmbvQ+20
24uiFcncffj7afAMy/dt1H8fys6eTBQ1kTP3QWvvrvVhN8kF+3C+nPe44iq5
dB/c59naPTxErtmHCx0u/8bvJzfuw2BBs655CLljHy61b24/FEhW4CJg+ryC
ZluyMhfjTgTEG9uQVbmou8OqzJ1HVudi5cL3l/vrk7W5uOuRtjN1GFlHPv/h
scu3QWQ9LhqMB7tkfGrtsSEXVQtD/Pu1ksHFsoI+hZVVZBO560dWL6wgW3Fh
Z3ltvlYu2Vb+vIufNguOkVlchH1JrZXEkt24mPDZ9tfgSDKbC/6x2sA5O8kc
LpyaTmXks8hc+f7zP/b9YkzmceE5YcMUv6VkPhc7xKuda7XJUi6soy+E2WuS
M7mwGr0ptOHvhx7ncKE5zjLJ7Re5QL6fZfsXKD0nF3Ehw4GF0jpyKRd5FgeD
NhaTK7iYHDl9d+sFcg0X3yo7Zt6Wkeu42Fca199RTG7kojNx5kJ7DrmZi4Oj
N3f/9iV3cOX/fuqKVNtM7uIi7seCGZesyQrhmB7679uneWTlcKwcVB8q0yer
hkOnuCugXY2sHo5zW7rqM1TJ2uFYZp/VPqSzpcc64Uietn7mzU9kvXDczq1c
afMf2TAcG0cXbBl4n4xwCI2X7yg+SzYJx7pRLSac02SrcPQe/mrGKgHZNhyx
O582KSaTWeHov4Of+Nmb7BaOl/tdhxTtIbPDMe+O0e7S9WROOMblRl5IWEvm
huO/5a/yz+iTeeHo92xKafhMMj8cfcaGGJcPJUvDsefBBrX0QeTMcLwaMFrl
9+fmHueEw180cv+jj+SCcOSPqfps/ZBcFI6s2Kgl+tXkUvn+b5x9UXWWXBGO
iT4ljfmnyTXy/dZ+veQmJNeF48e+d15WKeRGuQXXdk/xIzeHw3SlwcNhbHJH
OG4csWzot5HcFY7s4sZP363IChEYMer9V8X5ZOUIbFund6Zbn6wagc3sh+nT
RpHVI1D7kP134nCydgTGHXK9tKfrfY91IvA+5ec1j06yXgQEioqG/z0lG8qf
t2zGi8e1ZETgddjIf1uKySYRMFRlL3e8SLaKQNlmlR+9DpBtI8A5sfjhYBmZ
FYE2O5ZyZRjZLQJrdVX2NgSR2RHIqE4fc55F5kTgv/k7x1Xak7kRWMwxHV1q
TOZF4OC7p7nPlpL5EfhwsO+H1klkaQQs6nsrqYwnZ0Zg7mDPAEMlck4EFiyM
HGPfh1wQgZPq+tnHWt71uCgC2nlKD+69JZdGoDC99865VeSKCLxzX63KqiDX
RGD+n0zpq9PkOnm/ef+uDztJboyAn+Gj6QWp5Gb5ebF+V79NIndE4MHjPX0P
+ZG7ImD8YJD2UzZZIRKlP0wGn95MVo6ERq/hB9s2kFUjkW5tpv98EVk9Em29
P+trLyBrR+LQQtYm3XFknUjsj0or89Ug60XiXUaEy/5eZMNILH/4b+n7P297
jEh4DTpnNv0t2SQSS5/qxge9IltFYkZpd2tdBdk2EhYzZqTMLCezIqGd6jc3
O4/sFglRr6ELFE6Q2ZFIVFw4QMwncyLxctnfXV8SydxIDLPx2XLEj8yLRGWg
plpfbzI/EkrbrAfctyVLI/Gn9eCYeRvJmZHIKVFTHGNEzolEsPDGruiF5IJI
7Lv2d17MeHJRJH5oVn/oHEsujcQl9vZIVUVyRSQWfBkaHdmbXBMJqTTlyaUP
b3pcF4mIxc0T9N+TGyPxofTzmIj75OZIjHpdeOpPJblD3t/wy0L3QnJXJIqk
bwe3FJAVotB7lNIYLxlZOQpGtZ9nfxWTVaOgioIcYRhZPQpzXtj9GhNM1o6C
m2tg1WMnsk4Uwu+c3OzEIutFwUWtw8vQlGwYhUXhe/XvrCIjClXHLoYUzSKb
RMHstqP32hlkqygc3ejfsEmNbBsFh4WqvTpUyawojDJ6xhn+63WP3aJQYmNw
t+A7mR2FXbaHF7e/JHOisCIo4UJKA5kbhQ/xKYPfl5N5UdjypT4/8QaZH4WB
R33r/5wkS6Og8vnboewccmYUQrZNSZwjIOdEYXL6OXZjMrkgCpae8QOiOeSi
KGzu91NlgT+5NAqLgxPxbRu5IgpBxoVbT24l10ThxbSJ6pGryHVRaHR4bmpk
TG6MwgQty+BZuuRm+Xk5B5S26ZA7onCw7xibH8PIXVEY455w4tIQskI0hiXt
T3z+s6nHytHYGDvn09HvZNVofOF8GvyqkawejeyWhOCTz8na0ei/f1l5rwqy
TjRW37tuWFNG1ouGxvOrsmX5ZMNodMUoDx2WR0Y0Tq3MDUiXkE2i8Tz2YDtb
SLaKxoMfJquHhZFto2HgWFXcFkRmRUPFuO3L8Z1kt2iYVr9xjHYks+WWfXKx
XUvmRMMzf2X1IjMyNxpNR4oSp8wj86KhMHpD88A5ZH40Sgwvrhs6liyNRtSG
8P2/R5Mzo+HvuTNNvR85JxovX5k9VOxNLohGlmTN+iUfX/W4KBqpMfMCZ30g
l0ZjrkmbS0gtuSIaY0wf+Pk8JNdE465T2426K+S6aDgEF51/eJncGI11o1st
1x8nN0djwrWUSZZHyR3R8Pko7nqbTO6KRpGKYt77BLJCDFyuZWVLAsnKMRCf
ezQ/w4+sGoP06qdrnFhk9RhM2nUt38OBrB2DpNJeZeamZJ0Y7DcV9dqymqwX
g6vHvypazSEbxuB13YxRO2aTEYPzfVN/e40hm8Tg5FD3+ih1slUMRj8uTzzZ
l2wbg3CXhQvLepFZMXgj4h3r3d7YY7cYKN8RjdFqJbNjcGHZMz3/J2RODNYW
hO4RPyJzYzCbdWt0n+tknryfVi+NqVfJ/BiEDHUyz8slS+XPy50/8FE2OTMG
TYoPCtgick4MRoRjdkYquSAGAYLF86zCyEUx6PQy99wXTC6NQcvJuptmbuQK
+e9bkwtDd5JrYuD/o3kNy5pcF4ORI9Z+lFiSG2PwtOpiHn8JuVl+njce9qlc
SO6IQejS/c/rp5C7YlAcHfh69CSyQixOa3eWLx9KVo7FhrMHAiMHk1Vj8Xm8
/ZGoHy97rB4L0T3nzUO+kLVjgd9htZeryDqx0Jqy9bHFbbJeLNztNnRPPkI2
jEWqwqQV1zLIiEVS4ueP5YFkk1ionXnm5+JDtopF0OnY8PS1ZNtY2DsUGBub
kFmxSCjZknx0ItktFtkD2yKtx5HZsXh15Hpr488XPebEovHihyFpnWRuLG6u
ne1tXUPmxWKkndbVIZVkfiysL+t8/3GcLI3F/F7DXUoOkzNjwVUys34QSs6J
Rb+Xzi8zOOSCWKyJXeXwwoZcFAu23d1eZyzJpbGYWfO6fZwuuUI+P37Isa4p
5JpYaNzv81LQh1wXi4eGIw77/n3e48ZYuDxN77eontwci8RhtffGPyZ3xMLw
WuEitXPkrlh83O/Qp89psgIPa174bhqfQFbmIcD60ehRMWRVHm4bDNXf4URW
58F/k3+LwzayNg83/RqO/LeYrMODY5jQ7Ml8sh4P5aOWRHHUyIY8xO6Sjogc
QoZ83ufUKcuPDT024aGvrO/EHc1kKx7c75b9sL1FtuVhQpCXufd1MouHCteZ
i0WHyG48/I2KdT2XTmbzsOrUCatee8kcHgQWw6ym+pG5PPyYMXxopjWZx4OG
uO151Voynwe7S3Yb2bpkKQ933Ad8ODqVnClfj+Z991Yk5/DQOidwbV4vcgEP
1Xol97Ia63tcxINT1cZXb+vJpTyseKNbqFxMruAhKqMxzOoCuYaHJa7TIg+I
yXXyvJPu/1r55EYe7i1QV3Nik5t5sL1st6RoN7mDhyNHArHFnNwlvx/7eUPO
ryYrxMG7/vmrfVPIynFYP1i4vmk8WTUODSN+Pnjci6weh+eWk58v+/Osx9px
KDqY8sHhOVknDr9KzifcqyPrxeHxt339RlwiG8Yhc+qUBQmFZMRBt7m0+7eI
bBKHoWfZlzh8slUconN35A7zJtvK3ZLdJvYgs+JwpDOu2XYt2S0Oe159z20y
IbPj8EwzKLV6GpkTh4GWh6u3TSZz4zDLIGGfryKZF4e8Y33mDOhN5sfh04TZ
SWteP+2xNA6r5grz37wgZ8qfX94hMisl58Sh0OjF+PZickEcSlX8vEMOkIvi
4Kyd6DRFRi6Nw5nhAX8agsgVcUjf5WCZFECuicN183vDPWzJdXEw/DujdIIN
uTEOa/nuKdPmk5vjoDW7lf9On9whvy9zG/MRauSuOGi/zs6oG0JWiIc0rWDC
7C91PVaOR9BZ3tWuj2TVeJjZF3cE1JDV4/FHufrB6iqydjwm+FXy206TdeJx
d83DMzdyyXrxeFW1/kVKEtkwHife91/kEUdGPJrinxayPMgm8Ric0Wf1Cjey
VTwO6yp3bDMn28bjSoDbmTVryKx4/Dt9YHf8dLJbPKYN7N68dwqZHY85Z/36
vO5P5sTDS5oxoq4fmRsPz0MRQreWJz3mxWPQ5BW3nN6S+fFYfP/JD407ZGk8
tuT3Wa1ZTs6MR0LBoYG/csg58ThlOci71zFyQTxkHdqn+8WRi+KxbkfuxOHR
5NJ4hB29UmTkTq6Ix6STWLR+J7kmHpI9X5WPmJLr4qEftz61eBW5MR6XTm0N
njOd3Cw/z5FB/aynkDvk+8852dY+gNwVj6l2vr5qSmSFBNScLVz4pPVxj5UT
sNtrWFHvZrJqAlbvcF7WWkVWT4D3BZMCzTtk7QSMP1f2bPppsk4Cfv+buNAx
l6yXgInG3c3iFLJhAsJKqmf/l0BGAsq8163R9SabJCBrBt/baw/ZKgGph8b8
99GabJuA2sSq+vmWZFYCDti8cn9mQHZLwDmrfhbT9MnsBDwKXNTyeSSZk4D9
5k8PrR5O5ibAPfzlLIOftT3mJWBKS9/zyd/I/ASsyz+ufrieLJXvl+Xo3quO
nJmAokVRUYZXyTkJ2Nrakn7wMrkgAbeS461+ZZKLEjD015mpLgfIpfLz5X6w
exdJrkjALM9PHzdzyTXy84j5Gt7tQq5LgP7Db5W+TuTGBCh+H561xIzcnAAV
0YLMS6vJHQk4s+jpoeMzyV3y52G16bTpZIVEpI7o2LBoKFk5EfzSh8duDCKr
JmLWs0mHfnQ+6rF6IiZKTomiP5O1E9Fwyon1oo6sk4hSzdud3rVkvUSYVRQF
tJeQDRORfmf2sdhLZCQi9LzV9amHySaJ+G+PevStA2SrRMyRcbTio8m2iVAK
eug7K4LMSkSx70H2iF1kt0SsX1Fjdc2FzE4Ey2296M46MicRT0yP/eaYk7mJ
MOlnvOv4XDIvEU1cRZutemR+InonGT88qU6Wys9HenehywhyZiLylq/Je/rn
vx7nJGK66YdE2S9yQSJKzrjUzX5NLkqETiZ35reX5NJE5Cg+m3+6glyRiG/r
Kn9zysk1iZi58U+2zWlynfy8fk+vm3SS3JiI8E+WAyeKyM2J4AkmHu3ikzsS
sfOS38rRQeSuRPTJsDfqDCArJEE7bI7+AhZZOQn6qYdjRzmQVZMQbuJ3LmQ1
WT0J7wyaHB1XkLWT8LLENK9Fl6yThNsf5xQ8mkbWS8JK//fdocPJhknInXDP
ylOVDPnvt2fHLPz1sMcmSZguGzJl9g+yVRIGa/WfofmKbJsE9uOwoaNekFny
/e45Wzm5guyWBJuI8s7J5WR2Erq4Xmab8skc+X6rCs9szSNzkxDjPzfulITM
S8KCxyunFwnJ/CQkF6rvmhFGlsrPa7QYi4PJmUnQctpx//5Ock4ShtS1PX7j
SC5IwqQHgfvT15KLktCZWHy/0IxcmoS01vaChHnkiiRc2yobdHIOuSYJR89E
fDkyllyXhDuxa3xva5Abk3AkT31FYz9ycxL02gpe9+9D7pB7d2n0ivYHPe5K
gmHgh+U+rWSFZDj8O3eg6jFZORn/5cz1VnhEVk3GUK6tZ/A1snoy3NV+2BSW
kLWT8SBpab1lDlknGR1v79YkHSPrJePrswkVpqlkw2TE7PKuSEwmIxnbLrar
uweRTZIhyHiqdSaQbJWMzkNFZ045kW2TkXZOq/gXi8xKRs2DsoBRa8luyXh5
MSnM3YzMTob3q2iL4/PJnGQM0MhY92cumZuM9o0HRtlpk3nJuLTuy5ALY8n8
ZOwwaSiZM4AsTYa/p2u2UImcmYxcpZXj9TprepyTjKanvX+JP5MLknGxVHG6
9QtyUTIim7rbSurJpclwnsErkVaQK5Khw7m2U/kWuSYZy5dsu9rnHLlOvl7/
zpRTQG5MhnH9+hHCA+TmZORtMN43cD+5IxnZh7Znr+aRu5Ixrv1Ra1k0WSEF
i1OL7Mb5kpVT0Mvosf9hNlk1BVqfbozQ2EZWT8FG7XN9jmwla6fAtlvj2kJT
sk4KbgoGh9xaTdZLgd1DoVGoAdkwBZUhN8oHzyEjBRcXGnLeaJFNUjAtufF2
0FiyVQpM4sw3eamQbVOQPfac+4D+ZFYKFNTFYYvb7/fYLQUbtEImB7eQ2Skw
q6+b97KczEnBlth9G3Wuk7kp4DqsOXLnAJmXgs9Dnedqysj8FAzFUtEvf7I0
BRfmSVI2eZMzUzC5UtzgvY6cI3++6Z9FT0zJBSkY0/eoxeyp5KIUvNj/R/Hg
BHJpCt4+WnhhjgK5IgXlB4LKc39X97gmBdUr81uDn5LrUlA85qnJn0fkxhRE
3Ky/NuAcuTkFcQm9nMWnyR0p+BszVvFlIrkrBZoejh98eGQFPlb9sRN0uZD7
8rHu0pd8sSNZmQ+xdb+Fm5eTB/Kx3c8g7s8SsiofEweNuf9rDFmNj/blC8xz
R5HV+Rh5bfr019/v9ViTD9dx+yv3fyFr89F2f6O26kPyJD4apwkbH9wj6/Ax
etsGXvgpsq48P7GZZXGCrMfH+EW+CxfEkQ34OOj7Z6JKNNmQjzndmSr6O8lL
+EiYUdNr8A4y+PCa5/rEczl5JR+R1n8f2hiRTfgwvvrFv2Ms2YKPa9Mr2C9H
k634+DBh5PXzv6p6bMPHuAFq5099J9vycW/2WuHVJ2R7eb8W76Br/5FZfDQf
LL094DzZmY/9o7Qy1M6Q3fgY0my6KF1A9uBjfv8B3/OSyWw+YuYF3vZgk/34
YG187MzzIHP4qAxLsYhYRw7hw+dhY/lxMzKXD8dKSfYzXXIUH3ufr/ihNI3M
4+PoIeuL/irkRD6CKuufnFQi8/ngi9dt3fChssciPgbEmq8RvCNL+VCa9MrX
9w45g49N9r2mFJeTM/kQSPSaanPIWXzofV+8ccoxco78vg0NeUE8ch4f/slD
Lv4XRS7gQ+38PZMdbuRCPlJsds+66Uwu4mPJ2eNK8SbkEj46B2od6lxJLpU/
L2vbiU4dchkfsrbGj66TyRV87H4dMvxwf3IVH9nnNiiMVSTX8LFcIVg35cPd
Hj/i4+WAQVeGvyfXyb2jsv5qJbmBD+upGSoWFeRGPqbOaOyvd4r8ho/gIv6j
8hPkZvl5ec3JbEomt/FxY1JEr/AEcgcfD4pM4x6zyZ18aI0eFRq6h9wlP7/3
NwtUNpC7+eCyB80ttiQrpOLxLoc+EfPIfVOxmGOsumgOWTkVhS9/ei5UJw9M
Ra+04t6/1MiqqTgz/FST/u87PVZLhb19/s9fP8jqqfDllK3b/YKsmYqB/5Lf
Lqkna6eCpfIg6+118qRUTFyvWnTtKlknFXcunXmSeYysmwpTfUPnyCNkPfnz
TQ/WZ8SRDVJhEL7zRWwM2TAVrffmHH+6h7xE/rwT9pr3dpGRip/ngmdttiav
TMX6CxtGbLAkm6RizJ7ee0YsIFuk4rLqv+ujDchWqSgtf7ZVTZNsk4rqloOa
40eTbVOh+aXg+4ZeZPtUaGwZNN79b0WPWanov61u0aN3ZOdULF9+r+rza7Jb
Kt6s3TpVXEX2SMUtRQ2t4jtkdioWbFe5IjlL9kvFCJ0u9fJ8MicV8T8Ff+uk
5BD5ed1efWWIhMxNxYDrsR1b95GjUpFm+FB1fwiZlwqHcWEyLRdyYip8jrlq
uDqR+alo6Bjbe9JasigVMS9bmnzNyNJULIwwnOduQM5IxUh/V//r+uTMVCjX
vlz2aQw5S35+E+e8tBxNzknFR/d9+hf6kPNS0V32Y7ZWL3JBKkanfx9ztfV2
jwtTMf9hw97ZLeSiVBTnFA5XekQuSYVnlvQB9wG5NBXSgsezU0vIZfLzEArX
Db9MrkjFE8maePtj5KpUOGoqqbw/Qq5JRZBe0zL3ZPKjVKSv0p7UnUCuS8X7
KjH7YiC5IRXXnCddtvYnN6Yi3CFp2Zod5DepuJIk7fiwjdyciuucLf+pm5Pb
5O/Tq93tZSbkDvn5ho3dpDuP3JkKxT6TXzTOIXelImJa6bdwLXJ3Kr4pD29f
OpasIMC/D1pvRg8g9xXAdn6E1UslsrIAp93MN3d23urxQAFmt3YuvvGFrCrA
N9HVuKGNZDUBehvsaH3/nKwuwIy6rMvelWRNAdbu9T1odYesLcD+p9qzRlwk
TxLgfsNjWXchWUeAXrz0md1HyLoC5L+LnNqWSdYTIG6UmvLUFLKBAHcXjUzT
SiIbCmBaHjNMEkxeIsBxnelL0/aSIYDVOpMcUzfySgF2Kt3kbHAhmwgwVzdo
hvFGsoUA43yLT9hsIFsJcPthZD+uMdlGAOlJLN4Psq0AT+xl2X30yPYCbIi1
OzR1FpklQLWVVcK9sWRnAZ6dCLf6NYbsJkDCnpVzX6iQPQSo6Vz1cPgAMluA
rrLqGfN/lffYTwDlCKWzfl1kjgDCBw9UHjeTQwQwe1EWO/Y9mSvAxTMH/K8+
IUcJwC7p9WPwYzJPgD1rO0Z13CInCrD+251803IyX4CpLSPyd18gi+Tvk3ut
V3UhWSo/D8FsxTnHyRkCnFr7sM/BLHKmAG6/jnWtkJCzBDgc22BySUTOEeDM
1RrfIzHkPAE+bpo+a3w0uUCAh3/rOesCyYXy+0LXhcf+5CIBDNy7xpm6kUsE
mH+utPuZC7lUgFm/34iFW8hlAlz7VK0/25ZcIcC5zLc6s83JVQJMuYasR6bk
GgHsNJcZjzUiPxJgemfK9arF5DoBYg5t9to+m9wgQFHNTY3Rs8iNAvT/kbXz
x3jyGwFqZ/u5F2uTmwV4vfSg8ns1cpu8/9Va8fnh5A4Bdm34ydZTJncK4MIa
fbW/ErlLgHuLJN9qf5f1uFt+P8cil13+RVYQgiPOnP/sE7mvED8dK67faScr
C/HDJXsG3pAHCqGexF61+DVZVQiu2/V5Kk/JakL5++8+f1gdWV2IdyO3LlhW
TdYU4rv9rijre2RtIeavmVrYeJM8SYh8k5KbCox1hHCpHPen8xJZV4hUS67d
BMZ6QkSwh3hFFJANhHhQOu/6lXyyoRDeZsPu87PJS4TYqeHa9Ow4GUIskfZ9
Nu0QeaUQKavP50ceJJsIceTaMX27NLKFECc8PEaXS8hWQpy08FKayyfbCHFR
d8X9ghSyrRBLd/0NvxdHthfiMMu7nsWYJUQ/vUczN0SRneV9Uk2uKDB2E8JN
QfX1WC7ZQ4ikPJfsT/vIbCFuRawyswgj+8nPN+NsuH0omSPEPg+VtaNDyCFC
LC6/YisOInOF6DuhO76ZQ44SwjnH6rV6IJknxArVm3+m+ZMThfikeuDTOF8y
X4hRRr5av9hkkRBZnud8r3iSpUJ8/nMmeJcHOUOIiVp/YnrvImcKkVhtXxjj
Ss4SomSbc/cPZ3KOEOVxYxZudiTnCeEbe2rGse3kAvl+VC5zm+zJhUJs3Hjq
vyF25CIh1t5wPDNzM7lEiDYHpC+xIZfK3y+Ntj5G68llQhxbc9Zu9jpyhRCr
4073VjMnVwnl/z4ts21dQ64R4mmM17nzK8mPhJAN4Dj5LifXCdEcxiuctJTc
IISK8dmPdxaRG4X49uPFeqcF5DdCHJfO1f48l9wshMMsV5GvHrlNiDVTh7z/
oEvuEKLpVtPazdPInUIM+/v9d9FkcpcQYy99Ha86gfn+5ecXs6Ldfhzz/YsQ
bLM06ZAG8/2LsPy95bS6kcz3L8KuZI1WxeHM9y/CuRTJzxlDmO9fhGMnZgWt
UWG+fxGG9X3G36LEfP8ibKqby3Lsw3z/IrgPTe3v+O9mj7Xl+WPUTtn+Jk8S
oWj4NffVP8g6IjyOiHKY8ZWsK8LJ25uOKX0i64nw0nq+Q/0HsoEIF2uWZh5/
RzYU4bLdOZ57E3mJCGMq+utNekGGCDP0v51+/JS8UoQJRV5jw2vJJiIYZ98U
THxAthBh0lfh5KtVZCsR+s5602pVQbYRye9T63f9TbKtCCnfx7ttv0a2F0Hq
sGhN/WUySwS/ofPyLC+QnUUYuXt7bskZspsIp7KSbCacInuIwP2mdYWbQ2aL
UO+o9P3JUbKfCHHmd1V1DpE5IuSf5Y3zTieHiCBbp6B3TkzmipCxnb+xnU+O
EqHC2ujQhEQyT4Q/cws1rWLJiSLwvqx9HhBB5ouwIHhYhySULBLhTG6xUwGH
LBUhVKNo9U1fcoYImpUzs+97kjNFsD3VLah1J2fJ72/g9VG1zuQcEfo/rzWu
3k7OE+Fw26bx1+3IBSJ87Z5QemojuVCE7hvPZ4isyEUi1NZ8ZvuZk0tEuOcu
2L9uNblUBC3jKxcnLCeXyfc7Y8mDjsXkChEc849/LZpPrpK/D1Kn6cH65BoR
HHblchfokh+JoHcvqlf7FHKdCMve3b94cDy5QYRfx4xOm2qSG0UIUtr0qX0k
+Y0Ip1dwopOHkpvl99dVH6QzkNwmwvlVgqcliuQOEdY2xJw070XuFGGzUviv
R79v9LhLvp+cSTW238nd8vue/nXekw6yghh3vSzmWbWS+4rxusDryc23ZGUx
YreETJ7TSB4ohviZj87+Z2RVMVL857X8fURWE+O3Qhzb4T5ZXYz+x0fcvnCH
rCnGtTTXbwPKyNpiDC771MfuKnmSGO1hfX8fLSLriPFmalNT81myrhiqd0/e
1DlF1hNj3MXdx5yyyQZizBirxpcdJhuK8TltX8Ld/eQlYmy94n3ou5gMMc4f
S/tvLJ+8UoxsL95sxJNNxNAoLb/sEEW2EGPF0pKQgDCylRitKmUh8RyyjRjq
i8bfkPmQbcVYu6ivTZYH2V6MnRbxC3NdyCwxTFqu7D3JIjuLwZ2eNibHjuwm
xrNZ3ZMzbcgeYkwOuX5IuI7MFsNgW25KhAnZT4x5K9y7PYzJHDF8RmS2WS8h
h4iRKWh0MZhP5opRkZnnPVSPHCVGU2bA8A/TyDwx5l47bH11IjlRjPjlEfOS
x5L5Ynj953BjyyiySIxlNbv/aQ8lS8VgJ9R+eT2AnCFGo+TCkSN9yZliuCqN
HeHw93qPs8TYf7G/1fAuco78fHnsLeWfyXliqB01XODbSi4Qo9fZJZ8035IL
xdCeYB574wW5SAzjrVP6OdeRS+S//xXl2eshuVSMcqVhd9IryWViBOrv0dAr
J1eI8bR7utv1q+QqMY52P7q4rohcI4Zjnw+D686QH4kxYeMLH4eT5Doxup+M
aXmRRW4Qw39F70D7g+RGMWrXvR//OI38RozdL0Z+Mk8lN4txY/Z/r6/Ek9vE
aOm7sZ9uFLlDjIvVlbaSUHKn/Ht47PC6O4DcJd+vs07udja5W37+rcvOXnUn
K0iwWLdAQcOJ3FeC63Yh6d72ZGUJpq8+FFW+kTxQAu1glbIRlmRVCYpdTzo4
mpDVJFgUtmPTyeVkdQkGblY+17GIrCnBmIc+nDkGZG0J9izwOMmeSZ4kX99c
ZHVyCllHgrSc4XuatMi6Eji5z+03cjRZT4LhxeVjVw8jG0hQVepd7KNCNpRA
o+RJ0/6+5CUSrJqWKr3+p7THkO+vXu/V6+/klRI8G7Hieu8OsokEgblrjca1
kC0k0FOt2TK/iWwlQUzYijHm9WQbCewUx8TYPyLbSnA09+bBXffI9hKc4mS5
+98isyRoOjSuNeQa2Vl+3nFJU8OLyG4SVH9cPTHiDNlDgj7t6U37cslsCbqn
PHIPOkr2kyCzYsEV7wwyR4Inuf1e7RSTQyTgOHKebkomcyWo21ieuzKWHCXB
3xrNLbO5ZJ68/+jc5pF7yYny34cLHX57k/kStIT8Km7YRRZJ4FvwW6nYiSyV
oFIpf5XEnpwhwb/yqXs9N5IzJbiS5nd8xTpylgTNWYcejFhDzpHg7eHTf98s
I+dJcKDxiP4ZQ3KBBEY79noG6ZMLJTjeNP0SppOLJDj05eSIvhPJJRLc/tMW
WzaGXCrB0u3PhkeokcskGMG2v7JkELlCgmDJZl5nP3KVBFtP2H62/nOtxzUS
bMv3nHSxnfxIggSVo2dGNJLr5O/36MxMzwfkBgnyXir/vH6D3ChBwYy9N4YU
kt/I37+86L62x8jNEjgMKbmVLiG3SZA98qhqXSy5QwLXi5dbhuwld0owTz9k
i/Eucpf8vqbauXptJXdLMKukVCPNgqyQhrNZI4IvGZH7yr2qKOXxLLJyGqbf
6cVq1yIPTMPS+au+Kgwlq6aBzbtvNbg3WS0Nvrfe7xv59WqP1dNwRf1+7Og3
ZM00FL0s9RpVS9ZOw/k7X5aq3iJPSkNMs6i7z0WyThqe3nqQ/yWbrJsGo9Dq
7Q1Ssl4aPtzKHX49jmyQhmUjwx9mBpEN0/Azx+Vo8G7ykjRMzdidtN6ejDS8
+peeNmEteWUaLn74VdFuRDZJw9vERJ0Ls8gWaTBbYXGFo0W2SoNGrn7yfFWy
TRpY+bOPfFIg26Zh0TEDhazPV3psn4bmDdPzNzSRWWkQqHw///ch2Vm+fp4z
5thNslsaot4nv1tdSPZIw/DPquPeZJHZabDqeFgRIib7paG6MeujagyZk4b4
PGthZgA5JA3mS7JKZ7iSuWl4EesQcnYzOSoNw44vvWdgQualQdjQ5/JZQ3Ki
3Pk7TXWnkflpWP1ZPeLwaLIoDQYPqncNG0CWpsG+1WDAvl8lPc5Iw8LN31ze
fyBnpiHxwoVY83pyVhqGrNT0PVlJzpHf36vy2Uol5Lw0bNKxKtuWRy5Iwwpf
mwVnM8iFaejz2S2lVxK5KA3v87X/swgll6RBK0+lv2gPuVS+v+cXFjxxIJel
YcvKvJ0j15Er5O97l49s/VJyVRoa56Y85c0i16ShxTFCt2Qc+VEaHs6qlLYO
JtfJ7yPh7aRR/4p73JCGlHKzJ0s/kRvl953gfcHxJflNGmz/3auIuE9uTkPo
lQdqh66R2+Tv18fWzIv55I40nDSP8606RO5Mw635asLnKeSuNDy63NmvdR+5
Ow0HD/AfdnqRFaTYusv836/t5L5SuIbGCP5YkpWleDHksKB7GXmgFNoruvp1
zSarSmGk+/7LJy2ymhQWL29tfzOErC7FiaB269p/l3usKcW4Oece3vhE1pai
a4vb27yX5ElS9PHZniq8T9aRIlivuSHgGllXivpEq+pN+WQ9KbLuvtk99xDZ
QIq+UZ+KB6aQDaXYV3iprCmMvESKPTfjE897kiFFZHLO6Oht5JXy/flt9lm/
jmwiRYHDswyNpWQLKX7d8TnUOJNsJcXqJyzu0bFkGynC1r5e5TSIbCuFVc6C
71p/LvXYXopJ49PTnraRWfLzvLRKj99Adpai3wq/WyuqyG5S9N+zjdVZTPaQ
Ivvu4r5HTpLZUti9MC6y2E/2k8J84omIzngyR4rukUfdZUHkECkeGTv7Lt5F
5kpxcZXW8WdbyFFScJ73Uw40JfOk2NRhckh1ITlRih0SdZ9sHTJfioYJWTGL
1ckiKWJnaryuUiJLpfi8Pydp64+iHmfIzzM3JPH9O3KmFPu/33jLfkzOkqIz
OvvQj3JyjhRJDzaWBp8n50nReK9r7Z8scoH8vjovrwsRkQulMDa/VdEVSS6S
QsV75Q0fX3KJFB1Hti3/4EgulWLmbSOL7dbkMin4/gNaHiwnV0jhofBxrLE+
uUp+v6GDPudrk2ukKKoWuo1RJT+SYurJ7Piofxd7XCdFbjbbobWd3CDF7WUj
31u+IDdK4fXi2syz98hvpDj7TrRg2BVysxQxJSUD2HnkNil87m07Vbmf3CHF
KtmRyZMTyJ1SXLicvzckiNwlxYyOU/kP3MndUiyfVH5v0hayggzhAWOf+ZuQ
+8rwZ8XLZ2ULyMoytM+e+3joVPJAGdbpGj+0H0lWlSEkYl7tsX5kNRkq6ue/
beu80GN1GdTM2Mpz3pA1ZXCxGrjK/z+ytgxhrfMOX7hBniTDrnT1id/PkHVk
0HRtrJl7mKwrQ3f7pQIvPllPnr/7YcWJfWQDGQoub9Zq8iQbylDvyrmsvo28
RIZBhU6Za9eSIcOFg6ZPuEvIK2UwarfbeXYG2USGDMM7Vk0aZAsZfrfeOqQ6
gGwlg9nmWFujn+d7bCPDu7NLw92aybYyLJw2QVvwhGwvg8NL18WXb5FZMtz6
s/pp43myswxfi37863eM7CbDULtz56eJyB4yFK0pVLCIJLPl+xs8/72HD9lP
Bstd/l6JO8gcGbrWFhzKtSKHyKD1cXLY7WVkrgw+ZSOHvp5FjpJBdqRs25+x
ZJ4Mfc747Bk5iJwow52QnStmdRf2mC9D3L+mdytbySKZ/O+7OdvsnpGlMkQ5
H8j3vEPOkOFFzp5X4UXkTBmcgj79FGaTs+QOZP/LkpBzZEhqXNZVGE3Ok+HX
4dMfbvqRC2SwsB/y/IETuVCGB3su1L6wJhfJkP/757MPy8klMoz5rf/1mx65
VAbJoqJJCtrkMvl97W727z+EXCHvP13749C/53pcJcOi/tf4oz+Sa2S4L5vi
qt1AfiRDrd/lgCmV5DoZfq5sLJ9xmdwgf/9q/tnpnSA3ynBQIXKJgZT8Rgbh
p1r2glhyswxPPrr8XRhAbpPvP/l46+Kd5A75708rLTOyIXfKUBXx76/RCnKX
DIID/eYsnUPuln8Pv4QvjMaTFdJxs/9UFSNVct90HLxgdHXxv7M9Vk7HIP8t
fxe2kwemY7rZ3wcLnpNV5fOPzy6bV0VWS8fhHQrr5hST1dPx9pVPn9m5ZM10
sPvLXGbIyNrp2GHZN2wqjzwpHQd+mVhNDCTrpMNX9+/rcS5k3XRYtF5ZprGR
rJcOt5mTd41YSTZIR8nr/9xV55IN01HXd88qlQnkJel4lSbpoziUjHQcu/Yz
V0GBvDId/2uZ7uNqPvs4gEcZtZa0NkWsKDtRJJlTwieSEEJuIWRCVihqpTWL
QhJKUX5Pp1R6Vix3qUYUK6JQhEwoqnloakrLun/36/r++X5d1+9c34fPKbs2
e/Y/b88xO3O4b2ZS+/cTsguHpsR5azqqya4cThj7treXkN04PNVzjmjJIrtz
CDRLnNR0iuzBIXS3UeejSLInh4XpifX1QWQvDjNu3HtSu5nszSE3OlGvegXZ
l8P7KRdCfnck+3GIzPnHqHwKOYCD80kHtctjyMEcKlw9J5QMI4dyODd4alqh
GjmMQ8DlpICCd/nMERxqNkQmnfuDHCnn4UbdpLxb5Gh5vnU7zXNLyTEc/t28
PD47mxzPYdlen6AsjpzIoXN+wcPMQ2SBw80RE65mBpOTODw/emda1hZyKodP
x3Idsv9DzuDg5lX1MmcuOYfDjtIpE/NsyPkcRl/pH31+LLlAzp/J3LILeuQi
Do0mxobFA8ilHGKWbtyw51kec5n8njjTKOoyuYJD8aNx/gkiuZJD9cqQ7Wd+
Ildz8DFJHlO4ilwr9zv6C6FqGrmOw/yJdm1PviI3cNCff9agq/MscyOHLPGj
UvsuuUnO27n/uo/LJzfL+9kbdWD2UXIrh1+TTO94+pJfc9i2ata8vQvIHRza
b6u6UxTkLg71o77+q/Izcg8H6z0/z+5ozmXu47B2U2mvYTlZjYdfRoXCKZms
wcNAFfc44BfyEB6XnKzHnFlL1uZhtvnC54+mk3V5bDk3I113BFmfx8a33eoL
enKYDXjEGY6afOA+2YjHisPvZ1wrIBvzSBl1w3ZwHNmUh3LZQBsXf7KCh+3u
z+zjl5AteKBh8YanlmQrHj13PH+11Cbb8BitU+PwS3s2s5KH3mlbo7pKsj2P
J7aLl1mkk8HjqkNl58H9ZEcezrr+uq82kp3l+7rGRfNnk114dL4t7s0zJrvy
uHhlaqthfxazG4/lyriYg0/I7jzOX29W/1hC9uDRf3fBsu0c2ZPHyRddh18F
k714pN4yueK1kuzNw6v5m4Evp5J95X4Vi9b76JP9eLSEDG/rep/JHMBjZlVf
3r475GAegY6HK/TzyaE8GmI2TMs+Sg7jUflxoqHTNnIEj/i0X0NaFpIjeZjf
KPM9NJ4czWPNc6WatSY5hscXzUOdnr7KYI7noRO0cEnsdXIij0ILdUvnNLLA
w7/Is0M9gpzE45kiKavie3Iqj2FjdLdFOZAzeLgb6M1fYUzOkeuJHuFq1p/O
nC/vz+lcXO8TcgGP0gR/s/pSchGP43Fawy/w5FIemstnhXAh5DIe3JRXnvtX
kSt43DR42xioJFfyiD3rpuY7nFzN42yO1ZMtH84w18p5G5m7f2s9uU5+L0FL
27+A3MBDXVDt2xNHbuSx+nrDP7E7yU085prYRmUvJTfzGLt9NW5akVt5WPu9
sfprKPk1j6fK4u2j3qUxd/BYF5ik7Xqb3MVj328Jow7lknvkfb/IK6iMJvfx
+GbesBYdX7KagMFmn66sWUjWELDp7a11eePJQwSUCN23NbXI2gJmaQ4Z59OW
yqwrYOnc9KB7lWR9AYFdCQ9mZ5ANBDxKL1x18SDZSMDW6f3Dpm0hGwvYZxOu
X+pENhXgMiYg0HkcWSHgt/7R8xsHkS0ErEt4kxLUksJsJaC6dTM34hrZRoB2
zCSHa6lkpYCiiVq5QRFkewE6Dx68n+xFhoD3wYnfds0hOwp44+rjeWks2VmA
xapj52PUyS4C0ko3TvF5cZrZVa7XxbtnUTnZTUD4hxnDbVPI7gKuIj3NIpzs
ISC2PPKiYiPZU8DdjDZvyzlkLwF7LLqq7MaSvQU0fPPhvas62VeA6Y4NvTte
JDP7CejPrP6QUE4OkOdztPPfyhRysIB5JwvN1SPIofJ5pPFRJy9ymHz++do5
cY7kCAFf2Zd7tpmSIwUI8+58ch5EjhagPnii9fmWJOYYAT+qMr8yu06OF2Bk
NrMs+Qw5UcBuB90FioNkQc7Pkx03i7aQkwSk32rwWO5MThUQvL/z6x4FOUNA
bdUJvXRNco6An+sP3CmrUzHn/z8fazc5nyQXCBiyLPDLlpXkIgEjz/ylk2BI
LhWgGLj68LrHEnOZ3I/NqdLpIrlCgFdg//2J68mVAlIMHYcqTcjV8v25B7mV
L0TmWgHducvPHkkj1wlI9k4Ke7SF3CDgcendeTPHkxsF6A4us7v4WmBuEuCU
mhezMI/cLCCvzWPv3/7kVvn/qfjoWGhDlr+bVWKpH9vNM3cIyBw3WhFeTO4S
MG3mD8VHfib3CNBbazXoHMh9Avoyh855o05WE6H1w/i82b9zzBoiejco9p+L
Ig8RUepkO8BuMVlbROGM4Z6Nw8i6Iky3aT5NrD/FrC9ivPiyZMcpsoEI+/bh
UzesJRuJWHKIP7TNhGwsIkAa/DG+JZHZVMSRcUfKH2SSFSLSunrNv9tOtpDf
Ly/blm9NthLx09r3tU7dCcw2IoY9WHDyYwlZKULRPGlAVRjZXsQJhwsrLswl
Q8QoZVLDJS2yo4gZSp+alpqTzM4iPh6bHzb+BNlFRNz0CdZHVpNd5f7vllno
GJPd5N879ktRbssJZncRD3anjfbNJnuIsMuZkTnfn+wp4uJF0xSnaWQvEfen
feG+8VM8s7eI3Vsj9JPKyb4i9ut0m306RPYT0eH+30chruQAEZqan/YaDicH
i1h2vsvn4ZM45lARyeNL2opTyWEiFpl5L7rkQ44Qoden1/7CmhwpIjW94UuL
3uPM0fI82p59k3CFHCNias5WL7ND5HgRquPlygeu5EQ5P5Xf/51jQBZEjBvy
rPNMUyxzkrzvxkHHrmWQU0WkfHt7jKY/OUNE9atd2jttyTki9jr+mKU2kJwv
4vSLZI8LN2KYC0R0RxlGxMSRi0T4D1sfftyDXCriVYrHpRIzcpmIFVcbbQz/
OMZcIWJLSkOflj+5UvaerWmLNMjVIpKebRv4POEoc62I4uS+9soJ5DoRjwaG
2qqXHWFuELH4xsWbsW7kRhEPHTXCA9uimZtEtC5ydMzbQ26W87TJoGeWPrlV
xIGmjihF1mHm1yK0F1i+2Qpyh4hPPXZfDnoQxdwlYkRPwd+928g9In5fsD/W
ZRC5T0R96uDWXuEQs5qE7EzL/s+mkjUk2FalPvO/Fck8RMKSu58k+81kbQlz
3O4v9O4/yKwroaFdfeCHRLK+hJHHrzS9tCYbSIgxeaptf+sAs5GEZN3O/A9b
yMYSKjKOfhquTjaVcLA6wDxZ2s+skDBozz3/ODuyhYTPl4WN6LgfwWwlIW+A
cnvRLrKNhMlLnl16o0tWSrAMvrcp9mw4s72E0F3GFakuZEjYO/PFbPM/9zE7
Srgafny5cRTZWUJc+0q/w+ZkFwlrtvga+VbtZXaV4PTn7ubyrWQ3CWsfD1wf
r0V2l+BWVmPxNDuM2UM+z974MW0R2VOCmP/uQ93TX5i9JLQ4/tvuYUb2luD6
bKPvK589zL4STAQn6+Bff2b2k2D/9rLOl32hzAESFvtZdZTMJQfL8zTNfv5j
zE/MoRKG+oYMc24MYQ6T8JnGlcop5uQICZeybINmBu1mjpTQvMYg3/d6MHO0
hIs+upblX5NjJDyfGF7r5B3EHC8ha+nj9L7iH5kTJbw7YPi2TYcsSLC7m6Cj
7xXInCTf/14zI6w4gDlVQkf5b8em6pEz5H2MnFSv9NnFnCOhZk7ztZhrO5nz
JaQ/yv9rjgm5QMLD9nWTVu3xZy6SUHC8JvlBox9zqbxv5enfrtuTyyQsvNoq
edjvYK6QMC9OGmQ5cDtzpVz/yKJ7Q2/6MldLSLHs/nx4gg9zrQTl46rTKzb/
wFwnIXXTy7inyq3MDfJ+pmT2Vul4MzdK2HEn23JC62bmJgl1LmZ/jLi2iblZ
zoNWxfTzaV7MrRK+q344SjtqI/NrCR93vrSeu/N75g4J0UvvTAtdt4G5S0L4
zWDl3cWezD3yfO55F9YfWMfcJ8FBQ/2nh8EezGoq1DRVX1APWM2socKRr3cr
8oPdmYeokDRxReKcg/9h1lbhh9sVKy2T3Jh1VQhpGja5rXwZs74K294uqR/Q
6cpsoMKtihg1hcdiZiMVxo29Y5P25wJmYxWcRt6MNTg5j9lUhUF2X83cvNaR
WaFCWU3h1Jo5DswWKiytyHwxNtGe2UqFy2OuPbTr/I7ZRoUJVvq7q5MnMytV
MGrSG6Phac5sL9efa3nq6npjZqhwsuFdy/UPusyOKoR1T9LQ2tU563842tPL

      "]],
     FontFamily->"Arial"]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 2001.}, {0, 186069.6449815847}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.865412499919272*^9, 3.865412516583048*^9}, 
   3.865417936908535*^9, 3.865418042733584*^9, 3.865418346463285*^9, 
   3.865418476061956*^9, 3.8654185819227667`*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"d95ebae8-e4a9-4f51-95ec-6a5b20d5826e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"es", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Eigensystem", "[", "M", "]"}], "//", "Transpose"}], "//", 
       "Sort"}], "//", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "10"}], "]"}], "]"}], "&"}]}], "//", 
     "Transpose"}], "//", "Quiet"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8654126511839027`*^9, 3.865412781502482*^9}, {
  3.8654130006882668`*^9, 3.8654130019843073`*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"5a9e7e78-4b85-42bd-98bb-5639449c71de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"es", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.865412786037085*^9, 3.8654127893742847`*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"857e77c9-b160-42b6-a6d6-539ab92a7c02"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.215585724217334`", ",", "4.240993111385384`", ",", "8.187031542611937`", 
   ",", "12.687531533054475`", ",", "17.63202625983119`", ",", 
   "22.95011673987278`", ",", "28.59429762739848`", ",", "34.52976104235813`",
    ",", "40.729682693829126`", ",", "47.172624801800836`"}], "}"}]], "Output",
 CellChangeTimes->{3.86541279010159*^9, 3.865413005931826*^9, 
  3.86541795836368*^9, 3.865418046097472*^9, 3.865418349589469*^9, 
  3.865418487427959*^9, 3.865418586681953*^9},
 CellLabel->
  "Out[249]=",ExpressionUUID->"0f140217-fcd5-45c7-ad17-bb3745d1ed51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"es", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.8654130245163794`*^9, 3.865413030691194*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"1eadbab3-151d-420f-8c81-2b22236694d4"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    StyleBox[
     PointBox[{{1., 0.28429415632440985`}, {2., 0.9102888036386949}, {3., 
      1.6415252801642688`}, {4., 2.4498440053979897`}, {5., 
      3.3213225850072585`}, {6., 4.247121823115208}, {7., 
      5.221015085872336}, {8., 6.238325086064666}, {9., 7.295381384261223}, {
      10., 8.389210379119456}}],
     FontFamily->"Arial"]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10.}, {0, 8.389210379119456}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.865418488749592*^9},
 CellLabel->
  "Out[226]=",ExpressionUUID->"8307f907-0c70-42c0-9b8e-a9b29736318e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"es", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}], "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.865412791683913*^9, 3.8654127939664297`*^9}, {
  3.865412865184679*^9, 3.865412871505904*^9}, {3.865412953746071*^9, 
  3.865412957343277*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"bb0f3bed-c7c0-492b-8c23-067e06ebd006"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
    AbsoluteThickness[1.6], 
    StyleBox[PointBox[CompressedData["
1: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
9UXPrd4+VmO4cBdGH2jJlMhZynDlLtRGL/gkcUyD4epdkAnp/a65Xpvy7wK+
HIi3CllJ+Xdh8qbYopf79Sn/Ljzo+xIyYrsh5Y8FLzpqa0X+GoalYzEvdI1Y
67r1dD9i0f1Xo7471Yxh+VhwWjYr+SyzpPsTi88jbk21lNjEsEos8vTqsxpW
2tD9ikV1hl5AcJ89w5qi18t0+Zj2nxPdv1hM5T4/FpTlzLBxLJoFegcS7N3o
fsZi7yxXtxaOJ8M2sRg6XL3J0cCb7m8sOg1UpqTr+jHsGQs9X+nZ00sD6H6L
8hgr/ejaEcxwWCy+Z4TdMueH0f2PxZXldW2BS6IYTo1Fbd02u9K5seQjFht2
rDg7NCmeYWEsWkbpnM9ZlkR+RD/PgnO/3hmlMlwaixiZLe+16zLIVyxutCfN
c6jJYbgqFuW/B53HzOGQv1is2WArq3uBx/CNWEg92TrNpzyXfMbiWeeg4jnx
fIZbY/HQuUK2+u5e8huLW/pJ2/xyihjuisUcJbeoZeLF5DsWSS1+zj43DzHc
L/r5Dl3vG9dbRv7jcGzzpMjw+CPkPw6HO7bqob6S/MehXZp36tnYk+Q/Dnmb
wtRby06T/zjoxRpO+iusIv9xOP3w/BibdxfIfxyOl59u0T18hfzHwfvwZw/D
r1fJfxzGfdeMcdhcS/7jsC/PZbv8iHryHwfbuofl8yfeIv9xCG+4KxOUcIf8
x6GzYUpXemUj+Y9D6S2/y41P75P/OOzawDOaZvGQ/MfBYMuo5W/HtZL/OKzT
yZuap/qE/Meh1UKj5UzpM/Ifh8/Fvf6Ra1+Q/ziM3nDZZ0nUK/Ifhz+67xdd
+/qa/MfhYbfzE/2qLvIfh4HtoZsP339P/kX388Wv7/0mn8h/HC7kfb43I+8z
+Y/D764RzX71X8l/HHwrOVY6mt/JfxzWmh0znvK1n/zHQTneYF+A2CD5j0N6
ZuYv/va/5D8O4mUx17wKhqxk/MehR+pj9t2LQxkWi4fZN+2+NQqSDEvHY/jd
Hc8eXJVmWDYe50Y8q5p/eiTD8qJ/Lzlfo/XPaIaV4vF9z+D7GVZjGVaJx6T3
6459cBjPsFo8dkdOn522fyLDmvF4t+rsHWMVeYYRj43bVsXN/j6FYeN4yKPX
9s74aQybxyP/onTy41olhm3ioTk/yo1fOYNhp3gcYSfuXHZ/FsOe8ch5OeaX
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
j9y4ReZunNb/AMqwzb8=
      "]],
     FontFamily->"Arial"]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 2001.}, {0, 0.029070629432404307`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8654127941944323`*^9, 3.865412872232629*^9, {3.865412954464182*^9, 
   3.865412957847583*^9}, 3.865413007583696*^9, 3.865417963509491*^9, 
   3.86541804890578*^9, {3.865418353330317*^9, 3.8654183548277063`*^9}, 
   3.865418490603092*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"b1ff8644-376f-45a2-949b-8ceae3952852"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"es", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "4"}], "]"}], "]"}], "//", "Norm"}]], "Input",
 CellChangeTimes->{{3.8654133866944933`*^9, 3.8654133942124434`*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"683a30d4-43ff-4db3-9da6-81adc323b98c"],

Cell[BoxData["0.999999999999999`"], "Output",
 CellChangeTimes->{3.865413394386067*^9, 3.86541796582152*^9, 
  3.865418050666403*^9, 3.8654183561963253`*^9, 3.865418492967421*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"b07688be-580a-48d9-be60-baa54b01110d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotWF", "=", 
   RowBox[{
    RowBox[{"Table", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["L", "2"]}], ",", 
           FractionBox["L", "2"], ",", "\[Delta]x"}], "]"}], ",", 
         RowBox[{
          RowBox[{"es", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "j"}], "]"}], "]"}], "+", 
          RowBox[{
           FractionBox["1", 
            SqrtBox["\[Delta]x"]], 
           RowBox[{"es", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "j"}], "]"}], "]"}]}]}]}], "}"}], 
       "\[Transpose]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "]"}], "//", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Joined", "->", "True"}]}], "]"}], "&"}]}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.865412878996447*^9, {3.865413125776569*^9, 3.865413311601396*^9}, {
   3.865413343380562*^9, 3.865413359473984*^9}, {3.865413481861712*^9, 
   3.865413519394951*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"522cb076-9b63-4aef-a9da-93edfb208a87"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"PlotV", ",", "PlotWF", ",", 
   RowBox[{"PlotRange", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8654135551785583`*^9, 3.865413576866531*^9}, {
  3.865413626021346*^9, 3.865413632082696*^9}, {3.8654179929193583`*^9, 
  3.865418006892345*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"859cfcd6-fa4d-4f2a-8ecd-4c4c5cb3f1cb"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwtmXc01//7xu3svfceb9sblfW8kZWRrIqKrKRCZIS0JEoho4wGlYQykySv
JxkZSUJEyA7JlpXv53fO76/7XOc+5z7nuu7z+OM+t4S7v50XFQUFxW9KCor/
qxcnrRd3dsh49Ti0ulkFw0QE70r/FhlHnDranY+CwYZ9aO3NOhmHZGTe39AI
BvG9Adv+S2Q8EX7fuEAgGOpu3qUfniDjYCOVTdvJ80Cv8k0UfyLjj8lv/Aqv
nYeU826WlzPJ+Pu5q573cBAUUAY9pdhNxvv2GtkN7g8EWi8zDYFjGvjO5XGz
4g4/4OptOJOTpI5pQ0XvM3D5gt2HDA+FFjVs7zh0PXHTCyL+6J9JHFXF+3Ia
pelF3KEyNMO36IAKDvw9ln9s4xjY3HUU/5euhMNtGpjUSIfB7MF7G/NZEh6T
Aa5QB3uYvz2wRTNBwgqir2rmje0hI2ozv3aIhGcbUkSDyfYw67p3l+5XEj5q
y/7rAac93JV8TShXkTDd928y/l/sYPB5oRpXLAmnd3wmMR+0g5DSTM5BKRK+
Z22+wXb4IOQ2XegJclHAAn73Si/SH4B0jRDjFw4KuHThRIDctA3EPwgsHrRW
wJEcewsnW20gMOj0TQtQwDcW5wMKEmxAX+yYgZiMAtbg91gy4LeBrhDIbZmT
x9dac5jjla2BSnZXiMRVeczrbp0f4GMJx6NTeD7nyeFgCvmv28Lm0I5Wd4Xl
yOGYh47Z6bTmgDYPbYhn/aeZ1vNM58xAPFBoKDBBDjca7DPqIsxgxDUnjzdE
Dnf9+15Y7WEG3rrFuseN5XBA96upqlem4LfYeuL3D1l8mzSbo37QBKLcqF8x
ccli38zZO5qNRlD82exOF7MsPmSxXqlfZgQjBvF+D+hkcUjjcIDjYyMwFeFR
Vd2QwX89/pwuDjcC1u+yxXY/ZXBjvek7LjUjeGi/vzS9SAbf6nSRi3tgCIRp
UoWclQyufCs0unEVgEJZjDC+Lo1LL99eejerB5G8hsevR0njDFunjK0WPVjb
cd9uDJXGTd8MyS4v9GCuM1d3v6807j+lu3TOWw/6w1QqbQ9IYxuCsYx6RBcq
6vVLjglI44Emxkt5gzpw9ujRJ6EvpXC/O0tP+O898P1W+o2CbkmsaH/T8twx
LfjaIF7o9lkS90WHsPrt04K2necdPM2S2IekKHxFUQtqgioELldL4urXtT9/
rWtCjsvXAocnkpioOZpZf08TfBVZOrYDJDHXzR3q5G9k2Gy5zG/LLIkdWoJP
ap/UgGUaen1aOknM/8IwbcRWA+YMEk5U7UhgvqB47yc6GjBc+iBfekkCx68n
vXFn1YD6jCq99T4JHPNtvqinQh3ifZfdcp5LYOrgW4WxTOogzOjzYtlIArO1
ziWG3FCF4zVt8ZJ6EhjzFXMFHlWF7ED1AFstCTw1XHsgQ10VZPs3tAvlJLDl
gaLzAQMqoFp4u96DWQJHViltqGqqgJFN2VBntzimsNk5NjyjBKfu/uMp8RHH
gg2VRkoRJCg09VgfPCGOOzmx1lVHEsxtNA0wu4jj9zYaOxRqJAj0SHriYy2O
XfiZs8LGFSBSU1pdXEMcf1vkLrKyUwDRl8n3RdfEMMWR+dmzZHk4rUWi7RcW
w3Wf3tXVc8pCIO3b5yFsYnjoun99yqIMhHeb7eekEsNCIgmJsZ0ycDPYK8Fi
UhRLfuoV7L8rA/mvHwtUlojiZkafbXkeGfilxaeSaiqKy6qrrWzFpeGkNs2h
AwEimGy38pPDVhL86JLXp91FsOaEKJ+cpiSE9EhkxTiK4ITKgtqj/JIQE4J+
vtcRwZ5H5dgUfkpAbkX4aSVaEazMd/eN0XkJGNdeuMSQIYw/c1nUejwWB4/d
g3kfPghhjdwKficxUfDO2+1k+kYIV2zupw1dFAFfgSTq5nwhbC25Ot3SIAIB
m8bH25OEcHUwBRXTWRGIJF5w9bkKYfO4eNqp98KQYhYcNbcpiGVuNX1a9BGC
xkPMDgKagjhpK0NEZ5Qfmj96UWbJCeL3KpqCftX80LaXeCUqJIiTKRs1OlL5
oVMokEGaShAH6F4SF7Xgh6GhbzUqHQJYUzmlfaCED/6efKKw74wA7vxX9rL+
Fi+QwnR2/J7yY8e2r5m6btyAf9iQRtP4cYeLgbOQHjc4GXs4Horjx36lRZOK
/NxwlTW+APnx46eu4m8HO7ig7+mPQ+x7+PHa6zj9mH1cEPvlcnFJKx9+Stlw
8LUmJ0yQmk4sL/Ji8WvFUUd3s0NkYn+8zzgv/rZ51mOHnx04V/+8GfjGix3u
jgpnrrCBQS0/a0M1Lz5Q7sTfc5ENUg/5VqXG8OKg8dUNy7ussC+ahWu3IC/u
8KcK+d3CDNk/7OsvGPLg3KcRX3EYA2iMaWx0afLgsqbhwCQLBqif5lBTk+fB
183aQ58KMsDE2ufMCVYerM1x+lXie3ogcVoF2Q9w41QB53fhdPRQarpPUjmU
G9tJ0yoee0oH9UWal4cLubDvkRT1bFYacKzgqtB9zIXFOMzIxpPUMFG9OJOW
zIUfvax6L4apgb6l+JB1OBceSzsSfiOQGqzHlFSrzLhwT7rOX8bvVNDDLzOY
PMKJDbLUc1+WUcLkFR49M35OPDpKVXtLbAcxXiz6k8zIiU2ffxCW7PuHVMIs
ngxvceC2B5TFasn/UIjfRcbwnxx4XJYWyun/ITqX8d7CfA7cfiYswGR9C0lr
vg7m1OfAdHsjHnLPbyD3CYeiHyfY8RohKfhQbQ3F/JxzJzmw46G9e2aU/q6i
/IFY3lBTdtyzLVYniVfRYmf1RXZFdry6Lnfe8OAqorpkcT9mig0/iTfK1gtb
QUj915eDLGz4Kh4XeNu7hKpS5U2mnFhw3UTPhOPwPKJ3mfSg1GPBYYyqfVnl
88hJPPeqoAQLvq/w/u/uuHm0mC+FrWaYcWTfpU0f8jxSwKK6JZeYcZWp8R17
vj/o/jS3engeE35zL6TgZtosmij6eiD5NhM+l/q7QstiFmkG3/UrDGTC9Aqm
1hFbM+jzDlvhoB4TnvBdqen0nEF0PExyxl8YsTN/tEum3jQKRpQizBsMmKK0
Zur7rilUR4N1ZYYY8NA0tm/9MInYW6KcDeoZMK51UbS4PIkKHbbuBdxhwMNb
NAu/NibQ2Kk1zm5JBnx6KKHkxeo4skv5Tf/Qkh73FobKB+0aQ2q/+pZVH9Dh
HtUtm/7YYXR+XlmBL5oOP+2r+hR4eBhVrl059s+XDr/ry/IKkB9GhnSkxrY9
dPinNqXM7uQhZCcVfu9UFy1+1qtbbiwxiIKPCeo8YaLFvKvDZkMn+lGVp5/f
zUUazB5qrWfB0o/+na7LOddHgysWnH3Pvv2OYsJ9meA5DT6cNS4wzPUd3b9X
NTBgRIOPu9sm2H7pRVVfnC/xhlPjvGiTOP+zPehf76uybTdqbPJJ6eOWVA8y
GqaaGjOjxhdiUxzI/d2odS7ftoyHGk+dSkb3LbvRANOmhG0JFR653L4lrdmF
dkwy6+OmKHHFbqsLvlKdaF9VP8O2EwUmsd3xISbb0Kv8Z3ubdCmwRuGTYsvA
NsSf6X8qSZwCZ/VR54n8a0U9a3R3Lbt2iFYjj6Q4gVYkE+HE/mDjH+Ezr+Jr
5NqM6q6sMIPZNnGGOiJ5v3QjSnOPO9PFvk28fkmVIFfXgE4Zi7T5fN8iIse4
9eVONCB2WpNbSWe3iBYp0UMxOfXINTaFYTR5kxDQ3C6O0/iAtu6Q6WKG14kK
lfL5oesYdfg3eQnmrxO20y5JS5oYPbF1aXgVtE5wd7dkcrUQaD/ntehvdOuE
nc+X5TOJNSg9tZNKQfkvUU5I17/RrEbaWed2Wi+sEqtTmzPne9/8xyutq5vx
KnGX6bOIhuMb9ONYes0y8yrx8ZGRbNXXChQtVntR5PEKcbGk8Ldwz2v0NYd9
y69xmfhclr396U8ZCnhR9JeDa4lIiihxWw0qRmqsfteMhheJSMTDWsBZjBYC
lViDXi4Sgh57RaK9ilCg3gupLrNFQrNWblFg7iUK/pxjkxa5QChQJixnixUg
bc0TfY0WCwTjB8WDzwLz0ep9Mc813gXiYZfwusnHFyjUPevC4ZJ54tTFWWmr
iDy0NK1oodX2hyjN21c0tfMMnS/PO57m/Yeo7OmdsTv5DK1elDm/RvGHmA+s
stL68hT9ZRd79FZrjqDOsUqwLXyCtrQ5V/QfzRKPNX0TvS5lI7prfx+bBv4i
Utx+eqSQMtENq+CK58y/iEPHifjj+zIQPe9iK/3zKWKy/Fl6kns6Ynwxs9rS
P0mkCKr/4Sy8h9g+D1odMJkgaL89P5gfmIIS77u4Fw+NE2EUnZMjr5IRp3tv
KEf4OCFad8nS7M9dxL3yJefrqzECTa4ZhEQmIX6hhr+H+EcJ5+lT3OYJt1H6
mCHr29IRgmFiOW7UPB4JvqqRErQeIdT0VfS9GG8hEcNKm4ErP4kUujzL8aex
yLjdyaK2Z4jY3edk5qUdjUxP2J6/xjREOKrrLdYoX0PmyxaPTGCQMK2Ws05T
uoqsBPVXml8MEKHN46fi4TJy8pbK7ozsI4yGWF5EX76Abp4Lir37upe4tLjc
dWw2FL2P/OBvN/eNOGFR8mDcKwRJJ3sYdLr2EG6T+8sLrgShww/LZO7e7yZ8
xwy3CKlAdOsFNYvdly7iT6Jht8rXALRIPOn/YvSVMPd6vJJadgbJti7VJUV0
Emc7GlIen/BFR3qM8w+WfyGYspjcsYIPwrOjYV9kOgjKpZuKz3Z5oqk/J7Hk
+3ZiF/djJCrijg7Q0SfkqHwihnB8CbeVGxIlmyvlcLQQLswH5tpnjqDrFlMb
Etc+EufvMv5aG3ZCs66xzdnLjUTqd7Lp1i4HZB8if1/Cu4HwFX5UleZ2EFXF
f/TO/vaBKFZQ3KHttkYST3y0JCzqiC2mgmeb+y1Q7Ft6muwqTAT4Sf+OkzRB
g48OPjM8XENoT0+6q7gYopdtSUaGuu+IYRM3nS9Tuihi/csQiFYS7reNQ873
ayELWc6LQPmaYBK+12x9Ww3x2dsJwlgJUf3nvtKXDTnUuiPtf+nOS+JOqN3j
PEdx5HPk2Ysoh+dE2HHhpSQ7bkRTJjN2UTCbkLzyMOv6Z1oEAlb6GziVCJ/n
+mHxYMFg/n6650L6VcI14MX+zTfNBpFUKQ2me06hOy168ooZ9wxUMjyauLUT
kP/tEpldzCMGgwIlc0xsWWhflJhMgvi2gT25tzrG8ClieDRbf92WFVX0Hbp6
IyIfGQ6SrrwaFEAseEaq3rkYCT78/FCqXAqh5IKY+tAyVFHxavPfsCI65336
V31KBfJdPLCiWaWBcvYqWjWUvEVc6GhSiPYe1MU886qhvRqJUboQ8Z4GiG44
n6NxhkAPY9DOz2wjlHVES8cjuhZdz530rzhlirSMU0+Pcn5A0a5c1H5x+1G7
0kqWR3Y9ctQV5HpNcQBRULze8ahpQtb9XY+cwh1Q+i9u9TGrZvSr/e1Dtz2H
kMbX8+6e/S3oeaa1fqqEM/LM1Wzw/PsJzYqPa4XouKHthJTVsZjP6PLytpnn
nxOoVW8jufRmB3Kh2m2Q/dYDeco6N2gIdKKju3uom26fRGpCjIOBw53I9Ltm
UeK9U2ibrWq19PlXRF30dNW34jRKWxeQJ2t3I1FDXsd4gQDU1NZ3k2zfi/gr
ZxXOcwUjn7DvTS6KfahQe5A1NS4E0Uv300RTf0cdX8tbh5jC0P6Igaiusn6U
PzWg0acZgdoUhgKDuYcQyUhWZJDpCjrTPVT0YHYIZZlKrexbu4JiIGDV3X0Y
JWY4lRVMXUVyswHkWzo/0XUB28pzP6KRj3Hgy/7pEbSR5p/5hjUO7UlfbP3j
NIrmKJ3ElxVuIvo/gdPUH0ZRY3tLq6zlLfQiI0hOKXMMVT46wnb20W00vXA+
O9JyAtWpZejUmCWhM49DU0UKfyFSejCjYFMa0ltdK1Pnn0Z3GVRNr0TfQ8xW
YZ0m0dPoxp7cmul999HLtTA2v6MzaJHa0aS5PR3N2YTH1TD/Rq1JbK/76R6g
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
        "]]},
      Annotation[#, "Charting`Private`Tag$63998#1"]& ]}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
OrzeHTqW1WeLXw5GqB6NZ/XZYtfsZembJrL6bPHFIpfs5CmsPlus6bZq3LRp
rD5b/FSReWvZDFafLY5YobiXP5PVZ4vB6/v/Lp/D6rPFlc8ST2+cx+qzxXyP
0oNhC1l9NjhgSsTQz4tZfTbovKBXSWkaq88GB8/WRL5aweqzwWZa4847r2H1
2WCfu45jZmey+mzQ9PamEVpbWH02uEqdVn54O6vPBnOTR9ov28Xqs0GHyjj1
mhxWnw3mKIenXz3M6rPGNTtruwYcZ/VZY0fl10MXT7H6rHFOQaP5inOsPmus
bL7m36WXWH3W2M7k8Jd/r7P6rPFkOfi43GX1WaN+oHKH5iGrzxpD/rM9t6aM
1WeNs2MmPttZw+qzxuTxeslv37D6rPByH5enyQ2sPiu09fdcCLJCrj4rrOqw
ojhCr5Crzwo7OPwdlW5ayNVnhX3lMQNs7Qq5+qzQT99qdJVzIVefFfbeuvxz
oxfnqaxwzuoFy/oHcZ6dFVovW5L5MZzzZFb49Jf7myu6cl6VJV6Y3tTesR/n
FVhi233307cPYfVZoqH959nTR7P6LDF//sWxG6ay+izRqfrrneZzWH2W+Gjt
wo5Ff7H6LNF1g0fwhzWsPktst7ub35jtrD5LfJux7UjgQVafJbbpXa+OOcXq
s8D9aVdj7lxm9VmgxrjFbwfus/os8FSOrk1VJavPAh8FLDk26z2rzwI3a/tc
TdK+w9Vngfbncy4XmN/h6rPA65VHXf9yucPVZ4Hb4hZ13Rt4h6vvhzdmx9aA
Tne4+ixQvnjuKnl/zqsyxxc33ef/PorzCszx+bKaq21mcF6uOWbFGF0a8xfn
ZZpjWs6Yy9qbOC/FHIOCWjgaH2T1maNblrdB6jlWnznqjgy+Nekeq88cV0aY
5lx9zuozR0XN79c2fGf1meNvQ/Lin1je5eozw5nFff9a53WXq88MTxzbNvwi
3OXqM8Puh1d8nzjwLlefGTptbz1u+cS7XH1m2O348r89UzkvwQyzu1v83X4L
50WaYcjopJgbxzhP9cPzUm97dIPz7Mzw9oeVQ0bXcJ7MDE0Ono2ZrH2Pq88U
U41Mohsc73H1mWKCeV99Wdg9rj5TrC885L64/z2uPlM8vrJft5WT73H1meL8
ns2bOizjvARTzHnsWa7cy3mRptgEdX89cZHzVKZYMqvy6ZVKzrMzxZX1G6/G
69zn6jPF+BXRU2e63ufqaY7H+nSzte10n3v95njVdEld2Ij73Os1R9/rGu+S
P+9zfnM8EfCy2GAn85qj0dA2eifzmWeC5i3PHH5ZzTwTDJ/R49xOwyLOM8En
Z9pal7Uq4jwTdOjUY+b2fkWc9+P4r7h9VdOLOM8Y74WPiTmwsYjzjHFLaaht
IzLPGDuE/zI7v4p5xmi//0sTa+NizjPGnb3+M3umKuY8Ixze4lyzsF+KOc8I
p3/u2crwz2LOM8LU4ndnhuwr5jwjXIXjy3zuMM8IRxrOPzTzK/MMcU2OoX8X
jwecZ4hvVpfELO37gPMM8Xj4Xf3IWQ84zxDnDT7hkLrrAecZovex6H6tCx9w
ngEmhk8eMuw78wzQoPXjh9+9H3KeAd48PDPePPYh5xngb+Zdx65Lfch5Btin
fNLIZf885Dx9fICjDr4re8h5+rh3Wt3a/8wecZ4+9g4aNFCnwyPO08f/vo90
2D/5EefpY4T95iZnsh5xnh5uXxtrHnzrEefpYfXr191NtR5znh4+3/kwI0r1
mPP0sOTO86vPRz7mPD1sd2bCmcq1jzmvGV4PHatsd/kx5zXDfvVXj7/4zLxm
2HRXtuG7Vk84rxn2vprwT+TwJ5zXDFt1twxqXPOE83SxzfaV395ffsJ5uuhx
7kly+LcnnKeLnQfEfbsR+JTzfhyvc7y/Z/RTztNFn7+cOl7a9JTzmmL/2Tsm
K28/5bymeD/p7Ply7RLOa4pm/sd733Iq4bym6Fu2a/jDsBLOa4pbjkTOlg0o
4TwdPGl9w149uYTzdLBxwIdDa5YyTwenf+x9SGsX83SwufGYBQvOMU8H7/V9
lWH3hHna2NzsBWAj87TR8Oqr6ulWpZynjbJlnSrbBpRynjZ+eeO01DiqlPO0
8frJO97Px5RynhZ+1TWwurmglPO0cKysZsXpLOZp4QazAVWHTjFPC3entozd
XcQ8LXRb3c5r+3vmNcGeJxrWbTIt47wmaDm+1ZM1PmWc1wS/mM0KSetWxnlN
cLXPzKLZI8s4rwmeP/C2cUxKGefJUDPb/EbPTcyToW7TvUvcTjBPhnFFsXFv
C5knw2mDrs889Jp5Mozp/aF5vGE59/zvmgszg6K+Kcq5x3/XrG7cOuyvjuXc
633TTF3lP+v7r+Wc/01jfqXxalxyOed909w5MzRl52rmfdXMxMjLtw4y78fx
hoT7pVeY90VzflGnR4WVzPuieZS/xSBbVsF5XzSv/0tbG9OigvM+ayoeHzha
HlzBeZ818tUJW3v2qeC8T5qpv+gtSxtXwXmfNPOvGp/csYB5nzRlXbuOXLWF
eY2aKhPjgugTzGvUTN0zKejZLeY1aK78M7q8xwvmNWjKvuu4zNap5LwGTcGH
Te1mOVZy3keNqnfD/IiQSs77qAlsmtLtQa9KzqvX1MwdWxE8upLz6jU7Ppce
HjiXefWatS3DTNuvY94HTcxZgxHPDjDvg6bh5mjzfvnMe6/pMvbbklmPmfde
M1bWof2o98x7r4k7mrbdwLCK8+o0p471Uo13ruK8Os0ZjXLKwtAqznunMdpj
WTYwqorz3mkUBovMSodXcd47zfqaFSta/s68t5q9ybJ6s2XMe6upfZry5Ng2
5r3RVDfNqzU6xrw3mvVTxl42v8K8Nxod979cLz5mz3+tWfXnsEPKt+zxrzSv
2u3xDtF5xr3eS82ldlsGvrJ+xvm1mjVbnb729nzGebUahxx8Edv2Gee90MTc
rmk0iHrGec81OQcrdIbHMa9Gc8+u/s2vk5hXrVnvP2XP17nMq9Y8n3FFDiuY
90wz9POePm5ZzKvS/D7rS9ieg8yr1Izer1157QzzKjTbk0cNW3mNeRWa43Ft
8t89ZF655ts9+8C3Ncwr03Qu8r669CPzSjXtx3ppzupUc16JZmTv6Z1WmVVz
XolmVlGLNV8cq7nnP9HonXvU8N2TPf6RZk6H1v9uDK7mXu+hRst/qv8NqOb8
Ys3TIZn/ZPZkXpFmov6yfZ8GMO+epnhlk3lvhzLvjiahy4Lds8cyr1ATMXXO
5i1TmXdLs2BXaHn0H8y7qbngf19n85/s+QWaPjdGrkleyh5/WbM695JfzSr2
evmaopNXpr/IZP55TY/3plYpWcxDTcoUx9PZ2ez5eZp+o3p6Ds1hj8/VfFl9
tcWew+z3ezQRLbPiFhxjx5ma9E3rzr85ybwfZ/TGrm6vzvC/Vxel6A6fdY5/
vnrxhYpRG//jffX7LTvlPS/xr68+Y398ydIrfH3q8es8dwwp4OtXp57Onnbm
Gv/+1PXPRhsevs6/f7WRrs/coBt8PmrrRp9X3W7w+amXTLGc84p//C31t6g3
v7hf5/NXx6QoTr0s4P9/1FUzxzzoepX//1Pv8MxuVF3m/3/V+cmykUfy+f9/
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
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
zmIcmgn6kzOTc9qC/uTs884f3/n+5Cwv5+t3vj85G/e+8jvfn5xNlb77zvcn
Z5rWz77z/clZ6N183kuWs5vmV3kvUc7mZ5/kvXg52zIvg/di5Kx3yAbei5Kz
2h0LeC9CzoZMGsd7IGevB/TmPYWcbf/ix3vyn3mqmvOeTM6e5ZfV8/3J2Rf7
i/V8f3J2OWJ9Pd+fG3vKhtfz/bmxhLvO9Xx/bmx7TnEd358bMz24sY7vz41J
T3eu4/tzY/VPSr7x/bmx8dXzv/H9ubGxOc2+8f25Ma07y7/y/bmxl7u/fuH7
c2O+Swd+4ftzY6NWp3/m+3NjS/c8rOX7c2Pasz/X8P25MbMF9Z/4/tzY9OJX
1Xx/buzegoNVfH9urF1530q+PzfWdcjdj3x/bsxhi3M5358rs5OGl/H9ubKQ
w4GlfH+u7GJR6Vu+P1emFTfsNd+fK7t2YHkx358rYy4xz/j+XFn60fIivj9X
Vhgtfcj35/rzenQvn+/Ple1+a3Ob78+V6ctfXuP7c2Vjfe0u8f25suoHZ8/y
/bmygxuPHOf7c2WShPeZfH+urPFj5B6+P1dWlPlfGt/fz7zJ4//m+3Nlj4eU
LuH7+3mc1WYW35/Lz/Ory3i+PxdWZvZuCN+fC+s+t6kH358Le5I1LoTvz4Ut
NK135vtzYS7xy4z4/lzY8evFNRZcfy4s437+YwuuPxc24ZbTWQuuPxf2j0FK
mgXXnwvrvPXVDAuuPxfWq/haH86LcmGPjGtdOS/ChbHzZl+kXH8ubFLMlUtS
rj8XNu3u3pVSrj8XNnNOn15Srj8Xdl8vvJmU68+FwUKji+Zcfy5M85BsijnX
nzNTdS2SmXP9ObMZrQ6eMeP6c2YXl77qb8b158z2Prry0pTrz5l5aK+IMeX6
c2anO/1e3Jzrz5md1+zcuznXnzNrfT7ysAnXnzMbmZ2gacL158wM09aFG3P9
ObPpvqNmG3H9ObOzZ9O2GnL9OTOn2fkHm3H9ObOuZQszDLj+nJm+vuEqfa4/
Z1Yx7tAgPa6/n///9iua6XL9OTP7kK07tbn+nFnWbypbLa4/Z7Z4xJ54Da4/
JzbkSsH+Jkfsz4kpMvafaXTE/pzYbWXk7u+O2J8TW/ztVnSdI/bnxMoGPKn8
4oj9ObFDKqNetehlOLFa95PTqtFLdWIn48tGVaCX7MQ6XZkt/YBeohPruqp6
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
tE0Bai/blB34vZ3WKCu1l2rKHMcf//ys7p06nyl78sbI0/jZO3U+U+akUftX
teqdOp8pa8xvtSV51zt1PlM2LHbtieIl79T5TJnylPn1yhi1JzFlL/LPfT3b
Xf39ec3ZX5JtC7p5qb8+tTm7Z3bmyAZD/HnN2b6Ahup/y0vUfnPW4GzG5t0u
UXvN2encnofss0rUngnTajbrj1VrStSeCdOxPJ2aG1ei9kzYm1vdPAp6o2fC
rNN61Gb7oGfCPq1YVjfBBD1j9vyAb/cfH9+qPWP27eZK7bjbb9WeMRu88lDM
hcy3as+Ypd9zOfNp1Vu1Z8wWZm0cbjLhrdozYkmnYi9Z9ETPiNW8HBNr4Ime
ERvV0Kq6Ug89IzbrZvnXWyVv1J4Rs3v6JHTn1Tdqz5A5Bp6eG7/njdozZN0f
DNwavviN2jNk13s1T7Qf9UbtGbIzQzs6NAF6hgxyzy4od0CvGRu43OdE2Y/X
aq8ZexG7vrjx2Wu114xltV3t63X+tdprxj6m5v8Xv/W12mvGpBdne72Y81rt
GbB6vzETJg9Fz4CFL573rVVb9AyY9zLbIKsW6BmwsXeUqxXfX6k9A7a28MO0
5f+9Unv6TFI+7E/ZuVdqT59taTGgpGzrK7Wnz9JsByZozH+l9vTZoU2vM/8Y
iZ4+06w/b2baET09lnXLsp2ZC3p6TKPx6qW/dNDTY8f8l3WwL32p9vSYaQ/n
HopbL9WeHnvWf+fcQ1kv1Z4uu+q8YOq69S/Vni4beOLBpdczXqo9XWaXukpr
/1D0dNmzNYnX3gJ6usxrQ8627XL0dNiXVcmmj43Q02Eep2/t2VhTrPZ02PGQ
6sfPnxSrPR3W/VxP1xOXitWeDjM46Pal5cFitafNNj75frzlhmK1p83WO+08
f3oeetqs77spo2r+RE+b3SxdVJbfHz1t1jjq/t+DO6CnxeYWzF68ygs9LTZ/
wbtXcdboabE7Vc0u6uqgp8WKfHw7ZpW8UHtazGru9NJrV16oPU32uiG77ag9
L9SeJjO+mvHfkqUv1J4mG3UmsUvIuBdqT5M1rZyZlxiBnibr2DBw17gA9DSY
1yuLvM8y9DTYSZM5br5a6GmwF0uvjGhR8VztaTBT6PedPXmu9jTYistD+8pv
PFd7ElZVdGpxv5znak/y83qRurL7wedqT8Ku9x/rYbYDPQlbeWTZxyMb0JMw
+weDglsn4/c3qSJaanqtWopf36QqPjw3524i/rwfqsKzS7c3zUP/h0p758Eh
DvPQ+6GK8x8ZrJiPXqMqKsgUlAvRa1SNGTLgt25J6DWoph6zqeq9Gr0G1ec3
z1ZEbUSvQRXq3xQ8fid631UZI7QfL85C77uqx4kfJvvPo1evmiut7vD0Dnr1
KklI51UOr9CrVxV2h0fTvqJXpwo5m371mQn+/upUeksdTg/1wN/XN9XMy7Z3
Kzvj7+ebyuW68n3aH/j7/aaq29hp9/CF+Pv8qvJ/kD4odDd6X1VP5ZPtW11D
74vqz68ht4M+ovdFda//hO8Hm+H5/EXlrpMz/boDnr+fVbkZYU8rg/B8/awK
/BG+wakXnu+1qknu718OG4vnd61qfte379Lno1er6nk6f2/5ZvRqVE63fDWV
x9GrUQ25u/LkxnvofVL99s/W0Z8+ovdJFRE0c1lfI3w++KSqtzm+4HArfPxX
q0YF7lthHIHPH9WqPcO3XRo3EZ8vqlTFR0w9VGvx+aZKlfbx8yaTbPSqVG1y
mu4NeITfX6lKO1Y+dW0Dfn2FyrVj0Y+zzvh8+FEVY7Dx0aMe+HxZrkqr0uxU
PAWfT8tVjzfFjb2fhs+3H1Svg+t/O3gFnz/LVNsvaLz+sxK996rNnsu/a7fA
60Op6uXLvT0XdMPrR6nqipPe+IJpeD14p0oM6vu4cRdeL0pU9YsO1dXn4/Xk
rSqpXQ+baxp4/Xqjmr373pgRAXh9e/Pz59d/OTcar3+vVenjzO88/wevj69U
69MW56uu4/XzpWrNgwn5QxvQK1ZNX9t6WZYfXs+LVfuW6m7MHovX6+eq+sf7
VsVswev7U1X1g4fFl/Lx+v2fql2ERv1lfbwfKVIFDS51Hwt4v/FYNWphh307
Z+H9yUPVOdPeGdOO4v1HoerKwvS2RWV4v1KgMq/eO/mmK94v5auWTRjfvvNI
vL+6p3LX8F3ZIQ3vr/JU2+Z7+516gF9/Q/X8SFj9XjO838xVuVgt+NewN95f
XlZ9fOH56ulKvJ9kP39fjgOsruP9YY5qVbeTKcd08H45W6UlHeuT2Rnvb/er
jlkt3Nu4EI9TVc8SP83ayfD+WSJZp/ooXd/E/buy9mDmyxsd8P59v/KNp0eX
zvPx9UK2cobT/Y3fzuO/5ygbTvXxfdOIrxeY8nCWYoSkA77+uawMv316Urf5
+HopV2mlnJuZfQFfX91Q7r8RMkTZhK/H8pQ/Ls859wZfr0ruKX+cGGe5PRFf
z+YrvywblzH2Ir4+LVCGeb07EqSJ7xcVKqdtazZTvzO+//NQObLL+HaPF+P7
OY+V5uOuhu+4gu8fFSm7Pj79fJBOBZ4fyqHr4vs2dK3A80fZp//48qSkCjy/
lI+Nmul/yq3A80+52/avHyF6lXh+KjOcv/pFdqvE81f5MbWVfodllXh+K8/c
Cqj9lFuJ578y9kBecLBWFT4+lH801c++71yFjx/l4pruyb91qsLHl9Ju8rIT
2/+owsef8maDTrcbiVX4+FSuNH6z8foO9EqVX/r9oZF2Ab1S5esG7/dtnqH3
Xpn6PfvUvu/olSnDLOKeFcuq8flDeeeV5/3ikGp8flE+yxxkmTGwGp9/lKO0
In184qvx+UmpbHUwc8bf1fj8pRzcZbzHvEPo/ezJfWgn5U30qpQHP/fac6YE
v75K+annUI2Pmp/w+VO52UZuVWj/CZ9flSss7PZPbPMJn3+VBeePrzw18BM+
PyvtP2b9c3jyJ3z+Vn4tizgcuQq9T8peOmuv7fwXvRqlzfbYok0q9GqU+zIN
PyiK0KtVfjn4xXjaJ/RqlRcq+4783bAGrz9K3aEG+kUuNXh9UgZPNWxf37YG
r1/K5ZfjlKcja/D6poxL3zPMbEINXv+Ujc57KrQWofdF2Xq2xbA1m9H7qpw6
a7rN4Sz0viqvjAzfM+YKet+UV0q8Vh8qQu+b8tBUk7jlFeh9U35e2LWyRrMW
r+/KlM6HciusavH6r2wz6MapmV61eH+gzD32ImV1+1q8f1Cm7zdv49u3Fu8v
lOnmCZuGjkLvu3LTisC9ZtPQ+64cemPp1L5L0WtQVrV4YWq9Eb0Gpevz2r1j
MtBrUPazyJsQehK9RmV/k2vb111Fr1F5xubIukmF6P1QpoRd2p3/Cr0fyoSv
hzudqkLvh3KM574yhx/oNSmP3xksNzT8jPd3yi4VlWtmWX/G5z/oP9c270+X
z3h/CBfCNTY89vmM94/w9F3ngzfD8PslcExV/aZ9l894/wnTaxOdA3qjpwFV
sy9H7h2Engbscn8yY1s0ehqgddNts8Vf6GnAv5HB942moKcBKUaneyXNQk8T
1jwa0XHhAvQ0wWb53erGpehpwu+9lh1tWIWeJiwPvFg8bx16mjAzN+rjwo3o
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
gHhFxCsmXgnxyolXQ7w64knCuOP/A8gf/ng=
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
jqL8/ldvN1F+Xuh6KkqUnxcmhA8U5afCgGvDRfmp8M708aL8VPhheKIoPxUO
0/4myk+FDodTRfmpMCFxqyg/FRqGHxblp8KgAZdF+anQ1KBAlJ8KzZdUiPJT
obqznaE+PxXaZYQa6vNT4THnAYb6/FTYuuEiQ31+KnQPPmioz0+FN3+81Hsq
FY70URjp81PhymmxRvr8VLj3xG4jfX4qdHv13Uifnyc+Mog21ufnif5BaKzP
zxMvnw420efnie2tDpvo8/PEk6fbm+rz88TC+a9M9fl54rpOf9fR5+eJO5vH
1dXn54ldMjrU0+fnid/btDXT51fjPRpQX5+fJ5YfWG2uz88T/2j/qYE+P098
O2eqpT4/T+y0w9Nan58nGs4zttXn54njWjvb6/PzxLPpE+T6/DxRaW7YUJ+f
Jx4Y99RFn58HfpvYQKnPzwMzktd46vPzwJOf5/no8/PAkGe3A/T5eeD6pK1B
+vw8sGWDL830+Xng8Kq7v+jz88DTpgPa6fPzwA89VnTR51fz+vMXRurz88CZ
xV0H6vPzwEbnasXp8/PAJQ5ZE/X5eaBxyLLZ+vw8sMXeVUv1+Xnggy3v1+rz
88C7n07v0Ofngf9O9MnS5+eBYwOjcvT5eeC4k6Of6vNzx8Xj15Xr83PHfw5Z
WR0Q8nPHHmMbNDog5OeOj5pfiTgg5OeObz8uHH9AyM8dx1csSD0g5OeObbOt
Twqexh0LOy59LXgpNd70X+QHhfzcsUv+qm4Hhfzcsb1D8ZKDQn7umLztyqWD
Qn7uaDdoo3mmkJ87/h7+oX+mkJ87arp225cp5OeO2+361zkk5OeO9R4cjz8k
5OeOX6K88g8J+bnjnOPDux8W8nPHyksdrh8W8lNiv6eHBx4R8lNibGj6lyNC
fkr8WN/976NCfkoste3S85iQnxIn5/ayyxLyU+LgOslFWUJ+Slw2v9Pt40J+
Sjy3tOHNE0J+Sgy9vf7FSSE/JQ7vP9f8tJCfEm/13NxTK+SnxDs9ZftRyE+J
fy056XdWyE+Jj21dLp4T8qup97c1iy4I+SmxYPy5uItCfkrc0WTSxMtCfkos
LNi47T8hPyV27TbbOFfIT4kLYbrmupCfG9bOC4nNE/JzwySD9bF3hPzccEJM
7qZ8IT837GgIzo+E/NywsWbH0wIhPzdMyzD79ELIzw2P+17p8UbIzw1fW6Qa
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
/h2jyKvSRjlfPT24KXk/tDE7DHa8tCXvhzbCcu31gi90ffquXTRhV4eo23Q9
/K596HqtWTvh+vZdCxUx7w79Sderb1rXa8ev7J5I18dv2i2JUwb4diOvUvvf
X6nq5n7kVWoVQUdC8oXreaV276ZQa6sXtH6o0C5f1/HqKy2tByq0xXUtxg/Z
QOuPcq3L5gMOc6fReqJc2ytukEmnnrR+KddeORC57IIfeV+1yZteGFcYkfdV
u6H7mLLXT2i9VaZ99mvrl+uzaH1Xpq37Zdckm1Rar5Vp8x3zOg+g9abmi3b4
oa2BU9vTeu+L9ox63/uRLuSVaof2NI8J+0qfB0q1b++1H//xGq3vS7X50fb1
/thJ6/USbfaQQcFu8+nzQYl2wLQnRTujab3/WTv0vUf7gCDyPms3HGjf41Bd
8j5r3y7I8mr3vELnfdKeue755tmJCp33Sdv3N9/Da1ZX6LxibX/TRvtGjKvQ
ecXauDPeX3uHV+i8Yu2EoRMPjnOl53/U3mqzUJZZXq57/Aft3Hq3qvxulute
7732eYM12Y/3lOv8Iq16+rKxN34r13lF2lObcivrxJTrvHfa+S/2JK5oQd5b
bbVq9IvhtuS90b5o4RKQWvxV573Wxq1f2sI156vOe62dtfJ1ofnOrzrvlTZf
frNq5KKvOq9Q2/W6DTSO/arzXmobfl/bb1xr8l5oy/3gpUdD8l5oj8+8O3Fg
ZZnOe661vlAxWZ5fpvOead1MjbrHHivTeU+1LdzMI8PWlem8Au0k1f0j6TPK
dF6BdtTyh+v3RdPzH2tNe7cw6dOSHv9Q22DEzbebnen1HmgNe3dxXCsjP187
+4qqe4sXX3TePW2fjfdVf1z6ovPuaI99+Oi2ce8XnXdLO3iw99YRqV90Xp72
yuJdH94nftF5N7S7PzbyaRFL3nXtx8W/9u3WiZ6fo43/OGtgoyB6/GVt9z+y
Kx850etlawtP77sRY0z+Oe3x8sODjn8q1XmoLY7d9/X9o1Ld87O0WzY636q6
Uqp7fKb2hdOOWsXH6N93aePK5ow7v4OONdoOCY/vzV1Lnky2su3KZ25LhH9X
d1w1xmB/ovB89YiPHxb5xQu+um6re6vXDBFeX/1wITYuiRTqU68uuRTYthM9
/pza8nlnWKIupd9Pfaz2qlfnQun5l9W1j6+b/7VRKeWjzt75ADy8ybuuXj3Z
rVEXJT3+hnrToWjvcc7k56lftpz7Ypmcnn9LrZo65/02O3q9O2oT24BtJ2zI
u6dO+NJOfc2avHz1OeXQ/55Yk/dAPcXKyu+9DXkP1YcrX9p9FbzH6hVtVjj/
kJNXoHYs/7G1ypkeX6CuilrzslKo96m6laJ/abE3Pf+ZWinzyXoSSK/3XH12
Ta3SC83Ie6H+b2DPVluAvBfqMNUvBgmdyXupbt7SaFlob/IK1bM+xJa9jSHv
lTpI8771inHkvVY/eLa6qcss8l6rE1qYJ69bSt4btfmIfkcq15H3Vj3FELx+
3UXeO/Xsr+9s4o+TV6TuOWXi2qk55BWpP58YtXXAE/Leq6+1W1vXqYS8D+op
YSmz95vQ+fxRLfPqtdjBmf4+itV+RxTrugfT+V+sHtXR9nvPzvT3Uqy+3fNT
gdNQev4ntabD4967ZtLfzyd1eEVoRFkqeZ/VJn591lXtJe+zemD7MZ9PXSLv
szr2Q9evgS/IK1HPGjLCp4fwflCi/tYp6ZPcmd5fStWZTvjPkhb0/lKq/mfK
gvi1/ej9pVSt2Ng9sc10en/5ou6Wk3Nj/hryvqizzA7GRx4hr0ydtvyc/4E7
5JWpTwXkPv3rK3ll6qVmOzp9d6D326/qJ+8DLJ+0oPfXr+oXLXvdbj6I3k/L
1b6THT0Mk+j9uFx95+TeOS230vtvudpqzZDe+dnkVagP+p2yuveWvAr19j5/
WwU1oOtHpXr2e7+dT4PpelGp/t7CyOVpP7reVKpXx7Y+6juXri/f1EFT5uw/
tpWuJ9/U9eubtfntMnnf1b/7vtuw7CN539UbHV8Vn7Wl6+N3tbbVnnHerej6
90N9Yejt1oeH0vX1hzp3nemqYUvpelmlXtOwelXAfrqeVqlPRGyYVP8ueVXq
Rf2+Dv3xg7xqtXFiwsavHnT9r1k3zj47qEy4fy+D/hNKC0vo/m2wDDqo5i18
q6Hrvww85rZLvoX0fBloLNd0yXhF6wUZPGga2iLenNYvBlBp0ue8Od2PCzYA
p75/jFoxgNY7BjCo+dODL+fT+sYAtJbrf2mwk9YzBtDgbc+DRrnk1YKzOTeu
nCshrxb4Wv7o2U5O67FasKL3YY8FrWn9VQtiqrOCZgyj9VstuGS1cJ7bElqv
1YYTIfbuiRm0PqsNh/c87DzzOnm1YVTIiBaKUvJqw7GkkIg4e1pf1oaBzed/
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
Z14B8wqZV8S8EuZVME8WJhz/H/elrTQ=
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1:eJxd3HlcTfv3P/CkQqV5Ok0aTyOlkjFnIZkyhsoQJZnH+JAxU6a4kSlTmXKR
IRnKvZxFZAoRkUuSypQMZcj48/1p7bP38s997EfnPM+r12d/9t7Ve73to6YM
GK2upqZ2u5Ga2v/998+/tjj02dCCbikNYWvK7391bYRj3//7V6M6vpH/+1+V
6jjm//5Vqo7/P1faRuoVM6+QefnMy2MeMi+HeVnMy2BeOvPSmJfCvGTmJTIv
gXnxzItjXizzJjIvhnkjmRfOvBDmBTMviHnAvLbM82WeJ/PkzLNjnox5xszT
ZZ4W89SYV9eanX+tpV5Va6lX2VrqlbaWesXMK2RePvPymIfMy2FeFvMymJfO
vDTmpTAvmXmJzEtgXjzz4pgXy7yJzIth3kjmhTMvhHnBzAtiHjCvLfN8mefJ
PDnz7JgnY54x83SZp8U8NebV+bPzz1/qVflLvUp/qVfqL/WKmVfIvHzm5TEP
mZfDvCzmZTAvnXlpzEthXjLzEpmXwLx45sUxL5Z5E5kXw7yRzAtnXgjzgpkX
xDxgXlvm+TLPk3ly5tkxT8Y8Y+bpMk+LeWrMq2vFzr9WUq+qldSrbCX1SltJ
vWLmFTIvn3l5zEPm5TAvi3kZzEtnXhrzUpiXzLxE5iUwL555ccyLZd5E5sUw
byTzwpkXwrxg5gUxD5jXlnm+zPNknpx5dsyTMc+YebrM02KeGvPq/Nj55yf1
qvykXqWf1Cv1k3rFzCtkXj7z8piHzMthXhbzMpiXzrw05qUwL5l5icxLYF48
8+KYF8u8icyLYd5I5oUzL4R5wcwLYh4wry3zfJnnyTw58+yYJ2OeMfN0mafF
PDXm1fmy889X6lX5Sr1KX6lX6iv1iplXyLx85uUxD5mXw7ws5mUwL515acxL
YV4y8xKZl8C8eObFMS+WeROZF8O8kcwLZ14I84KZF8Q8YF5b5vkyz5N5cubZ
MU/GPGPm6TJPi3lqzKvzYeefj9Sr8pF6lT5Sr9RH6hUzr5B5+czLYx4yL4d5
WczLYF4689KYl8K8ZOYlMi+BefHMi2NeLPMmMi+GeSOZF868EOYFMy+IecC8
tszzZZ4n8+TMs2OejHnGzNNlnhbz1JhX15Kdfy2lXlVLqVfZUuqVtpR6xcwr
ZF4+8/KYh8zLYV4W8zKYl868NOalMC+ZeYnMS2BePPPimBfLvInMi2HeSOaF
My+EecHMC2IeMK8t83yZ58k8OfPsmCdjnjHzdJmnxTw15tV5s/PPW+pVeUu9
Sm+pV+ot9YqZV8i8fOblMQ+Zl8O8LOZlMC+deWnMS2FeMvMSmZfAvHjmxTEv
lnkTmRfDvJHMC2deCPOCmRfEPGBeW+b5Ms+TeXLm2TFPxjxj5ukyT4t5avx8
82Lnl5f084q9pH6+l9RDL6mXxbx05qUwL5F58cyLZV4M88KZF8w8YJ4v8+TM
kzFPl3lqzKtpwfprwfprwfprwfprwfpjXjrzUpiXyLx45sUyL4Z54cwLZh4w
z5d5cubJmKfLPDXm1TRn/TVn/TVn/TVn/TVn/TEvnXkpzEtkXjzzYpkXw7xw
5gUzD5jnyzw582TM02WeGvNqPFl/nqw/T9afJ+vPk/XHvHTmpTAvkXnxzItl
XgzzwpkXzDzwxCGS/lTHf/pTHf/pT3X8pz/V8Z/+mFfjgeGS/lTHf/pTHf/p
zwPDJP2pjv/054Ghkv48cLCkPw8cJOnPAwdK+vPAEEl/HjhA0p8H9pP054F9
JP15YC9Jfx7YXdKfBwZK+vNAkPTnge0l/XlgK0l/HthC0p87yiX9uaO1pD93
NJD0547qkv7c8UOZuD93LCkT9+eOV8rE/bnj4TJxf+64pkzcnzuOFXux7hgg
9mLcUVvshbvjjafi/txx+VNxf+7o91TcnzsWlor7c8fIUnF/7vjoibg/d4Qn
4v7ccWWJuD83PPFY3J8b/vNI3J8bbvlP3J8bBj4U9+eG2Q/E/bnhqyJxf254
+664PzeMuCPuzw0Tbon7c0P/fHF/bjj8irg/N6zIFffnhifPiftzw6PZ4v5+
f3+Z4v7ccPsBcX9u2CFN3J8bRm0U9+eGhSvE/blhnzni/lxx2Thxf67oMFjc
nyueV4j7c8VqZ3F/rujSWNyfK96tGCLqzxWDzw0R9eeKV5KGiPpzxXHDhoj6
c0VvuyGi/lzxy8NwUX+uOHN1uKg/V/T0Dhf154qTLoeJ+nPF3n3DRP254o5L
oaL+XLHMJVTUnyv2jB0s6s8Vd+8dJOrPFbtnDxT154I2B0NE/bngzJkDRP25
oJZpf1F/LliwuK+oPxfUze4t6s8F9Q/3EvXngs3De4j6c8GU40Gi/lww8EgX
UX8ueFwBov5c8GZYB1F/LpjzsrWoPxdcV+oj6s8F/dyai/pzwU8ZclF/Ljh0
QDNRfy7473czUX8uWLG6qag/F8z8T13Unwuuzv10S9WfHN+bvryl6k+Oj1OL
b6n6k6OD65Vbqv7k+O/kE7dU/cmxoedOlZclx5v6y1ReuhzjcazKS5Hjp+Lu
Ki9RjmFVTiovXo6Fc77fVPUnR6evN2+q+vv9ebe23VT1J8exwVE3Vf3JMSXT
/qaqPzlquxbfUPX3+/j88huq/uToHut5Q9WfHCea5+Wr+pOjfUxIvqo/OS6s
uXNd1Z8zPvTocl3VnzMu67v7mqo/Z+w1ufqqqj9nnBrlfFXVnzN2vx54RdWf
M7Zr1POyqr/fx8198lT9OeNeza8XVf0543T1nbmq/pwxw9/ygqo/Z7TrPR5V
/Tmj94KV51T9OaNy6fR/Vf05o2x9szOq/pzxKqw6rerPGTslHDqh6s8ZA/bM
zVT154w3jT4cVvXnjJWzNA+q+nPG3isP7VP154Rl3x6kqfpzwp/jF21T9eeE
jzpu3qjq7/dxks5fqv6ccGbTm8tV/TnhkcL8har+nLC6f+3/VP05YU0zr0mq
/pzw8L3RUar+nPBxyYLBqv6c0KVXRA9Vf04YsbWinao/J7y8tMZd1Z8TGipH
yVT9OeGBHD0tVX9O6Dz06rsgoT8nnHIyujhI6M8J+588rAwS+nNC3fyJe4KE
/pxw3frRS4OE/hyxbvTgKMGrdETl988dBK/YEUfUfjcWvHxHLBhs+Lyr0J8j
DjF/eLKr0J8j9kqoXdhV6M8RP535GNhV6M8Rp9eM0+gq9OeIU14Wng0U+nPE
rVYZUwOF/hzxtvZI60ChP0dcMr4/dhH6c8RVXe4N7SL054gnGvtWdxb6c8Tg
7Xv+11nozxHPde1X20nozxGTN/WP6ST054ivA45cB6E/R1xwNdwRhP4cMTzE
d6JC6M8BO1lp7Oso9OeAT7QX5AcI/TngQcd2TzsI/Tlg3L1TT9sL/TngpQ6D
89sJ/Tng9G7DUtsK/TlgY2VVWBuhPwf0a93ks7/QnwNOe7J2ViuhPwdM8fd7
4Cv054C+qQlmPkJ/Dtil8LmXt9CfAw72X23fQujPAZM0Yl94CP054NThkxa5
Cf054E9Xw5dyoT8HtC86Y+Uk9OeA+e9WmNoL/TngqbVhd2yE/hyw/7rzvS2F
/uwx5x+jJWZCf/Y4cFvvSUZCf/b4tJNDIz2hP3vMvPWqZxOhP3ssy0/30RD6
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
7KPcQ/kMcO2P5oG4nfIZ4J5z0/c12ET5DHDCJM26ZX9RPgMcdNO0pO9KymeA
nm6d3kYuoXwGOD/78Plz8ymfAUZVO5aPnU35DDDrqXNJVCzl+/31NppeRydT
PgPcXvE5uN94yqOPpiaee7vH0Ofr46BN/23cGkWfp49t2oyY1X0E+fro1afz
uoHDyNPHrCeDbc+Hk6eHY69f65kUSp4eWgd29L04iDw97K/16FnEQPL0MC49
NjQqhDw97Bq26X8FA8hrihF/nTI7NIC8pniluGddzQDymmJlSO21jBDymmK6
6QGH+wPJa4oLPpfFzxhMni76Ny3skxBGni4u9936uOlQ8nTRXXf5aN0I8nQR
L4RrLokkTxeja9acnz6aPB380uTQkkfjyNPBFVO2yc5PJk8Hsx9ot7KfQZ4O
jtHKH/8jjjwdNOkW5DM4njxt1NZ8Xe6xnDxtfHYw6+yCteRp432nvx/0ofPH
Vxt3dZ7ss30nedq4tF3Z/pj95DXBS6uyPx4+Rl4TPB7rlj3tDHlN8Cikj8+8
SF4TnJO8ZczEW+Q1wWulHi92PSSvMWr2tNfoX0leY8z8djhz9gfyGuNcv+hL
5r/Ia4xrTVw+eOrS9aUxPu/ndvWUjK4njbBP2aecLBe6fjRC59yVRg7+dL1o
hEHXx/36FUjXh0Z4/sT91b0GktcIa/o23K0eTZ4WOrwM1nGcQZ4WJjxeN/Xg
UvK00CV86ZBNG8nTwmwfPZ/ydPK00LvoHKzLJk8Tt7sHZm69Rp4m9hpa/deP
R+RpYoexHa+fekueJoYPX+iXq073I0201R0f38yM7j8aWGxb2O2KG90PNfBp
2KjGZwLo/qeB7++EO7/vT/c7DTT6FfpiXAx5GhjfvvViu7nkNcTe2c91DJPI
a4gPpoQtb72PvIaYWj2m9K8z5DXEmD2P35gWkNcQ10+aMP1SBXnq2NT6tM3W
b+Spo3/ihDV/GdLzlzoqTPv32eVCz1vquPjlxMfXAuj5Tx3PmLgcaDSQnvca
4Kh//mcUMp6e7xqgXYDJ5L/jyWuAyuJjmg3p52XfBjj0f76yiMPkNcBGtl+f
nMglTw3/ud9slfpD8tRwwbi8Tp3fkaeGPVNHeU7R0qj31PDeQcOJS6016j01
9PUus5vvo1H//l/K4PW+4wd2p9f/UrobNh6rGaFR/3k/lXt6RXRYHatR7/9U
up5cpft0BXk/lYqkderqO8n7odT+Gd/n5XHyfih/Hb/msv4yed+Vw59uv/n5
P/K+K9++bLvG9B1535V9ovvkVDbUrPe+KYcbdD0ZY65Z731TTumy5X2Su2a9
91WZFG1XPTJAs977quyvO6L9nb6a9d5XZcnwvLmlkeTVKQO9v0cvjyWvTrks
zeL8haXkfVFuTH8yZe1G8r4oW/T4OKZyH3lflIP1dLPzTpL3WTm6e9MVHpfI
+6xMftrO0vAueZ+UoT175seWkfdJ2bHlbIt+78j7pJxweMOm3T/I+6icsrzR
jzHaWvXeR6Vp33z7HWZa9V6tss/b0d86OmjVe7XKiTOu7urZXKveq1VW/KPo
e7a1Vr1Xo7x0OSByQyfyapSusb7hN3qS90E5pXu/x6NDyPugrOjQMWfoUPI+
KO1ld0oyosh7rzwVlhkTOo6898rufd8khU8h750yITr5UuYM8t4p3Tr4bIyI
I++d8uTukJyI+fT+t0pHq9cmmfH0+mrl3DfZJwYuoc97oyxN2XWr+zLyq5SD
NtflJSaQV6V06nFJbrecvNfKlbI3+9SXk/dKWXJotNwvgbyXykjr4JMnlpL3
Qune7dOqpYvJe6E8ZPxZe+9C8p4rT18yu2g8j7xK5ckwxdS7s8irUHq8GVZb
OZ28cuXwgT4jgyeRV66cftW+WnMMec+URa9eqpuOJK9MaaMd2nxuGHlPlS2r
Xji360deqfKg2aSbId3IK1Xeu7am5bUAen+Jsuz2oMWpvvT6R0rTTgesilzp
8/5TPhiRtXCqDfnFyoOPeoROMyTvgbIqvuu0/zTIK1KGbio4n/mZzt+7yue+
hyI/v6Tzu1B59ODoNUf/o/P1tvJK73V7H+fT+VygtCp87rrsLL0/Xzlszbiz
Bw7T668qn5+f7tx3B/3/IU+5fcSVLnGJ5OcqNSK2yzznkofKXnqrLk0YR+/P
Ua49sGpxh1B6fZbScnxZ+u5A+voB5ecFWnt2t6TjFOVn93lqnWzJU1NrEZU5
crG28HVFp3a35k74RNevA4q1SxKaNSij61eWYlJZUfPuN+jrOYo25wu2dc2m
6xUqimcMmPpzN70+V5FXjRdmraHrW56iTdi/Oadm0fuvKgbXFKzESLoe5ise
pDrN2NqLvAKFb6T9pR6t6PW3FWZdbQoLbckvVAxuovYjoDG9/67idmnl32ve
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
0M/+t3tBEeUzhsp1ycl/36F8xjAkfzi2uEn5TAA/rzUafZXymUCXdfZFvS9S
PhOI1L4e8foc5TMBvSPejSCH8plAuwM23n2yKJ8JOM09o7A4TPlMYKZBXlpa
OuUzgZxrBedfplI+E7iWFWfyaQvlM4ENVkd0r6yjfKbg/Oh1s6hVlM8UDi1I
uJi3mPKZwo64t1O/zKF8pjDrXINtddMpnym0vt7vdP54ymcK+6fNbTND+P2B
KbRcunjth3DKZwpnNjrKe/anfKaw8XPrsfO7Uz5T6GxrkbNWQfnMICi54ex4
f8pnBsrNa34ObE75zMA2RS9Nz4nymcHOTZYHjlpSPjM4lvw9oh39/BtvBi+9
W/861ojymcGixdpK05+a9PdFyG3z69p44fpkBgGes4KOv9Kkv0+C0fAuvapL
6fpnDnXTFC/t7mvS3zfB4fwH5+AbdD00h12v/L9Py9Wkv4/CxCblQzfk0PXR
HLbPX+x28mi9F28Odv3UOxbto+ulORxpPjumbhvlM4dJtU9G2a2nfL+Pb5S/
Cl5B+czh5ZUje+IXUD4LePn+pNvZGZTPAt5e36qjMYHyWYCph8b1wZGUzwLk
gxY/OhVK+SzAM2zWfuc+lM8CvBZpJOwVfv62APVH3y/6tad8FtB5z6M991tS
PguwTbg0cK0r5bOAx/sXfg9vRvlksLv9wuPtzSifDA7uqI73a0r5ZJBz9d/o
rhqUTwbzmx7rPeUb3U9l0P/uPNusD/X3y3gZfBxbmmH4iu6vMjizQnl+9VMN
Wh8A5bu7yxyK6X4rA4+dslH3CjRofQEc/zG2c/oVuv9agmtHnz4bUYPWJ0Cn
LqMN92TT/d0Sph220Ck4pkHrGyD67bkj1gconyXEfR0evXIX5bOEheFXV5ht
pXyWkJ1UMuniespnCeFbc4ckr6Z8lnB+sEvikqWUzxKuXV7it3E+5bOCRm8j
5135H+Wzgpvy1MU2UymfFRy8mTVswzjKZwUaTt/Mmo+ifFaQaPf9xPNhlM8K
xrTJanlxMOWzgi93Hi280I/yWUFqOKwq60n5rCA3+5uvU1fKZwV+3rfCliso
nzWU9ht3Q6cd5bOGk1pZIzL9KJ81bFhrdX+WF+WzBs+25bUR7pTPGtIfTZgR
40z5rMHyQZzOWjvK99tPXDH+nhXls4b3PvoBHcwp3+/Pq77mdsGI8lnDP/qN
CmP0KJ8NOEWWF7lpUz4bWD0z9Za28Pt0G0gpvhfSRJ3y2cB22bVPTj+F9Uuw
eXl69+FfhfVNkHbsXFHmJ2H9E8ycdsvDoUZYHwXLtwUUHH4rrJ+CfOuQngOr
hPVV8H7HHFvTl8L6Kzi9Ou7W2wphfRYMWPR3ybMyYf0WvNN2z3/3RFjfBYuz
m5mbPRbWf4HLnMcBIQ+F9WGwHqzO7b8vrB+D24+cTI3vCevL4KdVY9xwR1h/
BoHW59t7Fgjr0+BgcbRm8Q1h/RrofOixdet1YX0bzErzmj31qrD+DQLeR9kM
uSysj4P53mWNQy8J6+eg+aYFZ2JyhfV1YOH7/fiK88L6O2jm6D3jX6WwPg8u
NbFZ1OCcsH4P/i5pGhH6r7C+D9oZHE06e0ZY/wfzGsrTfHOE9YHQ6YvcNOe0
sH4QboY3mdP7lLC+EDoufTjk3Qlh/SHENZrSdVeWsD4RvkydfnXEcWH9IpTs
mznbI1NY3wgD7n+raHhMWP8IXa0S9r84IqyPhCYndgwsPiysn4QZho8T7mUI
6ysheNPn4keHhPWXoNccX1cfFNZngs3pFsN0DgrrNyE1MvpGywPC+k5o/frI
s8i/hfWfUFexquu2/cL6UHiptm/b43Rh/SgERT9Mck0X1pdCmUebO3P3CetP
4bz2V737e4X1qaDvuOJL273C+lWItpnRee8eYX0rwKqZu033COtfIXrL6II1
u4X1sbDNvV2C7m5h/Sz0DFWLX7dLWF8Ln4YWzbXeJay/hT16FW0Ppwnrc+Fh
Udi8LmnC+l0423pIoyepwvpemFyruWthqrD+F27cjzZ0ThXWB4Ov6yiHWzuF
9cOw69bl1Pk7hfXFsBU8Qr13CuuPYWazavPnO4T1yVBw2itr1w5h/TJEdb34
bcQOYX0zBJp75NnvENY/Q/CGpS8qtwvro6GRy4p2R7cL66ehv/mcjXO2C+ur
YXao/d3u24X11zCp59k7su3C+mzovOLb5DfbhPXb8Hzfm+W524T13fBc49eP
bduE9d8w7eir4//bJqwPhzeBmStDtgnrx+HB17UxPuQlOsCek+9bGJOX4gBX
O0y5+nGrsD4dBq35x+bhVmH9OqzrnWqCW4X17ZAUXb15/1Zh/TtUn16wPmmr
sD4enhk2ezeHvEoHONJy7Y4Y8moc4Huj6StCyFNzhDd2fVM7kafrCJ87xN/2
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
87KYl8M8ZF4e8/KZV8i8YuaVMq+SeVXMq2FeHfPUWrLzr6XU020p9YxbSj1Z
S6lnxzw58zyZ58u8tswD5gUxL5h5IcwLZ95I5sUwbyLzYpkXx7x45iUwL5F5
ycxLYV4a89KZl8G8LOblMA+Zl8e8fOYVMq+YeaXMq2ReFfNqmFfHPDUfdv75
SD1dH6ln7CP1ZD5Sz455cuZ5Ms+XeW2ZB8wLYl4w80KYF868kcyLYd5E5sUy
L4558cxLYF4i85KZl8K8NOalMy+DeVnMy2EeMi+PefnMK2ReMfNKmVfJvCrm
1TCvjnlqvuz885V6ur5Sz9hX6sl8pZ4d8+TM82SeL/PaMg+YF8S8YOaFMC+c
eSOZF8O8icyLZV4c8+KZl8C8ROYlMy+FeWnMS2deBvOymJfDPGReHvPymVfI
vGLmlTKvknlVzKthXh3z1PzY+ecn9XT9pJ6xn9ST+Uk9O+bJmefJPF/mtWUe
MC+IecHMC2FeOPNGMi+GeROZF8u8OObFMy+BeYnMS2ZeCvPSmJfOvAzmZTEv
h3nIvDzm5TOvkHnFzCtlXiXzqphXw7w65qm1YudfK6mn20rqGbeSerJWUs+O
eXLmeTLPl3ltmQfMC2JeMPNCmBfOvJHMi2HeRObFMi+OefHMS2BeIvOSmZfC
vDTmpTMvg3lZzMthHjIvj3n5zCtkXjHzSplXybwq5tUwr455av7s/POXerr+
Us/YX+rJ/KWeHfPkzPNkni/z2jIPmBfEvGDmhTAvnHkjmRfDvInMi2VeHPPi
mZfAvETmJTMvhXlpzEtnXgbzspiXwzxkXh7z8plXyLxi5pUyr5J5VcyrYV4d
89Ras/OvtdTTbS31jFtLPVlrqWfHPDnzPJnny7y2zAPmBTEvmHkhzAtn3kjm
xTBvIvNimRfHvHjmJTAvkXnJzEthXhrz0pmXwbws5uUwD5mXx7x85hUyr5h5
pcyrZF4V82qYV8c8tTbs/Gsj9XTbSD3jNlJP1kbq2TFPzjxP5vkyry3zgHlB
zAtmXgjzwpk3knkxzJvIvFjmxTEvnnkJzEtkXjLzUpiXxrx05mUwL4t5OcxD
5uUxL595hcwrZl4p8yqZV8W8GubVMU+trXD8/wB0Z3jZ
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
ov580EZ9V9SfD/Zf+lbUnw+uHae/XNefD/pEuC3X9eeDkyMbL9f154MJT3ov
1/Xng/G7py/X9afCSsetOq9chXFHS3ReqQrbhhtm6PpTYTm0yND1p8LqHTMz
dP2pMLbv5Qxdfyqc1FWZqetPhem50zJ1/anwUE55pq4/FY7Z2XeFrj8VHmv5
YIWuPxX+7v3nSl1/Kixu4qLR9afC5jtuaXT9qXDDP9tX6fpT4cc2mat1/amw
V+11a3T9/fz8qLNrdf2p8NUc8/W6/n5+v8cpWbr+vDE932Wjrj9vDH36YpOu
P2/cUfxqi64/b2wyMXCbrj9v/DZ853Zdf9546tPEnbr+vHF24PI9uv68sftT
4/26/rzRpOrJIV1/3njLJfiYrj9vvNL2A+r688ZdaS0KdP1549suqkJdf944
ceyea7r+fv57j/eluv68MUj144GuP288+OjlC11/3ng860qVrr+febaf/qHr
zxu3ah+ZWAn9eeHFVh0VVkJ/XjhilpevldCfFx5/Pb+RldCfF2J8TnsroT8v
PDZmR3/By/v574jjBS/bC/N7uiwUPI0Xjqr1eavgpXlh1YHlZwUvxQtdjULK
BS/JC/tsdDC2Fvrzwrzjq0Oshf68MP6gZT9rob+feVaXplkL/Xmh7dXeJ62F
/rwwIr/uF8FTeWH0qG5RNkJ/XliaeukvG6E/L3zz7PMlG6E/Lzy3Y7qbrdCf
Jw4ykk2xFfrzxJz4iPu2Qn+e6NPuWYyd0J8n9smvOGMn9OeJRyGwrb3QnyeO
6LHxpr3Qnyc+O95/vIPQnycerj3HTSH054nj5L3+VQj9eeKAQp9sR6E/T/xc
9/dZTkJ/nngkbNOfzkJ/nrhw3tzpLkJ/njjG7vFaV6E/T8zVz77hJvTniU0N
H/u7C/154vdrt9d4CP15ou+ND0FeQn+e+EJ+/pG30N9P74vDCR+hPw+8dPMh
+gn9eeCS2z3eBAj9eaDX+bKYIKE/D+yywv9usNCfB1b1V24OE/rzwJe/V22J
EPrzwMGTPZ9GCv154PCByYlNhf48MHurbePmQn8eWHfxmF6thf48sF/r+Ivt
hP488FRP1xUdhf48MCmhw9lYoT8P9HP60SdO6M8Dlw8+MmiA0J8H5r2b8WCo
0J8HnqhzuyxR6M8DW04oGTZe6M8DXziapU4V+vPAUcNRPVvozx3txpzZsEjo
zx0rrdYcWin0546mOZMXbhL6c8cxdzoE7xb6c0fjhwU7jwr9uWOtOkNsLgj9
uaNZ8uSkm0J/7thoHdwuF/pzR5sxt/p+FPpzx2kJvY2N0qk/dxy7tuw/p3Tq
zx1XdlkWEZxO/bljxq7d91qnU3/uqHy9tm6/dOrPHScUVJ6aQF6YO05SpdZf
Qp7KHVObThiaS57CHZcURqZcJE/ujpeO71vzgjyZO97/EVoqX079KbHOhsXd
Q5ZTf0oMVwWF9VpO/SnR2dE6Y8Zy6k+JN/95u37ncupPiUkdIibfIS9Pie1H
usaYZVB/SrQ31apbZlB/SvyU4DBjSgb1p0SPSV7NDmVQf0r8e3x59n8Z1J8S
XzSd/Coyk/pT4qvrntEzMqk/JX7E/k8LM6k/JS7t/MrIZQX1p8Soi0+fjV1B
/Slxy4BLJy+toP6UuLBibon/SupPiSdGpg9evJL6U2K81+u86pXUnxIf94wy
Ha6hvtxw5rYz+WUa6scNJzxaqt9/FfXhhlvajWj5cBX9/G5Y3ejFqZGr6ed1
w/0+M/+VraGfzw3rPlj8cPUa+nncsMm7XhHqtZTfDVfVd23wci3ldcNOsa5N
s9ZRPjfclLL2QP/1lM8V3x15oeeTRflccafPkIzqLMrniq3MJpfc2ED5XHFc
yp5Q7UbK54oRmes98zZRPldM8H3vkreZ8rnivqpBq7VbKJ8rHrQ97FCaTflc
cUX+MVvZNsrnikdqRdqG51A+F/z64emaSdspnwua/zki/NIOyueCWdbNhtfb
SflcMBg3Xli/i/K54LnIZY899lA+F6zlkd3x0F7K54KDd9Ra1y+P8rlg3IWG
I+wOUD4XLL4S1OXhQcrnggFjar06eZjyOeOaWnfvHjhC+Zxxpt7dMyeOUT5n
HFX0qNXdE5TPGY37j6ltdZLyOaO529hN/U5TPmccf9P6Cp6lfM44LnFZvSbn
KZ8zRq7/+nvRRcrnjDnbv/tMv0z5nPH+sc320UWUzwmt2jg98C2mfE54xy0x
yOcG5XPChxMa5TQvpXxOuH3Z6M+T7lA+J+w9uvbFy/cpnxM2dFt+Ah5RPic8
Y+sz7Vo55XPCtZ3PbZv5gvI54aTRIQ+7vaZ8Tlhe8Oe56PeUzxHNp62rjPuP
8jni/ZMtvy/6TPkc8VREyJTy75TPEdeuqa6Or2NSk88RIx4srPvDwKQmnyPq
bSvyPCk3qcnniN8Tfa5vtTSpyeeIhwYZLc+zM6nJ54j/1k8reexU48kcsXTf
6zpN3Gu8cgX2+OA+N19V4xUqMGdKZ22/wBovT4HT3Yb88A2t8TQKnLB1foZT
I8qnwIad88+GN6N8CvSdXv/ixFaUT4Err3669qA95VPghdJRdcd3oXwKPLbl
yJSgXpRPgbbje7SyHED5HPDG2cUDnRMonwN+Uhhf6DSS8jmg0aoWg3eMp3wO
KK9ta1J/KuVzwNfmLRb+O5PyOeCM8x+37lxA+Ryw5EEf423plM8BAzc7dLuw
mvI5YPzyChvLzZTPAac1blo4PZfy2eOt+J3PLA9QPnvsLj907sJxymePOVvb
HdhSQPnscVtG4svNVyifPXqsKF9acIvy2eOdbi+OGz2kfPbolXB+7MiXlM8e
vQO2rnlbRfnsMe0qOC77TvnsMa50677OhvKafHaYM8rKMcBKXpPPDr+9zH3r
5iyvyWeH9jeTTtVTyWvy2WH+NluD2GB5TT473LDzjvuiqBovwQ6vx2wYeLdV
jRdjh8++npGpO9V4YT+9+hHee+NqPIUdBo6fVhYypMaT2WG5U0l97SjKZ4uK
tFZfeyRTPls0mlfi+HEm5bPF/ZvzY9Yuony2OER/pbqNhvLZ4tJDlxa+30T5
bHH5umMn1uyifLa4oX3TNi3zKd/P491V8x6dpny2GPvy2s3J/1A+W0zwWTpG
v5Ty2eDX7CYzZz6ifDYoN7wc9OYV5bNB/6Nn/47+RPlssP2uh3+l1jatyWeD
R5VFDrly05p8NthtyavQ/XamNflsMC7HaetqpWlNPhtUOme0GOBvWpPPBgsa
XDv3JazGk9n8vHROfDOyaY1Xbo397WOG7Yuu8Qqt0e4L3D3bqcbLs8YrYckV
m3vVeBprjJo+KDRmIOWzxmWZJa0PD6N81qinH3XkyVjKZ43Rm04qryZTPmvM
SFhpNHEG5bPG6f4BdUvmUj5rLKoYveXxYspnhXOcI/7akkn5rPDPKdMCrNdS
Pivca1Pc1n8T5bPCrFN5U59uo3xW2PJI5fg2uyifFZ5Z4P88Oo/yWeFvdTzX
PDxE+axQr3PHfvbHKJ8V3r8WafxQS/ms8L93+kvUpymfJY5r97gisIDyWWKX
xXNCtp6nfJbYfcrWv3dcpHyWaF57gmPDQspniSOCrNu3uUz5LNH7kXxK6WXK
Z4l9L50LfnmZ8lniSW2l0eTLlM8SEx9/ODmTPJklHjvVMVT/EuWzwFMbPsf+
OE/5LPDugEswsoDyWWA3i6MNOp6mfD+PsyIWZ9HPm2KBJucHlAw6Svks8PrC
1rvSD1I+C8zdZPU6ZC/ls8DA58ELm+ygfBbYZ8DAXfs2Uz4LXHPv3Lr0tZTH
HM88fH7jXgZ9f3OMObv+S/pC+n7maHPq4719s8g3x/c+xjMaTyHPHKc4nbAI
ovOt0AxVvaZXzE8gzwzzBt7d2LUPeWYYvc63cjad32Fm2PLW88veLckzw8c7
e3QPiyDPFJ2m7ry725c8UzwW99erNY7kmaINljf9akKeKQakbj9y5StdD0xx
3Z2YvxWv6O9fjttl+uW379Dfuxy/DN0+TFFI1x85KpVTT5ccoeuNHF/3e3rb
Ioc8Oa6+5ne5KJM8E4x6//ih/SzyTND43SrN8zHkmaDbX3br2vUjzwQ/tjxe
2LgdeSaY53M5+EwD8oyx7t+z6jx1I88YKzqH79hmTJ4xPtnU8ojpB7qfGKPj
OPPXjvfp/mGM2c4X610/T/czI/z4tOG85vvo/mWECSf7NRy6mu5XRgh7nDJa
zyLPCD377Pd8lkieEfa2aTGna3fyDHH8c8Xs+U3JM8Q1jV1qZ3qTZ/jzeeyz
bIopeYbY/7d+WeoP9HxliMuzzRUv7tDzlAGGmpkcSzlDz08GmGwz9a1RLj3P
GeBN2eGQNOH/Hw1wwgZvU7Mp5BngnLqOysxB5OnjsNc5tgHtydNH58Ixm4tD
yNPHi24d0zIV5Onjai/H5ZNrkaeP0zd3nZP63KjGq4v9H2HYyatGNV5dPLhY
8XvIEaMary6O2rGi4u5GoxqvLmYOTp9/eYFRjVcXVxTZygwmkKeHQauH117a
nzw9PD9rT9S4tuTp4fDiYS33hpKnh2c2mmZ3cyFPD/OdV98aZEheHXRYU7/x
w0rDGq8OVh3Nsi29b1jj1cH13Z0yOhQa1nh18MvI8xda5xvWeHVwomXy5nPZ
hjVebbzl1Lvq1nLyamNO+Z4hf80krzb+uL5hMo4jrza+PVQrfcMg8mpjwtPQ
Mp9Y8mrhKFfzP3q1Iq8Wbrp/r1ajCPJqoU/cgG6XfMmrhbXW3Sy2cyavFr6X
N0NXC/Jk2OfAKM+neuTJsN6spCtJnw1qPBlWfbnX9/xbgxpPhiPCovyePTWo
8WS45J/U7jfuG9R8/Q/ti7XXz2Tcos//oc2f897R75pBzff7rj3WXXV0WSH5
37U7q83OlZwj77s29uoil3enyfumPTKsOO45kvdNO67h+GsnTpD3Veu5J2fl
uOPkfdWu91k7se5x8r5qNeevVk48Tt4X7ZP/sttfPEHeF+3D/lVjvyJ5n7Ul
L7T2ZmfI+6ytddl043ch32et96mLQZcLyavWLtlSlD7pGnnV2uFD6w74cYu8
T9qrvZffGFBG3ift++/Nq1c8I++TdvrL0ulb3pH3UdvW+NCt2V/I+6gNvjw0
NEKffl//aUObxo/Ls6Tf93/aos2Poj670O/3P63xkvsv9APo9/lBe/Hqt3XX
G9H58EF7rMHp0EFtyKvSHks633xbD/KqtL/LTfw2JZBXpb09vrthx4nkVWqX
NDhxetNc8iq17j2b1l2/irz3WtetPZtF7STvvTbD7n7OaCTvvXblvnMdIkvI
e6dtOdHi25Jn5L3TvuyijRvzjby32icr3twosqK/57fakJD3R3b40t/vW+2y
3dPdPzejv+832o6zqr7t706f/1q7M2WHy/VEuj680s4919U/dhb9vVdov3bu
l+uzhrwKbWPnKaa/7SfvpfacynX1gULyXmijmxjPG/CEvOfaWrteV8J38p5p
i74ZPu5iT9e/Z9qKWVc6zQ+m6+NT7XjnTa4P29H1s1zrfCk1oMtgur4+0SYk
32lzZSpdfx9r++V6N+uWSd5j7bjW50pu7ibvkTah9ZWiLhfIe6g9svjop/yH
5D3Q+uSCveFX8sq0t2eafw+zpftRmdZXoZkbHkT3m3vaDpFX1um1ofvTHe08
vwcNNQPo/nNbu6FrZd+XE+l+Vap1elsUULmYvFta70uZpdu2kndDayPvcUBP
S16JdlXwLv8f18kr1uY26ndmSQV5V7UlbmeD9tWm+3mRNvD40Ki+DnQ/L9Se
9m1/b049up9f0AZf/CMqqAXdzwu0sZEfNG170PPBae0xt00TioaRh9qGnUon
aKfS1+drr7UpGW++mD4/T9tq1KGUI1n07zna0Ki0u0f20rFGO2t7kIHJKfJk
sl7dVXlbrgr/rg4YM+La7DLh69VbGtinZ78WfPVF0x8D63wVvr86t1ZUxQpD
el5D9bjixcp4G3r+Oq3+MvBqcC83ej4rUJ+7okif6kfPbxfULYw+1b4YSs93
heombVL+btqYvCL1bw1a9ylpQZ9/Vd1/SCO3tHbkF6sDb47NGdSJvr5EjdH3
XHt0o+93Q/1aXvJ6SC/ybqmbJS0qXtiHvFL10PaLr13pR95tddvd5U38B5B3
R233Kn73mgHk3VM/Hr/KymcAeWXqoxXVqy70o88vU1sOXHJ+luA/UF/KvZ8Q
14u+/qHaJXxOWttu9P0eqZPdbq6K7UTeY/Xn4PZNp7Yj77G6+eLyP84IP/8T
9fVNs/sENSavXL1lRJ3Vx0LJe6reM6t71Vg/8p6pM7rNn9zFjbxn6tvb98zu
b0Pec/Wzdtv2rjEk74X64IXbd8y/0u/7pfpjx8eqY6/pfKlQ22vs32wpo/O5
Qv3oraz4qnD+vFLfnns2t9UpOp9fq0Oejl9aZx95b9SdPrW+Yr2BvLdq1eiT
Lycvps9/q3Zw+3dDs2nkv1Xb1qq6P2Q4ff07debqf89W9qDv9069dP7Wje9a
kPdefeq55v2QIPLeqwv+uN+3m4K892rX6532FtQhr1J97oVT+alX9PdbqVbA
GNvON+l6UKVe7G06ZQLS9aBKva57ydioHLoeVKmNu3UYm72Urgcf1N/7u5uc
TCbvg/r1jcXPlg4k7z/1aL0755TtyPtP3dn7QPKEYPL+Ux/Zobm3wp68j+rN
qyMeLxZeT/yo3ld5+u+hT+h6+kn9u/mAI8pCun5+Ul94O3jJhX10vfykPjig
QP6Hhq631eq8whEN9VLIq1YPf5xqm51A3md1HfyQ3b0DeZ/VTdZueuTYgLzP
6hEGbw5/cyTvi3p7L1sD/drkfVG7Tdq8rvFzuh99VWcfqmyaXUT3n6/qqD2b
F3U4TPebr+rW1YGekVl0v/qm7p0+bPyYuXR/+qauc7vJ/c9jyPuublDScOP9
OPK+q4es6nTbuyV539XZx9bPLgkk74f6Q5uoie/tyPuhPt9Ef0BqLfJkEOCz
81RmBd2/ZeCyYOVXv1t0/5fBuKIfkdFnhOdLWBlrkPxuj/D8CbmR71JD1gnP
p7B9ffx3kzTh+RUyD+xunTpZeL4FZae4hVuGCc+/cH3En/+MihOej2FFSOcL
5e2E52d4d0lfz6qx8HwNv63ucKEqUHj+hlV2TX3S3YTnc/A6EvX6rZXw/A5z
u3/cbWkgPN/DgtqzTnwSns/qgFx/ekDOO3q+qwPNi7uc835Gz3N1wG5ghnLs
fXoerAOzPiXPXHiTnv/04Iyme/XUIvL0YIFpq7bNL5KnBwN23X9/+wx5etDs
lWWjjsLzqh5cXvDFSnOMvLowelpV1PF88upCZs9NnkcPkVcXXgYHflt2kLy6
YFTw5/5WB8mrC0V7F1ReOUiePmyfbujR4DB5P487bB865gh5+nD23OuNM4Xn
a30YUffStMST5OlDU4tJvf0KyDOA26u69T98iTwDePD37TH218gzgNicXU1a
lZJnAEnZB4KbPCDPAFbf6DTj63PyDCEzQuP3dyV5htDkr5MVF76RZwgjno/v
WWRIv19DMPzW/eRSG/r9GsK9c3M6GrvT79cI9IrbvAsPovPFCEJ9V4ywaELn
ixF45L3rnNGePCN40draEIXzzwhqz7xQuGAYecbw7MXVvZXJ5BlDdpvTG9/P
J88YNubWSpi5hjxjuNH02LqsXeT9vC68rvyn1UnyTGDm0Plxw0vIM4Hhwb1m
mTwjzwSqx7ab7PGVPBPoF5zSIceC/r5NIG3ElGqNN/39ykGrbDH0dRT9vcsh
JH7p0KzOdH2Qg98quTYngf7+5TC/7WhfvWnkyWGnozYmJ508Uxh/cdrlZdvJ
M4W1p0pbHTlJnimo8U4bRSl5ptB39Yo/ct6SZwo4pH2jIYZ0PTWD3sZz27VU
0vXSDJwPdguFRnR9NQNzt2aLunWm66cZPDEYKZv8B11vzSDVf3f49hTyzGF4
yaTyeyvJM4fmU+/estxLnjksWzf9YZML5JlDrQZjXsQ9IM8cChVWLwdVk2cB
Sy/erexiSe8/WMC9Sz4B7n50/7GAOo1LrlwEev/CAma++BbVrhfdvyyg1tzF
DzJH0/sfFpDf7p/uu1Lp/mcBGTnX285fS++fWECPo3XSvPfT/c4CnuzrbjXl
Ir3/YgHtG+5/N7uM7peWcFlVf0jz/yifJcyb5Hthmwndvy3hxJuR2YeU9P6A
JbTv1zxnWDjd/y2hJKzT1iP0+lqKJYxonL4+ux89P1hCWmTAUb+x9Pq/Jbwc
bt8RZtHzgiXE7n92szyT3j+whDWT+uo5Cq//WcF0o/IdN47Q+w9WsGKvd8n/
Xj/8lc8KLvXrsKfsDuWzgrFV4zb4vqJ8VjB1TFHEG3p9MsUKiu69qxcqF14/
h8zBV8e9cRReX4d34x+4efsJr7+DbUrd6VcjhNfnYUeDZL1K4fVTa3iVn91r
bmfh9X1Isa/osKSv8Po/lHl0fmL0h/D+AKxp69Ohapzw/gHIF28r6zhNeH8B
ysOTfBRzhPcfwLFv3etdlwjvT8AhR6/zX1YK71/AnbnhxjYbhPc34Lz7wn9W
bxPe/4DFxjvGpu8W3h+BVfmjJn05ILx/Ak9nN11cclR4fwX0t7nMczspvP8C
LlEF/e+eFd6fgW7nNtczF17ftwGz77ciDtLr9Xk2sNfR515xEeWzgQcbH2wb
Vkz5bMDT5FKT5OuUzxZcHr7pr3eT8tmCrevk9/JblM8WHPynf1x+i/LZQn7n
U/PW3aJ8trDNY8b9gFuUzxaaT/RpqyZPYwvHNpsF3L5O+WzBc2GYfu0SymcL
95xeJh68SvlsYfs/y/W//EP57MD20W8Lr12ifHYwTbuiUE3vd4TZwb+Bzlmt
z1A+O8ivbPe+XEv57GBAosVR1VHKZwc/Fi35bnCQ8tnBBdNrlxbuoXx24PFj
cuOj2ymfHeSumj8qfTPlswPTufYLFesonz34Rlmd7byC8tlD38sm7ZrQ+RJm
D1//rdXp/lzKZw+zd9c3bzqD8tnDpJgnp3olUz57KNMM2RQ+lvLZw0zV2Wc3
/qB89lBQdO+8Op7y2cPH3MZ/JvWkfPawbJKl24SOlM8BNj9uUdGmNeVzAP+v
f8jeNKZ8DrD/yeM/R9L/n8Y4QKeoz4MKfCmfA5ir3v/z1ZXyOUDEjDZHrW0p
nwNMNbnjYkbvR+Q5wLhXEQ9eyyifA2xfV/jo8H90fXGAB+06fxxVQdcXBchP
m5VZP6TriwKUrrHdtt+k64sCyt+UfGlwma4vCpjVNHj0QeH/vxRg7Ph7w5DD
dH1RwLmKxMtbd9L1TwFuPY5qnDfR9U8BrTe/rVy6kq5/Cph7ZqKH8SLKp4Bc
TWTvOTMpnyMsWt3zhEky5XOEmKw3AzSjKJ8jtN/xrGnoEMrnCBdWnW91K47y
OULAvGUdF3aifI5wOG+nR2xryvfTP1AyIaAx5XOEkQ/lL+xDKJ8jNJ+/xczR
h/I5QsHLZvFhLpTPCcJX3Wo71JryOUGO/VO3vUaUzwmsh4zxd5BRPieY3az+
6tX/0f3NCWKvH1vW5BXd35zg4np0+/qI7m9O0MZJpb79L93fnKC1V687/16l
+5sTwKYZV7+cp/ubE6S2Kn7aDOn+5gz7312+ufkQ3d+cIeL00nZBu+n+6wwO
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
Iq3Qag==
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
UforY526P3cc36pJ7+Xq/tzRu5l95EJ1f2549pHX1unq/tzwYXQbj3Hq/txQ
XrD39hB1f24Y5VKwtae6Pzd8b7tyXjt1f274a+yN4Y3V/bnhq6D/mvqo+3ND
84jjZTbq/tzwtipgZi11f25odvfA+U9V1J8bxp+6n/WoivpzQ7397ZpeqqL+
3FAjan3r/VXUnxs+XzrgeEoV9eeGrj1qz5xGXqAbvlxdMqMfeXI3bOccsrEZ
efZuaPvo0TlH8ozcsPevFXk/Kqk/N+xveXFvfiX1J8OldVc0yKyk/mTYw/ho
m3mV1J8MR/dKOt+zkvqT4eb33xbJyUMZ1u0fO/5rBfUnw/LZD3oqK6g/Gdo2
32C2qIL6k+GYtQlTO1VQfzLsU3x8kFEF9SdDs6Scjbk/qD8Zlu1crDH/B/Un
w/xdnv0a/6D+ZHjkRfX04u/UnwyP3TkdsPY79SfDra+Cmrb4Tv3JcPrRuHHP
y6k/GUZa7V8xp5z6k2HxtmbD7MqpPxm29d26f9836k+GgzG+bug36ssVh96Y
n4FfqR9X3PAuLb/lV+rDFd1PZE04U0av3xWDlEVN6pfR63XFC6NGvtn4hV6f
Kx43XVlH6wu9Hlec27bw3KDPlN8V74zQ6n3sE+V1RYcZ9zdpfaJ8rrhyzIy2
7UopnwtuuNa1at5HyueCb7/pjj72gfK5oOrtoRZPSyifC2ruyHX59Z7yueCu
lh2OmL+nfC5oc+3YZsd3lM8FdxYEJzkUUz4X1DXfZ27ylvK54MgE5eNvRZTP
BR+W6y259ZryOaOyl2t2+ivK54zzy07pDX1J+ZzxjPYdG7sXlM8ZAxpcTFAW
Uj5nNOwa87LPM8rnjO+ad3v08gnlc8bF2vm1oh5TPmdMcez8U/WQ8jmjXKf1
QL8CyueMC01XXZ56n/I5od6IrXeP3qV8Tnh/8Br583zK54QjDRZG/rxF+ZzQ
5tVhE908yueEK1+de/PrOuVzwuL1VYteXqN8Tjh+xoLVx3MpnxPOarv16JTL
lM8Jx035sdLjEuVzQvvT9x6cOU/5HLG4y+TGrZDyOeKVRq2GZp2lfI54p6mf
qdlpyueI57a/+tb7JOVzxOkxcHfJMcrniMtqxY3bfYTyOeLCqSOXHjpI+Ryx
4UGrb9syKZ8jri25NGvOHsrniJW+0362zaB8Dji4s2+X8m2UzwFHaNTttWIL
5fvz+1qLqi03Uj4HHHM5uPHcdZTPAQ0apVbdX035HHBLx4Pt7VZSPgdcNC/J
u9UyyueAdsfn7+65mPI5YNfO+191X0j5HFB7rll16FzKZ49XJ+nLDGdRPns0
LVkzJ2ca5bPHf/vv6Bc7ifLZ41mXwb9+jqN89nhuxtyT00ZTPnuU9U5+/yya
8tnjvgYyjcAhlM8erVsFj544gPLZo8+gIfs396F89lg+xTTiZATls0OrLie/
KrtQPjvMa+kUcrwD5bPDHlfGXdvQhvLZ4adRSeMmKCifHfqXan8MaUL57PDV
nBiXT0GUzw4zxnd6vb4e5bPDQTN7BIX6UT47/OI71EDlSfnscKfLirgerpTP
Fs1lQYvz7SmfLbZeUjShoxXls8VCjcmDT5lQPluc4nlnnac+5bPFN7b60Uu0
KZ8tmnSwbf+wyrQmny2u2NRy8sZPpjX5bPFdVL9mA1+b1uSzRbcXtba4PzSt
yWeLvSc0OVFyw7Qmnw3eqcw9rrxQ46lssJ7sZNHmkzVelg3+Tl+dsWx/jZdm
g1s/nB29fFuNl/Dn+ZdTcFdqjRdtg1VP17V+mEz5bDBz0PwMv3mUzwbPTmu2
f+NUymeDaS9uBASNoXw2eCihjcG3IZTPGssVcaEv+1A+a7wdlX1aqyvls8aB
0Xs2925L+azxyKedla+bUj5rvJ4/5vPhhpTPGqdcWZep9KV81nhFptPf0o3y
WeODb8FBh+0onzVadtsTu8mM8lmj1gPzFo/1KJ8V/tidWjhBk/JZ/fn3x6/F
QypNavJZ4YTX50cfKTOpyWeF99oGHR7+waQmnxXOGxY/K+GNSU0+K2zXZ3Wx
7guTmnxWePtEX61fj2u8wD+P/xSdE/2gxrO3wtee2p7t79R4GlaI/5p835FX
4xVZ4opRT3XnXq/xVJb4b5xjrcKrlM8SZY6bEi9doXyWmD2ltWGjy5TPEs0C
bn1ukEP5LDFmYs505SXKZ4ljBre4VHiJ8lnixAs3VetyKJ8l5mZMHPGOPA1L
jPowuvWDXMpngVHO8HqYivJZYMmJAztX3aR8Friq/4mDQ/MpnwV6ae6tLrhP
+Szw6MLW/b8/pnwWOO/9/YFn1f1Z4OhJS0fUKaZ8fx7/YUN6+0+U78+fN/x0
lekPymeBqxfPqr9Ag/5+zTHgyYNTO/Xp79cch+qcLZhkSeefOV5rp1z22ZnO
P3OcEf001dGXzj9ztPg8cNqXIDr//nhO58ZMbknnnzkOlN+K296Fzj9zrA7L
bzWjP51/5jjFVtWlKobOvz+P71eU4zad8plhZnX56pLFlM8Mm1jKBkSup3xm
uDIpZdbwfZTPDJd3mGJicpbymeGpfq+ed71J+cxw31KbBd4vKJ8Z3pTtbbry
G+X78/gEnYUXa9H1zwxLumj00jGl658Zdiurez1Jfb0zRU2IWRjuSdc3U9Ta
PflH53p0PTNF+9DkOUua0PXVFB+2/h3xuy15pui3vWj5nn/IM8G4JS/qJtL7
Q5oJppz4aLJqFHkm2PZR2OfcyeSZ4GKN/jP85pFngiMPPww59C95xui07Fxq
7w3kGeOmikVlTrvJM8bpK3ok/zxKnjHqPmm17Ms58oyx8vsJo6ob5Blh4PxL
xhaPyTPCXbPXzw0sJs8IE6I1O/QrJ88I+2m+b7RQ27zGM8LnzXSM95uZ13iG
mDJ2wKIbzuY1niEuCDPu8drPvMYzxE/Zn+0/hJjXeIbY2HN0/PM25Bni+bte
Jv/9Q54BLmv5bvzsgeQZoPnXuFCX0eQZYLtpXTTSppJngA06noh6N588A5z3
eX6l8Qry9HF+X8NJvzeQp4+T55jPPLWLPH2sN+HotSZZ5Onj16uRPjP/I08f
f6/fMHx6Lnl6OPdy4IgGd8jTw5Hlr9w3PSVPD/f9GrQt+y15ehj/3FNn/hfy
9LBu9MB536rIq417m52IMdaxqPFqY/db3n6XjS1qvNr48vLpDq42FjVebbxZ
v8sECxeLGq82eiQ1HbXJy6LG08XJK/WczgaQp4vrfX6ljg0kTxczPY6YHQwl
TxcdR64snKEgTxe79G235HYb8nQw8a7nqUMdyNPBXYXj21l1IU8Hp/fb06jq
H/J08Pubw8eG9iRPB9/3/SQP70NeLWyk18suqy95tTCmXc8Oqf3Jq4XdUs/v
/T6AvFponpc+KH8gebWw7dP7Z30HkaeNdkvvdqkcSJ42Hii0zWszkDxtTL2Y
Hqiv9rRx3Zju6e36kaeNjYYHTdSIJE8L699KbxLUizwtfKGKxJfdydPCbhmJ
v027kqeFJU/X+Z7qSJ4WGj+22/myLXmaOFPR1/hfIE8TD5TYNjzdhDxNnHvt
u82YIPI08eLw8i8765Cnia+STtUbKSdPA+Pcbo087kKeBrZcdSsmxYY8DTx9
J6ahlgl5GghnIt/r6JCngZvOtS/dWkXn72/l+stpFws+0/n6W7m4h4Pz4Td0
flYrXa9su+P/hM7vauU0162lnW/T+VytPP1yeZrjZfJ+KXXeRXqknSbvl7Le
mn2a1w6S91M5N6LhtWPbyfupTHa8FjwwlbyfyjZH0+1zl5BXpcSNTYZXzSKv
Sqk/fpZX5XjyKpVFuzfNvjqUvErl4UM6+yb0Iq9SedOvfsXX9uRVKDMmTc2N
bEpehXJS70dLd9Yh74fy4MezZ5+4kvdD2fDquje1Lcj7odzQe99631rkfVe+
3rp9bHv19fK7sm98q9+j3tL1tlw52+5nccpDur6WK4/2X3vtmoquz+XKHXsv
NbdV0vX4m3J9au6dGYfJ+6YMnGDg/Hs7eV+V586cXJexlryvytKccWenLibv
q9K83+PPU2eSV6Y8dmLk0sxx5JUpL+R/vOYwlLwvyt21Jj673Iu8L8rDFs8L
TnYk74uy8OLzo19akPdZ6V2c0Xl6IHmflYEFt4b08CHvk3LOlKhVC53J+6TM
WbW7t4UleZ+Us7MG6//Wo+eXKh0azDy4pZre3z8qw294rzEvofuBD8qkHXXn
9HtI9w8lykOenW8tyKX7jRLlhXfdVq/Opvf/90rZip8TV+4l753SeIvlibkb
yStWftdeETZ6OXlvlefbam2NmE/eW2XMKecnimnkvVE6FEzICBpLXpFy57F/
mgYPJ++1st7GdzHtB5D3SmlyYEnK2F7kvVJO62i3dV838l4qF38/ZagVTt4L
pe6o4/fi2pP3XDnMf9pyrTDyCpUxQx6EH2xDXqGyQ9myA9Pb0POfKhP63ns8
rC09/rFyXK9/ksa0oz/vkfLSVLN3KR3JL1CGr3x44V4X8h4og4q3RQX1IO+e
ckJ54Jq9fcm7oxw/wPhc8BDy8pXdr0y6eTeGvFvKd67ZjRdMIi9P6b96l3aL
OfR8lbKRqsHl6iX0+FxlTEKbzHPqf4/lKF32XR83dyf5F5QTR3we1vgoeajU
mhs7tfACPT9b+X2bR924O/T4LKWf5tP9xfTvybQ9Ss3Wfmea/aDjNOXMhsGD
j+jQ+ffnCpO2+G2mKZ3PaYralfG39B3oeI/ifeTwvIuedH5mKa48HTuxoB79
fraiuvVg19ZNyUNFh+ZbHX+F0eMvKEa8rrtEi/79H52jeN3z2Ngug+j5uYoF
s3cdfDSa/n9RKTw6j7LbOY28PEVxgwX9di6kx99S7NMtsrq/ivx8RYf+vqqg
dHr+HcWzgKLyk/vpz7unaP1Rv2rAafIeKIb+atTAJZe8AsX6Ph5vyu6R90hh
sclgSIH687vHClWo6fMr6s8znypu5WZuOaNB179CxZhErwcHTOh6WagYcP7T
pTQnuh4+V2gN8tk9VX3/90Kxp87XC60a0/X2pcK9/pfob23Je6U4vX998eII
8l4pbltuOVwZRd5rxdsNrYJajSWvSNH86L4ffWeQ90Yx07/OekUSeW8Vdp6J
V9+tJu+tIuSBbY/eW8krVlg1M3NK2E/eO8X9lUmeUdnkvVesqp3675eL5JUo
vGd339gwj7wSRcjmy0ccH5H3QaE14mm/Pa/J+6joFlOv/f1S8koVL0ovd9ta
Qd4nxY1Wj6dpa9P79SdFw7gRpRWG9P7+SVH32QmzuVb0/v1ZcfjpmxFrnOj9
/rMCy1seCvSk9/Mvio+aK+718Sfvi2LCpR6Vmg3J+6I4HFc6NqAxeWWK8F27
z9xtTl6ZYsbo3VurWpH3VVHv8x2Lje3I+6qIWZ/W7Fgn8r4qgs3Wzm+rvv/5
pvjp1mhhp+7kfVN8CvG3y+lBXrnCtM7j8KO9yCtXWI3fPcZafT9YrrjY0+33
2z7kfVe8XOmJdSPJ+65wv/90T1Ef8n4o2u45VmrWh7wfirNT7X7v70XeD8Vt
t9A5//Ugr0LhbZbZrbU6X4Wil8On5OZdyatUHI1/uvBAJ/IqFbbW2pdS25FX
qZg/44nB//qpuf9QWHw06PJQ3V+VIuBl5KmQxuT9VPhNvXzQuiF5PxUv2404
N8WfvJ8K81bBRwd4kvdLsePTg1nX1X+/vxTnitq2zrUir1pR8rp/7x5G5FUr
tGNGh07UJq9asSl8S4q8Un3/prAKHRk6+ZP6/k5x7vAVryFFdP5pwLMxqfGf
H9HjNcD16eF471t0/mpAvUzZMr0cer4GtDat1zTtFJ3/GmB5d7Lv0wPkacJz
7Uf2j7eRpwkLqxPfpq4lTxMe2OYttlHfz2lCYqKz3oBZ5GlC0v7zc8ePJ08L
Vh3Kl/caSp4WaHT5GmzZizwtKKpw+52pvp/Tgu4h0+/7NCVPC4rrVMuS65Cn
Ddum92j92JU8bRjXZMleFwvytGFM5zsX+6jv57Shfd4/Givo+yOVNvS+kncl
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
DtjrLT+dR9dnJ9iTuKJXzDW6PjvB2jwY6ZVD+Zwg36k04wNSPie48qRj8YXT
lM8Jzg79UrH7OOVzhoC+y1I3HaZ8znD4x/tJ2zIpnzNc3e8XenIX5XOGar2H
c55to3zOELbHr8BuM+Vzhm5fna4OS6N8zvC171HVhdWUzxlMSut0C1Z/X+UM
/qZNss8spXzOkFTSeEjvRZTPBaYdit+gO5/yucAq3Zn7rs6mfC7w9Fbgze3T
KZ8LlOd3abJqCuVzgdvGM23XTqR8LtB0+9Gkg2MpnwtcMEjc9TSG8rnArJ4D
FnqMoHwu8KVvvv9s+ry96M/zUys2fhxE+VwhY8mu/En9KZ8rqEZfuWAWSflc
4UD17r7ne1I+VzAY3nbO4u6UzxU+nF1rEd2V8rmCZ2xhae9wyucK8ic/SwZ2
oHyukL9vz8PpYZTPFeDn7QX7WlM+VzhW+uTIJ6B8Mnhu/sW7Ywtz+vlAqLOt
5fYTTSmvDLQ2dytsHGpOP18IZyc2Sb0eTPllUKwonzk5qMYDGbRfnda6fkN6
PTJ4vTJt/a96NV6kDGaNMKj3pA69PhnYmD7Zd8O/xouTwYbWjqdu+dLrlcG9
dDfNIu8aL1kGtV7elxvK6fXL4HqzNzfBs8bLkMGX0x+3JLpTHzI4ffxY6GNZ
jYcymNe8v6KlK/Ujg47LFnc/Rt/XFshg89x1Vo2dqC8ZDNA5L891qPHKZBA2
v63fSHvqzw2i+ixHKzvqzw1mdhqw9IYN9ecGjibPA9ZYU39uYKsqbDfSivpz
g4F5d+e0s6T+3OBzW/34hhbUnxvUdz74wMec+nODni6/2/iZUX9usLph+PBg
U+rPDVw/2r8IN6H+3OD28PrDxxhTf27wtN+BtFQj6s8Ngm/aB1wzpP7cQLdy
7NXahtSfG/x3rY5nZwPqzw02vR/+bj3dz6rcoKTbuZuf9Kg/N2g5e1lSFz3q
78/rG3PhalZt6s8NwkNNushqU3/uMGd13rUUXerPHY7Z+f421qX+3GHE7G87
/tWh/txhfO6dGdY61J877Jrm02ZbLerPHQouWWFQLerPHVZrJ2SptKk/dyj1
Mn81Spv6c4cB8+vYG2lTf+4Q/PCbY5YW9ecOm3a1OjFQi/pzhzePtpww0aL+
3GHRj3bvz2tSf+7gtt3FfYYm9ecOztl764RoUn9/8n40fV6uQf25wz1tPfNT
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
GA==
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1:eJxd3HVcVOn3B/BRASkVGGrIoYYaSkDEmmMsFiaIYGJhYWJhYmGha7uYrCIW
xoqFrs5ZAwuTNVgLCwsTUFHEH9+fnDv3Hv/xdV/Cmw8fLneuc5/zuAwc031I
bZlMdqOuTPa/v3/9CUf/bzHnuz2xhPXp1X8qGgvHwf/7U6o7vpJf/adEd5zw
vz/FuuP/54oaS71C5hUwL595ecxD5uUyL4d52czLYl4G89KZt4p5acxLZV4K
85KZl8S8ROYlMC+eeXHMi2JeJPMimAfMC2deMPPUzFMxT8k8BfPkzDNlngHz
ZMyrCGPnX5jUKwmTesVhUq8oTOoVMq+AefnMy2MeMi+XeTnMy2ZeFvMymJfO
vFXMS2NeKvNSmJfMvCTmJTIvgXnxzItjXhTzIpkXwTxgXjjzgpmnZp6KeUrm
KZgnZ54p8wyYJ2NeRSN2/jWSeiWNpF5xI6lX1EjqFTKvgHn5zMtjHjIvl3k5
zMtmXhbzMpiXzrxVzEtjXirzUpiXzLwk5iUyL4F58cyLY14U8yKZF8E8YF44
84KZp2aeinlK5imYJ2eeKfMMmCdjXkUoO/9CpV5JqNQrDpV6RaFSr5B5BczL
Z14e85B5uczLYV4287KYl8G8dOatYl4a81KZl8K8ZOYlMS+ReQnMi2deHPOi
mBfJvAjmAfPCmRfMPDXzVMxTMk/BPDnzTJlnwDwZ8ypC2PkXIvVKQqRecYjU
KwqReoXMK2BePvPymIfMy2VeDvOymZfFvAzmpTNvFfPSmJfKvBTmJTMviXmJ
zEtgXjzz4pgXxbxI5kUwD5gXzrxg5qmZp2KeknkK5smZZ8o8A+bJmFcRzM6/
YKlXEiz1ioOlXlGw1CtkXgHz8pmXxzxkXi7zcpiXzbws5mUwL515q5iXxrxU
5qUwL5l5ScxLZF4C8+KZF8e8KOZFMi+CecC8cOYFM0/NPBXzlMxTME/OPFPm
GTBPxryKhuz8ayj1ShpKveKGUq+oodQrZF4B8/KZl8c8ZF4u83KYl828LOZl
MC+deauYl8a8VOalMC+ZeUnMS2ReAvPimRfHvCjmRTIvgnnAvHDmBTNPzTwV
85TMUzBPzjxT5hkwT8a8iiB2/gVJvZIgqVccJPWKgqReIfMKmJfPvDzmIfNy
mZfDvGzmZTEvg3npzFvFvDTmpTIvhXnJzEtiXiLzEpgXz7w45kUxL5J5EcwD
5oUzL5h5auapmKdknoJ5cuaZMs+AeTLmVQSy8y9Q6pUESr3iQKlXFCj1CplX
wLx85uUxD5mXy7wc5mUzL4t5GcxLZ94q5qUxL5V5KcxLZl4S8xKZl8C8eObF
MS+KeZHMi2AeMC+cecHMUzNPxTwl8xTMkzPPlHkGzJPx8y2AnV8B0q9XGCD1
8wOkHgZIvRzmZTEvnXlpzEthXhLzEpgXx7xI5gHzgpmnYp6CeabMkzGv1J/1
58/682f9+bP+/Fl/zMtiXjrz0piXwrwk5iUwL455kcwD5gUzT8U8BfNMmSdj
Xqkf68+P9efH+vNj/fmx/piXxbx05qUxL4V5ScxLYF4c8yKZB8wLZp6KeQrm
mTJPxrxSNQZI+tMd/+pPd/yrP93xr/50x7/6U2OgpD/d8a/+dMe/+lNjkKQ/
3fGv/tTYUNKfGoMl/akxRNKfGkMl/amxkaQ/NTaW9KfGJpL+1NhM0p8aNZL+
1NhK0p8vRkj688WOkv58sZukP1+MlfTni/GS/nxxuKQ/X5wo6c8X50r688VV
kv58MUvSny+elPTni3cl/fniV0l/vuj0Xdxf9ffzXdyfL6Z8F/fni9rv4v58
0ahS3J8vDqgU9+eLFyrF/flgqx/i/nzwxg9xfz44tUrcX/XH/xT354NqWU9R
fz6oqdVT1J8PzqndU9SfD1bV6SnqzwdP6PcU9eeD5+qKvCQf9DEWeQk++MVU
5MX5YAszkRfpg5aWIg98cLmtyAv2wSuOIk/lg2/cRJ7CBxv4ijxTHxwcLPJk
PqhoLvJKvXF4O5FX7I2re4i8Qm98MVjk5Xtj7iSRh944dom4P2+ctU3cnzeO
0or788Z/H4n788ah+rGi/rzxY2CsqD9v7DcoVtSfN/69KVbUnze2fBwr6s8b
uwfEifrzxnmL4kT9eeO+j3Gi/rzx2fBeov68cVlZL1F/1flW9xb1540rIvuI
+vPCLcq+ov68cKdlP1F/XtjDr7+oPy/8PCZe1J8Xpj8ZIOrPCz3TBon688Jp
E4aI+vPCeZlDRf154SjVCFF/XnhGf5SoPy/c3mWsqD8v/GoxQdSfF26OnyLq
zwux4wxRf15o9nqOqD8vVEYvEvVX/fHbl4v688JBVX+I+vPCtbO3ivqrzt9z
r6g/T0zdmyvqzxPzjpwX9eeJ37LviPrzRJ8br0T9eWJ6YpWoP088ecPqgq4/
TxzQN/CCrj9PvDu58wVdf57Yf+3YC7r+PDGz2boLuv48cULVaZ2X4ImbZpfp
vDhPrJ2ivqjrzxM/XBx5UdefJ+5ol3NR158nhtfSu6TrzxN32vS/pOvPE4fd
PHdJ158nBm4Ov6zrzxN/s/j7sq4/FbqUd87X9afCfS3L8nX9qbBUve+Krj8V
JqpnXdX1p8KyyuHXdP2pcPTucdd1/anQ/4/0G7r+VBi++PlNXX8qHLs/7l9d
fyo8kv3tlq4/FQbvunJH158Kz/a+W6jrT4X7FS73df2p8FLxvoe6/lSoXLDo
sa4/FbZcmftM158KByxs91LXnwoTXkGJrj8VOnXe90HXnwpz5m4q1/Xngbt3
OXzX9eeBC7s3rdVd6M8DB+wwNuwu9OeBy5dtatBd6M8Dr98ytO0u9OeB3/sP
cuku9OeBGJPnK3jpHrg6vlOY4KV5YJN71m0EL8UDG9m36S54SR6YeqBigOAl
eGD9v/onCV6cB9obbU0VvEgPHHvzwwbBAw+MOZiSI3jBHqjWLLkieCoPrBrV
5bXgKTzwsKGFcZTQnweO83PyixL688D9d85FRQn9ueOjpIEzo4T+3FE5s8fe
KKE/d/xXbfRY8PLd8Y7nR0W00J872nZaEhst9OeOKXPjN0UL/bnj2436r6KF
/tzxt3YOzXoI/bnjHMvodT2E/tzx0vyR33sI/bnj4uZBw2OE/tzxRKP5j2OE
/txxhE2vIT2F/tzx4B9HynsK/bljL4Ojq2KF/txx0J1lECf0547n4xf/iBP6
c8dr28zyewn9uWP38O17ewv9uWO/3q+39RH6c8Nd9bcd6Cv054YDRx2+1U/o
zw0fWvpZxQv9ueHBo83HDRD6c8PCW7+VDBT6c8O5G28sHCz054ah7ze1TxD6
c8PnGzYEDRP6c8O/T3xqPULozw2btzKYlyj054bJf08uHy3054b6rXw3jhP6
c8OJ6R2nTxD6c8O3Kzqvnyz054YrV1V8myr054ajhyVsmyn054b9NYbpc4T+
qvt4feBxqtBf9ffbe+3cJUJ/btisb+z85UJ/rrhjqcG7NUJ/rhi3XnVug9Cf
K248edxiq9CfK76a1e7RTqE/V/zr5KPgA0J/rhjzycXumNCfK1pfbL8Rhf5c
sW9Zw3MXhf5c8XzHgRkFQn+uWCuofpOHQn+u2K+p55ZXQn+u+MR7wINyoT9X
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
Tx46MebRI/JqoYtLm8Z/vyOvFq6Z9bpy5Q/yZGj6ru3CPqZ0vZRhgyL7LHN7
uj7K8O7bStUeb7peyzCstckzl8Z0fZZh2Zatp0dH0Of/1D4uNDq2OJo+/qd2
2HXHK6MH0vW6Stv/dLmLJf1/IKFKa14x82PSDPKqtGdP1VuzYDF5P7RHNzxe
0G4deT+0Pf5bP+LANvIqteN6bTHI3U9epXb+mcRufU6QV6mdFnB7zOo88r5r
88f55va+Qd537Q6fdsez75H3TTv0ycLGc56T9007bXJmyJ135H3T7gwb9jbr
C3kV2lH1ejwp+UlehdagqcPtzLr0+v5V29r/2/VL9el+4qv2mfE7195WdH/w
VbtlY/6Q7vb0ev9FazTJb9ZeJd1ffNHOtw7aOtyDvM/aMgPnbvO8yfusrfr0
X7/vavI+a/feC/iQH0Beubbjug/TvwSRV338uuR6cjB5ZVrVpuOmUSHklWl3
mHTPmhNCXpm29pkZww1DyCvVKh84THnWkLxSbX5RWAebIPI+acvrvtz7pz95
n7Qzi83Oz/Ml75P2wvyS+qeF+/+P2tGuI6J6u5H3UWte0P9IdyfyPmjDp/ye
vduWvA/adqNnVQ6xIO+DVrXK8+QCE/r899qt7ZOi5Xr08e+0c5qlTzStpJ/X
W+254+2dJ5fSz7tEO3fTofSer+nnW6JNOzV0wsEi+nm+0f7uUHde2m06H15r
fzx89Oj1ZfJeaYel9Hx0E8l7qX2U3Nimw2HyXmq/3X8QE7OLvBfaEX00239s
JK9YOzj6UfOI5eQ91+6bsHFpo7nkPdPuOzks4NZE8p5pU5a/eOk1jLynWtxS
ltVY+P/6E23bDVZTTSLJe6z9Z/rdlTuF+6Ui7ZQhyhY2AeQVaT3rDnrcT0mf
/1D7I/3u51Rz+vj72obDM4zW1aavd0+7Qv/+X2tL6fpTqI1veGa58H6n7K72
dubByLm36Hp0W3vrQNjSWXl0vflXG/bT7suio3R9KtAGjUj02r2TvBvaxfYr
D71IJ++6to1BX2WHJfT5+dq2N90f3p1OH39R2y7ybfsNo+nr5Wl3JKzb/kc8
+We0W244W93tTh5qO3i/XR//G31+rnbM/gDL8Mb08TnakBnRocN86d93afXq
L0stc6LjdG1ARVL8MwvyZLL3W0+8bF5X+HfNlS0mDepW0uvRLk3mpDeLfvtI
r2c5GpN+NwqqiunfczVDZ3fxavyAXt9Q80+7gbM/F9DHn9GMN328usVlen3M
09RaYnHT8gx9/kWN4eCE/jNO0Othvsb4fLTt9EPkXdeoxw5ZYrmPPv6GJv9L
v6/td5JfoPlv0JbOztvo8//VXCnY7LtOuD+6rWlntKkwZz15dzXxU6Z2nryO
vEJNeNJJn6fC/cQ9zd2SM8e+riTvvqZNmGvJMeH+46Gm2DBggPsK8oo05ZV/
92kq3F8VaQbtrpX/YwX5jzXLone3GbmKPv+JZonSSX/uGvp6TzX//vm2rPUf
5D3T/JwyZnv2BvKeaZrvWNT9xBbynmvOuex4OiqTvGLNXdvCkn92kfdCY9XF
7cCh/eS91DQ4/8mp9RHyXmoKP5+8N/wkea80kzdcaepxjrzXmvxAv/bjrpD3
RlPy45+z7W+TV6JZsmKB1+5H5JVoLk76sGvpK/LeavDO8GbvS8l7p/H+S7b6
YhV57zW1vT29bIzp/Pug2broj0Y3rej8/6DB7r3yylzo9+WDJubM3d1T/On8
/qh5Hui4oGdTOl8/ap4kOdxY3I68T5pdmfa3TGLI+6RpEuedWzCIvE+am4t2
pdwbR16pxiv8UwOHFPJKNSVlnwOWLSOvTGPWrNZKn03klWmcbiYVvNpDXpmm
Xu11s88eJ69cc/fqSMeci+SVa/rVm+e87y55nzUNBzz4vpeeTyR81nS1Oumx
5zN5nzUGlxbLN+vT9eqL5tWnHa1mWdL18IvGxrVV07ZudP37Wn0+OK1+F0TX
v6+a3Mdxn0cBXf++aozauLmc6iy8vmva3Rvw9k4f4fVfozzUrduhEcL9gaZB
p3qDI6cI9w+aLy/1BqTPF+4vNNeTBuxZvVK4/9BkNOt2I2yLcH+iGf9vs9+n
7xHuXzR7xjy52eeocH+jiQqNOXXztHD/o4n58nz33SvC/ZEm5+FD3+F3hfsn
Tbcdweazngj3V5ortrVHWJUI91+aq9M+p3qWC/dnGueHSyoP/BDu3zSrTby2
79Wn1+ufmqRQi22KevT6K4PKmNYDP8rp9VcGk6Y2WB9kR6+/Mrhls6PzHWf6
fBmcuTfm5iN3en2XgUezkPPtvMmrBTk9vJ3N/MirBa8zLzmGBJJXC9a1XhKb
05C8WpAwss/RtBDyakGBpdFEbSh5tWHInwnOHRuRVxt+ru21LqARebVh+qLD
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
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[1, 0.75, 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
uObvKxqv2B3vbC7TeIXuOPaEdYKmP3fcFdUlQdOfO9p3m5Gg6c8dHTocT9D0
545RAXUJmv7csVLRLVHTnzum+KYlavpzx67btWZr+nPHWe/Gz9b09+N4Z9ls
TX/uOGbjzDma/tzxxlX7uZr+3HFT/M25mv7cUdtp8zxNf+54d/nc+Zr+3PHq
i/lJmv7cceH6XQs0/bnjxpVlCzX9KXGF7R+LNf0pUda4bommPyVWZVxZqulP
iUu/FyzX9KdE9/W2qzT9KVGvYPdqTX9KfH4t6R9Nf0pstPbkek1/Srzt3Xez
pj8l/rar3zZNf0ps8evNdE1/Sux/8fZeTX9KnNJ07CFNf0rccHL/MU1/SrQM
3nla058STU/H5mj6+3F80OK6pj8lHvrvxD1Nf0qsqZn8XNOfEjNGjSjT9OeG
ld8P1Gn6c8OzH8fr6Qv9uWG8xx1bfaE/N2z3l66vvtCfG04/27KDvtCfGyoN
Nw7QF/pzw1/8Y8cLXqobLvj3dbLgJbuh1dff9gpeohvaDNW+KnhxbnjDr32F
4MW4YerKUbYGQn9uOM6vuKuB0J8b3n9lP91A6M8NzdYtOmwg9Pcjb+WeMgOh
PzdUjTIKMBT6c8Mu7n1mGgr9uWGiifV1Q6E/NzxcZeNpJPTninoHFclGQn+u
uDWxQa2R0J8rdhu6a5yx0J8rmiwyrzIW+nPF/KqB80yE/lyxr2KXs6nQnyum
XG1/w1TozxVPli9cZib054pjT3753VzozxVDL4d0tBD6c0WcVNfGUujPFXd1
a9bTSujPFau23ZpqLfTnirenKNVyoT9XLPplrout0J8r7ug+fZed0J8rHkrP
7+0g9OeKno0THRVCf674tvsJK2ehP1dcOKGijavQnwu6nHi4Sin054KjZBPt
PYX+XPDuwG9F3kJ/Lhj93uSZr9CfCxY0Xu/WQujPBV9OfngwSOjPBYN9ExaF
Cv25YBevZUfaCv254MSts1t3EPpzweezOjl3EfpzwX5erceHC/254PbNv/j3
FfpzwRU3ngwfIPTngquHf1L8IfTngl8uuQ2LEfpzwWMzt7QbI/T3I+/j9scn
C/25oF6zjY8ShP5ccEdZzYlFQn8uuOTw8CGrhf6ccZjNxZtbhP6cUbvPdc8M
oT9n7HvJbkKW0J8zeg1sfeqi0J8zvtp/SH5X6M8Z/9Q32PRK6M8ZR414F1kr
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
zZ5/ljxtLImf+Vf6NfK0UO3dpWW3++Rp4V+uL82HvyRPC/tp9R5UW0aeFlaN
2JBVW0ueFn70tvAbqk332wZ4MDXYuJk+3V8b4H37YU37mdP9tAHKVie437al
+2cD3I1B+buc6X7eALcucr91xYM8GbbdfWloK1/yZDgl28D6QwvyZOh74kpt
aTB5MnR7XzLNW3g+leHiyq4z97Sh7/+uPmk0JGJEO/r67+oNh9ae+VNFr/dN
fa1k0vcNKvK/qV++G3zcWEXeN3XVJbn+2bbkfVUPuuK+/GBr8r6q9eW7fnnU
krw69aN+Jqe6BZFXp57ddu2tT/7k1akXDetY88abvC/qF9Nu1TkryfuizpvX
3iPdkbzPapvihn5TrMn7rI5uZNtivTF5n9XjM0+dMtMlr1bdbO3tM6+/0e+v
Vh2i1zLV4SP9/mvUh5xX1J0ood93jfrTTKuG55/Q77dGvVlX3wVu0fnxST1o
71uX4FzyPqmDYYrrvpPkVauvByWszNhPXrW6w8QZzm22kletDgqtufUnPY+k
flQ3Onvhlfd88j6qe58wvrNxMnlV6o1zOvZVDyevSt19Vi5sHEBelfr3Q7sP
t+lGXqV6hYFp0e5Q8irVY59nOr/zJK9CPeObVbmRDXkV6kLtwgLbpuRVqM8e
vzbS5jNdTz6ojz/1GWBRQtePD2rPiandLIXnj3K1xYO2r5SX6XpTrg42u3uz
9wm6vpSr8/7KTdu0h76/TD0sMfCm5Qb6+vfqqai4fmEJvd47dUX39KLMGeSX
qkdcDfQuGU1eqbrJiJJd4/8g763aLqmha0Qf8krU8Qajm//Tkbw36mkTh3uH
BZP3Wv3CPtpnhCd5r9Wnu79u0sievFfqm0V5vVxNyCtWnzcY0/pqI/JequUl
Icd0vtD95oXa+UHEb3fL6X70Qq23eFnvzq/ofvVc3UV38qzfHtP955n60KbD
/Yzv0P3pqfrbmo0vp1wjr0g9sY3JrZUXyStSy/UXDRx6hr7/sdrjw7iO707S
1z9Uz++R+yroGL3eA7V9WKNmqkzyC9VWh2Gu3kHy7qkt7u55vnEfeXfUncq6
Xa/aS94t9b0w7Z7me8krUNsuL3v3ZQ95+Wr325/P7t1L3g119MAbMS776Pvz
1D0Gm9ZGH6Cvv6SG3Y8cYw7T6+WoLQ+s0/U9Sv459Z+zDUYeO0Eeqk+6Xkv8
rqbvz1JXtX1mo51DX5+pnm2Rvfx0Hv333eqEQ9MuNrtFx6nqbxuGtgkXng9k
sjbq/V/NXwr/XTV57erDc94L368amrts0/IawVdlW73cEqRNv+8s1YCx49qO
MaTzBVUDdq9La2FD58s5lWrpos3TlXS+5KjuDdl4sn0Aff8l1Xi/Sr+ZQOdf
nuqMY8dSt57k3VDlj7q8OWAwfX2+yr/z2OOb/ia/QDXSt+GEQfH0/bdUL5fv
z/9zIb3eHVUnp9iD+/4h755q2cFMtd9O8gpVFthsedFR8h6olg2bvepoDnkP
VWW5zd133SHvsarun4Xr9wrPB0WqmpOL/I4JzwdFKrP1pa5n6O+V1Keq0a5W
J9WWdD15purbwKrVbiVdf56rBhmv+RQXTNeXF6o1qerBlmF0PXqhSo13L03q
R95LVUJ6cpdTf5FXrDKZtDZoXxx5r1QtzSbu7D2HvNeq0aeiT29aQd5rlY3K
KH/JZvLeqMpmvhhnKrxfVqIavV8x1jOLvLeqDr75T3MvkFeqCny+0eNNPnml
qgVB0R/mPCLvnerkzU1tlr8m773KNSkjurHwflaZqtfas6Yv68grV71tmRXl
rEP3q3LV6oL1p7MM6X5Wrpr4sqJhuiXd7z6oPm58PPGZPd2/PqhMOz888bcr
3d8qVHZP+n9o5UVehWraiMptvfzIq1BVTl6U928AeZWq6VpvHrcKIa9S9e2P
bqgvPB9UqVSbJ12VtyGvSjVl+/77UW3Jq1KdXNcx8Glb8j6q+v9etHm9cP//
qPpasbL/0jbkVatev0w0O9GKvGrVVpuh352E54FqVV3fzadzAsn7pMpzav73
Hn/yPqn0LGH5dW/yalQFNqOahSrJq1EdDbz7X4nwPFCjkpdXab+2Jq9Wte2b
9rAgE+H+r2q8t9+Su7rC84HqdkWvFQXf6ff3WfVfm4By32r6fX9Wzbq4I6ns
Lf0+v6i2m8qW2D6l3/8XVbft45OzbtPvt051dc+j0Tfo/dOYOtWdFmuih2eT
V6dyWPnwxfyD5H1VmTQIOxmwnbyvqv2Dnr+Zuoa8b6rAb30O/+/95PrnL9VW
nR1LS6aS9031XeHl7vE3ed9Vj1s49XccRN53lX+HLvaF9H67TAartQZt+L0N
fb0MriYsMsryIV8GY4ddvfbBjr5fBh/+7qgypc9T8mQQOG7KTZevdD1oAK6F
+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
eZXMq2WeLFQ4/j+VZaXU
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
Pw+8tueWxjPywKqGlpM0/XngkO39J2n6c0f/fTsnafpzxx19dSdr+nPH7XUj
J2v6c0dDh3uTNf254+Hp8ama/tyxhWFtqqY/d3z8LCdN0587/r24zxRNf+54
b4f3VE1/7titk900TX8//v9V7+ma/txxS7O4GZr+3LEXHErX9OeOZx1bzdL0
545l717P1vTnjku33p+r6c8dnYoaz9f0544dFk9aqOnPHfcolYs1/bnjmKPt
l2n6k+Ny/4NZmv7k6HPsj9Wa/uTY7GTlWk1/cmzXAHM1/cmx6JBPnqY/OU4+
D/ma/uTo9LxJgaY/OT65svmIpj85Zg92PKXpT44JL1eXaPqT4/0kz5ua/uTY
99ybh5r+5BhvZFmj6e+Hd/XwN01/clw3R7dZqtCfHAcWy51Shf7kuP5qj+BU
oT85qp4e65Iq9CfH8stbhqYK/clxWaeodMGrdcND27+sF7xKN/RN0DsheOVu
GFF8olLwStzQcNFSkzShPze0PFDeJk3ozw03xZiPSxP6c0O/YUU704T+3PDM
+SFP04T+3PBzxxzfKUJ/bmiSpz9litCfGw69NeTyFKE/N/wrMlkxVejPDUd5
6mdNFfpzQ50GzXWnCf25YSuPZenThP7ccP/s1QbThf7c8Ft0n9zpQn9u2NXE
InKG0J8bZmwI+zJD6M8Ntwxrfzpd6M8VpxXc3TBT6M8V6yLPL5sl9OeKb+o+
ZM8W+nPFZ+tmHJkj9OeKT/Q2f5gr9OeKjzqW9Zwn9OeKUpfDl+YL/bni7b89
xywU+nPFjqo2QZlCf664bnQn1yVCf664b+6/bZcJ/bkiWD5e9ofQnyseupJm
sVLozxWjd8vKVgv9uWKDvtuurhH6c8Xgp63M1gv9uaK6euz6jUJ/rvitUJW6
VejPFdc6Ntu5Q+jPFTcOU4f+JfTngsO37/YsEPpzweIlx+YdFvpzwVcDB/Qr
EvpzQffRWTtPC/25YOpnvVkXhP5csPdI3efXhP5c8NbNhTW3hf5csIdf7/WP
hP5cMHrJY8kLoT8X7OK8yO2D0J8LFv4+yUbHj/pzwfeV6pfGftSfC/r4Je2z
8aP+XPD7pGUTPfyoPxeMSG/VNdSP+nPB41V5nTqSJ3fBri+80/uSJ3XBaX/E
6Y0iz8gFTzhZ1U4nT+KCceaz4laQV+uM32L8huwir9IZ15U6SU+TV+6M2WkP
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
zPB5UuuTz67Y1eczw+75N80CTtrV52uO10Zv25lfUO+VNEeXO/esh22t9wqa
48GPF58NXl3v5TTHdQFNN+1cUO+lN8eNExf+HTm13ktojpPiFqa0TqJ8zbHs
wl++q4ZQvuaIB57p9e1D+Zqj4lTa1wWdKV9zLJ/64FmgivKZ4qmqe6mxQZTP
FJUJC511vSifKR4vHuwWLqN8pmg9ZnzGN0vKZ4rDF21r3K8p5TPF/R1MPHvo
UT5T7HAx0ebpN9v6fKZYrVSj/KNtfT5TXPzYeHfTN7b1+Uxx5eyu0q3VtvX5
THB8zaTHL6ps6/OZ4E3DsiXVj+q9AhM8eGZsyJaKei/HBAe/v5dldb/eSzfB
Xr6mH365W+8lmKB5yZ/tW9yp96JMcG0naW31bcpngjp5txoPuUP5TLDHnw+k
a+5SPhNEL4/IlfcpTzOUHfMLi/mXvn4zjDUtdSl9TF+vGQZcSz1j9pT8Zvg6
JWuw2UvymuH4pwmnL9eS1xR7xYS0i/xEXlNUbT90KKUB9dsUPYwfLexlQK93
U1wUY5X/2JRe36bY+OqK1Y629Hoa47sZ3X6VuNHrZ4xvzUznzvQjzxi3jvge
ta4FecbYedRvyV0jyTPGS/2u/bKoJ3lGmPF204XoePKMMPZBweKsRPKM8P6Q
9LPd0sgzwtKgmbGp88kzwtH/3bhiuJq8JugZ2DLx01bymuDbjiFOqgPkNUFD
XLHx8mnymuDzKpvBm8rIa4Lnd41du/sxeYY4sn2nflVvyTPELSt3T+nQiH6+
DfFu3bzDxy3oemOIzxp33tVBTtcXQ0wqOnbjGr2/KzHAFq1e5fcT3r8Y4Lu2
sOoavX9IMMCOMdM++o0gzwBXjmzeZsRk8gxw6vv295Lnk9cYDZ6Mj1dlk9cY
H0bHjTi/jbzG+KZdn+O6h8hrjM9mTIuqOkNeY6wd/kg5vIw8fYy/kXUu7SF5
+tjq94XrrGvI08cz9+cuDP1Knj7udji475IB3Y/0MfaqatF1C7r/6OH2sGX/
RjjR/UYP7/WY+q+pgu4vetgtSm4bFkL3Ez28k7ll/h4VeXo4fd2wrLG/kNcI
966Ikk7uTl4jnPv3zLHHfyWvEfpb1Ca3iiOvEf56Y+aYmt/Ia4QGu29GXh9B
ni6u/PRvfFUiebrYv+7lLpdk8nTxb/g9f9448nRxtH7IeNPx5Oni0fL1O9Tj
yWuIJ09UzVs+nryG2Nh/dEVGCnkNsa7NQNvcseQ1xDmtdcPujyGvIb47nl/S
bhR5OnjncHO9Kwnk6SDmjcybP5g8HXQ++65hcn/ydPCaQ7j+wl7k6eCUJgc8
7kSR1wCHrGs7ZkR78hqgrOWX4aEtyWuABUMvK7oFkNcA5cdW9imQk9cAa87d
/jraljwJfghrdWBuM/IkuHn3mDk6DcmT4JPEpw+r39H5IsGola32dX1C558E
Bx62CPO9Tefbd/UmyQer7Av08d/V+yO3Rq08RufnN3Xy/h5O/rvpfPym1rk4
2ytlHXnf1C8en2szcjF5X9VjO/gm2U8j76s6/rdF39ckkvdFva5wY9yL/uR9
UVd/tnKQdSHvi1o5sc+zNi3I+6xuNL/zrN6e5H1Wq9tZ7UmyJu+TWhJR2DJH
n7xP6oznm6vvvafryyf1MP+4SZ0q6XpSp57t5pZWdZ2uR3XqcbPWpJw6Q9ef
j+qYX+YeeSJcvz6q3+7aOWFIHnkf1b/9eiarpXC//6BO1Nl4avp88j6om3Ya
lBiSRt579asFb7YmCtfX9+rpE9QB3vHkvVdPu7I4ZUpP8t6p95zc+XtCJHnv
1M3v9tn1tgV5b9Vl56b19fUn763aeuJxe1s5eW/Vd/xOeJ60I69W/UTnnYeX
OXm16vajV0KsEXlv1Jkujoa9G5H3Rh05ynmp83e6v71Rz4ZpHYrr6H72Wj0i
4HuT9u/ofvharZOZ6r7hNd3/atQrvdrA7Zd0/6xRL7vVdNCHavJq1FffT6/5
8Jw+/5Xacu+5wrvP6eNfqheh5cP//f7w8+u9UJcPinjR8yX51eqKM0bHH9aQ
V61+1Fi9POYtec/VSxQxTTZ/JO+Zulm6jvelr+Q9Vd/o2bX31Yb0/T9Rl65I
6bXdkPp7orbdObB/t+bUV5V6+rDaxkU21E+letKF+6Neu1C//6n/eXlI76EP
eY/Vr5+uKpsfRt5j9dj8xt3uR5D3SH3N4Lcxt6PJe6h2DhhfOH4Aef+qPyYt
aLtlJHkVau9H53bHTyKvQv00tRzWzaXPv6/eO6HsQc8V9PF31QP6T5FO3Exf
7476D8vdPl/2kV+uHv7Q3OL2SfJuqaXxxgt0S8m7oR5sua9J8iPyytQ7F0tr
TN6SV6peULV3yB1d+vm8qv7jS+HYUxb083tFfbLoisVxOf18lqin71zR4n/P
U39+/Hl19peos/t/oZ/XYvWdgau2rYmln+9T6ph9RmWD6fmaBNU2x5/3+5ZG
n1+oTuyeO2LoIvr4AvWWixHd59Pzqpwdarvzn7PidtFxjvrUkdAXd44I1z/J
nePFvd6dF/6/6r8ZasPcW8Lnq6w3Bq2/Win4KvNXe97OeCt8fdVdo6QeGxvQ
9RlVpzsNGKBoStfvUyqLtUUe1jZ0PS5WwcO1LQcIz2/Oqyofnlte40fX8xLV
qfmbtl4MJ++Kas/AxPHV7ejjr6oO9+w+O7IL+aWqzh2+PLrekz6/TLXidXnY
ylj6ejdUXt3uH54RT94tlTrnReDyoeSVqzbvu2pSPIK8O6rQXIy1TSTvrmrW
/LH7l4wh777qlw1FIxySyatQhdZcG3Q+mT6+QnWkxSPPpcnk/6vqMmrs2yTh
ec9DlfUKmxWJo+nrPVK5/Plqesbv5D1WXQ+ILVEnkPdYtefhPKXtEPL+UwUt
GWvw5wDyKlXtjw9sE9mHvCpVVKFOf4do8p6oIpcGT/PsSN4T1ehUv16j25D3
VLVp0ii7miDynqniPR3XHvYi77mqpH1P6SVH8qpVv0dlx4WZk1et6j0iedd3
ffJeqOLnRxcoPtP5/FK1OSB21bkXdP68UsGKC7fvPqDzr0b12zGXhJSr9PE1
qk+Pv01YdZJ+XmpUY5yKsrsX0Oe/Vg1Uv96av5nOv9eqDU+WHzyQRd4blXOA
of2k2eS9USXdsR/4ZRx5b1QDCne69BhCXq2q0dbubWb2IK9WFZbbMCsbyHur
cjy4xGqz8Pe2tyrL08bn8x3Ie6vqFTN08wlj8t6pvuUfyn7xRbh/qZp2ezO/
VbVwf1MNvdkn/Mgd4f6nsl3gETXugnB/VP0WmRSWfFS4f6p0De61Ve8S7q+q
lstvJ//+p3D/VRlKTiyculi4P6scqzoYSmYI92/V+0BH6+/Jwv1dVebxePbs
34T7v8pwjv/xVX2E3w9U+YuaXmzbmbxPqvjT+dGL25D3SfVi+29jZirJ+6zq
k93stpsneZ9Vr56cPDPTkbwvqs6XSv9da0neF5VqSqdf05qS90W1ZNOuU876
5H1VTfELDV4jIe+r6sbpNPf/PtH97ZvKqv3AdP33dD/7proQvWyx7hu6H35T
eY9O1nnwku5/31UXrXq9zxbun99Vn891fqR8Tp4EZJuitv79jD5eAp5Wd1Kb
CfdfCbTd3FzSXfh8CRxU+YSPFe6/EijXmbBg7GvyGoD+562F3YTfBxrAdIOi
j40+kdcAXvuH38/6Tl4DWDDtcOLbRtRHA2gVb2rhYkz96cAA3VOFNhbUjw60
qru077o99akDFw3fXO3qTn3pwBm3FsOnBpCnA7jjXYd+rchrCJdGfDz/oCN5
DWFTdOA93V7kNYTk1KyvOIi8hnCxVXhEkzHkNYRZmQ8Sbk8hTxfG3Fp+znUh
ebowLWnVxIps8nRhRqulQQ23k6cLPVb8M2vWIfJ0ISm/aGvMWfIawcvgnbtH
3SSvEZTM7DVdXUVeIziaXnUj4iN5jSDo4b3YF43p57ER9Mr8vuJvKf386kHP
3ASDWV7086kHb1rPU/ahvzcm6IF1y6Aspyj6+dcDS6O1BbcGkKcH2a4ByuTR
5OlDE8/FF+4Kv8/rg/8AeazZEuH9KRwpefuw8Xrh/Ss8eVi9cd9u4f0tuDft
0VjvuPD+F/ZNLDv3UXi/0RiKihbcS78tvH+GrwY5S1YIf49pDO//PjzZ673w
/huyQodmhTek67MBjI+5GFLYjK7fBrBeb7bTRlu6vhvAG+ML057K6XptAEmy
nZULA+h6bgCPj65OnN6SPENwmX4753h78gwhrevCie26kmcIw8qDM/V7k2cI
hRGeT/UHkGcIEU16uaiGkNcEHq8p6bdjOHlN4IlXTcuIRPKaAL6wb2Ao3D+b
QJ+LRuM/jyOvCeh0PvrSYgJ5RrC0b13/vhPJMwKHEZmhJyeSZwQxui8Xx0wk
zwhWXdv62Yj+3lJiBP+8UeW/GkeeMQww/7fv1yTyjGHuzdTIMCGfMTTsuzZi
83DyjEGh82pr2yHkGcNj814drQaQ1xTajts6y6M3eU2hcp2Xf5rQX1OI1Dm0
0ZT+/pTTFHQupa1/25K8piB/NT/OM5C8ZtDssUXGQXfymoHPLymyzXbkNYMe
viVr3puQ1ww+zswrOqxLXjNIveiT/1p4Pm4Cxx51KdvxjJ5Pm4CPwYo3T+/S
+WgCj7s30j96iZ5vm0D6x+3RcqTz0wRK15u2C95Lz59NwF2Fc15vpPPVBC4/
Tnky9A96fm0CE01GDs6ZReevCVz8Z7EkZxw9/zYBWdye6tFDKJ8pnNuZ19+5
J+UzBZTMX4RtKZ8pJPS/c7SnsF7DFEZe+Ff+SEb5TKFPcfWnKSaUzxTMPl+I
cZdQPlNw8OsT9OqV8HwYcheYpt97IDw/hl+Wfn/7+bLwfBm8Xixz64XC82fY
2PjMuFd/C8+n4bljqt7NjcLzazic8+yiWZbwfBuS3iSN/2uO8Pwb9OaMitsz
UXg+DtEBU7Y4jBSen0P52aqmugOE5+vQdH8f0+HRwvN3sP4di7tFCM/n4dOu
3S9OhArP76E45/jjYoXwfB+yWk3c9puz8PwfvnwfdGGdtfD3Afil+/hpac0o
nxmc731hxjc9ymcGuvPz3X2F+5cZrFv5oL/xR3p+bQbTKnpmad7/msGdZSZl
VXQ/rTSDOY1m73tSSfdLc8hWNO6x5SE9nzaHxRal8XYP6P5pDsllNvY979Lz
bXM4umpl78jbdD81B7cVbYbV3aLn4+awvMewsFG3KJ856Kbpdl17i/KZg/ng
uP3zyymfOXQxv2ceeIfymYPeAWX+ynuUzwIa7irqsZeex0st4KK1LHXWY8pn
AZ9vWATrPaV8FpAlzWgRLrzft4Amp9WPrN5SPgsY0uu5cr3wPNwC1gXtuH22
Ab2+FvDU+3boMgN6fS3Ab+WS+Dem9PpaQHWNtcNTG3p9LSG7H3wZ40qvryW8
i18aMd2XXl9LMNp7VMc0nF5fS1hp69LcqT29vpbQIKKf9fZoen0toW7e+SUb
+tP5ZwnzVvUqloygfJbQWmpQfXo85bOEXOlV4/9mUj5L2LrJzbHfUspnBXad
ir7araN8VjArusVE+S7KZwVZvvhLUiHls4IWQ5b51JylfFZwaNz88o03KJ8V
9IjK0pn2H+WzAitz3aFp9H68wAqii2+d/KMhXV+soMLw4eui5nR9sYKwixev
f3Ci64s1nOnYfGQIrf+SWsPjPofUKUDXF2vQM/piuCOari/WcGDDjT8vx9H1
xRqy9bs+r6DfD9KtwWDdlqwbU+n6Yg2JI4YP3EnvzwusYdfF1q37rKF81jB/
+tpfy7ZTPmuoVLdp6EjrQSRSGBE684L/GconhWYbUsfpllI+KUgfv3izooLy
SeHVQItZ915QPimMqvFaXv6J8kmhidnlS3OE92tSWHMn3OOOmbA+AH6Jbv3P
LUdh/QBED7J2TvMW1hdAlMz2/tEQYf0BpF6xe7mmrbA+ATpln55tHiWsX4Cg
81uby/sI6xtAWuDf/WK8sP4Byt1TlY016yNAWVn6tmyssH4CmreKMg5ME9ZX
wIzI2mCHWcL6CzDrbDg8e4GwPgOm7zW4uWGZsH4DsHtGnXK1sL4DLq95P63X
OmH9B3yfE9utwWZhfQg8uY+LW2wX1o9A1itcJdktrC+BXP+zdTF7hfUnMF6v
35TgA8L6FGgSG9E877CwfgVqarf9l3dUWN8CX1cYdwmn9Qw/3ufYLO9xOg6F
9THQ9u3yr9YnhfUzMPSb4YWRpyifHdwrfyaPOU357GDFYHu/m6cpnx10OWPq
8vE05bOD6KtTBh8+TfnsYMOK5gk2pynfj58ri25nZaconx1Y7ncLuiSsj7CH
r7evjHUT8tnDgJRFsZ5FlM8ezm+Nv3H3KOWzB/cO7x+2E9Y/2MP31knz4g5S
PnsYFx1xM7CA8tnDqrb+r07uoXz2cPSIf61pPuWzhxEn041c6PWo/HEev9wz
vG4z5XOAc44nA7M3UD4H+Gd3/FodWg+hdIC/9llcbLmK8jnAwNBtryKXUz4H
eHElyc09k/I5QNeWtxY8yKB8DtA24Z5fykzK5wCzf90p+28K5XOAE4Ed+oXR
75uVDtA8L/pSkvB8yBE8ntwetOR3yucIyUOjq1YNpXyOcFU2wj0zjvI5wuNb
bW8k96V8jiA7Om11x56UzxHObZ30pXkU5XOEYQVLZ1/vQPkcoUd5xurlKsrn
CPbdXi7pFE75HKFi8I5d34XfJ2UQNnymzUGFA60PhHltL7wZQ+8PpDIIcXEI
UcgcaH0h2H6zufJKSvllUOXYftVRs3oPZDBi9OOOy43p+5HB9u2Nloyj602s
DJI8Jnwe1IC+PxksHXLDKO6zsD4Smuad9Bj1Tlg/CS/j3m1Y8EpYXwktWszZ
feSpsP4S7GY4T/r+SFifCe41Y4xj7wvrN8FzXpfEc7eE9Z1wZGCbKd1KhfWf
4Ghxx7j6orA+FL6ZBD3eeE5YPwpfy3vuSj4lrC+FHt8Pfu1bJKw/hVtXbv/W
v1BYnwqqbsd7Td4vrF8Fl13JIX/vEda3wqUL+XENdwnrX2GI8zCzcXnC+ljY
0Xfwoi8bhfWzsDr01stN64T1tTC8nVHfYTnC+lvYnv60NGKlsD4X7nzYPKTN
cmH9Lnzv1+djr8XC+l4wnZo7bd4CYf0vLDTtcOX6XGF9MBwcXnxKNUtYPwzV
axs4n5kurC+GHY3O7Ro2RVh/DH9Nmih1ovUt5U4Qa7DQ9sN4Yf0yJDkE9q8a
K6xvhtUjH6S9HiOsf4a8XZctLejvYUbOUPhh5ZkeI4X103Ck0wbrbQnC+mrY
067gT/OhwvprSH6UfDtnsLA+G267nO0TEi+s34ZNnUZmPR0grO+Ge5VtmhX0
E9Z/g2L05cg/+grrw+F75I79GX2E9eNwPvH01aW9hPXloEyusNhN70dynKH7
53sf7nUX1qfD8jNmL52ihfXrcLnhhjGTuwrr28FowJ5XFV2E9e+wacSlqn6d
hfXxsKDc+dJ/9PeASmcw7LDHZmZHYX09LD2aGamIFNbfw64gp5LK9sL6fIh/
0cP97whh/T7Mv7r3+rx2wvp++Nokv89o4f2TCwy/vdN7ED3vBBdofKrFrXiV
MD8AZV28Ho5qI8wXgGlM3tXZrYX5A5jnFROwrZUwnwDnVg1Zcr2lML8AS8ry
JjdtKcw3wJziTbN6CH/P/OGPXt12fbgwHwHvLi/p+jZMmJ8Ak8ShbWPChPkK
MB9y4ciRUGH+AiJH9+znRX9PKf/RR+mwUxtDhPkN8BoV/acsRJjvgB1lQUvy
goX5DzhkZN5BGSzMh8BfyUVJxUHC/Ah063NNHR8kzJeASUzB02+0Xl/pCguj
Z27ZrBTmUyBkVtOdXZXC/ArYJ5Yd/ELzALGucKSmasHfNC+Q4AprNlY/HhEo
zMfAh176mW40H5DuCifsr3SopPe3ma7Q/kjEnZ30+2rOj7yL91ul0DxDniv8
GXr0XBuaTyhwhSt35EXGNL+AriDzfnH+Ac1LlLjCwdY2uJ/mKcpdIbcrTsyk
eYtKVyiNrzqTQPMTta6w+8nUeRE0XyFxA5vJEaudyTNyg78mn7zWkDypGzxr
EiKtEuZL3CDKeEaXEmH+xA32tjeLKhDmU9zg2+UX39YK8ytuoH9hRqcMYb7F
DfxabWw+Tnge7wYRXWa1iycvxQ1yz/55sit56W7wqkHetNbkZbpB6Nf0eF/y
ctxg+Cf/3jLy8tygweAf74LJK3CDr3rJwfrCfIobLCwP/P5ZM38GlVXSta81
82nQ7KrR5yrN/BqcXPGP6QPNfBtcPHv/2g3N/Bske68OvKyZj4PIbXVu5zTz
c3Bny5FNJzTzdXD1gnLDUc38HcTZ929+UDOfBxmjj9T+rZnfg+lhw1vma+b7
oOu1T/9u08z/wcmXCys2a+YDYe2MTf65mvlBOFDZouRPzXwhfEk9sDtHM38I
p/pcv7xKM58I1rMKfVZo5hdhT8zNk8s1841Q4fFu4VLN/CN0HOg2a7FmPhIm
ZJzYskgzPwk9a4a9WqCZr4SsX1/EzdfMX0Llg8SaDM18JgyJ8N84VzO/CcVh
B8fM0cx3Qpumu/vM1sx/QtTEV31maeZDYd2cmaNnauZHYcGtxdnpmvlSsKgd
cmOGZv4URh5MdpuhmU+FbKPIOdM186twt2DJ62ma+VZo6WuaOE0z/wrl1/Lf
TNXMx4L191/nTNXMz8LNYQ6yqUJ/7qCY4nhmitCfO7z9lDluitCfO5yev8Nd
mE+sdIdDw88+EuYha93h1C8d84R5SYkHePiuHiPMPxp5QNmQgFbCfKTUA36b
s7apMD8p94B964f9p5n/9IDyXz1RmOcED8jwXrBemM+M8oDT+/3ShfnNWA9Q
Nro8VJjvTPCAu41lUYKX4gFH3v0bLHjpHtCmuNxJ8DI9wLDoajPBy/EA+cfs
76L5bJB+03ktmt8G/+FVj0Tz3TB5htMt0fw3nHi39KJoPhwilpmfFs2PQ4+q
rKOi+XI46fauQDR/DjMvOe0WzadDo3mNtonm1yG0cvFG0Xw7pHXc+ado/h1m
buySLZqPh/xBQ1eI5udhXfsny0Tz9XAOShaL5u/heLzeItF8Pnzdvni+aH4f
HAz6ZYjm+0Gv1dA5ovl/cC3cOku0PwCM3Gg9U7R/ADz/69AM0f4C8N1t+nTR
/gNw5OzwaaL9CSD/TPJU0f4FUHRw5RTR/gbgurg0TbT/AYQtdk8T7Y8ALTss
TRXtnwC35jbWzI/LvWB4/+WTRfsvQJm+h2b+HLxA+vWfSaL9G6DzrcmTRPs7
gN1Af818e4IXlI+t0czTp3jBcdvDmnn7dC8onJKhmZ/P9ILUC/008/U5XnC+
X5Bm/j7PC/wWN9d4BV5w+eZb8f4WkK6+Ld7/AqxvnhLvjwGPju8R758B7RzW
i/fXgIn5S8T7b8Bct5ni/TmgZbcJ4v07IObN7+L9PWDbo8Hi/T9gdl2seH8Q
0DOJEe8fAsv1u4r3F4Ho0x3F+48A+kSI9yeBWF+VeP8SUBS0FO9vAqt3hYn3
PwGJQYh4fxTILlKK908BtxMB4v1V4LKev3j/FfiU4SvenwWkLXzE+7fASqlC
vL8L7HL0Fu//At07eon3hwHHTE/x/jEQ8cxDvL8M/BbnId5/Blb+5y7enwai
p7mL96+BAS6i/TtiFXDlumi/kAQFSLJE+3+kKGBSrGh/kHQFvHUX7R+SqYC4
r+L9TxRw+pZ4fxQF9CwU75+igF7rxfurKMBrnnj/FQV0SxHvz6KATkPE+7co
4ECMeH8XBbTsKN7/xQeWthLvD+MDSUrx/jE+sMVbvL+MD3xxFe+f4gPdHMX7
q/jARBvx/is+0NtSvD+LD1xtLt6/xQdKm4n3d/GBjsbi/V98wK6JeH8YH4g0
EPfnAwf1xf35wBA9cX8+0K6RuL8feXXF/flAekNxfz/y6Yj784HW4v17an0A
G4j784U+4v1/jHzhq3i/Iakv7BXvHyT3hXHi/YWUvtBKvP8Q+EIz8f5EUb7w
VHt/Lzivvf8X/KW9Pxhka+8fBnO19xeDCdr7j8EI7f3JYKD2/mUQo72/GXTR
3v8MOmjvjwYqrf2XfKGl9v5qEKq9/xoEae/PBgFa+z/5gZ/2/m7go7V/lB94
a+0v5QdeWvtP+YGnVn9+4KHVnx+4a/WnOf7Znx/ItfrTHP/sT3P8sz8/0Npv
rEBz/LM/zfHP/jTHP/vTHP/sj3m1fsD2/wOt/dH0NMc/+9Qc///nm2mOf/br
r+3JmCdnnoJ5SuaFMw+YF8m8KObFMC+WeYOYl8C8ROalMC+VeenMy2BeJvOy
mJfDvFzm5TEvn3kFzCtkHjKvmHklzCtlXjnzKphXybxq5tUyr455kgB2/gVo
e0YB2p5ZgLYnDdD2ZMyTM0/BPCXzwpkHzItkXhTzYpgXy7xBzEtgXiLzUpiX
yrx05mUwL5N5WczLYV4u8/KYl8+8AuYVMg+ZV8y8EuaVMq+ceRXMq2ReNfNq
mVfHPEkgO/8CtT2jQG3PLFDbkwZqezLmyZmnYJ6SeeHMA+ZFMi+KeTHMi2Xe
IOYlMC+ReSnMS2VeOvMymJfJvCzm5TAvl3l5zMtnXgHzCpmHzCtmXgnzSplX
zrwK5lUyr5p5tcyrY55Eyc4/pbZnpNT2zJTanlSp7cmYJ2eegnlK5oUzD5gX
ybwo5sUwL5Z5g5iXwLxE5qUwL5V56czLYF4m87KYl8O8XOblMS+feQXMK2Qe
Mq+YeSXMK2VeOfMqmFfJvGrm1TKvjnmSIHb+BWl7RkHanlmQticN0vZkzJMz
T8E8JfPCmQfMi2ReFPNimBfLvEHMS2BeIvNSmJfKvHTmZTAvk3lZzMthXi7z
8piXz7wC5hUyD5lXzLwS5pUyr5x5FcyrZF4182qZV8c8STA7/4K1PaNgbc8s
WNuTBmt7MubJmadgnpJ54cwD5kUyL4p5McyLZd4g5iUwL5F5KcxLZV468zKY
l8m8LOblMC+XeXnMy2deAfMKmYfMK2ZeCfNKmVfOvArmVTKvmnm1zKtjniSE
nX8h2p5RiLZnFqLtSUO0PRnz5MxTME/JvHDmAfMimRfFvBjmxTJvEPMSmJfI
vBTmpTIvnXkZzMtkXhbzcpiXy7w85uUzr4B5hcxD5hUzr4R5pcwrZ14F8yqZ
V828WubVMU8Sys6/UG3PKFTbMwvV9qSh2p6MeXLmKZinZF4484B5kcyLYl4M
82KZN4h5CcxLZF4K81KZl868DOZlMi+LeTnMy2VeHvPymVfAvELmIfOKmVfC
vFLmlTOvgnmVzKtmXi3z6pgnCWPnX5i2ZxSm7ZmFaXvSMG1Pxjw58xTMUzIv
nHnAvEjmRTEvhnmxzBvEvATmJTIvhXmpzEtnXgbzMpmXxbwc5uUyL495+cwr
YF4h85B5xcwrYV4p88qZV8G8SuZVM6+WeXXMk4QLx/8HOLI8PQ==
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.571589, 0.586483, 0.], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
bMfqM8NJ+eG/fFux+swwrebgYzHNWX1m+GpNkwbXm7D6zLBxWGfPjX6sPlN8
PdhDesab1WeKDbL77Gjtyeozxfvrrk2XKVl9pmgX5Wzcx43VZ4qyzlbzvruw
+kzRtzTg008nVp8plh2fYR7vyOozxYdzIkb4y1h9pnjZIipkhAOrzxS7Rj/Y
Wt+B1WeC/hfMw60dWH0m2HTP8sNLHFh9JnjlkqPDWOZlmOD1Z0vGn3Jk9Zng
WL8n/cc7s/pM8Nuxde1WurL6TPD02ZbBMgWrzwT7HnIwNvVg9Zng+0CNZpgX
q88EC+6saOjmy+priCbjRyeGBLD6GqK8iZVZQVNWX0Nc3/1g5BYNq68hmh/o
GVnahtXXEA80Tno1LIzV1xBV2V0OduzM6muIy85e+vFPNKuvIT75PqOsZh9W
X0M8I3vof2kAq68hTv95dM3dYayeBuhXcnec21j28xvgj6g3H/cmsZ/XAFOe
z5Um8PO7Aa74PvxgzDzmNcBdG6sGjF3KvPpYb+KBXfszmFcfMdbnYf3NzKuP
Rk2eBs3Zxbz6eLnY77ZZDvPqY2H7fcf3HmdePawX3vNOlzPMq4cth9g2+MKe
l+LrYfDBFoGrbzKvHr6N1HNq/IB59fDxyJCNuRXMM0bvOU3/cX3LPGMs3yvN
mvSFecaYsvjlhx2/mWeM7fpD//1G7PpnjHXufa05rwG7HtfFd3Wq9Dwbsetv
XWzncHznSnt2va2LGqnbYGT3g+q6GNij7PpWFfPq4sQGtw60UDOvDn7Yu/zb
3CDm1UGHPtNLpmuYVwfrHig7ZNOWeXUw+X25d68w5tXBmYGd1UGdmFcb3d66
PDsQybzaaNv1t/bf7syrjefWREwb1It5tfHOzTae/xu//nq1sUb/3Y378Puz
WnigZ9cm2QOYVwvb9OzbZfYg5tXCK77t71fEM68Wpo9Zs/oKGy8ltXDj0SFr
WwxhnhGuV8/oqeb3d0bYYUf7HXsGM88IZ5QNzd3DPSO0GmZi4jeIeUb46sW3
HS0HMM8QI2e4nr8dyzxDzP3azOZrH+YZYk5p7ratPZlniC5z1l14GM08Q7T8
2igkuyvzDHDMr0xVvY7MM8Dsd2+eG7DxOd4A473XBq1pzTwDVJpN87rcnHkG
2LwmumYFMk8fu73KPSf3YZ4+VjYfUitKyTx9POnyUhrgzDx9vLhh5NgrNszT
x7YLXPPl5syriaduPP7Ykj//1ERz53RnN/b8FF8T/XfNzLj3nZ3PNbFeydgL
Q6rY56Mmzrm5quP1l+zzoYfRJX3vOzxmnw89/LbNpX2PEvb50EO/+Ivj/rnK
PD3cOjK4xzY+v6aHPQdff1d4ink10GDqWXify7waOBamtFfsYV4NfKv3WDJu
K/Nq4PMOhVGla5lXA9f38ZcNSmeeBNt1LJVZLWCeBE1Pp3z79g/zJBifu01l
PoV5EsxR/q43LJF5ElzSNq5QL4F9/29tevfFHZ8MZP/+t/Zuu7A4877s5/3S
ZmbOTl7dnfm/tI4jLr4a34V5v7QPK6+vOxDOvJ/ai187tO4cwryf2vUX3kF0
S+b90LpsP7KtsBnzfmjP5I1Q7eDj7w9tUtCkwO9+zPuujTvy/FK+D/O+a1OD
S1brN2beN63ZKvNHWhXzvmk7mdVb+EXJvG/a8v7ODnvcmVetjZyoOfSIj2fV
2hGrTuitVDDvq7aqaGfMBQXzvmpbTuqXOd2deV+1XZYMiz7Ix/sv2rlFl9IH
qpj3RZuSvbr2ci/mfdYernVDT+PDvM/aRQvzBw3wY95nrU3TKbm/Apn3SSvP
KTSr34x5n7TLPg5uvQiY91FbuXXlriltmfdRu7nOo6jrYcz7qO3SL/T7ws7M
q9Le/3Hg504+PlZpX2cuGu3Yh3kftLUK79i8HcC8D9oRD1sn1xvOvA/a5Pd7
Sifw8fG9tqv+eU/Xycx7rx0zobqZ6T/Me6f1hUFrA+cz753W+X3j7EXLmPdO
62L6cEfDtez732rnj32cdXgL+/dv/tQTvD4pm/2819r0pzCsay7zK7U/ryWW
BPH73UptwvHhOxV8fvyV9tj380sb8fm6l9oF9gGhv+8w74UW3vZacOcR855r
28+vsF/3knnPtd6jE0tbsfkf9TPtkQ2T9p39zrwK7cZTVll2+ux681TbblZZ
ZWtjdj16opUkDCnxMWfXqyfabZ633pTx54ty7UvXoPIwZ3Z9eqxd3ePk1qFK
5j3SjsnY3zeQzX8UlWlv746avjeQeWXaRuEzj5xvzr7/gfZI8M9aKfz56J52
8eE9eKc9+3ml2l4Hx8/I78D8Eq1x4a1m0JV5d7SbNoaGhUcz75a2tUdE9KMY
5t3Q3vvhNOp3b+YVa+/PDTfY0o9517SD1Otfn49j3lVt+0GNBozl41GRtoFL
r1prB7J/f15r9e7y81Z8vCzQVlUNTxrK5jvU+dqyO+qM+nx8Q23W/Y5Lffn3
52lXWl43v9Wf/fscLRh5wTc+3u3UXmkQsjqzLzvO0JqN8al9kc+/SCRrPmQ9
mdKD/73mwDTzstxu/Ps1Y0MGmk7tzH3N09gx76+F85+vWVTu2el4CK9PE/5t
anSzlrx+ze4F+XNigvnvpwnv7JvbyJ///pqWE4p+TfHi+WjeOHldXuDG89Nk
9LS8HiHj+WpWGx2tPmPF89c8qn1r1LeG/P9Hkzxg74qqWvz/T/Py1NGfhyX8
/1dzZn+z+PCv7Pwv0RwPPJPzv/nP/84PTXfrUa/0nrHPwz3NjVIPTz/+PPpA
s9mydE9XPv9cplHa9j8wiM/Hl2leFhxIGZfP/Eeay+MKJqYeY9//WLPFJev2
5gPs55VrQg7GPb+6g3lPNDPd7R82ymTeE42jzOPe9FXMe6p5/F351Jg/f1Zo
vn/t8vBcKv98apofxHl50/nnV3Ol+NfEpxP451tzc/Ya48hR/POvKfvxLrHW
EH590GRNdtlYN45fPzS/HrfW9O/Jry+a3Q+2o0k3fv3RNO8xL8ShI78+aRa/
uZG1uD2/fmk+nWkRP7g1v75psh9nHNrVgl//NM2tJwzt05RfHzXGAUY1ZvHn
o3eajS+6Z9ir+fVVs6Dwwltfb3791SQ0fdX3tCe/PmuCmy25d9mDX781d1p1
/Rqj5Nd3jXl61N2B7vz6r7n7ZGirdwo+Pmjq/Jgx54eCjx+a40vHr5rnzscX
zdNNgV9Wcu+jZuiLpvnOfLz7pHljFbbfy4uPX5rz1TuMD3vz8U3zZMqCf4+o
+fin+dLnYTefQD4+ajT34185BPPxU1O10ik8mT8PftEMT6n1oGMbPv5qNhw3
yJ0TysdnTb3Y9gvknfj4rWn16fJ5eRQf3zXmdZsumNWLj/+aBob3Nwb25/cH
mjPL6ixrPpTfP2j2OmXsWjya319oHm9Z+8ltEr//0LyYHNZOkszvTzSjN1q1
NJ3L7180wzPeRXdfwu9vNPd/LL9xbjW//9Esq3Ao77eJ3x9puj9Zt8hiF79/
0tTeePTi44P8/kpzIW3mNDzO7780U5/6Tdl+ht+fabbWNVu55BK/f9NkrgrY
OO4Wv7/TRKiHjuDvZyQSMJ/0/nHD5/z+EDbVjqo69o7fP0JvdZ2drav5/SV8
6WvusbUGu95IoMnl1NM3a7PrSw24L33x8JoJuz7VgN+mSbJlUnY9qgF989tG
NnRk17MaUDjcYfr/3gf8d38Ma2b3eOzVmHl6oPc5ssYZf+bpwb5L9zIlzZin
ByMd2lx52JJ5eqDe1fJZ73bM04Of7ZanJ0YwryaMDOt33aEL82rCCLdWX/tE
8ecDMDBX5Chj+PMD2Ay9ZDyrN3++gNeVXxMG9uPPH/C19+C1RXH8+QRO3xz8
bx6f/9SH6q9uw5WD+PMNmHzeO9cunj//wKX7qSOXxfPnI9j12uzWXP58ZwBl
ZzLuS+L58xV45b0x+s7HPwN4dPZ+8CQ+vhpAreLA/CQ+/hrC2qgVoTX68ec7
MF5w/m7D3vz5D4KLaz3axcc/Q8h+me90vRt/foRw/aY4rzN/voQ+P/O9b4bz
50/Y6lCqORrCn0/hrO2D2oH8/8MI9jut+hoVzJ9v4ZB1qlbqz59/Ibzbh+5z
vPjzMeTXKvyxxY0/P0OPji3k4/n4VwtaBfadLZHy528o+x7+O9yEP5/DKq+k
HX1q8+d3yDTbpw2uwZ/vwb3Tjx2VfPyrDXne855PeMc+P7UhsSra7tEz9vmo
Aze6v/nu85B9PurAXn290NG32OejDoxzqn1j8yXm1YGp226Nuco/j3/+Ps/n
y+/jzKsLLY4lqpvkMK8uTLH1fjVjF/Pqwsw1L6/f38S8uuD34uG8HhnMqwsj
nJ8u/7yEecYQrtc/5tRcPj8DZveHWh1O5vM30DPiy4vySXx+B766dzzaYQyf
/wHnf+YEVw/l80NQ73HYp1f9+fwRTGx7VOXRm88vwZgjs18ej+LzTzB3fuSn
zfx6Ww9K7wZdfhLK56+g7Z2le2a34fNbUN/x54x5Gj7/BQ+b7ymvasrnx+Cm
5WvXc3z8qw91f7+G2mo+vwaPjpaU5DXm829Qvlqpucef9xrAP/vDBo/lz2MN
YE/25LfT+PNcAyi+JbGRsPlYSUPYMDTzerUrnx+EaZ4xW4e78vlDmGM+Kj+K
z382BNMuebWOuvL5Rxjm1qRqqZzPT8K55Hc7Hrvx+Uv4bWz8dQcbb3MawrO5
zXqUe/D5T7g6L7ZysRefH4Uu3wanZPvw+VOo0XrCxgB/Pr8Kq19oRnoE8flX
2N160805zfn8LNjtGz6mfSs+fwt5GfGrhrbj87twc8rMns8i+Pwv7C9QLzrZ
lc8PQ7vtRhee9eDzx+AZFzEirh+fXwa9V5WbXeP5/DO07Dd4UOMRfH4a4vHR
P0nj+Pw1WMzosenXFD6/Dbudy1vlzeLz33BtbN0LWxbw+XFo1Fc9/Wg6nz+H
jvUNl7xnz4c5ptAh6p1d6FY+/w72d9Y1ycvm8/PwuP3oZ8G5fP4eBpvoeV48
yef34WPpwrpxBXz+H9ZM7DnvC1v/EWEGhdtNc+ey9RPxZjA2xXhX/TL+fgHM
FFOXz3rO3z/A+lmLch+94+8nILvD0MHO1fz9BVx1rOfYml1/KsxgjmGjycF8
vDSH0Yf6ehmZsPdL5nDffpTjJn5/bw4bnt6K05ex91PmkJ/cUaXi10dzKHc8
+MbMi73fMofvYy6FHfFj10tzcE/+YmUazN6PmUPDAdOGyfj7b3OY2Pzuggfs
+l1hDttnHzcM5eOlBezccHVL7y6sPguw0RuUYBnN6rMAj6Fndif2ZPVZQN6y
Ie/GsPfZ8RZgPO6dcYP+rD4LCLpaZhXKx0ML+CfWa4z9EFafBfR+uvTowmGs
Pgtw2Jp1e0UCf78GuyU3fviP5O/fING45roRo/j7OXhs7Diy2Wj+/g46OI0e
vZm//7YEt77byzeO5u//4POx8jD/0fz9IMTPHz5sAPMyLKGyXkiIx0j+fhG6
GO+ULUrg7x+hb9cWk/5X79/6LCFN3trQYwh/fwnGV2adGMJ+X2kjWN/XP789
f15tBIsa7J9wSfd+FDJTjAdV9+TvTyEnKiv8CpuPTW4ERTGp5l278vevEOl+
pDilA38/C717pp4Z1p6/v4WIn4dCjFrz97sw4XFGaR8+H2sFMp8mzmP5+gkr
MLwVUdLOh78/hsqwqOuPlfz9MlT5LPsa4sLfP0NmQK3QSXb8/TTsWjvz6mRL
/v4arlxZtqNrA/5+G9RRWz/WrMXff8PCAP2HyyT8/TjUUddYWbOafX6l0Ouw
SWjP9+zzKwXz9bXka1+wz68UTPfFRF9g8zcRUni+adSPV3x+VgqhvS189K+z
z68U9ks/Shqx9WkZUljxwW2Y4jT7/Erhu09lTLNj7PMrhdIzsbuiD7LrixTU
VUNlU3ax+qyh2/jdQ/dsZvVZQ/zdjdbv17D6rGF9o0vZoWy+NsIaDldbTju2
gNVnDbvMvS+EpLD6rOHTPvec91NZfdawuKFzwKnxrD5rODTQqvG+kaw+a2iV
dC26cDCrzxoS2rxrWTuO1WcD/QIcYif2ZPXZwAvXft/NurH6bCB1xbjARx1Y
fTYw9mOiyaN2rD4bmDU4oZ9FK1afDZQv8r46oxmrzwaebW/2yjGQ1WcD96Ly
Gv70YfXZQKvQNUmmnqw+G8h5eTtwAH++tAUr+/yAd86sPluQOI8NPsbeV6pt
4cPctk//tWH12UK6Y8peIytWny18uWz8eoE5q88WeuvZFXc0YfXZwtHDytGd
67P6bMFg99UDS+qy+myhzZqLAxvUZvXZglppFFBkyOqzg/EheTkF+qw+O1i6
dn7HX3qsPjsY8uRCz7E1WH12UHJin4mThNVnB9W9glylvxz+q88OjkdVnIv7
4cDWP8Hs0ddf23x3YOuj4OPPC+3afnNg66dgoY02rrTaga2vgsGeqZn/O/5b
nz0s+byzbetvDmx9FmQa+o5twDy1PWSEjHRv/sOBre+CNf+cijz/04Gt/4Lo
8m7/7v/N6rMHy/2TLL9KWH724OAa5tCK/b459jDD3KzwUE2Wnz1cX1c7sqMB
y88eekyv1KtnxPJzgAkerUzf1uLr2+DD2MV5H+rw9W/Q33F2Y8t6fH0cfNJ3
2dW9AV8/B/5Ft/rlmvD1deASMnOupzlffwdTV6X0PWXJ1+fBVMOjDvFSvn4P
cupG13e25ev7YP6A+2Oq7Pn6P3jz/Omqm458fSBY1X9xo9CFrx+EQzd+ppxz
4+sLoZXvXONbSr7+ELqVlN55w+ZfQAZfh12PNWHn/5/7rLH2Ua7N2PuLGBl0
+VJyYEQgX/8I23ffWLeVvf9OlIHbIJu5D5vz9ZMwb4nG0Y69L0mTweLPdx17
t+HrL2FJ3LVOa9nnNetPfdI500rC+PpNeJRiPN+iI1/fCVmhmriOXfj6T9gP
j77/042vDwX11m39DrL3OxUyeHLbb2NpT76+FPz83O7+7MPXn8KHFl+aWcXx
9akw9NQriXIgX78KLSy/Dfdl1ye5I6zru+mq9zC+/hVmbD+10GUEXx8LA+/2
rF+Pzbf8uQ+5mj32/Av2vuHPc/lLi7yWx8bz9bcw/2g3g+lsPibREUIPrt7j
N4Wv34WpLfIe3J/G1/fCgDVT2yXx+RpH2LfieaYhux/N+jNONXm9Z/Zsvn4Y
yh4bB3+ew9cXQ+9OevY95vP1xzDw8kD/3Wl8fTJccQwf8nYRX78M28Jfb3NZ
ytc3g+WOtk/D0vn6ZwjdesCl/wq+Phq8Y5cNHcbmO6VOsG72a+2ADL6+Gvat
qd+0I39f4gRXTNzfua/n67PBNOr7788b+PptqG2UmJabydd3w9a9XU8O4usP
nODF7zunjNj7xkQnaPB26L9rt/H147DuSFC143a+vhxa/axev2YHX38Obop5
Lw3Y82uWE5y33mo7cDdfvw45vdaMy83m69uh/Ly+/7c9fP072L2dvtl3H18f
D00lA2r228/Xz4Pn6rkbZ7D54ionSAw0xOV8PswZtIs+7d2Qw9fnw83VTY+s
P8TX78PLlA4uy3L5+n4YN9qo1dTDfP0/PKwc07v3Eb4/AKaGZ2h9j/L9A/Bj
e9yR30f5/gK4uL3v4vw8vv8ADMr3LJt+jO9PAP2XxXV92PN+sjO4l6xtU8rW
b6Q5g9/w6tnTTvD9DxCc9LqR1Um+PwKG3Epoufsk3z8Bu8eFtg9k77fQGc6f
shtzgr9PdoY5Zk1/N9Xy/Rmg6rDcL0fL92+AB+R1cUW+vwN62eCKpcj3f0DD
5ZoWX5HvDwHHc23mxPzL94+AAYbvzv2X7y+BelOCyo3Z/ZLaBaSju8f3O833
p4ByROdhe07z/SuQil7OX07z/S2wYGWv/Gb5fP8LpE3cOGV6Pt8fA5nXnKec
yOf7Z+Dg5PFvP+fz/TWwv9FcfS++/sUFIqKPPYk7w/fnQLNnd48uO8P370CW
m9cOPMP390D1kHF3XvH5mT+/X+G7EeZn+f4g+DZ19IKmZ/n+IUjZ1bVr37N8
fxG8mbzk8YyzfP8RvM0823PjWb4/CYZZB905wTypK3h4V0y4wzy5K/hnze7y
gXlqV7A0XTWzTgHfHwWeHYY5OBbw/VOwrFrRKoCt74txhaqGZb9DC/j+K2g3
ft6I3ux5NtEVKqZYbBzBvGRXcEgYt30a89JcQf/VxtVpzMtwhbUdt85aw7ws
Vwgp3jlpO/NyXCFr78/UHOahK+z/bn3yFPOKXKHl1BzFeeaVuMIl1dFb15lX
8ae+7XHFpcyrcoXjXZsonzBPIocZfWwrXjHPWA7y5A4mVXw9oxwuzRmbW808
uRzSszJLf/PndzmMmdc/zUC3Pw8KfbVX6uj270H/DNjTQLe/D67W/eZhrtv/
B/Y9FnW10u0PhB5H/d1sdfsHITglf5+Dbn8h5O/Y/d5Jt/8QYiqMPrjq9ifC
/Fvrcvn75xw5RB57AB66/Y1gbvp5ladu/yNMlJw51Vi3PxImJlUc9dHtn4Tf
LU7MU+v2V8Ko7CF+/rr9lzC/6+3jAbr9mdBqkNapiW7/Jjz5kTU8SLe/E1xU
Faub6vZ/wtbKndnBuv2hMKT8845muv2jcPHX7sXNdftLYdbblP4tdPtPQT7d
1lnD83ODY6feXNfw/NzgnHOvROD5uUHM2CyDljw/N+i1+sf8ljw/N9DGj9Vv
xfNzg/3eRomteH5u4Ncl63Yrnp8bpKxWqFvz/NwgZHNUamuenxt8sXh6rTXP
zw2WXJ9h2Ybnp4D1hv92a8PzU8BZ/8CFbXh+CnisGoRteH4KmP/09Js2PD8F
2PY8ZdWW56cAh/ATLdry/BTw7LNVXFuenwI0ZxTJbXl+CvhV1mRdW56fAhQ3
F+dyL1kBo+qOLOJemgL2d6r/iHsZCmjUJquKe1kKmHspXl+wfxseTpxqJtjf
DcuuN3AU7P+G4IK2noL94TC7XNNEsH8cPu62bSXYXw4fbnwJE+w/h8WzX3YV
7E+HiMV1ewr2r0OPzaNiBfvbYeE093jB/neYah02XLA/Hu7dLBsl2D8Pq5d/
TxTsr4fTT7MmCvbfwx7HN5MF+/MhJrV0mmD/PiR1mZQs2N8PPneK/hHs/4fz
68pSBP0BYEL/Y6mC/gEwWBM7V9BfAAL33J4n6D8AD1e5LhD0J4BewzumCfoX
gLEseqGgvwFUtYVFgv4H8K5+w8WC/gig1+PcYkH/BDh4YPgSQX8F2D/4xxJd
fko4NmfqUl1+Srj77PVSXX5KMFZ1XabLTwnRF3ct0+WnhIHm1ct0+Skh16dF
ui4/JUR5TknX5aeElh/3p+vyU8K4mLJ0XX5K2GxVZ7kuPyXk3PFarstPCR88
Oy3X5acEy3XDl+vyU0KN1SnLdfkpIXbeGp1XpQTboj06T+IB6w+c0nnGHlA9
85LOk3rA56l3dZ7cA77efarz1B5w69Jbnffnbil95ledF+EBRnYSYX8RmHDa
UNh/BCyWGAv7k8A/mSbC/iWgqGsp7G8CO55Ihf1PQKaxE/ZHgRlKmbB/Cpw9
5CTsrwJNXroI+6/AhptyYX8WGJqsEPZvgYcf3IX9XUDj5yHs/wIPwlTC/jAQ
2sxT2D8Gout5CfvLQKvTXsL+M3Cib2Nhfxr49bSxsH8N3OrpLexvA0e03sL+
N/CvpY+wPw5cjfMR9s+B6Zt9hP11wO+uj7D/DrjV8RX254HBal9h/x64H+0r
7O8DUeN9hf1/YMZiX2F/IPiwTeBVqECdJ/CqVJBzXuBJPOHWbYFn7AnvygWe
1BPC3gg8uSe4fBF4ak849EvggSe4G4j6J0F2HVF/JejXQNR/CeLMRP2Z4KKl
qH8T5EhF/Z1AZSvq/wQh9qL+UNBAJuofBemOov5ScN9J1H8KPjqL+lPBIxdR
/yrY5SrqbwXd5KL+V1AuF/XHgj5uov5ZkO8m6q8F1gpR/y0YoBD154JNClH/
LripEPX3ghri/l8gF/cHg7bi/mHQT9xfDMaL+4/BHHF/Mlgp7l8GW8T9zWCv
uP8ZHBH3RwOtuH8anBX3V4OL4v5rcEXcnw2Kxf3b4Ja4vxvcEfd/g1Jxfzi4
J+4fBw/E/eXgobj/HJSJ+9PBI3H/Ongs7m/Hj//m1xjKxf3x+PHf/HTHf/Nr
DE/E/ff48d/8dMd/89Md/81Pd/w3P28g/QFB3K9Nd/z/32+mO/6br+74/zkZ
8eTEUxFPTbwg4gHxQogXQbxI4sUQL5Z48cRLIF4i8ZKIl0y8VOKlES+deBnE
yyReFvGyiZdDvDziIfEKiFdEvGLilRCvjHgVxKskXhXxqokn8SHnn4/YM/YR
e2Y+Yk/qI/ZkxJMTT0U8NfGCiAfECyFeBPEiiRdDvFjixRMvgXiJxEsiXjLx
UomXRrx04mUQL5N4WcTLJl4O8fKIh8QrIF4R8YqJV0K8MuJVEK+SeFXEqyae
xJecf75iz9hX7Jn5ij2pr9iTEU9OPBXx1MQLIh4QL4R4EcSLJF4M8WKJF0+8
BOIlEi+JeMnESyVeGvHSiZdBvEziZREvm3g5xMsjHhKvgHhFxCsmXgnxyohX
QbxK4lURr5p4EjU5/9Riz1gt9szUYk+qFnsy4smJpyKemnhBxAPihRAvgniR
xIshXizx4omXQLxE4iURL5l4qcRLI1468TKIl0m8LOJlEy+HeHnEQ+IVEK+I
eMXEKyFeGfEqiFdJvCriVRNP4kfOPz+xZ+wn9sz8xJ7UT+zJiCcnnop4auIF
EQ+IF0K8COJFEi+GeLHEiydeAvESiZdEvGTipRIvjXjpxMsgXibxsoiXTbwc
4uURD4lXQLwi4hUTr4R4ZcSrIF4l8aqIV008iT85//zFnrG/2DPzF3tSf7En
I56ceCriqYkXRDwgXgjxIogXSbwY4sUSL554CcRLJF4S8ZKJl0q8NOKlEy+D
eJnEyyJeNvFyiJdHPCReAfGKiFdMvBLilRGvgniVxKsiXjXxJAHk/AsQe8YB
Ys8sQOxJA8SejHhy4qmIpyZeEPGAeCHEiyBeJPFiiBdLvHjiJRAvkXhJxEsm
Xirx0oiXTrwM4mUSL4t42cTLIV4e8ZB4BcQrIl4x8UqIV0a8CuJVEq+KeNXE
kwSS8y9Q7BkHij2zQLEnDRR7MuLJiacinpp4QcQD4oUQL4J4kcSLIV4s8eKJ
l0C8ROIlES+ZeKnESyNeOvEyiJdJvCziZRMvh3h5xEPiFRCviHjFxCshXhnx
KohXSbwq4lUTT9KEnH9NxJ5xE7Fn1kTsSZuIPRnx5MRTEU9NvCDiAfFCiBdB
vEjixRAvlnjxxEsgXiLxkoiXTLxU4qURL514GcTLJF4W8bKJl0O8POIh8QqI
V0S8YuKVEK+MeBXEqyReFfGqiScJ4sf/BygfpHQ=
        "]],
       FontFamily->"Arial"]}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->Automatic,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.86541357846204*^9, 3.86541363269973*^9, {3.865417978561264*^9, 
   3.865418007918109*^9}, 3.865418053903922*^9, 3.865418359054146*^9, 
   3.865418496696948*^9},
 CellLabel->
  "Out[230]=",ExpressionUUID->"3c9d05af-829e-4814-9c24-bd04146b8572"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Discretization (3d model)", "Subsection",
 CellChangeTimes->{{3.865410180182604*^9, 3.865410198686184*^9}, {
  3.86541745104632*^9, 3.865417465733119*^9}, {3.86547717299951*^9, 
  3.8654771732908487`*^9}},ExpressionUUID->"554c849c-92b6-4cd3-974e-\
8e1cbd7735d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "funs"}], "}"}], "=", 
   RowBox[{"NDEigensystem", "[", 
    RowBox[{"\[ScriptCapitalL]", ",", 
     RowBox[{"u", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", "10", ",", 
     RowBox[{"Method", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<SpatialDiscretization\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<FiniteElement\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<MeshOptions\>\"", "->", 
            RowBox[{"{", 
             RowBox[{"MaxCellMeasure", "->", "0.01"}], "}"}]}], "}"}]}], 
         "}"}]}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8654776935582047`*^9, 
  3.865477693558648*^9}},ExpressionUUID->"7e30196d-8de5-4630-a150-\
fe0eafdf1d00"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"latexCouplings", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "->", "\[Alpha]"}], ",", 
     RowBox[{"\[Lambda]", "->", 
      SqrtBox["\[Delta]"]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"physicalCouplings", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", "q2"}], "+", 
          RowBox[{"m2", " ", "q1"}]}], 
         RowBox[{"m1", "+", "m2"}]]}], "\[Tau]"}]}], ",", 
     RowBox[{"\[Beta]", "->", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]], 
        FractionBox[
         RowBox[{"2", " ", "q1", " ", "q2"}], 
         SuperscriptBox["r", "3"]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         RowBox[{"m1", "+", "m2"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", 
           SuperscriptBox["\[Omega]2", "2"]}], "+", 
          RowBox[{"m2", " ", 
           SuperscriptBox["\[Omega]1", "2"]}]}], 
         RowBox[{"m1", "+", "m2"}]]}]}]}], ",", 
     RowBox[{"\[Gamma]", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]]}], 
       FractionBox[
        RowBox[{"3", " ", "q1", " ", "q2"}], 
        SuperscriptBox["r", "4"]]}]}], ",", 
     RowBox[{"\[Delta]", "->", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "m1", " ", "m2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            SuperscriptBox["m1", "2"]}], "+", 
           RowBox[{"3", "m1", " ", "m2"}], "+", 
           RowBox[{"2", 
            SuperscriptBox["m2", "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"m1", "+", "m2"}], ")"}], "4"]], 
       FractionBox[
        RowBox[{"q1", " ", "q2"}], 
        SuperscriptBox["r", "5"]]}]}], ",", 
     RowBox[{"H", "->", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"m1", "+", "m2"}], 
         RowBox[{"m1", " ", "m2"}]], 
        FractionBox[
         SuperscriptBox["HBAR", "2"], "2"]}]]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HHrule", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "->", "0.6099"}], ",", 
     RowBox[{"m2", "->", "0.6099"}], ",", 
     RowBox[{"q1", "->", "0.7080"}], ",", 
     RowBox[{"q2", "->", "0.7080"}], ",", 
     RowBox[{"\[Omega]1", "->", "0.4273"}], ",", 
     RowBox[{"\[Omega]2", "->", "0.4273"}], ",", 
     RowBox[{"HBAR", "->", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramRules", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "->", "1"}], ",", 
     RowBox[{"\[Tau]", "->", "0"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.865417597034564*^9, 3.865417685352819*^9}, {
  3.865418543969873*^9, 3.865418544077344*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"7cbc7ba7-a01e-424d-915c-bb24224058bd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"v", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"A", " ", "x"}], " ", "+", 
    RowBox[{"\[Beta]", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"\[Gamma]", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{
     SuperscriptBox["\[Lambda]", "2"], " ", 
     SuperscriptBox["x", "4"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "[", "x_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"v", "[", "x", "]"}], "//.", "latexCouplings"}], "//.", 
      "physicalCouplings"}], "//.", "HHrule"}], "//.", "paramRules"}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.865410440070257*^9, 3.8654104555054197`*^9}, {
  3.865410573522439*^9, 3.865410593314836*^9}, {3.865417541064334*^9, 
  3.8654175634802628`*^9}, {3.865417731129198*^9, 3.8654177542204733`*^9}, {
  3.865417798061221*^9, 3.865417815145299*^9}, {3.865417895149723*^9, 
  3.865417902217391*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"aa863cb1-01e5-467c-a0e7-36bd96341027"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotV", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"V", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8654105962790318`*^9, 3.86541065498062*^9}, {
  3.86541785343839*^9, 3.865417878025732*^9}, {3.865417909275345*^9, 
  3.865417909481786*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"05e097b7-8611-4f30-a6f4-88577cbc0d96"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwtWnc01//3t/feI3uPlN5IGc8rWaXMaMsuSaLMiEiFkllZWckqI9l5Pcsq
ZGUkQiVkz2y+n985v3/u49w/7jmPc+49j8e951wxu+vmjhRkZGTn/wv/hwHj
JxZ3d0l47Gt99c7oAoz586wMbJGwOufTtN/9C3CSbXi1fJ2En8p8Kv7StgCi
h9y3ry+R8IeKb+bFFQvwMTyGbmSMhKV+1NqVRS4AnVKfMP5CwgJqreZlqgsQ
d/PS8aAkEo5L8jx2N2Ie8sk9s8gOkrCjio/maMQsUDsaHOC/cADrWafsi3z4
Fzi/NbhmRCtj4UgXDe4bf8C8LtFernk/bsz0KpmY/gn+c1quT37vw5O9QyYP
tX5AhXeiS6GJEqZ/WzqnP98HJ2NOie48V8TMD4dbTjJ+Bb8DrEYGsYr41V7q
/VXrXZDd9enGk0hF/EGttU55ogt2ODTrxO8o4n+pJfZ6DV3wOlbcycBBEf8m
tx7fvtMFTPFz+U+UFPGLkjXuwtVOaH768KBEnQIueEbOPTXXAQYp708aTstj
9R8MTIrUbTD/aHCLakweT7QZddT8/QKJgZt5H4bl8QzDjPOlti8wbXOIVuOr
PDYdGZ0dfvoFYsTfEXur5LGBYo4LofAFhl4V7Od8II8vXLz6bM2qFbxKkjiG
JOTxLUtRRb7qZshu8u31PCeHV0p+5KlWNMHzA166uZZyeC9hs2j4ogkiUzyK
hk7I4QeHTP9cD2sCD8+r4UYghyvWGbPWLJtAS+SCtoiUHHY6ctN+ebERur0g
u3lWFnMOKY5HHGgECmlaL7G7sthrcsxviaiHi6Fx3O05Mjhgov/JDfaP0Ib+
0fpkyGCHA3VzPjsfAG1ab4gmy+CKnMCjUVMfQNRDcNgjSgbbK80UTjR8gF82
GTk8XjL4j2tWyQn/D+CkUaRxUVcGJynJP+6fwOC22GI780Mah1MxB4WmEBB4
ifINI6c0PmEGf6weVENRu8HjbiZpPMRjVUThUg2/tCPdUmik8ZOJkNim49Wg
L8S9b9+GFHYfL3dJZq0Glu/SReY/pXDEc6N+92dVkGpxrOR5oRSufjCVW/Gm
Egj96DIZYylsjZGvw0w5LL7rSZjXk8J8wVnv+LrKQVJKwLsSSeE9cYunRsvK
4QFl5sHjJClMamuI/BBUDqa4tMJNQAp/lAi4EMNdDiOHvlW9m5DE7A5X/gbr
lgHZXhFC954kXuW1ddIsKoXbPDoX7wVK4gh+57nC+FJY3bXbbvSWxM6qf9i0
/Ethtitb45iLJHZ3sR/I1C+FAR+lClMTSfySpPcxfegtlNVrFV/gl8TTmhv3
TTnfwrXz5zO9X0tg9mKuR3RRxTChF3ikMlsCp5L+pUR5F4PDvrSfGy8ksCUN
OqJ0qRjOUoyKBMZIYOkXn6hLlIvBMOdqcqi3BC49TSI6e4pActkvPlpHAgc6
x4ODeBF8j3h+P79HHFNzcN/ufPYavjaIFlxqF8fj3LujRh6voXX3VQf3Z3Hs
Y0Vsjx9/DbWeZfxBNeI45cvJwbjdAsg49zXfMlMc45gjqW8uF4CLAnPHtrs4
jhYo627VyYfN5iA+UyZx/HUtuYCBNReWqei0qGnEsU7LrTX6mRyY1Y6yrdoV
w+Ziv+cUWnJgpCQlT3JJDNNQsob03c+B+sQqzfV+MVwd5vOqmSIHIl2WL2W8
EsNp4S5XmHazYQ/D5dzlI2J4Wyr+zjm2l3CxtjVSXFMMD3dw0VLOZ0G6h7K7
qaoYdgr3/N3engXSAxtqBTL/1Qu/lemPyoJ9BY/q7ZnEsI7/dFU2exYcOfl2
uKtHFL+XteLh3pMJV2J2uIsvi2L/taBDvsfToUDffn3IVhR3d81di9uXDrMb
TYNM50SxLynRs5MzHTzsozMvnxDFr6/z3CsaTIPbKpLKogdE8Tepk/W719NA
+HXsM+FVEXwkJGIy/tALuKoqTz2wRwTL0t2cKtqTDB7Ula+8WEXwv+4lvq6Z
JPDrMTjGQSGCz4zz0SgRSRB+yzHKaFwYq1s+OhtvlwR579L4K4qFMc+gVtSe
gkT4q8qrFK8vjJ+7Bof+MnoOzmpU1ibuQtjtZvaHzTcJ4EYTuz5pJ4QH6O4J
8N5PAK9eseSwU0K4MEZHxdkmAcK80M/3h4Xw7KHRuSy2BMgu87uqSC2E/9Dp
ekbfioc/agt36BP3YLW4diMaoziwPziUU1cniHsv2LqJcseAU85BK/1yQZzP
foOndiUaXPijKT/nCeJ+Cc7S0N5ocN/UvdgWLYhLnu7ViXwWDbeJXM5+G0H8
OIu8Nkg4GuIMbgXObgrgpcfpJiPKT6DRmsmSX0UAy157N8YwFQmfPzmSJ8sI
4EPkJ4I230VC6yHijbCgAA4lEsxVgyOhS9CDXpJCAGN9sdgQvkgYHu6rVerg
x+G6zLIhxyJgzTlT7qgrPxbjL5Tprn4I8j6Hd92y+LBoAaPgfGcY4B8n5X8n
8OGO1Gm7T+lhYKVrf8r6IR/2/CssMnMjDO6yROYjNz7M/XCgUIAzDPqzfliz
qfPhZpqJc9un78GDzqCi4hZerDQ0/C5xMQTG5Jtslxd5sHLmNWbmc8Fw+8lA
5OU/PJjX1aCnnxQMHP/mygf7ePCADzP6yxQM2h/4WBpqePDZEofPbUQQxFu7
VMWH8WCv1V++BbJBcDSUmfOgwH+5gmPVT6ZASP9hUe+rw40vy6YdUxvxhQOj
Bza6VbixwIuornsvfaF+kn3/fllubP0lPvLQVV8YW21PGmPhxtX6h7+0rPqA
PIexp8UgF5ZyecQYxe0DJfpHxfd6c+F3Noq5e+29oL5QJWikgBNv10zrf9T1
hFNlnGUaaZx4Q45Lg+DyhLGaxamEWE5MJycVzTHmAXTNRdYn/DjxYqFSVdVD
DzgxqrivyoATP8y84k7dcwN6+aSGYn9x4HQNk8+y/u4wHsytacDHgdVzlmkK
qV2BIaBwLpaBA4e1Z7Hcf3cVlHyMMke22PGzz7Y9jE5XwcstgMHvJzu+qrVS
xfvZBWjO/flWkMeOv6jUNws9vQKSKu9ucWix444B3RtM5s5guM9EzmYfO3bg
kqTXYnIGV/m/g/li7Hi/6ZQQY5MTlIoKHdWjYceJzs40t7WdQJf5HodPOxtu
YEbLCSqOYDdmWfjDlg1b/B1NHdW0h7Cfs3bylmzYfrl2MZDMHvIGH/B467Nh
Kjd3tZx6O1jsqglgU2DDfzv7KLJO2gHFHaNnYROsWE/jE7PsFVtAyn87zZhZ
Mf927QXt6zZQFS+rN2HFjL2tpwuKL58BunPj9uSazHiwuKN6gv0MWIlm3xUQ
Y8ZffiVc2K0+DYt5Eth4igmXg5pZA8fp/5xeWKP4DhP2KT5HE95sBc8muZT9
chjxg5Ijjvm2ljBW+NUk9hEjpudqPCPHZwkqt2LcCjwYsaX8eevr7RbQvsta
MKTJiDl9T1aeAAug4WaU0e1kwBmkZg9FBXO4hciFmDbo8fwfrRF1SVP4SIU1
pIbp8UvWgEWhLybA1hx4VrueHj/opq/fa2ECBZZbT90f0+PZXfF71+xPwuiV
VY4ecXp88iVfm3icMZjHzdClHqfDJ8oeRfOqGEHamQKZ8v10uDglIhF/MYRZ
4av6Hdx0uNznzo3My4YQnjsRQjFCi0u0x92ZMgzgQ+3vHaebtLj3hm6qlIQ+
7P/bv7wvhQZzbI4/NT6vCzfn98rxhtJgx+EXDuQsulCxGnxhx4UGPzTLs3yJ
j4AOjXxjqzoNfpxHvVwiewTMJfyeXummxqytQcuFlDpw64LA4UxGaqxBxntK
sEkLqhzc3MIXqfAqH2fCS30t2Ln6MeNGPxXeopJK6GrShDA/F0Z4RYUprBgC
aNo14NnTqsHBI1QYFi45e8wfgqrOs3d4/ChxsXlzy/HbarDz7c3b7UuUWNV7
jP88lxocGaGYGDWgxGufOJL6XqtCy2ye6VtuSjx7bmeI4o8KDDJuipkWU+Cy
/d/GvtiTQJTTxOrgMwq8M31cYYCGBI4CmeHCdyjw+TTRc4fyD8Cs7PGlaWMK
fOwBzhpYVYZdvaT6hxPkWKkmt+di2n44emJuzb2dHI+3cpokntgPDyx1954u
I8dqLJK9Amv7gM1+Kl46lBy7PxFx2FOpBOJBGs51IuR4T/z8gKG1IhytGqDf
tiLDu/lKt+l2ZeBN3stDTRpkmHRTabLTQwb4kq5fiRYlw3tf9sfQ/pWG3lWa
mOPdu8QFjYP5iYNSIOVvxZaysUPECTwifzYsAWvnJq8r1+8QB3PPkm86SkCr
ZmB7w6MdQuk77YPoWXG4ufPy8azoDkEmeThdi0YcPgavMIHBNjFyZeL115Oi
kGD30LWbbZsI8ZG4J9sqAld0hVovf98iFuev9WTtCAMbtV5E9LUtosK1/vnZ
60Jg8yCO/nfsJkHLK3nMLFAAth6TaMJG1on5ofdGlw24oeN6k6NA3jqByfoW
XxVyQabpuYY3nuvE3sufvQUFueAYR0hoH8068YY0evT6Jgc8j++ikNu7RrDS
mTDcH2EDVy8nu/f/VomUIR8ecVs2AOuND2Z4lbhUbaSi8JkVJvjEg/0sVgl1
YYX5t+PMoJZ8Y7fF9x9xuk942NSR4T/9o7a5pPuP6Bzu2n4dTQ8/LjyvXWb6
R6ypBRxlq6ODUJEPAUJpK0Tzpdy8aBVa+JrBtuXWuEy4E/7iJqZUkB2SdY7y
yTIB3R1xSRmU4OegXv30zDJx+tqbK8brFCAufckPTy8RJX1Nex6/JQf33MI1
ds4l4sBA0PROyQ7az+IWcmRkkbj7FkQkCrbRgocii+frRWLLICh5On8LeWjm
SnQbLBLRzjQfN2o30K32jJMJtxeIQ4x/XH/uW0VqKrb9jUYLhJbBehfjuX/o
3zMRh1WeBaIm/tjYWsQK8rZL9j1dPE8sDJu+f7OzhJYmFYxUW+eIvqRM13TJ
BXSzNOdigtMcQdO3+mrVbx79C5C6uUo2R6jVi5wLKJhDa2wiLypVZwk/8crD
XmozyPd7UqlAxwyxaBJsH0g/jTYy+Zr9XWaIsfHHnzP+TKItNY4VrRfThOsF
nbKgigkUQBbF8OLQNLHHr48YeDOOdj4zipJ1TxH37sQzJbweQ+QXqI9/pJsi
VHZuqt6oG0U0IWtp+h5/iTVzlZuDx3+i+8a3yl4x/SUWlGpSDINGEB3PYgvd
qwnClVv7nJP3MGLInfrXPDBOVNWfIq96NIgiPC4zKXqNE6an1rLiFAcQk+Yf
sUds44Q076KJ5Ld+xNo+ZGyiN0YI96V6SVv2oSfPztkVDf8hEsSaXLclehGH
3Tdvdr8/BIOaso35bjfiWunM+PpmlHBtbXp9rK8L8Qk2rFnz/Sa+0ffabtO1
oeejOiyVJb+IokLBmSjTViTwplZC4MQvorbMICM7rxkJ6VScHAz+SfzJ9Lhg
HNeEUhlUHbT2/CRGrdXv94o3IpHuYt/UshFigs5DfOBDPdJtszL60DtMxE4t
LV/a9xHp25reDGEcJvaZGzPMbmFkuGz0Qg+GiDDkkShQQiBjAa2Vz7mDxPpj
+f12XtXo5Gs10cihAeKUf417VlAlMoP9x09yDhCfXv64FpBVjqycJNK7bvcT
t8gCd2NVS1H4Dc8HMe++Ea8OpWT9ySlB72/XXTef7SOaRRYkcpWL0fx9TmsO
mT7iZLTSdd3UQiQZa6/dZdNLVJFIM4rkr9Hp1LdSMc96iObowdys8DwUkUvJ
bN7ZTUiXzekbHspBi0TmQOeRrwR5UsaxIrIsJN2y9DHav4twiKJN6OXJQGd6
dfPMSjuJb8WXIqaN01Dkz9ho9pkOQsn6/ICrbgrC0799OqU6CPGIaE8y2UQ0
MeeMxd+3EV0ddcYaek+RCQ1dVIbSF2Jendaw+1kcEiYZKmawNxO9I6x9MaVR
6J7RxIZYyCciQbNp/4f7EWja5sHn9OVGwtBa4OfTsvvIwkv2mZhTAxHeKrRP
RCsUVUV+ckrvqyO+lRkaBfIGI7HMy6piRh8JKpu/4f9CbqMHlXRU6VWYOJ9S
rfPvhjcaemH2Uud0LVFtpRdEueiBXrdGH9HRqCayrrG/b9q4hvzXO4dBuILY
/fI8TFXQGRlJcwQA+Tsie4/mpy51W8RrYS4Ao8WEur4qt0bUadSyK3n9zuPX
RJBx3biwjym6fOZlbqDlK+LIcyERb8WjiOqt1GiAQDrhunpJs8VMFQG/sdYG
jifMb6SJzCyLovlnzx0Wnt8lAmJzStjt17RvU8Q16KtfQaJh+UVWTI3aSon2
TVxqUci2oI8mLZkNDfEXzzKyJqOkLo8711zlkQXpW02YThZK7jD2XxfUQGX9
1nfv++chnwDT70Ht+ogZT0nUny1CJ14xe10XN0MoNj+s3vst6osuN0mdtEY3
nK7+rY8rQ+z8box9pTYo45CCcUNxJTr8qtHvhIYD6maaetPQVoNEUz4eU+a8
gmhG8tgbpwj0dma6t+2CG0o+o3rYPvQDmvxM117A6IFUdeOv/uaoQz+O6F4E
4VuoTXEl2T69Ht39zu110NEHkZG927WvbUJhWnvef4+4g57/5VIeNf6M/Lyp
Ti+VBqMDX2/aOQw0o5iGO/3hNSHIIVulwWHtCzqa5Csnzv0AbUfF/RsNa0eZ
kRNcRk7hqEVzI7YkvAPN6Wt9NOmIRA7SZxsO8HehGKXv+iZrT9B+QYYhj5Eu
9DlyJpjCMgZts1b9K3n1FW3tW1vRfR+LEtb5ZUlqPSjIJr7/UFUCamrtDydZ
fENv1yU4vlxLQZd9vjedU+hHXLmhe7XdXiA6yQGqUMrvyM8/PsnuYxo65j8Y
2P12ANG9Nzx/fSsDTUr/qN6KGEQhFp8+3FPMQhFdP9YkHX4gxuLcGzouL1Gr
3LDHLa5hVDkWXlXBnoNce4YLU6aHUVy4JT9vQC4KA/d/dnYjaCyS8+Sl9Twk
M+1Oijj8E/F4EP5usm/Qms6C2YvsnyjMPa1X4Uch+vT0hvtbjl/o4N1CR7uv
ReiyrsfrgclfqCcnYse7tgSpP19smbP6jaSrefdMNLxFdHMek5R1v1ESZTEV
1/dSlJvoKaOYNIo4KsPYZBXKkd/8kh7Q/kHFIeNkdlcq0DH9mw6Wnn/Qc5Rq
tVlWiSYXbqbfPj6GLC+8fSUfUoOqDFaIJ+VjKPvocW0tyloUnnJrKEtiHB2V
LXDPiSeQgpGX4JfNcSQRYnzhot8HtJX679BP5wlE21eZEmb7EbUue51e+TqB
vKzOxt+1qEOuad7xQgV/UT/bgeCqMw1I89/qW2W+SXRTTTB62K0RMRn7dOmF
TqK580lReU+a0OtVH1a381PoGLPnttjWZxR4Yn3v3U9TqIX7/lyrfgs6melr
nKAyjez25PcIpLWi2ZN+D2uZZlB4wbGFyqB2VJu18arLZwZZZek/iArtQI83
/BrHRmcQA1W5v4xZJ9qX7U/J+n4WPTPNVMqj+ooqAmtrC9XmkebjTHb1H70o
LXfnS6XrPPJUzyj8PN2HHnRr/6jLmEcneoSqZGn70Wl5YrOPZQHxOKOQ5AsD
CE7tMvw6uoC0606bnUscRLJBSGDabwH5j/Tkafz+gdZ7CHWy8QUkWzk4aXti
BP0iIzNkEFpEnMZMqmzUP1GzAlhzWSyiUvcx2tC6nygxGN+SJRYRqW7H0efU
b3R474cS06dL6O75DuOhrjGk2t2bUPt5CY2mD/YHvhtH+/2n/RS3ltC05NDX
0y8mkPRnXl0622Xkyvua0/7hJBJz3yvjFbuMar2i0/4+nEJ7eHUZRxuW0fOl
Z7JWMdOI09HtKyG/gj5dSzaOrZ5FLEyh5XsvrKDTPYHatYNziOHt86SkqBV0
62nOlE7IPCIjb7D3Xl5B+pOrqcZVC2g6WXBZqfYfSqFeDmG7tIzGdZW/Jc//
Q0atsWM53Cvo16R+DYPEKrJvH7tp0rGC+tU9Qsfur6LNR2fNFU+tosbuT1yp
ZmuoaK/G8uqLDfTBf2iNMXQNxVrUdHYFbaIa8eVB37I1VPjrymyk8xYqcRd5
eUpwHZmppACTwQ56weSlyvxnHV1uIQLSZckh8W0Evz/vBnLjvzvMVkIOCWfT
tyeMNpC4jNqDEW0KiMxpbah/s4HeeE+7DNhRgs9RCavbPpuopLal7GcPNXhO
qR+ezNtED3z43iz704BbzEnh0z82Eb5hVjwiRQuOI75jpCNbaCCmI/vuPTow
v93hNcW4jeQq//4ruMUIJyTGzp7R3kY9Kjqc+ppMYNi8qd3kvo30HISFD9Ey
gzafDG1mzzbS/Rzcfz2PBRRKA56efbGDahII/21OdqDw4h504CcD8/N9ro60
3HD2Ul5XhQoZrNw3aNRJ4YaSY+gzkykZTG+ubZir8YCdyJWy0jAycLJsrdL1
4IWPn2qeUC2Tgauk8EAxhwAIvDW7f5qVHHo/VVfcrxMAj5SxgAJ5cnBI1NFZ
9hYEcQ+2q5a25EDTeGm0bmoPhAg66GW1kcNhfELOnEwUBqnXNdb+ksOkhfKf
ZmdRUJl/dMCYmgK0vzPkH+kUhdH6cpFlDQowvJlFeSxPDI66MW7o5lKAi3u+
5K1bEkD1oeTN7xBKoDHUbzzuJQPn8w1eHnxBCRZZAl+nyWShNH4wKaKKEuIn
liq2HsmCgwvNQ9ICJfAYXo4IK5SDBs6z9iEXqcCr30qUk10RhHdmz/T5UoH2
txn/zUJF8JoIMVWIpwKFbzwtj832gvT711pfW6jAfZ+cdE+yEoQ5kfNJHKIG
Lo7TFRfy9sOQaQKLtyU1BARN/pikUgY1DQXqluvUMFP0e376kjKMsZ5a9Mim
BtM9GpSXhA6AfmVO60dOGrBotmG7mUMCWibTYLtZGjh2t/HXKsNBOC1zFqvR
08IszD/PuH0Q8o447DJI0sKl4zlnVuYOwklfn4C3Z2jh0KZkROaAOiSMpflS
NdDCZbUjVM+aDoP0h4Ub2Ul08GA4pz15RRt8BjeL/Mro4IBRX2F9CILmVer5
k5104DFWmTdND+CmJOC2SkMPjppCV2eSAcqSjrgYetBDUDxzxFCbDuh5xdpN
GjKA6Icn7sEORyEhOiW91p4BgNn2AnPNUZgoeDUSE8gAdhGCL0u59CDyd/VF
jVIGMHtmO3Txsx50m46ejRRhhLPUVpWOYAAOCqoWSv8YYcX8YYa98zEo00cx
FOxMQLIKeNLceQzo7Iw6exX+m/NZs6s3tY5DwbMLJndsmUBJRlQmic8YlqnD
jne0MkGmTzh1wNAJCBnp1fXIZIan0f/y3XpMYajy+DWfGmbQ9ziRQsluBodj
cUJgDzNsqPwzOnjCDOb18v6G07JAetobuNNkBhfzA6Iyr7LAst98c1GdORz2
khzoJrECkzN7U8KAJSSYPKcaMGYFRWMHllSxU7Agy6L005EV3sis7re6fApy
BlaDZp6ywoH9x0p+rJ4CHp0WaZotVjhLwvdcRKxhnfpQpaAdG3TB9fx70Wcg
22PpS6obG3D0KubK/j4DlsOvf4n5s8FZJfrUKNWzUFQhziQbxwba9fet3gye
BaerTDYqjWzQ6ZmcZKZy/r+zdJjqhDw7GKp0+hgw2EBRUphp4CI78Bl8E1ks
sIMWzrBxVjIOGB1C/N/G7WAs4l5gOjMHvMz2jTOSsIc9t0ML6mU54CTb5N2u
JHt4cP4uHaMNBxybDrsfF+sAl4QC8dMWDhDOy8hNSXUC//gAa7l+DvgkmRKX
9csJEpgDZqvGOOAMyy0BPRlnaN323zNEzgkFg51xViXOoD7k6yOpzgk36qZr
utsvA9uLW/uLszgh+z4xwCh3FRR4bzUdKeEEuZgiewHvq6AfdfNiN8EJugN1
JzobrsLtO56Rq985gUVzmV3T0RUmbG5MaLFzQZw5C5VowTXAotfSmgO4wKCx
JOL2Xne4nuHANmrFDWk8bzbHxTzhse/z5Mf23ECpxVJLa+YJb0zbZA+5c0NH
WVBiYJAnzO4c1Hn8kBuSDxuaeI54gus5Rg/1Gm64PxDuFZp1E1y4Sr5GivGA
7YwKzUstL3AK201QneYBV5Zw5vEyXwi7oCIxssYDtYo/OYgFX8hWuVIYTs0L
PpKE0JaiH/z51dU0LMwLZcxtHK+y/MABZa89NOMFTPVn35dn/mC3Znx2qIwX
LHmu1eC4ALjokih0P5gP9C5k39CdC4LNfvq2hUd8oFHga1nNEQzPjHwDzyfy
waeO1TkXtWDolD09rPyWD46/vX3YIzAYjo5zpw+O8sFVKrb7Mux3Qc4hWvKA
IT+Ei7e/vqQTAssXHij8YBEAxSNf54va7sGTL6sDBoICwN09bRC7fg/2ajlH
lsgIwNpjhaFSyTBw2qM/cx8EIBWN4TL/MOj/Tll4wEMAzPVekGoU70Ot9Z0D
D3oE4OPHtm6qpAfw0MzrEClZENpFFe8cz4uAmFZ514JcQajzd6ie/xkByQbD
qVLlgpDZ9fjXX/5IKNIypOLrEgTq76q6/eGR8E1OoH2Ldg8Ue3hHv3N/BLIU
tQ6NnntgvwYTQ6FxFDSWUD85c1wIrrlcfEOeFQ0de6s+dp0WAigvMXBqiIbv
OW4rx52E4Nzsl6MbY9Ewm9p3VjtYCJiuvRYqlo8BnohcKYlyIWCJJ1OzKY0B
R/sT1dPiwsC0O/dytCMWqLjix+5sCIO2iRFF774E4JgNZOGgFYH9UZkVPZYJ
IPbpsloWpwg8eaJQTOmXANq3NcM+KYrAFZptiqn6BPAd/S3FbiMCdA+LHabO
P4XZ0gOOGXUiUDDssLcn/hlMy0/csNMXhbA0t7BLikmwzPvjXr6xKFRf7XC4
aZ0Em1Rdz5fNRcHEuPxW9d0kYBiu/hBmIwox6uadv/uTQCY2ij3fRxTkC+Z/
pYcng92mWvFSnijc5eXWXl1Jgb6We/OhrGLg7YYM4/zSIE47Re8Ujxjc0QvS
jIlPA/Pi0kQpITEA+feWxUVp0Jbw+2ijvBiwZry8YDGeBo22Os9p9cVA4dJq
s5xVOpStbumE3xaD+UtyNOqHMyBB4mZs1F8xGGtt+Za0JwssEyImbObFQOf6
gdwljSzgoM/U2r8qBtHb93ncz2XB49nO8Q4qcdAPpzrcl5gFYZX7NDlExaEg
vKPeVvAleJlMjcZZiUPWljdHsEQ2nPK3U0usE4cMiy/8paY5kJDCRbP6WRxi
4FvmDY8c6CUaeyw6xMFL1k/fPC4HrKgUbjH/EIdBt161gG85cPrR0tugf+Lg
p8x+/bZdLpx9EarsLCcBTjOqJaoBeXCpLltRJUoC1p+8+gVtBeDKOCXedlYS
xLPu6YkuFsGUbxUVo60kbNXMfLSmLQaXiYdjBs6SUHx9Ry5zTzE4N8jmffCU
hJKg6bFbBsVgd8dJ+V2kJHAaPvdlSi2GM0s/UXKtJJg/+rtJZ1IC+gPfzruI
S4HvI2OWZ/gtiOQ3JtBMSsFP/4/bw6NlYPmiorJ5XgoYTdu3y8nLITw2b/Dx
qhT0i+Ydzhcuh2X/x+K81NKQuHum8Pfpcmg2tnojIyoNHQYfHVPbysFr9k+D
oZU0sGlcFDtGVMAXZeqV8I/SYLzcU7f8rgr8K3QtWJNk4Pip4V/eW7Vw4HzH
vE26DESUtt/TFiZgcvf846JXMhBokf1BFAg4a+D12axUBnKrxEE9lIDDvTko
7osMrK6T3/lOg2FtiVmR/7+9SiKV9/x6DAavfd+oJBxl4Z2o79/ldx/APdu1
TG2fHLD1l1fEydbDULtgPIuaHDy3KVsf0a6HE+vNnmOaciDXd6gcnaoHeWM5
5YRjcuBuldehcrceRhf+5K84ysHhJ81JO4P1YK1lk16aLAcXJ1ii+RMaQLvb
LPIAgzyM0Xb6v+NpAiaKg3ZKf+RB9F9+SZdFM1R6U1qMTclD9N3hnSduzf/1
vV03dVEefjoQr+wfNgP+dlmKhUwB1HGfuj7RDJ6FiRMzAgpQclffj1yxBb6f
33F7baoA71afRJ+hb4Wc8gZ/xRoF8FRbsur/+gX0rlnGy8cqgp2e745KTwfw
VQpd15NUAqeI9dvtY90Q4/Egen/fPrAeN8uxF/gO5mEme1PK9sN+fuvs+E/D
IH8u9FRWgDKsOhypvybwG3rH6DNiTx0A+tLDiuxC49Bm90eHQ4QEjLSVwjcd
p+An1au1eHESHDDMaOnxnYLl7MuF/NIkCPqp2Xvk8RTwT03tEdtLgttBV7lR
+RQ4eC6u7tMgQTa3aAmmn4aNkN3XJ6xJcCqQRnC6aBqkX/ILPIwiwb78xVBy
ulk4ZDDQwRRLAvL0Jak+oVkw/pt8/0kCCfbUmLyuIM3Cjb2iK09TSLAgZR/0
wmYWat5Jd2Tn/8ePWaZ4q3wWzBtJYfVNJLChUqdfd5kDx8srmoYtJEga2scX
FTwHPgzlSy1tJDg9SmWh/GwOUk4etv3aQwJOp48XEhvmYKIXNH/9JkH4Veb0
O2zzsOFDseQ4TgJ1Dt34TcF5YBasz/07+R/fmzNFATLzcMDGgHdhgQT1cy7O
cdrzoEdO33ZzhQT6Blk0csfm4XRmc+jaGglae4R7607Ng4tepMbtLRIov2P5
5mA7D///rwU19jksTNfm4X/EQgIJ
       "]]},
     Annotation[#, "Charting`Private`Tag$86199#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-20, 20}, {0., 73295.92084200642}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.865417866370287*^9, 3.865417878603217*^9}, 
   3.865417909775137*^9, 3.8654185555264397`*^9},
 CellLabel->
  "Out[238]=",ExpressionUUID->"8f43ab02-fd4d-4797-9d28-4d755538ee4e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "2000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]x", "=", 
   FractionBox["L", "n"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.865410727784152*^9, 3.8654107424994583`*^9}, {
  3.865418026672928*^9, 3.865418028490274*^9}, {3.865418439024941*^9, 
  3.865418448268615*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"d372ceb7-3e07-4954-ac54-86fcd65bc8bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M", "=", 
  RowBox[{"SparseArray", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", "i_"}], "}"}], "->", 
       RowBox[{
        RowBox[{"V", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["L", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "\[Delta]x"}]}], "]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            SuperscriptBox["HBAR", "2"], 
            FractionBox[
             RowBox[{"m1", " ", "m2"}], 
             RowBox[{"m1", "+", "m2"}]]], "//.", "HHrule"}], ")"}], 
         FractionBox["1", 
          SuperscriptBox["\[Delta]x", "2"]]}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"j", "-", "i"}], "]"}], "==", "1"}]}], "->", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"2", 
           SuperscriptBox["\[Delta]x", "2"]}]]}], 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           SuperscriptBox["HBAR", "2"], 
           FractionBox[
            RowBox[{"m1", " ", "m2"}], 
            RowBox[{"m1", "+", "m2"}]]], "//.", "HHrule"}], ")"}]}]}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "+", "1"}], ",", 
      RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8654107489514227`*^9, 3.865410780436141*^9}, {
   3.865410816275703*^9, 3.865410903285276*^9}, {3.865410938964745*^9, 
   3.865410939253684*^9}, 3.865410971430784*^9, {3.865418186910654*^9, 
   3.865418189611549*^9}, {3.8654182300280523`*^9, 3.865418331982036*^9}},
 CellLabel->
  "In[242]:=",ExpressionUUID->"808b73b4-363a-44ff-9858-4496fb6beb10"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6001", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"2001", ",", "2001"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6001", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"2001", ",", "2001"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.0014987508744378436`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "182625.4628217816`", ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "2623.380882111822`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "2623.380882111822`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "2623.380882111822`"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[Automatic, {2001, 2001}, 0, {1, {CompressedData["
1:eJwl2YMOIMqCQME72LFt27Zt27Zt27Zt27Zt2zZeZaeT+oFOn7TiN2hboU2A
//7770LQ//5/BOT/CEZIwhCeSEQlBrGJR0KSkJxUpCUDmclGTvKQn0IUpQSl
KUdFqlCdWtSlAY1pRkva0J5OdKUHvenHQIYwnFGMZQKTmcZM5jCfRSxlBatZ
x0a2sJ1d7OUAhznGSc5wnktc5Qa3ucdDnvCcV7zlA5/5xk/+EMAEByYoIQhN
OCIShejEIi4JSEwyUpKG9GQiKznITT4KUoTilKIsFahMNWpSh/o0oiktaE07
OtKF7vSiLwMYzDBGMobxTGIqM5jNPBayhOWsYi0b2Mw2drKH/RziKCc4zTku
coXr3OIuD3jMM17yhvd84is/+B3g30INRBCCE4qwRCAy0YhJHOKTiKSkIDXp
yEgWspOLvBSgMMUoSRnKU4mq1KA29WhIE5rTirZ0oDPd6Ekf+jOIoYxgNOOY
yBSmM4u5LGAxy1jJGtazia3sYDf7OMgRjnOKs1zgMte4yR3u84invOA17/jI
F77zi78EDKR/ghGSMIQnElGJQWzikZAkJCcVaclAZrKRkzzkpxBFKUFpylGR
KlSnFnVpQGOa0ZI2tKcTXelBb/oxkCEMZxRjmcBkpjGTOcxnEUtZwWrWsZEt
bGcXeznAYY5xkjOc5xJXucFt7vGQJzznFW/5wGe+8ZM/BAisf4ISgtCEIyJR
iE4s4pKAxCQjJWlITyaykoPc5KMgRShOKcpSgcpUoyZ1qE8jmtKC1rSjI13o
Ti/6MoDBDGMkYxjPJKYyg9nMYyFLWM4q1rKBzWxjJ3vYzyGOcoLTnOMiV7jO
Le7ygMc84yVveM8nvvKD34H/bVKBCEJwQhGWCEQmGjGJQ3wSkZQUpCYdGclC
dnKRlwIUphglKUN5KlGVGtSmHg1pQnNa0ZYOdKYbPelDfwYxlBGMZhwTmcJ0
ZjGXBSxmGStZw3o2sZUd7GYfBznCcU5xlgtc5ho3ucN9HvGUF7zmHR/5wnd+
8ZeAQUwtwQhJGMITiajEIDbxSEgSkpOKtGQgM9nISR7yU4iilKA05ahIFapT
i7o0oDHNaEkb2tOJrvSgN/0YyBCGM4qxTGAy05jJHOaziKWsYDXr2MgWtrOL
vRzgMMc4yRnOc4mr3OA293jIE57zird84DPf+MkfAjhbBSYoIQhNOCIShejE
Ii4JSEwyUpKG9GQiKznITT4KUoTilKIsFahMNWpSh/o0oiktaE07OtKF7vSi
LwMYzDBGMobxTGIqM5jNPBayhOWsYi0b2Mw2drKH/RziKCc4zTkucoXr3OIu
D3jMM17yhvd84is/+B303wE1EEEITijCEoHIRCMmcYhPIpKSgtSkIyNZyE4u
8lKAwhSjJGUoTyWqUoPa1KMhTWhOK9rSgc50oyd96M8ghjKC0YxjIlOYzizm
soDFLGMla1jPJrayg93s4yBHOM4pznKBy1zjJne4zyOe8oLXvOMjX/jOL/4S
MLj+CUZIwhCeSEQlBrGJR0KSkJxUpCUDmclGTvKQn0IUpQSlKUdFqlCdWtSl
AY1pRkva0J5OdKUHvenHQIYwnFGMZQKTmcZM5jCfRSxlBatZx0a2sJ1d7OUA
hznGSc5wnktc5Qa3ucdDnvCcV7zlA5/5xk/+ECCE/glKCEITjohEITqxiEsC
EpOMlKQhPZnISg5yk4+CFKE4pShLBSpTjZrUoT6NaEoLWtOOjnShO73oywAG
M4yRjGE8k5jKDGYzj4UsYTmrWMsGNrONnexhP4c4yglOc46LXOE6t7jLAx7z
jJe84T2f+MoPfof4dzkNRBCCE4qwRCAy0YhJHOKTiKSkIDXpyEgWspOLvBSg
MMUoSRnKU4mq1KA29WhIE5rTirZ0oDPd6Ekf+jOIoYxgNOOYyBSmM4u5LGAx
y1jJGtazia3sYDf7OMgRjnOKs1zgMte4yR3u84invOA17/jIF77zi78EDKV/
ghGSMIQnElGJQWzikZAkJCcVaclAZrKRkzzkpxBFKUFpylGRKlSnFnVpQGOa
0ZI2tKcTXelBb/oxkCEMZxRjmcBkpjGTOcxnEUtZwWrWsZEtbGcXeznAYY5x
kjOc5xJXucFt7vGQJzznFW/5wGe+8ZM/BAitf4ISgtCEIyJRiE4s4pKAxCQj
JWlITyaykoPc5KMgRShOKcpSgcpUoyZ1qE8jmtKC1rSjI13oTi/6MoDBDGMk
YxjPJKYyg9nMYyFLWM4q1rKBzWxjJ3vYzyGOcoLTnOMiV7jOLe7ygMc84yVv
eM8nvvKD36H/PUwFIgjBCUVYIhCZaMQkDvFJRFJSkJp0ZCQL2clFXgpQmGKU
pAzlqURValCbejSkCc1pRVs60Jlu9KQP/RnEUEYwmnFMZArTmcVcFrCYZaxk
DevZxFZ2sJt9HOQIxznFWS5wmWvc5A73ecRTXvCad3zkC9/5xV8ChtU/wQhJ
GMITiajEIDbxSEgSkpOKtGQgM9nISR7yU4iilKA05ahIFapTi7o0oDHNaEkb
2tOJrvSgN/0YyBCGM4qxTGAy05jJHOaziKWsYDXr2MgWtrOLvRzgMMc4yRnO
c4mr3OA293jIE57zird84DPf+MkfAoTTP0EJQWjCEZEoRCcWcUlAYpKRkjSk
JxNZyUFu8lGQIhSnFGWpQGWqUZM61KcRTWlBa9rRkS50pxd9GcBghjGSMYxn
ElOZwWzmsZAlLGcVa9nAZraxkz3s5xBHOcFpznGRK1znFnd5wGOe8ZI3vOcT
X/nB73D/HqUDEYTghCIsEYhMNGISh/gkIikpSE06MpKF7OQiLwUoTDFKUoby
VKIqNahNPRrShOa0oi0d6Ew3etKH/gxiKCMYzTgmMoXpzGIuC1jMMlayhvVs
Yis72M0+DnKE45ziLBe4zDVucof7POIpL3jNOz7yhe/84i8BI+ifYIQkDOGJ
RFRiEJt4JCQJyUlFWjKQmWzkJA/5KURRSlCaclSkCtWpRV0a0JhmtKQN7elE
V3rQm34MZAjDGcVYJjCZacxkDvNZxFJWsJp1bGQL29nFXg5wmGOc5AznucRV
bnCbezzkCc95xVs+8Jlv/OQPASLqn6CEIDThiEgUohOLuCQgMclISRrSk4ms
5CA3+ShIEYpTirJUoDLVqEkd6tOIprSgNe3oSBe604u+DGAwwxjJGMYzianM
YDbzWMgSlrOKtWxgM9vYyR72c4ijnOA057jIFa5zi7s84DHPeMkb3vOJr/zg
d8R/H1KBCEJwQhGWCEQmGjGJQ3wSkZQUpCYdGclCdnKRlwIUphglKUN5KlGV
GtSmHg1pQnNa0ZYOdKYbPelDfwYxlBGMZhwTmcJ0ZjGXBSxmGStZw3o2sZUd
7GYfBznCcU5xlgtc5ho3ucN9HvGUF7zmHR/5wnd+8ZeAkfVPMEIShvBEIiox
iE08EpKE5KQiLRnITDZykof8FKIoJShNOSpSherUoi4NaEwzWtKG9nSiKz3o
TT8GMoThjGIsE5jMNGYyh/ksYikrWM06NrKF7exiLwc4zDFOcobzXOIqN7jN
PR7yhOe84i0f+Mw3fvKHAFH0T1BCEJpwRCQK0YlFXBKQmGSkJA3pyURWcpCb
fBSkCMUpRVkqUJlq1KQO9WlEU1rQmnZ0pAvd6UVfBjCYYYxkDOOZxFRmMJt5
LGQJy1nFWjawmW3sZA/7OcRRTnCac1zkCte5xV0e8JhnvOQN7/nEV37wO8q/
z+hABCE4oQhLBCITjZjEIT6JSEoKUpOOjGQhO7nISwEKU4ySlKE8lahKDWpT
j4Y0oTmtaEt7/gdJrTRx
     "], CompressedData["
1:eJxtnFMQnWcXRmPbtm3btm3btm3btm0bbdKwaVPEatTgf5/peuffcyYXz6y1
9uW5OnPmO1/SZp2rdQoWJEiQrrGDBAka5L8Fg8HxYHgIw5BuoYz7Du0WxnhY
c5OHw8Pj/haBm2dEFombPDIdCY9iGNUwmlt0GBWPYe7ymDAWHhN3H0OQONB2
XBgP94zvlgDqltC0PBHtPbFhErekxn0nM0zOUtAp6JRMnYql5iam4ZYW1y2d
ae/p8Qx4RqjORFvPjGfBtay0mC3AsxvmcMtpXMvFLSee2y2Pcd95YT48P8zH
1AWYvCArxE0szK2I6SKwKF4ML4oXZ/ISuFjSsJRhaSYvw8pyk5ejyxuvgJfH
xYpulWAFvLK5V6G1qnQ1WJWpq7vVCPCaxmvRWm3asw5eFxfr4fVx3RqYFhty
a2S8Id2YNTHdlNaa0WJz4y1osSXeCtettWmxDbe2xtvhurWHunWA7fGOeCfT
nWl5F9NiV26e3dy6097FHnhPvBfsyXpz0/rQnn2Zuh8u9mcD6IG4v6kHMflg
tyG096EBPgwOx0dA9Ug4go3iNtq4OIbbWDgGF8fh43HPCWwit0m4v6knwym4
51Q2jdt03N9mcPOc6TaLls+m/V09B87FxXm4OJ/bAtMLaeuLmHqx2xJavtTc
lsJlbsvhUnyFua+kV8GV+GpcXGNu8rVu66B6vekN+Hqm3sjkm9w2w43Gt7ht
peXbaOvb2Q5u3nca7nLbDXfie+g99F62j9s+ej9+APc8yA5xO0Qfxo/gh/Gj
hsfcjkP1CXM7SVs/5Xaalp+hvZ+lxXPmdp7WLtCeF3Hxkttl41do71fpa6a1
69y0G/RN4z+Z9v4zU99i6ttM/Qt+B79r/B5+l93nJj7AH9AP2a/c5I/o36D6
d6jbY1r+h+k/Tcv/or3/DZ/g2lNafGb8Of0CPmcvub3AX7m9hrbfwLf4O/gW
/8f4e/qD8Y+mxU/ctM/0vwH+hRa/mts3WvxuXF/wv3OTBw36fwZzCw5th3AL
GeBiKFwM7RbGeFhaHs60GJ6bGAGPQEdk6khukWnvUfCopqPQ0dyiQ3UMc4sB
Y7rFor3HxuOYjk3HNYznFj/AE+AJcX9TJzJM7JYkwMWkbsnopKaTM3kKt5S0
91TGU9NimgBPC9PhnumZOoNbRpjedCYmz4xnwcWseDZct+yms9E53HIaz0XL
c5vORedxywvV+Ux7z8/UBdwK0vJCtL+rC8MiuFaUFovhxU2XoL2XpEvSpdxK
Q93KmPZeFi+Hl8XLwwp4ebwik1dyq0x7F6u4VYW6VTPtvTqrwc17TbdaxrXa
3OoYF+tyE+vh9U3Xoxu4NYS+G3FrbLwR3QQ2xT2b4c3xFrA53jLAWzF5a7c2
ULe2puXtaHl7WutAe3bEO+FiZ1zswq0rrls3XLfusBsu9nDrCbub7uXW27jv
PqwvLfbj1t90P3oAHIh7DmKDuQ0xLR8a4MPYcHqEafnIAB8FR+PaGHrsD3yc
23haPsHcxtMT4SRcm0xPwqfAqbg4DRenc5tOz3CbCaebnsVm03NMz4FzcXEe
m08vML0ALmTqRWwxtyX4IuNL3ZbRS9lybisCfCXtfZXhaiZfw9Zyk6+j1xtf
R29g8o1sE7dN9Ga3LVC3raa34VuZejuT72A7uXnfxXbTe0zvpXdD9T6237T8
ADyIH8APGR52OwLVR017P+Z2nD5m+gQ8iWunaM/T+Bn8LDzDznHTztMX4Hlc
vOh2CV4wfZnJr+BX8WtQfR3qdoOW3zQt/4kWf+Z2C9ftNn4LF39h6jvsLjf5
PdrzvtsDeA8+5Kb9Sns+wn/DH+G/uz2G6j9Mi39y+wuq/4a6PaGtP2XqZ0z9
HH+BP8dfur0y7vs1e2Na/tbtXYD/g4vvze0D7fkR/4Rrn2nPf92+wM/4V/or
/c3tO/2N6Ud93YIG+7+LwYL9d/MMjoshmDwkC8UttGl5GDwsrls40+HxcEwd
wTCiWyTjkWl/V0eBUXEtGq1Fp2PA6Ewdk8UyHZuOA2PjcXExnrnJ47MEdELT
WiJuYmI8MZ2EJeXmPRlMjqcI8JR0KtNaam5pYGqmTgvT4elhOpaBm5aR9szk
lhlmhFm4iVnxbHgW49ndctDexZxuueicLDe3PDA3LubF8+F58fyGBWBBXCtE
a4XpIgFelC5mWl4cF0twK4n7WyluWmm6TICXpcuZ1spzK4dXcKtovBItr2za
exWmrsqqcauO+5u6BqtpWl7LrbZx33WYvK5bPahbfdMN8Pq42JCpG7HG3MQm
5iZvyuTNmLo5U7dg6pZurWAL2Jqb2MZ4W1prR3u2x8UObh2hupPpjnRnwy5M
3pWpuzF1d7wH3hP2YL24ab1psY/xvnQ/qO4P+7EB3AbCAbg4yG0wLR9Cex9K
y4fRQ/HhcAQ+8gc+ChdHG45hY+mx9DimHs8mcBMnchMncRMnm9sU2nMqLk6D
03FtBu05020WnGF6NpyDz4VzmHoek8/HxQWGC9kierHpJbR8Ka7bMrgUX46L
K8xtJb3K+Gp8Fb4mwNe6rTO+3tzkG4xvpDfgmww3u22Btrcy+Ta2nZv3HW47
oe1dbrvhTuN78L34PrgXF/e7HYD7jB90O0TLD5vbIfoIO0ofpY/hx3HPE/hJ
XDtFn4ancPEMU5/FxXPsvOkLtOdFdonbZfyi8StMfRUXr8HruHgDv2n6Bv0T
k/+M38I9b7v9Am/hd+i7pu9B3e5D3R5A3R7S8l9NPzL9G/4I/x1/bPoP+Jip
/4R/4Z5/409w8WmAP2PP6Rem5S/xV6a119zewNfsLTfxXYD/w96bln9w+xjg
n3DxM7d/8U/4F1r+lf5m/LtpPcTjWwwa/L+bJg/mFhyqQ5gOTodkoWgxNLcw
psPS1sOx8NzkEWgtIq1ForXItBgFj4r7mzqaYXS3GMZ9xzSMBWPjcQI8Li3G
M7f4dALjCfEELBG3xDARUycxTAqT4Vpy2jOFW0raeyo8tWktDTcxLS6m4yam
Nzd5BibP6JYJZjCdmWWhxazcsuH+lp1bjgDPSXvP5ZYbqvOYm5aXW74feH6m
LoAXxMVCeGHc39RFYFHcsxheHC9hXCzJrQReyq208TK09bJu5WAZvDxdwbS8
Il7JtFaZm1aFrmpcrMZNrI5Xp2vgNXGxVoDXdqsD1XVN16HrMXl9twZQt4am
G+EN8cZ4E7wR3pT23syteYC3wMWW3FqZbg1bMXUbt7ZQ3c609/asA7eOprVO
3LTOtGcX1pVbV7ob685N7MGtJ65bL1y33rS8j2mxLzetHy32xwfg/jaQmzaI
1gbTQwJ8KD2UHuY2HA7FR9AjTY+Eo9xGw5GmxxiOZeNMj6cnwPH4RHwiPQmf
jGtT6KlwClNPc5sOpxqf4TaTls8yN202tzk/8Ln4PHy+8Xn0AreFxheZm3wx
vphe4raUli+j5ctNL6NXGK5kq+hV9GpcXGO4lsnXua2n5RvMbSMt32Ra3Mxt
E77FcCvbRm/HtxrfwXZyk++id8Nd+B7je+k9+D7D/YYHmPyg2yF4wPRhwyNu
R41rx7hpx+kTAX6SFk9xO0WfdjtDexfP4uI5dt60/AK8iF/AL7ldDnDxittV
eNn0NXgd97zBbnLz/pPbz/Amfsvc5bfhL/ht/A6T33W7R981fZ/JH+AP8Qf4
r4aPmPw3t99p+WNzewz/wMU/mfwvXPybPaGf4v72jNtT/Dl7QYsvuYmvuL02
LX+Dv8V1e2da/g/9HtftA/4eFz/in/CP+Gcm/9ftCy3/am5f4Tem/o6Leng/
aIj/e7AQ/78FpYO7hYDBjId0CwV1C23aexi3sDC06XAwPB7BeEQ8AlNHYvLI
uBjFLSpURzO3aDA6U8dwiwmjm44FY+Oecdzi0nFYPG6e8d0SwHh4QjqR6cQw
EUvCzTOpWzJantzc5CmMp6RT4KlYatNp6LQBno5Oj6fFM9DyjLSYyXhmWstC
Z4XqbHQWqM7O5DnccsLsxnO55ablecwtL50bqvMZ5ocF8Px4QbdC0HZhVoQu
ivubuphhcSYvgZfES/3AS+NiGcOysBwulscrmNYqcquAVzKszKrQVU1r1bhV
xauzGnRN0/JaxmvTnnVYXW71cH9T13drAH035KY1orXGdBOobgp1a0Y3germ
bi2guqXpVqblrWl5G1psi7cz3ZZuz+Qd3DrC9sY74WJnty7Gu9LWu7Hu3HqY
7knLe5nuSfdm8j6sL7d+eB+8P+19ABtID6QH4eJgJh/C1EPdhtHexeFuI2j5
SHMbQY9i8tFsDDf5WFoch4+jx+PiBDgR95yET8bFKfhU01PoaYbT3WZA9UzT
M+hZbrOheo65zYVzmHoenI/Pwxcw+UK3RXCB8cX4EnwpXMLUy5h8udsKqNtK
c9NWcRNX46vpNW5r4WrT65h8vdsGuM74RlzcBDfjW4xvxbfg2/DtuL+pd7jt
NL6Llu/GddsDd7O93Pbg+wz3ux2A6oOmD9CH4GFcPBLgR5n8mNtx+hg7wU08
iZ8yLT+Nn8H97Sw38Rx+3vQF+hxUX2TyS26X4UXjV/Cr+DXj13HdbsDrTH2T
yX9y+5mW36Kt38Z/wcU7+B36Ln4Pv4vfN3zAHtK/mn4EdfsNPmK/c9Me09of
9GP8T8O/4N+45xOmfsrUz/Dn+AvjL02/wl+y19ze/MDfsnfcxH+4vcf97QO3
j8bFT9w+G/9E/8u+0F/or/g3/Dv8xtT+j7vyoI7BaHlwWh7CdEg8BAvFzTM0
C8MtDB2WheMW3nQEGJ5F5KZFosXIeGQ6Ci5GdYsG1dFNxzAd07T3WLgY2zCO
YVwWj45vWkvALSFMgIuJ3BLTiVgSblpSOgmezDA5TIGn/IGnwlPjWhraMy2e
Dk8P0+FiBqbOiGfCM+KZYRbcM6tbNtq7mN0tBy3PaW45YS633LQ8j7lpebnl
C/D8tLwALRYM8EKGhd2KQNtF3YpB28XdSgR4SeOl6NKwFFOXgWXxcj/w8rhY
wa2ica0SN8/KblVgJViVm1gNr266Gl0D1sRr4LXcahv3XYfVpevS9XCxvlsD
474bwka41pgWm+BNTTeFzXCxuVsL2Mx4S6Zu5dYa6tbGtNiWm2c7vD3u2cGt
I2xvupNbZ+NaF25dobob7b07Lfbg1tO0vBfei+7N+nAT+3LrS/dz6w/74gPo
gXh/fBA9GNdtCD6YqYeyYfQwejhTj3AbSctH0fLRuG5j6FFQPdZwnOF4NsG0
fKLhJLfJxqeY2xQ41W0anAKncxNnBPhMOAufbXwWPcdtLpxtfB6bz02+gJ6P
L3RbBBcYX4wvwZfCJWwZt6X4csMVbiuNrzK3VXA1vgZfja91Wxfg6wN8g9tG
uN74JrfNcCPcws1zK1Nvc9tOy3eYm7aT2y7jO+ndcA8u7sX3md4H9+PiAbeD
UH3I9EH6sNsR40fN7RgtP276BH4cF0/ip/CT+Gm3MwF+1vg5+jxUX6DPQfVF
Jr/kdhleNH0FXsU9r7ldp6+xG9xuwhtM/ZPhz263jN82t9vwF1y8w+R3cfEe
vI+LD/CHpn+FD9kjbtpv9CP8d8PHTP4HU//p9hfU7W/T4hNuT+ET9oyb53P2
gpv8Ja29oj1f4+Ibt7fQ9jv4Dy6+x8UP5ib/6PYJqj+b/hf/zL5wE78a/0Z7
fmd6Qc83qA4a6r8FC/XfLTiuWwg8OB7SeCg6JB7aMAyTh2XhuIXHw+IRaHlE
OhKMiIuRWRRuUfHIeDTae3QWg45pOhZtPTYuxmHyuHg8XItPJ4DxmTqhWyLj
iWl5Ely3pDAJUyeDyXEtBe2ZkqlT4WJqtzQBnjbA0zF5eqbOgIsZDTO5ZYa+
s3DzzOqWjc7KsnPLAbPjYk5czOWWG9rOA/Pi+X7g+XGxgGFBVsh0YdqzCC4W
dSsG1cXNrQQsjpfES5nWSnMrY1wsy00rR5eH6gqwPKvIzbMSq8xNrMKtKl7Z
eDW36nQ1VoObZ01Wi5v32m51Alysy+pxq0fXd2sA6xlvyNSNmLqxWxO6semm
TN7MrTntvQXe0nQLupVba+NaG25tYRumbufW3ngH2ntHWuzErTPeEe9Ce+/q
1g367s5N7IGLPbn1Mq315ib2wfua7gf7MnV/twEBPtD4INpzMFMPwYfi4jB8
uOlh9Ai3kVA9yrQ4mtuYAB9Li+O4jaPHswncJtAT2SRu4mRuU0xPhbpNo6fA
6dw8Z+Az8Rn4LLfZxueY2xw4F5+Ha/PpBT/whW6LaO/iYnwJri2ll8GlbDm3
ZfgKuBJfZXy1afkaeg291m0d7X09Lm7gttH0JriRqTfDLbi2ld4W4NvpHaZ3
Qt120dZ3M/UefC+u7aP3Gz9gWn6Qlh+itcP0IfwIkx9l6mP4cVw8gZ/EdTuF
n8TF0/gZ/KzxM/Q5eB4XL+AX8fPGL7ldhrpdMbertPdrtPw6Ld4I8JvsJ1r8
2dzkt+Bt/Bb+i9sd49pdbp738Pv4A3gff4iLv5rbI9rzN/x3/LFx8Q9uf0L1
X7T3v2n5E1p8avwZ7fmcveAmf0m/wF8x+Wu3N/AV/tbc39Ge/7i9h+/wD+b+
kf6Af3L7HOD/4l9wf/vK7Qv+zfA71Es55UFD/9+D4UFZ8ND/3UJAdUg6OFSH
cgsNfYfhJobFw5mWh8fFCNwimtYicYuIR4ZRcC0qLUbDxejmFoOOjsdksWgx
NrfYdBw8Lq7Fo+Mbj0cncEsI4+OJzF2e2DCJYVKWzHRyOgVMjqfEU+G6pTYt
puHmmZap0+Hpcc8MuJjRLZNx35ndsgR4VuPZaDE7nsN0DpgTz4V75sbz4Hl/
4Pnc8tP5TBdwKxjgYiFWmFsR00Vp68XcitPexRK4WBKWwkvipQ3LuJWFtsvB
8rhYAa9AV2SVuMkr01WMVzVdha7mVj3AxRpuNWF147XcatO1TNeBdXGtHu1Z
360BrGe8IS42YvLGrAm3pri/NeOmNafFFrjYklsr061ga1xsw+Rt3drBNsbb
u3WgvYsdcbGTYWe3Lsa70ta74d1xrQft2ZP14tYb9zd1H7e+UN3PtPf+TD2A
DeQmH0R7DmbqIbg4FA7DxeG4OIKbOJLbSHqU22g40vgYfCw+LsDH094nGE50
mwRtT4ZT8Kk/8Glu02n5DHObSVuf5TYb6jbH3ObCOfg8fB49n6kXuC2kvS/C
F9GL8SX4UrgEX4Yvo5e7rYDL4Epuq+BKpl7N5GtwcS1bR6/H1+IbaHGjuW2i
tc30FriZbeW2Bd8Gt+M74Ham3gl34eLuAN9juNdwH5PvdzsA98GD3A7ghwwP
syP0EfooLh5zO278BC0/iZ9g6lPwNC6eMX6WPgfV52nrF3DxotsleMH4Zaa+
gl/Fr+D/A/ruyO8=
     "]}, CompressedData["
1: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
NtieNNROIvN/IewCHg==
    "]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.865410972119693*^9, 3.865417914126273*^9, 3.865418031300404*^9, {
   3.8654183035492287`*^9, 3.865418333013651*^9}, 3.865418451111994*^9, 
   3.865418559242023*^9},
 CellLabel->
  "Out[242]=",ExpressionUUID->"7d1c9049-d64d-4f19-bb64-c3a6f90404b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "@", "M"}]], "Input",
 CellChangeTimes->{{3.865411911561184*^9, 3.865411917769059*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"62e022b6-f156-4e06-8c74-9f1c34a29407"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
5z3g0hepZeJw9c6VEx88oHMQERFRG1XdsjbjZNTbNU3xP/TOhpcLyiTu6JXD
y9vdp3MQERFRG1XdklPzSrVxPxjSadeIoUNeL5PWRx12F929S+cgIiKiNqq6
pWN2muPDx4ZMXjSyz5vppXLs/eb3Qzbn0jmIiIiojapuiXXKin2SYci1OCvy
+sJSCbDdPH12YA6dg4iIiNqo6pahl4KSPE8ZkuUYm5DXoFTqbuwY2Cgrm85B
REREbVR1y74Vy852jjNkaoTPfvfjJVL7Re+Ztrm36RxERETURlW3tLmX3Pf9
zwwpiMr5ouj9EgnPG5F03MyicxAREVEbVd3ybdW0tneWG7LtL6tKw54VS3BE
YVT2opt0DiIiImqjqltG96nw2z/DkIbzPdY6bymWGp6hX8w8fYPOQURERG1U
dUunli3Tk0Yb8nWdxjvHdC6Wqjp+gzxCMugcRERE1EZVtwSlXA4z+xiyKGvg
O81OF4n1+f4BnfpcoXMQERFRG1Xd0uutLhUfNDHkS4/L60e5Fklk2q4fItIu
0jmIiIiojapuSXsnxmZU2SXcY3to0u1CKbne5cq7/c7TOYiIiKiNqm5ZvjN3
wM5HdkkrrDm47fRCMVx+NHbUTKVzEBERURtV3fLesrPDx6XbZdP8kUl+eQXi
VmNs6Ha/Y3QOIiIiam/ZlJYtv020y/K2P0V896cCSUi8mrL+dDydg4iIiP9v
/QfJ3ALk
   "], {{0, 0}, {96, 96}}, {0, 1}],
  BaseStyle->{FontFamily -> "Arial"},
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{95.976011994003, 
       FormBox["1", TraditionalForm]}, {72.0359820089955, 
       FormBox["500", TraditionalForm]}, {48.047976011994, 
       FormBox["1000", TraditionalForm]}, {24.0599700149925, 
       FormBox["1500", TraditionalForm]}, {0.0239880059970015, 
       FormBox["2001", TraditionalForm]}}, {{95.976011994003, 
       FormBox["1", TraditionalForm]}, {72.0359820089955, 
       FormBox["500", TraditionalForm]}, {48.047976011994, 
       FormBox["1000", TraditionalForm]}, {24.0599700149925, 
       FormBox["1500", TraditionalForm]}, {0.0239880059970015, 
       FormBox["2001", TraditionalForm]}}}, {{{0.0239880059970015, 
       FormBox["1", TraditionalForm]}, {23.964017991004496`, 
       FormBox["500", TraditionalForm]}, {47.952023988006, 
       FormBox["1000", TraditionalForm]}, {71.9400299850075, 
       FormBox["1500", TraditionalForm]}, {95.976011994003, 
       FormBox["2001", TraditionalForm]}}, {{0.0239880059970015, 
       FormBox["1", TraditionalForm]}, {23.964017991004496`, 
       FormBox["500", TraditionalForm]}, {47.952023988006, 
       FormBox["1000", TraditionalForm]}, {71.9400299850075, 
       FormBox["1500", TraditionalForm]}, {95.976011994003, 
       FormBox["2001", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{
  3.865411918422111*^9, {3.865417919328376*^9, 3.865417920724969*^9}, {
   3.865418309310161*^9, 3.865418335967342*^9}, 3.8654185628151207`*^9},
 CellLabel->
  "Out[243]=",ExpressionUUID->"a45fc6ac-0067-4f72-9753-9c6b91d81fd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Table"}]], "Input",
 CellChangeTimes->{{3.865411937447259*^9, 3.8654119412092333`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"3b599a30-d276-4bfd-99f5-551fc3a3d702"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{17., {5., 12.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{17., {5., 12.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Table",
              ButtonNote->"paclet:ref/Table"],
             "\"paclet:ref/Table\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) copies of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a list of the values of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) when \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) runs from 1 to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\
\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives a nested list. The list \
associated with \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) is \
outermost.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Table", 
                    "paclet:ref/Table", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Table.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Table.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "HoldAll", ",", "Protected", ",", "ReadProtected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Table\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{13., {4., 9.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{19., {6., 13.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{19., {6., 13.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Table",
              ButtonNote->"paclet:ref/Table"],
             "\"paclet:ref/Table\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) copies of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a list of the values of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) when \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) runs from 1 to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\
\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives a nested list. The list \
associated with \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) is \
outermost.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {5., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {5., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) generates a list of \
\!\(\*StyleBox[\"n\", \"TI\"]\) copies of \!\(\*StyleBox[\"expr\", \"TI\"]\). \
\n\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}]}], \"]\"}]\) generates \
a list of the values of \!\(\*StyleBox[\"expr\", \"TI\"]\) when \
\!\(\*StyleBox[\"i\", \"TI\"]\) runs from 1 to \
\!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]\). \n\
\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) starts with \!\(\*RowBox[{StyleBox[\"i\", \"TI\"], \
\"=\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]]}]\). \
\n\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]], \",\", \
StyleBox[\"di\", \"TI\"]}], \"}\"}]}], \"]\"}]\) uses steps \
\!\(\*StyleBox[\"di\", \"TI\"]\). \n\!\(\*RowBox[{\"Table\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"}\"}]}], \"]\"}]\) uses the \
successive values \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]\), \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]\), \[Ellipsis].\n\!\(\*RowBox[{\"Table\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"j\", \"TI\"], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"]\"}]\) gives a nested list. The list associated with \
\!\(\*StyleBox[\"i\", \"TI\"]\) is outermost.", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Table", "Web" -> 
      "http://reference.wolfram.com/language/ref/Table.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {HoldAll, Protected, ReadProtected}, 
    "FullName" -> "System`Table"], False]]], "Output",
 CellChangeTimes->{3.865411941782308*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"14aefb17-e996-4565-b863-3b8da7cc42ee"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"N", "@", "M"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865412253134474*^9, 3.865412259019137*^9}},
 CellLabel->
  "In[244]:=",ExpressionUUID->"6f395e3b-f0f1-4c54-b0b8-bc173fd1c21f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "@", 
   RowBox[{"M", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", "10"}], ",", 
      RowBox[{"1", ";;", "10"}]}], "]"}], "]"}]}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.865412194256069*^9, 3.865412215805976*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"fadd9851-f876-4839-bba3-0ee22b33bc19"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"182625.4628217816`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`"},
     {
      RowBox[{"-", "2623.380882111822`"}], "181923.21538306156`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`"},
     {"0.`", 
      RowBox[{"-", "2623.380882111822`"}], "181223.0553584034`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`"},
     {"0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "180524.97860679863`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "179828.98099135066`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "179135.05837927497`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "178443.20664189875`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "177753.4216546614`", 
      RowBox[{"-", "2623.380882111822`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "177065.69929711398`", 
      RowBox[{"-", "2623.380882111822`"}]},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2623.380882111822`"}], "176380.0354529196`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8654122160165777`*^9, 3.865412261882722*^9, 3.8654179277904577`*^9, 
   3.865418036043001*^9, {3.865418320105496*^9, 3.8654183405338917`*^9}, 
   3.865418459022246*^9, 3.865418570149781*^9},
 CellLabel->
  "Out[245]//MatrixForm=",ExpressionUUID->"1e44a351-bdcf-402c-b00e-\
8a70442d3baf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigensystem", "@", "M"}], "//", "Quiet"}]], "Input",
 CellChangeTimes->{{3.8654122950672197`*^9, 3.865412296203314*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"f049c82b-5639-43f8-8e03-faa3d3c3f9ca"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "186069.6449815847`", ",", "184264.08707088383`", ",", 
             "182834.70188306563`", ",", "181611.89321113657`", ",", 
             "180531.16584843415`", ",", "179559.94228800992`", ",", 
             "178678.87870109867`", ",", "177873.31971334456`", ",", 
             "177126.77181853703`", ",", 
             TemplateBox[{"1983"},
              "OutputSizeLimit`Skeleton"], ",", "40.729682693829126`", ",", 
             "34.52976104235813`", ",", "28.59429762739848`", ",", 
             "22.95011673987278`", ",", "17.63202625983119`", ",", 
             "12.687531533054475`", ",", "8.187031542611937`", ",", 
             "4.240993111385384`", ",", "1.215585724217334`"}], "}"}], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{80., {3., 10.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{72., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 246, 29175677562456745665, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{81., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 246, 29175677562456745665, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{61., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 246, 29175677562456745665, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{110., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[29175677562456745665 === $SessionID, 
   Out[246], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.865412296653784*^9, 3.8654179332536707`*^9, 
  3.8654180410656652`*^9, 3.865418345092157*^9, 3.865418475392324*^9, 
  3.865418581169784*^9},
 CellLabel->
  "Out[246]=",ExpressionUUID->"cd41ca96-a581-49f0-81ee-ed268a4f3ae7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.865412483077238*^9, 3.865412513711831*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"a49705c9-c800-495f-97bb-1f9c1b375367"],

Cell[BoxData[
 TemplateBox[{
  "Eigensystem", "arh", 
   "\"Because finding \\!\\(\\*RowBox[{\\\"2001\\\"}]\\) out of the \
\\!\\(\\*RowBox[{\\\"2001\\\"}]\\) eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\\!\\(\\*RowBox[{\\\"Eigensystem\\\"}]\\).\"", 2, 247, 21, 
   29175677562456745665, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8654124999101963`*^9, 3.865412513984161*^9}, 
   3.865417936866255*^9, 3.865418042692342*^9, 3.865418346432743*^9, 
   3.8654184755993843`*^9, 3.865418581281212*^9},
 CellLabel->
  "During evaluation of \
In[247]:=",ExpressionUUID->"2d0d586e-2107-4cb9-a436-3b73f77bced4"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.0055000000000000005`],
     AbsoluteThickness[1.6], 
    StyleBox[PointBox[CompressedData["
1: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
kSt43DR42xioJFfyiD3rpuY7nFzN42yO1ZMtH84w18p5G5m7f2s9uU5+L0FL
27+A3MBDXVDt2xNHbuSx+nrDP7E7yU085prYRmUvJTfzGLt9NW5akVt5WPu9
sfprKPk1j6fK4u2j3qUxd/BYF5ik7Xqb3MVj328Jow7lknvkfb/IK6iMJvfx
+GbesBYdX7KagMFmn66sWUjWELDp7a11eePJQwSUCN23NbXI2gJmaQ4Z59OW
yqwrYOnc9KB7lWR9AYFdCQ9mZ5ANBDxKL1x18SDZSMDW6f3Dpm0hGwvYZxOu
X+pENhXgMiYg0HkcWSHgt/7R8xsHkS0ErEt4kxLUksJsJaC6dTM34hrZRoB2
zCSHa6lkpYCiiVq5QRFkewE6Dx68n+xFhoD3wYnfds0hOwp44+rjeWks2VmA
xapj52PUyS4C0ko3TvF5cZrZVa7XxbtnUTnZTUD4hxnDbVPI7gKuIj3NIpzs
ISC2PPKiYiPZU8DdjDZvyzlkLwF7LLqq7MaSvQU0fPPhvas62VeA6Y4NvTte
JDP7CejPrP6QUE4OkOdztPPfyhRysIB5JwvN1SPIofJ5pPFRJy9ymHz++do5
cY7kCAFf2Zd7tpmSIwUI8+58ch5EjhagPnii9fmWJOYYAT+qMr8yu06OF2Bk
NrMs+Qw5UcBuB90FioNkQc7Pkx03i7aQkwSk32rwWO5MThUQvL/z6x4FOUNA
bdUJvXRNco6An+sP3CmrUzHn/z8fazc5nyQXCBiyLPDLlpXkIgEjz/ylk2BI
LhWgGLj68LrHEnOZ3I/NqdLpIrlCgFdg//2J68mVAlIMHYcqTcjV8v25B7mV
L0TmWgHducvPHkkj1wlI9k4Ke7SF3CDgcendeTPHkxsF6A4us7v4WmBuEuCU
mhezMI/cLCCvzWPv3/7kVvn/qfjoWGhDlr+bVWKpH9vNM3cIyBw3WhFeTO4S
MG3mD8VHfib3CNBbazXoHMh9Avoyh855o05WE6H1w/i82b9zzBoiejco9p+L
Ig8RUepkO8BuMVlbROGM4Z6Nw8i6Iky3aT5NrD/FrC9ivPiyZMcpsoEI+/bh
UzesJRuJWHKIP7TNhGwsIkAa/DG+JZHZVMSRcUfKH2SSFSLSunrNv9tOtpDf
Ly/blm9NthLx09r3tU7dCcw2IoY9WHDyYwlZKULRPGlAVRjZXsQJhwsrLswl
Q8QoZVLDJS2yo4gZSp+alpqTzM4iPh6bHzb+BNlFRNz0CdZHVpNd5f7vllno
GJPd5N879ktRbssJZncRD3anjfbNJnuIsMuZkTnfn+wp4uJF0xSnaWQvEfen
feG+8VM8s7eI3Vsj9JPKyb4i9ut0m306RPYT0eH+30chruQAEZqan/YaDicH
i1h2vsvn4ZM45lARyeNL2opTyWEiFpl5L7rkQ44Qoden1/7CmhwpIjW94UuL
3uPM0fI82p59k3CFHCNias5WL7ND5HgRquPlygeu5EQ5P5Xf/51jQBZEjBvy
rPNMUyxzkrzvxkHHrmWQU0WkfHt7jKY/OUNE9atd2jttyTki9jr+mKU2kJwv
4vSLZI8LN2KYC0R0RxlGxMSRi0T4D1sfftyDXCriVYrHpRIzcpmIFVcbbQz/
OMZcIWJLSkOflj+5UvaerWmLNMjVIpKebRv4POEoc62I4uS+9soJ5DoRjwaG
2qqXHWFuELH4xsWbsW7kRhEPHTXCA9uimZtEtC5ydMzbQ26W87TJoGeWPrlV
xIGmjihF1mHm1yK0F1i+2Qpyh4hPPXZfDnoQxdwlYkRPwd+928g9In5fsD/W
ZRC5T0R96uDWXuEQs5qE7EzL/s+mkjUk2FalPvO/Fck8RMKSu58k+81kbQlz
3O4v9O4/yKwroaFdfeCHRLK+hJHHrzS9tCYbSIgxeaptf+sAs5GEZN3O/A9b
yMYSKjKOfhquTjaVcLA6wDxZ2s+skDBozz3/ODuyhYTPl4WN6LgfwWwlIW+A
cnvRLrKNhMlLnl16o0tWSrAMvrcp9mw4s72E0F3GFakuZEjYO/PFbPM/9zE7
Srgafny5cRTZWUJc+0q/w+ZkFwlrtvga+VbtZXaV4PTn7ubyrWQ3CWsfD1wf
r0V2l+BWVmPxNDuM2UM+z974MW0R2VOCmP/uQ93TX5i9JLQ4/tvuYUb2luD6
bKPvK589zL4STAQn6+Bff2b2k2D/9rLOl32hzAESFvtZdZTMJQfL8zTNfv5j
zE/MoRKG+oYMc24MYQ6T8JnGlcop5uQICZeybINmBu1mjpTQvMYg3/d6MHO0
hIs+upblX5NjJDyfGF7r5B3EHC8ha+nj9L7iH5kTJbw7YPi2TYcsSLC7m6Cj
7xXInCTf/14zI6w4gDlVQkf5b8em6pEz5H2MnFSv9NnFnCOhZk7ztZhrO5nz
JaQ/yv9rjgm5QMLD9nWTVu3xZy6SUHC8JvlBox9zqbxv5enfrtuTyyQsvNoq
edjvYK6QMC9OGmQ5cDtzpVz/yKJ7Q2/6MldLSLHs/nx4gg9zrQTl46rTKzb/
wFwnIXXTy7inyq3MDfJ+pmT2Vul4MzdK2HEn23JC62bmJgl1LmZ/jLi2iblZ
zoNWxfTzaV7MrRK+q344SjtqI/NrCR93vrSeu/N75g4J0UvvTAtdt4G5S0L4
zWDl3cWezD3yfO55F9YfWMfcJ8FBQ/2nh8EezGoq1DRVX1APWM2socKRr3cr
8oPdmYeokDRxReKcg/9h1lbhh9sVKy2T3Jh1VQhpGja5rXwZs74K294uqR/Q
6cpsoMKtihg1hcdiZiMVxo29Y5P25wJmYxWcRt6MNTg5j9lUhUF2X83cvNaR
WaFCWU3h1Jo5DswWKiytyHwxNtGe2UqFy2OuPbTr/I7ZRoUJVvq7q5MnMytV
MGrSG6Phac5sL9efa3nq6npjZqhwsuFdy/UPusyOKoR1T9LQ2tU563842tPL

      "]],
     FontFamily->"Arial"]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 2001.}, {0, 186069.6449815847}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.865412499919272*^9, 3.865412516583048*^9}, 
   3.865417936908535*^9, 3.865418042733584*^9, 3.865418346463285*^9, 
   3.865418476061956*^9, 3.8654185819227667`*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"18e86ab7-2e8f-4219-b9a2-ce9edb8d75d2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"es", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Eigensystem", "[", "M", "]"}], "//", "Transpose"}], "//", 
       "Sort"}], "//", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "10"}], "]"}], "]"}], "&"}]}], "//", 
     "Transpose"}], "//", "Quiet"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8654126511839027`*^9, 3.865412781502482*^9}, {
  3.8654130006882668`*^9, 3.8654130019843073`*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"866024dc-b927-424f-ba68-518ebcc1ee75"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"es", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.865412786037085*^9, 3.8654127893742847`*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"d57233d2-5522-479c-a703-6950f73c4614"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.215585724217334`", ",", "4.240993111385384`", ",", "8.187031542611937`", 
   ",", "12.687531533054475`", ",", "17.63202625983119`", ",", 
   "22.95011673987278`", ",", "28.59429762739848`", ",", "34.52976104235813`",
    ",", "40.729682693829126`", ",", "47.172624801800836`"}], "}"}]], "Output",
 CellChangeTimes->{3.86541279010159*^9, 3.865413005931826*^9, 
  3.86541795836368*^9, 3.865418046097472*^9, 3.865418349589469*^9, 
  3.865418487427959*^9, 3.865418586681953*^9},
 CellLabel->
  "Out[249]=",ExpressionUUID->"920fd05e-4c32-421e-a44e-1ea028ee1ac4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"es", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.8654130245163794`*^9, 3.865413030691194*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"5a280b2e-33ae-48f5-88a0-e6b58007c886"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    StyleBox[
     PointBox[{{1., 0.28429415632440985`}, {2., 0.9102888036386949}, {3., 
      1.6415252801642688`}, {4., 2.4498440053979897`}, {5., 
      3.3213225850072585`}, {6., 4.247121823115208}, {7., 
      5.221015085872336}, {8., 6.238325086064666}, {9., 7.295381384261223}, {
      10., 8.389210379119456}}],
     FontFamily->"Arial"]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10.}, {0, 8.389210379119456}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.865418488749592*^9},
 CellLabel->
  "Out[226]=",ExpressionUUID->"6c315c37-cda9-4e72-8e0d-ef6d79a74673"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"es", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}], "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.865412791683913*^9, 3.8654127939664297`*^9}, {
  3.865412865184679*^9, 3.865412871505904*^9}, {3.865412953746071*^9, 
  3.865412957343277*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"6c6231ad-094d-4693-bd8c-3b8a34554835"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
    AbsoluteThickness[1.6], 
    StyleBox[PointBox[CompressedData["
1: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
9UXPrd4+VmO4cBdGH2jJlMhZynDlLtRGL/gkcUyD4epdkAnp/a65Xpvy7wK+
HIi3CllJ+Xdh8qbYopf79Sn/Ljzo+xIyYrsh5Y8FLzpqa0X+GoalYzEvdI1Y
67r1dD9i0f1Xo7471Yxh+VhwWjYr+SyzpPsTi88jbk21lNjEsEos8vTqsxpW
2tD9ikV1hl5AcJ89w5qi18t0+Zj2nxPdv1hM5T4/FpTlzLBxLJoFegcS7N3o
fsZi7yxXtxaOJ8M2sRg6XL3J0cCb7m8sOg1UpqTr+jHsGQs9X+nZ00sD6H6L
8hgr/ejaEcxwWCy+Z4TdMueH0f2PxZXldW2BS6IYTo1Fbd02u9K5seQjFht2
rDg7NCmeYWEsWkbpnM9ZlkR+RD/PgnO/3hmlMlwaixiZLe+16zLIVyxutCfN
c6jJYbgqFuW/B53HzOGQv1is2WArq3uBx/CNWEg92TrNpzyXfMbiWeeg4jnx
fIZbY/HQuUK2+u5e8huLW/pJ2/xyihjuisUcJbeoZeLF5DsWSS1+zj43DzHc
L/r5Dl3vG9dbRv7jcGzzpMjw+CPkPw6HO7bqob6S/MehXZp36tnYk+Q/Dnmb
wtRby06T/zjoxRpO+iusIv9xOP3w/BibdxfIfxyOl59u0T18hfzHwfvwZw/D
r1fJfxzGfdeMcdhcS/7jsC/PZbv8iHryHwfbuofl8yfeIv9xCG+4KxOUcIf8
x6GzYUpXemUj+Y9D6S2/y41P75P/OOzawDOaZvGQ/MfBYMuo5W/HtZL/OKzT
yZuap/qE/Meh1UKj5UzpM/Ifh8/Fvf6Ra1+Q/ziM3nDZZ0nUK/Ifhz+67xdd
+/qa/MfhYbfzE/2qLvIfh4HtoZsP339P/kX388Wv7/0mn8h/HC7kfb43I+8z
+Y/D764RzX71X8l/HHwrOVY6mt/JfxzWmh0znvK1n/zHQTneYF+A2CD5j0N6
ZuYv/va/5D8O4mUx17wKhqxk/MehR+pj9t2LQxkWi4fZN+2+NQqSDEvHY/jd
Hc8eXJVmWDYe50Y8q5p/eiTD8qJ/Lzlfo/XPaIaV4vF9z+D7GVZjGVaJx6T3
6459cBjPsFo8dkdOn522fyLDmvF4t+rsHWMVeYYRj43bVsXN/j6FYeN4yKPX
9s74aQybxyP/onTy41olhm3ioTk/yo1fOYNhp3gcYSfuXHZ/FsOe8ch5OeaX
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
j9y4ReZunNb/AMqwzb8=
      "]],
     FontFamily->"Arial"]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 2001.}, {0, 0.029070629432404307`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8654127941944323`*^9, 3.865412872232629*^9, {3.865412954464182*^9, 
   3.865412957847583*^9}, 3.865413007583696*^9, 3.865417963509491*^9, 
   3.86541804890578*^9, {3.865418353330317*^9, 3.8654183548277063`*^9}, 
   3.865418490603092*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"9cfbed10-ceb7-4204-a258-0e340d9e185b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"es", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "4"}], "]"}], "]"}], "//", "Norm"}]], "Input",
 CellChangeTimes->{{3.8654133866944933`*^9, 3.8654133942124434`*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"259d1457-270f-491d-a551-3da9a61748cf"],

Cell[BoxData["0.999999999999999`"], "Output",
 CellChangeTimes->{3.865413394386067*^9, 3.86541796582152*^9, 
  3.865418050666403*^9, 3.8654183561963253`*^9, 3.865418492967421*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"a35b119f-ffa3-43ea-9e15-16b124cf5705"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotWF", "=", 
   RowBox[{
    RowBox[{"Table", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["L", "2"]}], ",", 
           FractionBox["L", "2"], ",", "\[Delta]x"}], "]"}], ",", 
         RowBox[{
          RowBox[{"es", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "j"}], "]"}], "]"}], "+", 
          RowBox[{
           FractionBox["1", 
            SqrtBox["\[Delta]x"]], 
           RowBox[{"es", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "j"}], "]"}], "]"}]}]}]}], "}"}], 
       "\[Transpose]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "]"}], "//", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Joined", "->", "True"}]}], "]"}], "&"}]}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.865412878996447*^9, {3.865413125776569*^9, 3.865413311601396*^9}, {
   3.865413343380562*^9, 3.865413359473984*^9}, {3.865413481861712*^9, 
   3.865413519394951*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"81cb8c32-105c-41f2-9a64-7419778b3e24"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"PlotV", ",", "PlotWF", ",", 
   RowBox[{"PlotRange", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8654135551785583`*^9, 3.865413576866531*^9}, {
  3.865413626021346*^9, 3.865413632082696*^9}, {3.8654179929193583`*^9, 
  3.865418006892345*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"95a92952-f570-4ab7-aabf-d8ef097142dc"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
Etc+EufvMv5aG3ZCs66xzdnLjUTqd7Lp1i4HZB8if1/Cu4HwFX5UleZ2EFXF
f/TO/vaBKFZQ3KHttkYST3y0JCzqiC2mgmeb+y1Q7Ft6muwqTAT4Sf+OkzRB
g48OPjM8XENoT0+6q7gYopdtSUaGuu+IYRM3nS9Tuihi/csQiFYS7reNQ873
ayELWc6LQPmaYBK+12x9Ww3x2dsJwlgJUf3nvtKXDTnUuiPtf+nOS+JOqN3j
PEdx5HPk2Ysoh+dE2HHhpSQ7bkRTJjN2UTCbkLzyMOv6Z1oEAlb6GziVCJ/n
+mHxYMFg/n6650L6VcI14MX+zTfNBpFUKQ2me06hOy168ooZ9wxUMjyauLUT
kP/tEpldzCMGgwIlc0xsWWhflJhMgvi2gT25tzrG8ClieDRbf92WFVX0Hbp6
IyIfGQ6SrrwaFEAseEaq3rkYCT78/FCqXAqh5IKY+tAyVFHxavPfsCI65336
V31KBfJdPLCiWaWBcvYqWjWUvEVc6GhSiPYe1MU886qhvRqJUboQ8Z4GiG44
n6NxhkAPY9DOz2wjlHVES8cjuhZdz530rzhlirSMU0+Pcn5A0a5c1H5x+1G7
0kqWR3Y9ctQV5HpNcQBRULze8ahpQtb9XY+cwh1Q+i9u9TGrZvSr/e1Dtz2H
kMbX8+6e/S3oeaa1fqqEM/LM1Wzw/PsJzYqPa4XouKHthJTVsZjP6PLytpnn
nxOoVW8jufRmB3Kh2m2Q/dYDeco6N2gIdKKju3uom26fRGpCjIOBw53I9Ltm
UeK9U2ibrWq19PlXRF30dNW34jRKWxeQJ2t3I1FDXsd4gQDU1NZ3k2zfi/gr
ZxXOcwUjn7DvTS6KfahQe5A1NS4E0Uv300RTf0cdX8tbh5jC0P6Igaiusn6U
PzWg0acZgdoUhgKDuYcQyUhWZJDpCjrTPVT0YHYIZZlKrexbu4JiIGDV3X0Y
JWY4lRVMXUVyswHkWzo/0XUB28pzP6KRj3Hgy/7pEbSR5p/5hjUO7UlfbP3j
NIrmKJ3ElxVuIvo/gdPUH0ZRY3tLq6zlLfQiI0hOKXMMVT46wnb20W00vXA+
O9JyAtWpZejUmCWhM49DU0UKfyFSejCjYFMa0ltdK1Pnn0Z3GVRNr0TfQ8xW
YZ0m0dPoxp7cmul999HLtTA2v6MzaJHa0aS5PR3N2YTH1TD/Rq1JbK/76R6g
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
        "]]},
      Annotation[#, "Charting`Private`Tag$63998#1"]& ]}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
OrzeHTqW1WeLXw5GqB6NZ/XZYtfsZembJrL6bPHFIpfs5CmsPlus6bZq3LRp
rD5b/FSReWvZDFafLY5YobiXP5PVZ4vB6/v/Lp/D6rPFlc8ST2+cx+qzxXyP
0oNhC1l9NjhgSsTQz4tZfTbovKBXSWkaq88GB8/WRL5aweqzwWZa4847r2H1
2WCfu45jZmey+mzQ9PamEVpbWH02uEqdVn54O6vPBnOTR9ov28Xqs0GHyjj1
mhxWnw3mKIenXz3M6rPGNTtruwYcZ/VZY0fl10MXT7H6rHFOQaP5inOsPmus
bL7m36WXWH3W2M7k8Jd/r7P6rPFkOfi43GX1WaN+oHKH5iGrzxpD/rM9t6aM
1WeNs2MmPttZw+qzxuTxeslv37D6rPByH5enyQ2sPiu09fdcCLJCrj4rrOqw
ojhCr5Crzwo7OPwdlW5ayNVnhX3lMQNs7Qq5+qzQT99qdJVzIVefFfbeuvxz
oxfnqaxwzuoFy/oHcZ6dFVovW5L5MZzzZFb49Jf7myu6cl6VJV6Y3tTesR/n
FVhi233307cPYfVZoqH959nTR7P6LDF//sWxG6ay+izRqfrrneZzWH2W+Gjt
wo5Ff7H6LNF1g0fwhzWsPktst7ub35jtrD5LfJux7UjgQVafJbbpXa+OOcXq
s8D9aVdj7lxm9VmgxrjFbwfus/os8FSOrk1VJavPAh8FLDk26z2rzwI3a/tc
TdK+w9Vngfbncy4XmN/h6rPA65VHXf9yucPVZ4Hb4hZ13Rt4h6vvhzdmx9aA
Tne4+ixQvnjuKnl/zqsyxxc33ef/PorzCszx+bKaq21mcF6uOWbFGF0a8xfn
ZZpjWs6Yy9qbOC/FHIOCWjgaH2T1maNblrdB6jlWnznqjgy+Nekeq88cV0aY
5lx9zuozR0XN79c2fGf1meNvQ/Lin1je5eozw5nFff9a53WXq88MTxzbNvwi
3OXqM8Puh1d8nzjwLlefGTptbz1u+cS7XH1m2O348r89UzkvwQyzu1v83X4L
50WaYcjopJgbxzhP9cPzUm97dIPz7Mzw9oeVQ0bXcJ7MDE0Ono2ZrH2Pq88U
U41Mohsc73H1mWKCeV99Wdg9rj5TrC885L64/z2uPlM8vrJft5WT73H1meL8
ns2bOizjvARTzHnsWa7cy3mRptgEdX89cZHzVKZYMqvy6ZVKzrMzxZX1G6/G
69zn6jPF+BXRU2e63ufqaY7H+nSzte10n3v95njVdEld2Ij73Os1R9/rGu+S
P+9zfnM8EfCy2GAn85qj0dA2eifzmWeC5i3PHH5ZzTwTDJ/R49xOwyLOM8En
Z9pal7Uq4jwTdOjUY+b2fkWc9+P4r7h9VdOLOM8Y74WPiTmwsYjzjHFLaaht
IzLPGDuE/zI7v4p5xmi//0sTa+NizjPGnb3+M3umKuY8Ixze4lyzsF+KOc8I
p3/u2crwz2LOM8LU4ndnhuwr5jwjXIXjy3zuMM8IRxrOPzTzK/MMcU2OoX8X
jwecZ4hvVpfELO37gPMM8Xj4Xf3IWQ84zxDnDT7hkLrrAecZovex6H6tCx9w
ngEmhk8eMuw78wzQoPXjh9+9H3KeAd48PDPePPYh5xngb+Zdx65Lfch5Btin
fNLIZf885Dx9fICjDr4re8h5+rh3Wt3a/8wecZ4+9g4aNFCnwyPO08f/vo90
2D/5EefpY4T95iZnsh5xnh5uXxtrHnzrEefpYfXr191NtR5znh4+3/kwI0r1
mPP0sOTO86vPRz7mPD1sd2bCmcq1jzmvGV4PHatsd/kx5zXDfvVXj7/4zLxm
2HRXtuG7Vk84rxn2vprwT+TwJ5zXDFt1twxqXPOE83SxzfaV395ffsJ5uuhx
7kly+LcnnKeLnQfEfbsR+JTzfhyvc7y/Z/RTztNFn7+cOl7a9JTzmmL/2Tsm
K28/5bymeD/p7Ply7RLOa4pm/sd733Iq4bym6Fu2a/jDsBLOa4pbjkTOlg0o
4TwdPGl9w149uYTzdLBxwIdDa5YyTwenf+x9SGsX83SwufGYBQvOMU8H7/V9
lWH3hHna2NzsBWAj87TR8Oqr6ulWpZynjbJlnSrbBpRynjZ+eeO01DiqlPO0
8frJO97Px5RynhZ+1TWwurmglPO0cKysZsXpLOZp4QazAVWHTjFPC3entozd
XcQ8LXRb3c5r+3vmNcGeJxrWbTIt47wmaDm+1ZM1PmWc1wS/mM0KSetWxnlN
cLXPzKLZI8s4rwmeP/C2cUxKGefJUDPb/EbPTcyToW7TvUvcTjBPhnFFsXFv
C5knw2mDrs889Jp5Mozp/aF5vGE59/zvmgszg6K+Kcq5x3/XrG7cOuyvjuXc
633TTF3lP+v7r+Wc/01jfqXxalxyOed909w5MzRl52rmfdXMxMjLtw4y78fx
hoT7pVeY90VzflGnR4WVzPuieZS/xSBbVsF5XzSv/0tbG9OigvM+ayoeHzha
HlzBeZ818tUJW3v2qeC8T5qpv+gtSxtXwXmfNPOvGp/csYB5nzRlXbuOXLWF
eY2aKhPjgugTzGvUTN0zKejZLeY1aK78M7q8xwvmNWjKvuu4zNap5LwGTcGH
Te1mOVZy3keNqnfD/IiQSs77qAlsmtLtQa9KzqvX1MwdWxE8upLz6jU7Ppce
HjiXefWatS3DTNuvY94HTcxZgxHPDjDvg6bh5mjzfvnMe6/pMvbbklmPmfde
M1bWof2o98x7r4k7mrbdwLCK8+o0p471Uo13ruK8Os0ZjXLKwtAqznunMdpj
WTYwqorz3mkUBovMSodXcd47zfqaFSta/s68t5q9ybJ6s2XMe6upfZry5Ng2
5r3RVDfNqzU6xrw3mvVTxl42v8K8Nxod979cLz5mz3+tWfXnsEPKt+zxrzSv
2u3xDtF5xr3eS82ldlsGvrJ+xvm1mjVbnb729nzGebUahxx8Edv2Gee90MTc
rmk0iHrGec81OQcrdIbHMa9Gc8+u/s2vk5hXrVnvP2XP17nMq9Y8n3FFDiuY
90wz9POePm5ZzKvS/D7rS9ieg8yr1Izer1157QzzKjTbk0cNW3mNeRWa43Ft
8t89ZF655ts9+8C3Ncwr03Qu8r669CPzSjXtx3ppzupUc16JZmTv6Z1WmVVz
XolmVlGLNV8cq7nnP9HonXvU8N2TPf6RZk6H1v9uDK7mXu+hRst/qv8NqOb8
Ys3TIZn/ZPZkXpFmov6yfZ8GMO+epnhlk3lvhzLvjiahy4Lds8cyr1ATMXXO
5i1TmXdLs2BXaHn0H8y7qbngf19n85/s+QWaPjdGrkleyh5/WbM695JfzSr2
evmaopNXpr/IZP55TY/3plYpWcxDTcoUx9PZ2ez5eZp+o3p6Ds1hj8/VfFl9
tcWew+z3ezQRLbPiFhxjx5ma9E3rzr85ybwfZ/TGrm6vzvC/Vxel6A6fdY5/
vnrxhYpRG//jffX7LTvlPS/xr68+Y398ydIrfH3q8es8dwwp4OtXp57Onnbm
Gv/+1PXPRhsevs6/f7WRrs/coBt8PmrrRp9X3W7w+amXTLGc84p//C31t6g3
v7hf5/NXx6QoTr0s4P9/1FUzxzzoepX//1Pv8MxuVF3m/3/V+cmykUfy+f9/
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
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
zmIcmgn6kzOTc9qC/uTs884f3/n+5Cwv5+t3vj85G/e+8jvfn5xNlb77zvcn
Z5rWz77z/clZ6N183kuWs5vmV3kvUc7mZ5/kvXg52zIvg/di5Kx3yAbei5Kz
2h0LeC9CzoZMGsd7IGevB/TmPYWcbf/ix3vyn3mqmvOeTM6e5ZfV8/3J2Rf7
i/V8f3J2OWJ9Pd+fG3vKhtfz/bmxhLvO9Xx/bmx7TnEd358bMz24sY7vz41J
T3eu4/tzY/VPSr7x/bmx8dXzv/H9ubGxOc2+8f25Ma07y7/y/bmxl7u/fuH7
c2O+Swd+4ftzY6NWp3/m+3NjS/c8rOX7c2Pasz/X8P25MbMF9Z/4/tzY9OJX
1Xx/buzegoNVfH9urF1530q+PzfWdcjdj3x/bsxhi3M5358rs5OGl/H9ubKQ
w4GlfH+u7GJR6Vu+P1emFTfsNd+fK7t2YHkx358rYy4xz/j+XFn60fIivj9X
Vhgtfcj35/rzenQvn+/Ple1+a3Ob78+V6ctfXuP7c2Vjfe0u8f25suoHZ8/y
/bmygxuPHOf7c2WShPeZfH+urPFj5B6+P1dWlPlfGt/fz7zJ4//m+3Nlj4eU
LuH7+3mc1WYW35/Lz/Ory3i+PxdWZvZuCN+fC+s+t6kH358Le5I1LoTvz4Ut
NK135vtzYS7xy4z4/lzY8evFNRZcfy4s437+YwuuPxc24ZbTWQuuPxf2j0FK
mgXXnwvrvPXVDAuuPxfWq/haH86LcmGPjGtdOS/ChbHzZl+kXH8ubFLMlUtS
rj8XNu3u3pVSrj8XNnNOn15Srj8Xdl8vvJmU68+FwUKji+Zcfy5M85BsijnX
nzNTdS2SmXP9ObMZrQ6eMeP6c2YXl77qb8b158z2Prry0pTrz5l5aK+IMeX6
c2anO/1e3Jzrz5md1+zcuznXnzNrfT7ysAnXnzMbmZ2gacL158wM09aFG3P9
ObPpvqNmG3H9ObOzZ9O2GnL9OTOn2fkHm3H9ObOuZQszDLj+nJm+vuEqfa4/
Z1Yx7tAgPa6/n///9iua6XL9OTP7kK07tbn+nFnWbypbLa4/Z7Z4xJ54Da4/
JzbkSsH+Jkfsz4kpMvafaXTE/pzYbWXk7u+O2J8TW/ztVnSdI/bnxMoGPKn8
4oj9ObFDKqNetehlOLFa95PTqtFLdWIn48tGVaCX7MQ6XZkt/YBeohPruqp6
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
tE0Bai/blB34vZ3WKCu1l2rKHMcf//ys7p06nyl78sbI0/jZO3U+U+akUftX
teqdOp8pa8xvtSV51zt1PlM2LHbtieIl79T5TJnylPn1yhi1JzFlL/LPfT3b
Xf39ec3ZX5JtC7p5qb8+tTm7Z3bmyAZD/HnN2b6Ahup/y0vUfnPW4GzG5t0u
UXvN2encnofss0rUngnTajbrj1VrStSeCdOxPJ2aG1ei9kzYm1vdPAp6o2fC
rNN61Gb7oGfCPq1YVjfBBD1j9vyAb/cfH9+qPWP27eZK7bjbb9WeMRu88lDM
hcy3as+Ypd9zOfNp1Vu1Z8wWZm0cbjLhrdozYkmnYi9Z9ETPiNW8HBNr4Ime
ERvV0Kq6Ug89IzbrZvnXWyVv1J4Rs3v6JHTn1Tdqz5A5Bp6eG7/njdozZN0f
DNwavviN2jNk13s1T7Qf9UbtGbIzQzs6NAF6hgxyzy4od0CvGRu43OdE2Y/X
aq8ZexG7vrjx2Wu114xltV3t63X+tdprxj6m5v8Xv/W12mvGpBdne72Y81rt
GbB6vzETJg9Fz4CFL573rVVb9AyY9zLbIKsW6BmwsXeUqxXfX6k9A7a28MO0
5f+9Unv6TFI+7E/ZuVdqT59taTGgpGzrK7Wnz9JsByZozH+l9vTZoU2vM/8Y
iZ4+06w/b2baET09lnXLsp2ZC3p6TKPx6qW/dNDTY8f8l3WwL32p9vSYaQ/n
HopbL9WeHnvWf+fcQ1kv1Z4uu+q8YOq69S/Vni4beOLBpdczXqo9XWaXukpr
/1D0dNmzNYnX3gJ6usxrQ8627XL0dNiXVcmmj43Q02Eep2/t2VhTrPZ02PGQ
6sfPnxSrPR3W/VxP1xOXitWeDjM46Pal5cFitafNNj75frzlhmK1p83WO+08
f3oeetqs77spo2r+RE+b3SxdVJbfHz1t1jjq/t+DO6CnxeYWzF68ygs9LTZ/
wbtXcdboabE7Vc0u6uqgp8WKfHw7ZpW8UHtazGru9NJrV16oPU32uiG77ag9
L9SeJjO+mvHfkqUv1J4mG3UmsUvIuBdqT5M1rZyZlxiBnibr2DBw17gA9DSY
1yuLvM8y9DTYSZM5br5a6GmwF0uvjGhR8VztaTBT6PedPXmu9jTYistD+8pv
PFd7ElZVdGpxv5znak/y83qRurL7wedqT8Ku9x/rYbYDPQlbeWTZxyMb0JMw
+weDglsn4/c3qSJaanqtWopf36QqPjw3524i/rwfqsKzS7c3zUP/h0p758Eh
DvPQ+6GK8x8ZrJiPXqMqKsgUlAvRa1SNGTLgt25J6DWoph6zqeq9Gr0G1ec3
z1ZEbUSvQRXq3xQ8fid631UZI7QfL85C77uqx4kfJvvPo1evmiut7vD0Dnr1
KklI51UOr9CrVxV2h0fTvqJXpwo5m371mQn+/upUeksdTg/1wN/XN9XMy7Z3
Kzvj7+ebyuW68n3aH/j7/aaq29hp9/CF+Pv8qvJ/kD4odDd6X1VP5ZPtW11D
74vqz68ht4M+ovdFda//hO8Hm+H5/EXlrpMz/boDnr+fVbkZYU8rg/B8/awK
/BG+wakXnu+1qknu718OG4vnd61qfte379Lno1er6nk6f2/5ZvRqVE63fDWV
x9GrUQ25u/LkxnvofVL99s/W0Z8+ovdJFRE0c1lfI3w++KSqtzm+4HArfPxX
q0YF7lthHIHPH9WqPcO3XRo3EZ8vqlTFR0w9VGvx+aZKlfbx8yaTbPSqVG1y
mu4NeITfX6lKO1Y+dW0Dfn2FyrVj0Y+zzvh8+FEVY7Dx0aMe+HxZrkqr0uxU
PAWfT8tVjzfFjb2fhs+3H1Svg+t/O3gFnz/LVNsvaLz+sxK996rNnsu/a7fA
60Op6uXLvT0XdMPrR6nqipPe+IJpeD14p0oM6vu4cRdeL0pU9YsO1dXn4/Xk
rSqpXQ+baxp4/Xqjmr373pgRAXh9e/Pz59d/OTcar3+vVenjzO88/wevj69U
69MW56uu4/XzpWrNgwn5QxvQK1ZNX9t6WZYfXs+LVfuW6m7MHovX6+eq+sf7
VsVswev7U1X1g4fFl/Lx+v2fql2ERv1lfbwfKVIFDS51Hwt4v/FYNWphh307
Z+H9yUPVOdPeGdOO4v1HoerKwvS2RWV4v1KgMq/eO/mmK94v5auWTRjfvvNI
vL+6p3LX8F3ZIQ3vr/JU2+Z7+516gF9/Q/X8SFj9XjO838xVuVgt+NewN95f
XlZ9fOH56ulKvJ9kP39fjgOsruP9YY5qVbeTKcd08H45W6UlHeuT2Rnvb/er
jlkt3Nu4EI9TVc8SP83ayfD+WSJZp/ooXd/E/buy9mDmyxsd8P59v/KNp0eX
zvPx9UK2cobT/Y3fzuO/5ygbTvXxfdOIrxeY8nCWYoSkA77+uawMv316Urf5
+HopV2mlnJuZfQFfX91Q7r8RMkTZhK/H8pQ/Ls859wZfr0ruKX+cGGe5PRFf
z+YrvywblzH2Ir4+LVCGeb07EqSJ7xcVKqdtazZTvzO+//NQObLL+HaPF+P7
OY+V5uOuhu+4gu8fFSm7Pj79fJBOBZ4fyqHr4vs2dK3A80fZp//48qSkCjy/
lI+Nmul/yq3A80+52/avHyF6lXh+KjOcv/pFdqvE81f5MbWVfodllXh+K8/c
Cqj9lFuJ578y9kBecLBWFT4+lH801c++71yFjx/l4pruyb91qsLHl9Ju8rIT
2/+owsef8maDTrcbiVX4+FSuNH6z8foO9EqVX/r9oZF2Ab1S5esG7/dtnqH3
Xpn6PfvUvu/olSnDLOKeFcuq8flDeeeV5/3ikGp8flE+yxxkmTGwGp9/lKO0
In184qvx+UmpbHUwc8bf1fj8pRzcZbzHvEPo/ezJfWgn5U30qpQHP/fac6YE
v75K+annUI2Pmp/w+VO52UZuVWj/CZ9flSss7PZPbPMJn3+VBeePrzw18BM+
PyvtP2b9c3jyJ3z+Vn4tizgcuQq9T8peOmuv7fwXvRqlzfbYok0q9GqU+zIN
PyiK0KtVfjn4xXjaJ/RqlRcq+4783bAGrz9K3aEG+kUuNXh9UgZPNWxf37YG
r1/K5ZfjlKcja/D6poxL3zPMbEINXv+Ujc57KrQWofdF2Xq2xbA1m9H7qpw6
a7rN4Sz0viqvjAzfM+YKet+UV0q8Vh8qQu+b8tBUk7jlFeh9U35e2LWyRrMW
r+/KlM6HciusavH6r2wz6MapmV61eH+gzD32ImV1+1q8f1Cm7zdv49u3Fu8v
lOnmCZuGjkLvu3LTisC9ZtPQ+64cemPp1L5L0WtQVrV4YWq9Eb0Gpevz2r1j
MtBrUPazyJsQehK9RmV/k2vb111Fr1F5xubIukmF6P1QpoRd2p3/Cr0fyoSv
hzudqkLvh3KM574yhx/oNSmP3xksNzT8jPd3yi4VlWtmWX/G5z/oP9c270+X
z3h/CBfCNTY89vmM94/w9F3ngzfD8PslcExV/aZ9l894/wnTaxOdA3qjpwFV
sy9H7h2Engbscn8yY1s0ehqgddNts8Vf6GnAv5HB942moKcBKUaneyXNQk8T
1jwa0XHhAvQ0wWb53erGpehpwu+9lh1tWIWeJiwPvFg8bx16mjAzN+rjwo3o
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
gHhFxCsmXgnxyolXQ7w64knCuOP/A8gf/ng=
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
jqL8/ldvN1F+Xuh6KkqUnxcmhA8U5afCgGvDRfmp8M708aL8VPhheKIoPxUO
0/4myk+FDodTRfmpMCFxqyg/FRqGHxblp8KgAZdF+anQ1KBAlJ8KzZdUiPJT
obqznaE+PxXaZYQa6vNT4THnAYb6/FTYuuEiQ31+KnQPPmioz0+FN3+81Hsq
FY70URjp81PhymmxRvr8VLj3xG4jfX4qdHv13Uifnyc+Mog21ufnif5BaKzP
zxMvnw420efnie2tDpvo8/PEk6fbm+rz88TC+a9M9fl54rpOf9fR5+eJO5vH
1dXn54ldMjrU0+fnid/btDXT51fjPRpQX5+fJ5YfWG2uz88T/2j/qYE+P098
O2eqpT4/T+y0w9Nan58nGs4zttXn54njWjvb6/PzxLPpE+T6/DxRaW7YUJ+f
Jx4Y99RFn58HfpvYQKnPzwMzktd46vPzwJOf5/no8/PAkGe3A/T5eeD6pK1B
+vw8sGWDL830+Xng8Kq7v+jz88DTpgPa6fPzwA89VnTR51fz+vMXRurz88CZ
xV0H6vPzwEbnasXp8/PAJQ5ZE/X5eaBxyLLZ+vw8sMXeVUv1+Xnggy3v1+rz
88C7n07v0Ofngf9O9MnS5+eBYwOjcvT5eeC4k6Of6vNzx8Xj15Xr83PHfw5Z
WR0Q8nPHHmMbNDog5OeOj5pfiTgg5OeObz8uHH9AyM8dx1csSD0g5OeObbOt
Twqexh0LOy59LXgpNd70X+QHhfzcsUv+qm4Hhfzcsb1D8ZKDQn7umLztyqWD
Qn7uaDdoo3mmkJ87/h7+oX+mkJ87arp225cp5OeO2+361zkk5OeO9R4cjz8k
5OeOX6K88g8J+bnjnOPDux8W8nPHyksdrh8W8lNiv6eHBx4R8lNibGj6lyNC
fkr8WN/976NCfkoste3S85iQnxIn5/ayyxLyU+LgOslFWUJ+Slw2v9Pt40J+
Sjy3tOHNE0J+Sgy9vf7FSSE/JQ7vP9f8tJCfEm/13NxTK+SnxDs9ZftRyE+J
fy056XdWyE+Jj21dLp4T8qup97c1iy4I+SmxYPy5uItCfkrc0WTSxMtCfkos
LNi47T8hPyV27TbbOFfIT4kLYbrmupCfG9bOC4nNE/JzwySD9bF3hPzccEJM
7qZ8IT837GgIzo+E/NywsWbH0wIhPzdMyzD79ELIzw2P+17p8UbIzw1fW6Qa
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
/h2jyKvSRjlfPT24KXk/tDE7DHa8tCXvhzbCcu31gi90ffquXTRhV4eo23Q9
/K596HqtWTvh+vZdCxUx7w79Sderb1rXa8ev7J5I18dv2i2JUwb4diOvUvvf
X6nq5n7kVWoVQUdC8oXreaV276ZQa6sXtH6o0C5f1/HqKy2tByq0xXUtxg/Z
QOuPcq3L5gMOc6fReqJc2ytukEmnnrR+KddeORC57IIfeV+1yZteGFcYkfdV
u6H7mLLXT2i9VaZ99mvrl+uzaH1Xpq37Zdckm1Rar5Vp8x3zOg+g9abmi3b4
oa2BU9vTeu+L9ox63/uRLuSVaof2NI8J+0qfB0q1b++1H//xGq3vS7X50fb1
/thJ6/USbfaQQcFu8+nzQYl2wLQnRTujab3/WTv0vUf7gCDyPms3HGjf41Bd
8j5r3y7I8mr3vELnfdKeue755tmJCp33Sdv3N9/Da1ZX6LxibX/TRvtGjKvQ
ecXauDPeX3uHV+i8Yu2EoRMPjnOl53/U3mqzUJZZXq57/Aft3Hq3qvxulute
7732eYM12Y/3lOv8Iq16+rKxN34r13lF2lObcivrxJTrvHfa+S/2JK5oQd5b
bbVq9IvhtuS90b5o4RKQWvxV573Wxq1f2sI156vOe62dtfJ1ofnOrzrvlTZf
frNq5KKvOq9Q2/W6DTSO/arzXmobfl/bb1xr8l5oy/3gpUdD8l5oj8+8O3Fg
ZZnOe661vlAxWZ5fpvOead1MjbrHHivTeU+1LdzMI8PWlem8Au0k1f0j6TPK
dF6BdtTyh+v3RdPzH2tNe7cw6dOSHv9Q22DEzbebnen1HmgNe3dxXCsjP187
+4qqe4sXX3TePW2fjfdVf1z6ovPuaI99+Oi2ce8XnXdLO3iw99YRqV90Xp72
yuJdH94nftF5N7S7PzbyaRFL3nXtx8W/9u3WiZ6fo43/OGtgoyB6/GVt9z+y
Kx850etlawtP77sRY0z+Oe3x8sODjn8q1XmoLY7d9/X9o1Ld87O0WzY636q6
Uqp7fKb2hdOOWsXH6N93aePK5ow7v4OONdoOCY/vzV1Lnky2su3KZ25LhH9X
d1w1xmB/ovB89YiPHxb5xQu+um6re6vXDBFeX/1wITYuiRTqU68uuRTYthM9
/pza8nlnWKIupd9Pfaz2qlfnQun5l9W1j6+b/7VRKeWjzt75ADy8ybuuXj3Z
rVEXJT3+hnrToWjvcc7k56lftpz7Ypmcnn9LrZo65/02O3q9O2oT24BtJ2zI
u6dO+NJOfc2avHz1OeXQ/55Yk/dAPcXKyu+9DXkP1YcrX9p9FbzH6hVtVjj/
kJNXoHYs/7G1ypkeX6CuilrzslKo96m6laJ/abE3Pf+ZWinzyXoSSK/3XH12
Ta3SC83Ie6H+b2DPVluAvBfqMNUvBgmdyXupbt7SaFlob/IK1bM+xJa9jSHv
lTpI8771inHkvVY/eLa6qcss8l6rE1qYJ69bSt4btfmIfkcq15H3Vj3FELx+
3UXeO/Xsr+9s4o+TV6TuOWXi2qk55BWpP58YtXXAE/Leq6+1W1vXqYS8D+op
YSmz95vQ+fxRLfPqtdjBmf4+itV+RxTrugfT+V+sHtXR9nvPzvT3Uqy+3fNT
gdNQev4ntabD4967ZtLfzyd1eEVoRFkqeZ/VJn591lXtJe+zemD7MZ9PXSLv
szr2Q9evgS/IK1HPGjLCp4fwflCi/tYp6ZPcmd5fStWZTvjPkhb0/lKq/mfK
gvi1/ej9pVSt2Ng9sc10en/5ou6Wk3Nj/hryvqizzA7GRx4hr0ydtvyc/4E7
5JWpTwXkPv3rK3ll6qVmOzp9d6D326/qJ+8DLJ+0oPfXr+oXLXvdbj6I3k/L
1b6THT0Mk+j9uFx95+TeOS230vtvudpqzZDe+dnkVagP+p2yuveWvAr19j5/
WwU1oOtHpXr2e7+dT4PpelGp/t7CyOVpP7reVKpXx7Y+6juXri/f1EFT5uw/
tpWuJ9/U9eubtfntMnnf1b/7vtuw7CN539UbHV8Vn7Wl6+N3tbbVnnHerej6
90N9Yejt1oeH0vX1hzp3nemqYUvpelmlXtOwelXAfrqeVqlPRGyYVP8ueVXq
Rf2+Dv3xg7xqtXFiwsavHnT9r1k3zj47qEy4fy+D/hNKC0vo/m2wDDqo5i18
q6Hrvww85rZLvoX0fBloLNd0yXhF6wUZPGga2iLenNYvBlBp0ue8Od2PCzYA
p75/jFoxgNY7BjCo+dODL+fT+sYAtJbrf2mwk9YzBtDgbc+DRrnk1YKzOTeu
nCshrxb4Wv7o2U5O67FasKL3YY8FrWn9VQtiqrOCZgyj9VstuGS1cJ7bElqv
1YYTIfbuiRm0PqsNh/c87DzzOnm1YVTIiBaKUvJqw7GkkIg4e1pf1oaBzed/
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
Z14B8wqZV8S8EuZVME8WJhz/H/elrTQ=
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1:eJxd3HlcTfv3P/CkQqV5Ok0aTyOlkjFnIZkyhsoQJZnH+JAxU6a4kSlTmXKR
IRnKvZxFZAoRkUuSypQMZcj48/1p7bP38s997EfnPM+r12d/9t7Ve73to6YM
GK2upqZ2u5Ga2v/998+/tjj02dCCbikNYWvK7391bYRj3//7V6M6vpH/+1+V
6jjm//5Vqo7/P1faRuoVM6+QefnMy2MeMi+HeVnMy2BeOvPSmJfCvGTmJTIv
gXnxzItjXizzJjIvhnkjmRfOvBDmBTMviHnAvLbM82WeJ/PkzLNjnox5xszT
ZZ4W89SYV9eanX+tpV5Va6lX2VrqlbaWesXMK2RePvPymIfMy2FeFvMymJfO
vDTmpTAvmXmJzEtgXjzz4pgXy7yJzIth3kjmhTMvhHnBzAtiHjCvLfN8mefJ
PDnz7JgnY54x83SZp8U8NebV+bPzz1/qVflLvUp/qVfqL/WKmVfIvHzm5TEP
mZfDvCzmZTAvnXlpzEthXjLzEpmXwLx45sUxL5Z5E5kXw7yRzAtnXgjzgpkX
xDxgXlvm+TLPk3ly5tkxT8Y8Y+bpMk+LeWrMq2vFzr9WUq+qldSrbCX1SltJ
vWLmFTIvn3l5zEPm5TAvi3kZzEtnXhrzUpiXzLxE5iUwL555ccyLZd5E5sUw
byTzwpkXwrxg5gUxD5jXlnm+zPNknpx5dsyTMc+YebrM02KeGvPq/Nj55yf1
qvykXqWf1Cv1k3rFzCtkXj7z8piHzMthXhbzMpiXzrw05qUwL5l5icxLYF48
8+KYF8u8icyLYd5I5oUzL4R5wcwLYh4wry3zfJnnyTw58+yYJ2OeMfN0mafF
PDXm1fmy889X6lX5Sr1KX6lX6iv1iplXyLx85uUxD5mXw7ws5mUwL515acxL
YV4y8xKZl8C8eObFMS+WeROZF8O8kcwLZ14I84KZF8Q8YF5b5vkyz5N5cubZ
MU/GPGPm6TJPi3lqzKvzYeefj9Sr8pF6lT5Sr9RH6hUzr5B5+czLYx4yL4d5
WczLYF4689KYl8K8ZOYlMi+BefHMi2NeLPMmMi+GeSOZF868EOYFMy+IecC8
tszzZZ4n8+TMs2OejHnGzNNlnhbz1JhX15Kdfy2lXlVLqVfZUuqVtpR6xcwr
ZF4+8/KYh8zLYV4W8zKYl868NOalMC+ZeYnMS2BePPPimBfLvInMi2HeSOaF
My+EecHMC2IeMK8t83yZ58k8OfPsmCdjnjHzdJmnxTw15tV5s/PPW+pVeUu9
Sm+pV+ot9YqZV8i8fOblMQ+Zl8O8LOZlMC+deWnMS2FeMvMSmZfAvHjmxTEv
lnkTmRfDvJHMC2deCPOCmRfEPGBeW+b5Ms+TeXLm2TFPxjxj5ukyT4t5avx8
82Lnl5f084q9pH6+l9RDL6mXxbx05qUwL5F58cyLZV4M88KZF8w8YJ4v8+TM
kzFPl3lqzKtpwfprwfprwfprwfprwfpjXjrzUpiXyLx45sUyL4Z54cwLZh4w
z5d5cubJmKfLPDXm1TRn/TVn/TVn/TVn/TVn/TEvnXkpzEtkXjzzYpkXw7xw
5gUzD5jnyzw582TM02WeGvNqPFl/nqw/T9afJ+vPk/XHvHTmpTAvkXnxzItl
XgzzwpkXzDzwxCGS/lTHf/pTHf/pT3X8pz/V8Z/+mFfjgeGS/lTHf/pTHf/p
zwPDJP2pjv/054Ghkv48cLCkPw8cJOnPAwdK+vPAEEl/HjhA0p8H9pP054F9
JP15YC9Jfx7YXdKfBwZK+vNAkPTnge0l/XlgK0l/HthC0p87yiX9uaO1pD93
NJD0547qkv7c8UOZuD93LCkT9+eOV8rE/bnj4TJxf+64pkzcnzuOFXux7hgg
9mLcUVvshbvjjafi/txx+VNxf+7o91TcnzsWlor7c8fIUnF/7vjoibg/d4Qn
4v7ccWWJuD83PPFY3J8b/vNI3J8bbvlP3J8bBj4U9+eG2Q/E/bnhqyJxf254
+664PzeMuCPuzw0Tbon7c0P/fHF/bjj8irg/N6zIFffnhifPiftzw6PZ4v5+
f3+Z4v7ccPsBcX9u2CFN3J8bRm0U9+eGhSvE/blhnzni/lxx2Thxf67oMFjc
nyueV4j7c8VqZ3F/rujSWNyfK96tGCLqzxWDzw0R9eeKV5KGiPpzxXHDhoj6
c0VvuyGi/lzxy8NwUX+uOHN1uKg/V/T0Dhf154qTLoeJ+nPF3n3DRP254o5L
oaL+XLHMJVTUnyv2jB0s6s8Vd+8dJOrPFbtnDxT154I2B0NE/bngzJkDRP25
oJZpf1F/LliwuK+oPxfUze4t6s8F9Q/3EvXngs3De4j6c8GU40Gi/lww8EgX
UX8ueFwBov5c8GZYB1F/LpjzsrWoPxdcV+oj6s8F/dyai/pzwU8ZclF/Ljh0
QDNRfy7473czUX8uWLG6qag/F8z8T13Unwuuzv10S9WfHN+bvryl6k+Oj1OL
b6n6k6OD65Vbqv7k+O/kE7dU/cmxoedOlZclx5v6y1ReuhzjcazKS5Hjp+Lu
Ki9RjmFVTiovXo6Fc77fVPUnR6evN2+q+vv9ebe23VT1J8exwVE3Vf3JMSXT
/qaqPzlquxbfUPX3+/j88huq/uToHut5Q9WfHCea5+Wr+pOjfUxIvqo/OS6s
uXNd1Z8zPvTocl3VnzMu67v7mqo/Z+w1ufqqqj9nnBrlfFXVnzN2vx54RdWf
M7Zr1POyqr/fx8198lT9OeNeza8XVf0543T1nbmq/pwxw9/ygqo/Z7TrPR5V
/Tmj94KV51T9OaNy6fR/Vf05o2x9szOq/pzxKqw6rerPGTslHDqh6s8ZA/bM
zVT154w3jT4cVvXnjJWzNA+q+nPG3isP7VP154Rl3x6kqfpzwp/jF21T9eeE
jzpu3qjq7/dxks5fqv6ccGbTm8tV/TnhkcL8har+nLC6f+3/VP05YU0zr0mq
/pzw8L3RUar+nPBxyYLBqv6c0KVXRA9Vf04YsbWinao/J7y8tMZd1Z8TGipH
yVT9OeGBHD0tVX9O6Dz06rsgoT8nnHIyujhI6M8J+588rAwS+nNC3fyJe4KE
/pxw3frRS4OE/hyxbvTgKMGrdETl988dBK/YEUfUfjcWvHxHLBhs+Lyr0J8j
DjF/eLKr0J8j9kqoXdhV6M8RP535GNhV6M8Rp9eM0+gq9OeIU14Wng0U+nPE
rVYZUwOF/hzxtvZI60ChP0dcMr4/dhH6c8RVXe4N7SL054gnGvtWdxb6c8Tg
7Xv+11nozxHPde1X20nozxGTN/WP6ST054ivA45cB6E/R1xwNdwRhP4cMTzE
d6JC6M8BO1lp7Oso9OeAT7QX5AcI/TngQcd2TzsI/Tlg3L1TT9sL/TngpQ6D
89sJ/Tng9G7DUtsK/TlgY2VVWBuhPwf0a93ks7/QnwNOe7J2ViuhPwdM8fd7
4Cv054C+qQlmPkJ/Dtil8LmXt9CfAw72X23fQujPAZM0Yl94CP054NThkxa5
Cf054E9Xw5dyoT8HtC86Y+Uk9OeA+e9WmNoL/TngqbVhd2yE/hyw/7rzvS2F
/uwx5x+jJWZCf/Y4cFvvSUZCf/b4tJNDIz2hP3vMvPWqZxOhP3ssy0/30RD6
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
7KPcQ/kMcO2P5oG4nfIZ4J5z0/c12ET5DHDCJM26ZX9RPgMcdNO0pO9KymeA
nm6d3kYuoXwGOD/78Plz8ymfAUZVO5aPnU35DDDrqXNJVCzl+/31NppeRydT
PgPcXvE5uN94yqOPpiaee7vH0Ofr46BN/23cGkWfp49t2oyY1X0E+fro1afz
uoHDyNPHrCeDbc+Hk6eHY69f65kUSp4eWgd29L04iDw97K/16FnEQPL0MC49
NjQqhDw97Bq26X8FA8hrihF/nTI7NIC8pniluGddzQDymmJlSO21jBDymmK6
6QGH+wPJa4oLPpfFzxhMni76Ny3skxBGni4u9936uOlQ8nTRXXf5aN0I8nQR
L4RrLokkTxeja9acnz6aPB380uTQkkfjyNPBFVO2yc5PJk8Hsx9ot7KfQZ4O
jtHKH/8jjjwdNOkW5DM4njxt1NZ8Xe6xnDxtfHYw6+yCteRp432nvx/0ofPH
Vxt3dZ7ss30nedq4tF3Z/pj95DXBS6uyPx4+Rl4TPB7rlj3tDHlN8Cikj8+8
SF4TnJO8ZczEW+Q1wWulHi92PSSvMWr2tNfoX0leY8z8djhz9gfyGuNcv+hL
5r/Ia4xrTVw+eOrS9aUxPu/ndvWUjK4njbBP2aecLBe6fjRC59yVRg7+dL1o
hEHXx/36FUjXh0Z4/sT91b0GktcIa/o23K0eTZ4WOrwM1nGcQZ4WJjxeN/Xg
UvK00CV86ZBNG8nTwmwfPZ/ydPK00LvoHKzLJk8Tt7sHZm69Rp4m9hpa/deP
R+RpYoexHa+fekueJoYPX+iXq073I0201R0f38yM7j8aWGxb2O2KG90PNfBp
2KjGZwLo/qeB7++EO7/vT/c7DTT6FfpiXAx5GhjfvvViu7nkNcTe2c91DJPI
a4gPpoQtb72PvIaYWj2m9K8z5DXEmD2P35gWkNcQ10+aMP1SBXnq2NT6tM3W
b+Spo3/ihDV/GdLzlzoqTPv32eVCz1vquPjlxMfXAuj5Tx3PmLgcaDSQnvca
4Kh//mcUMp6e7xqgXYDJ5L/jyWuAyuJjmg3p52XfBjj0f76yiMPkNcBGtl+f
nMglTw3/ud9slfpD8tRwwbi8Tp3fkaeGPVNHeU7R0qj31PDeQcOJS6016j01
9PUus5vvo1H//l/K4PW+4wd2p9f/UrobNh6rGaFR/3k/lXt6RXRYHatR7/9U
up5cpft0BXk/lYqkderqO8n7odT+Gd/n5XHyfih/Hb/msv4yed+Vw59uv/n5
P/K+K9++bLvG9B1535V9ovvkVDbUrPe+KYcbdD0ZY65Z731TTumy5X2Su2a9
91WZFG1XPTJAs977quyvO6L9nb6a9d5XZcnwvLmlkeTVKQO9v0cvjyWvTrks
zeL8haXkfVFuTH8yZe1G8r4oW/T4OKZyH3lflIP1dLPzTpL3WTm6e9MVHpfI
+6xMftrO0vAueZ+UoT175seWkfdJ2bHlbIt+78j7pJxweMOm3T/I+6icsrzR
jzHaWvXeR6Vp33z7HWZa9V6tss/b0d86OmjVe7XKiTOu7urZXKveq1VW/KPo
e7a1Vr1Xo7x0OSByQyfyapSusb7hN3qS90E5pXu/x6NDyPugrOjQMWfoUPI+
KO1ld0oyosh7rzwVlhkTOo6898rufd8khU8h750yITr5UuYM8t4p3Tr4bIyI
I++d8uTukJyI+fT+t0pHq9cmmfH0+mrl3DfZJwYuoc97oyxN2XWr+zLyq5SD
NtflJSaQV6V06nFJbrecvNfKlbI3+9SXk/dKWXJotNwvgbyXykjr4JMnlpL3
Qune7dOqpYvJe6E8ZPxZe+9C8p4rT18yu2g8j7xK5ckwxdS7s8irUHq8GVZb
OZ28cuXwgT4jgyeRV66cftW+WnMMec+URa9eqpuOJK9MaaMd2nxuGHlPlS2r
Xji360deqfKg2aSbId3IK1Xeu7am5bUAen+Jsuz2oMWpvvT6R0rTTgesilzp
8/5TPhiRtXCqDfnFyoOPeoROMyTvgbIqvuu0/zTIK1KGbio4n/mZzt+7yue+
hyI/v6Tzu1B59ODoNUf/o/P1tvJK73V7H+fT+VygtCp87rrsLL0/Xzlszbiz
Bw7T668qn5+f7tx3B/3/IU+5fcSVLnGJ5OcqNSK2yzznkofKXnqrLk0YR+/P
Ua49sGpxh1B6fZbScnxZ+u5A+voB5ecFWnt2t6TjFOVn93lqnWzJU1NrEZU5
crG28HVFp3a35k74RNevA4q1SxKaNSij61eWYlJZUfPuN+jrOYo25wu2dc2m
6xUqimcMmPpzN70+V5FXjRdmraHrW56iTdi/Oadm0fuvKgbXFKzESLoe5ise
pDrN2NqLvAKFb6T9pR6t6PW3FWZdbQoLbckvVAxuovYjoDG9/67idmnl32ve
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
0M/+t3tBEeUzhsp1ycl/36F8xjAkfzi2uEn5TAA/rzUafZXymUCXdfZFvS9S
PhOI1L4e8foc5TMBvSPejSCH8plAuwM23n2yKJ8JOM09o7A4TPlMYKZBXlpa
OuUzgZxrBedfplI+E7iWFWfyaQvlM4ENVkd0r6yjfKbg/Oh1s6hVlM8UDi1I
uJi3mPKZwo64t1O/zKF8pjDrXINtddMpnym0vt7vdP54ymcK+6fNbTND+P2B
KbRcunjth3DKZwpnNjrKe/anfKaw8XPrsfO7Uz5T6GxrkbNWQfnMICi54ex4
f8pnBsrNa34ObE75zMA2RS9Nz4nymcHOTZYHjlpSPjM4lvw9oh39/BtvBi+9
W/861ojymcGixdpK05+a9PdFyG3z69p44fpkBgGes4KOv9Kkv0+C0fAuvapL
6fpnDnXTFC/t7mvS3zfB4fwH5+AbdD00h12v/L9Py9Wkv4/CxCblQzfk0PXR
HLbPX+x28mi9F28Odv3UOxbto+ulORxpPjumbhvlM4dJtU9G2a2nfL+Pb5S/
Cl5B+czh5ZUje+IXUD4LePn+pNvZGZTPAt5e36qjMYHyWYCph8b1wZGUzwLk
gxY/OhVK+SzAM2zWfuc+lM8CvBZpJOwVfv62APVH3y/6tad8FtB5z6M991tS
PguwTbg0cK0r5bOAx/sXfg9vRvlksLv9wuPtzSifDA7uqI73a0r5ZJBz9d/o
rhqUTwbzmx7rPeUb3U9l0P/uPNusD/X3y3gZfBxbmmH4iu6vMjizQnl+9VMN
Wh8A5bu7yxyK6X4rA4+dslH3CjRofQEc/zG2c/oVuv9agmtHnz4bUYPWJ0Cn
LqMN92TT/d0Sph220Ck4pkHrGyD67bkj1gconyXEfR0evXIX5bOEheFXV5ht
pXyWkJ1UMuniespnCeFbc4ckr6Z8lnB+sEvikqWUzxKuXV7it3E+5bOCRm8j
5135H+Wzgpvy1MU2UymfFRy8mTVswzjKZwUaTt/Mmo+ifFaQaPf9xPNhlM8K
xrTJanlxMOWzgi93Hi280I/yWUFqOKwq60n5rCA3+5uvU1fKZwV+3rfCliso
nzWU9ht3Q6cd5bOGk1pZIzL9KJ81bFhrdX+WF+WzBs+25bUR7pTPGtIfTZgR
40z5rMHyQZzOWjvK99tPXDH+nhXls4b3PvoBHcwp3+/Pq77mdsGI8lnDP/qN
CmP0KJ8NOEWWF7lpUz4bWD0z9Za28Pt0G0gpvhfSRJ3y2cB22bVPTj+F9Uuw
eXl69+FfhfVNkHbsXFHmJ2H9E8ycdsvDoUZYHwXLtwUUHH4rrJ+CfOuQngOr
hPVV8H7HHFvTl8L6Kzi9Ou7W2wphfRYMWPR3ybMyYf0WvNN2z3/3RFjfBYuz
m5mbPRbWf4HLnMcBIQ+F9WGwHqzO7b8vrB+D24+cTI3vCevL4KdVY9xwR1h/
BoHW59t7Fgjr0+BgcbRm8Q1h/RrofOixdet1YX0bzErzmj31qrD+DQLeR9kM
uSysj4P53mWNQy8J6+eg+aYFZ2JyhfV1YOH7/fiK88L6O2jm6D3jX6WwPg8u
NbFZ1OCcsH4P/i5pGhH6r7C+D9oZHE06e0ZY/wfzGsrTfHOE9YHQ6YvcNOe0
sH4QboY3mdP7lLC+EDoufTjk3Qlh/SHENZrSdVeWsD4RvkydfnXEcWH9IpTs
mznbI1NY3wgD7n+raHhMWP8IXa0S9r84IqyPhCYndgwsPiysn4QZho8T7mUI
6ysheNPn4keHhPWXoNccX1cfFNZngs3pFsN0DgrrNyE1MvpGywPC+k5o/frI
s8i/hfWfUFexquu2/cL6UHiptm/b43Rh/SgERT9Mck0X1pdCmUebO3P3CetP
4bz2V737e4X1qaDvuOJL273C+lWItpnRee8eYX0rwKqZu033COtfIXrL6II1
u4X1sbDNvV2C7m5h/Sz0DFWLX7dLWF8Ln4YWzbXeJay/hT16FW0Ppwnrc+Fh
Udi8LmnC+l0423pIoyepwvpemFyruWthqrD+F27cjzZ0ThXWB4Ov6yiHWzuF
9cOw69bl1Pk7hfXFsBU8Qr13CuuPYWazavPnO4T1yVBw2itr1w5h/TJEdb34
bcQOYX0zBJp75NnvENY/Q/CGpS8qtwvro6GRy4p2R7cL66ehv/mcjXO2C+ur
YXao/d3u24X11zCp59k7su3C+mzovOLb5DfbhPXb8Hzfm+W524T13fBc49eP
bduE9d8w7eir4//bJqwPhzeBmStDtgnrx+HB17UxPuQlOsCek+9bGJOX4gBX
O0y5+nGrsD4dBq35x+bhVmH9OqzrnWqCW4X17ZAUXb15/1Zh/TtUn16wPmmr
sD4enhk2ezeHvEoHONJy7Y4Y8moc4Huj6StCyFNzhDd2fVM7kafrCJ87xN/2
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
87KYl8M8ZF4e8/KZV8i8YuaVMq+SeVXMq2FeHfPUWrLzr6XU020p9YxbSj1Z
S6lnxzw58zyZ58u8tswD5gUxL5h5IcwLZ95I5sUwbyLzYpkXx7x45iUwL5F5
ycxLYV4a89KZl8G8LOblMA+Zl8e8fOYVMq+YeaXMq2ReFfNqmFfHPDUfdv75
SD1dH6ln7CP1ZD5Sz455cuZ5Ms+XeW2ZB8wLYl4w80KYF868kcyLYd5E5sUy
L4558cxLYF4i85KZl8K8NOalMy+DeVnMy2EeMi+PefnMK2ReMfNKmVfJvCrm
1TCvjnlqvuz885V6ur5Sz9hX6sl8pZ4d8+TM82SeL/PaMg+YF8S8YOaFMC+c
eSOZF8O8icyLZV4c8+KZl8C8ROYlMy+FeWnMS2deBvOymJfDPGReHvPymVfI
vGLmlTKvknlVzKthXh3z1PzY+ecn9XT9pJ6xn9ST+Uk9O+bJmefJPF/mtWUe
MC+IecHMC2FeOPNGMi+GeROZF8u8OObFMy+BeYnMS2ZeCvPSmJfOvAzmZTEv
h3nIvDzm5TOvkHnFzCtlXiXzqphXw7w65qm1YudfK6mn20rqGbeSerJWUs+O
eXLmeTLPl3ltmQfMC2JeMPNCmBfOvJHMi2HeRObFMi+OefHMS2BeIvOSmZfC
vDTmpTMvg3lZzMthHjIvj3n5zCtkXjHzSplXybwq5tUwr455av7s/POXerr+
Us/YX+rJ/KWeHfPkzPNkni/z2jIPmBfEvGDmhTAvnHkjmRfDvInMi2VeHPPi
mZfAvETmJTMvhXlpzEtnXgbzspiXwzxkXh7z8plXyLxi5pUyr5J5VcyrYV4d
89Ras/OvtdTTbS31jFtLPVlrqWfHPDnzPJnny7y2zAPmBTEvmHkhzAtn3kjm
xTBvIvNimRfHvHjmJTAvkXnJzEthXhrz0pmXwbws5uUwD5mXx7x85hUyr5h5
pcyrZF4V82qYV8c8tTbs/Gsj9XTbSD3jNlJP1kbq2TFPzjxP5vkyry3zgHlB
zAtmXgjzwpk3knkxzJvIvFjmxTEvnnkJzEtkXjLzUpiXxrx05mUwL4t5OcxD
5uUxL595hcwrZl4p8yqZV8W8GubVMU+trXD8/wB0Z3jZ
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
ov580EZ9V9SfD/Zf+lbUnw+uHae/XNefD/pEuC3X9eeDkyMbL9f154MJT3ov
1/Xng/G7py/X9afCSsetOq9chXFHS3ReqQrbhhtm6PpTYTm0yND1p8LqHTMz
dP2pMLbv5Qxdfyqc1FWZqetPhem50zJ1/anwUE55pq4/FY7Z2XeFrj8VHmv5
YIWuPxX+7v3nSl1/Kixu4qLR9afC5jtuaXT9qXDDP9tX6fpT4cc2mat1/amw
V+11a3T9/fz8qLNrdf2p8NUc8/W6/n5+v8cpWbr+vDE932Wjrj9vDH36YpOu
P2/cUfxqi64/b2wyMXCbrj9v/DZ853Zdf9546tPEnbr+vHF24PI9uv68sftT
4/26/rzRpOrJIV1/3njLJfiYrj9vvNL2A+r688ZdaS0KdP1549suqkJdf944
ceyea7r+fv57j/eluv68MUj144GuP288+OjlC11/3ng860qVrr+febaf/qHr
zxu3ah+ZWAn9eeHFVh0VVkJ/XjhilpevldCfFx5/Pb+RldCfF2J8TnsroT8v
PDZmR3/By/v574jjBS/bC/N7uiwUPI0Xjqr1eavgpXlh1YHlZwUvxQtdjULK
BS/JC/tsdDC2Fvrzwrzjq0Oshf68MP6gZT9rob+feVaXplkL/Xmh7dXeJ62F
/rwwIr/uF8FTeWH0qG5RNkJ/XliaeukvG6E/L3zz7PMlG6E/Lzy3Y7qbrdCf
Jw4ykk2xFfrzxJz4iPu2Qn+e6NPuWYyd0J8n9smvOGMn9OeJRyGwrb3QnyeO
6LHxpr3Qnyc+O95/vIPQnycerj3HTSH054nj5L3+VQj9eeKAQp9sR6E/T/xc
9/dZTkJ/nngkbNOfzkJ/nrhw3tzpLkJ/njjG7vFaV6E/T8zVz77hJvTniU0N
H/u7C/154vdrt9d4CP15ou+ND0FeQn+e+EJ+/pG30N9P74vDCR+hPw+8dPMh
+gn9eeCS2z3eBAj9eaDX+bKYIKE/D+yywv9usNCfB1b1V24OE/rzwJe/V22J
EPrzwMGTPZ9GCv154PCByYlNhf48MHurbePmQn8eWHfxmF6thf48sF/r+Ivt
hP488FRP1xUdhf48MCmhw9lYoT8P9HP60SdO6M8Dlw8+MmiA0J8H5r2b8WCo
0J8HnqhzuyxR6M8DW04oGTZe6M8DXziapU4V+vPAUcNRPVvozx3txpzZsEjo
zx0rrdYcWin0546mOZMXbhL6c8cxdzoE7xb6c0fjhwU7jwr9uWOtOkNsLgj9
uaNZ8uSkm0J/7thoHdwuF/pzR5sxt/p+FPpzx2kJvY2N0qk/dxy7tuw/p3Tq
zx1XdlkWEZxO/bljxq7d91qnU3/uqHy9tm6/dOrPHScUVJ6aQF6YO05SpdZf
Qp7KHVObThiaS57CHZcURqZcJE/ujpeO71vzgjyZO97/EVoqX079KbHOhsXd
Q5ZTf0oMVwWF9VpO/SnR2dE6Y8Zy6k+JN/95u37ncupPiUkdIibfIS9Pie1H
usaYZVB/SrQ31apbZlB/SvyU4DBjSgb1p0SPSV7NDmVQf0r8e3x59n8Z1J8S
XzSd/Coyk/pT4qvrntEzMqk/JX7E/k8LM6k/JS7t/MrIZQX1p8Soi0+fjV1B
/Slxy4BLJy+toP6UuLBibon/SupPiSdGpg9evJL6U2K81+u86pXUnxIf94wy
Ha6hvtxw5rYz+WUa6scNJzxaqt9/FfXhhlvajWj5cBX9/G5Y3ejFqZGr6ed1
w/0+M/+VraGfzw3rPlj8cPUa+nncsMm7XhHqtZTfDVfVd23wci3ldcNOsa5N
s9ZRPjfclLL2QP/1lM8V3x15oeeTRflccafPkIzqLMrniq3MJpfc2ED5XHFc
yp5Q7UbK54oRmes98zZRPldM8H3vkreZ8rnivqpBq7VbKJ8rHrQ97FCaTflc
cUX+MVvZNsrnikdqRdqG51A+F/z64emaSdspnwua/zki/NIOyueCWdbNhtfb
SflcMBg3Xli/i/K54LnIZY899lA+F6zlkd3x0F7K54KDd9Ra1y+P8rlg3IWG
I+wOUD4XLL4S1OXhQcrnggFjar06eZjyOeOaWnfvHjhC+Zxxpt7dMyeOUT5n
HFX0qNXdE5TPGY37j6ltdZLyOaO529hN/U5TPmccf9P6Cp6lfM44LnFZvSbn
KZ8zRq7/+nvRRcrnjDnbv/tMv0z5nPH+sc320UWUzwmt2jg98C2mfE54xy0x
yOcG5XPChxMa5TQvpXxOuH3Z6M+T7lA+J+w9uvbFy/cpnxM2dFt+Ah5RPic8
Y+sz7Vo55XPCtZ3PbZv5gvI54aTRIQ+7vaZ8Tlhe8Oe56PeUzxHNp62rjPuP
8jni/ZMtvy/6TPkc8VREyJTy75TPEdeuqa6Or2NSk88RIx4srPvDwKQmnyPq
bSvyPCk3qcnniN8Tfa5vtTSpyeeIhwYZLc+zM6nJ54j/1k8reexU48kcsXTf
6zpN3Gu8cgX2+OA+N19V4xUqMGdKZ22/wBovT4HT3Yb88A2t8TQKnLB1foZT
I8qnwIad88+GN6N8CvSdXv/ixFaUT4Err3669qA95VPghdJRdcd3oXwKPLbl
yJSgXpRPgbbje7SyHED5HPDG2cUDnRMonwN+Uhhf6DSS8jmg0aoWg3eMp3wO
KK9ta1J/KuVzwNfmLRb+O5PyOeCM8x+37lxA+Ryw5EEf423plM8BAzc7dLuw
mvI5YPzyChvLzZTPAac1blo4PZfy2eOt+J3PLA9QPnvsLj907sJxymePOVvb
HdhSQPnscVtG4svNVyifPXqsKF9acIvy2eOdbi+OGz2kfPbolXB+7MiXlM8e
vQO2rnlbRfnsMe0qOC77TvnsMa50677OhvKafHaYM8rKMcBKXpPPDr+9zH3r
5iyvyWeH9jeTTtVTyWvy2WH+NluD2GB5TT473LDzjvuiqBovwQ6vx2wYeLdV
jRdjh8++npGpO9V4YT+9+hHee+NqPIUdBo6fVhYypMaT2WG5U0l97SjKZ4uK
tFZfeyRTPls0mlfi+HEm5bPF/ZvzY9Yuony2OER/pbqNhvLZ4tJDlxa+30T5
bHH5umMn1uyifLa4oX3TNi3zKd/P491V8x6dpny2GPvy2s3J/1A+W0zwWTpG
v5Ty2eDX7CYzZz6ifDYoN7wc9OYV5bNB/6Nn/47+RPlssP2uh3+l1jatyWeD
R5VFDrly05p8NthtyavQ/XamNflsMC7HaetqpWlNPhtUOme0GOBvWpPPBgsa
XDv3JazGk9n8vHROfDOyaY1Xbo397WOG7Yuu8Qqt0e4L3D3bqcbLs8YrYckV
m3vVeBprjJo+KDRmIOWzxmWZJa0PD6N81qinH3XkyVjKZ43Rm04qryZTPmvM
SFhpNHEG5bPG6f4BdUvmUj5rLKoYveXxYspnhXOcI/7akkn5rPDPKdMCrNdS
Pivca1Pc1n8T5bPCrFN5U59uo3xW2PJI5fg2uyifFZ5Z4P88Oo/yWeFvdTzX
PDxE+axQr3PHfvbHKJ8V3r8WafxQS/ms8L93+kvUpymfJY5r97gisIDyWWKX
xXNCtp6nfJbYfcrWv3dcpHyWaF57gmPDQspniSOCrNu3uUz5LNH7kXxK6WXK
Z4l9L50LfnmZ8lniSW2l0eTLlM8SEx9/ODmTPJklHjvVMVT/EuWzwFMbPsf+
OE/5LPDugEswsoDyWWA3i6MNOp6mfD+PsyIWZ9HPm2KBJucHlAw6Svks8PrC
1rvSD1I+C8zdZPU6ZC/ls8DA58ELm+ygfBbYZ8DAXfs2Uz4LXHPv3Lr0tZTH
HM88fH7jXgZ9f3OMObv+S/pC+n7maHPq4719s8g3x/c+xjMaTyHPHKc4nbAI
ovOt0AxVvaZXzE8gzwzzBt7d2LUPeWYYvc63cjad32Fm2PLW88veLckzw8c7
e3QPiyDPFJ2m7ry725c8UzwW99erNY7kmaINljf9akKeKQakbj9y5StdD0xx
3Z2YvxWv6O9fjttl+uW379Dfuxy/DN0+TFFI1x85KpVTT5ccoeuNHF/3e3rb
Ioc8Oa6+5ne5KJM8E4x6//ih/SzyTND43SrN8zHkmaDbX3br2vUjzwQ/tjxe
2LgdeSaY53M5+EwD8oyx7t+z6jx1I88YKzqH79hmTJ4xPtnU8ojpB7qfGKPj
OPPXjvfp/mGM2c4X610/T/czI/z4tOG85vvo/mWECSf7NRy6mu5XRgh7nDJa
zyLPCD377Pd8lkieEfa2aTGna3fyDHH8c8Xs+U3JM8Q1jV1qZ3qTZ/jzeeyz
bIopeYbY/7d+WeoP9HxliMuzzRUv7tDzlAGGmpkcSzlDz08GmGwz9a1RLj3P
GeBN2eGQNOH/Hw1wwgZvU7Mp5BngnLqOysxB5OnjsNc5tgHtydNH58Ixm4tD
yNPHi24d0zIV5Onjai/H5ZNrkaeP0zd3nZP63KjGq4v9H2HYyatGNV5dPLhY
8XvIEaMary6O2rGi4u5GoxqvLmYOTp9/eYFRjVcXVxTZygwmkKeHQauH117a
nzw9PD9rT9S4tuTp4fDiYS33hpKnh2c2mmZ3cyFPD/OdV98aZEheHXRYU7/x
w0rDGq8OVh3Nsi29b1jj1cH13Z0yOhQa1nh18MvI8xda5xvWeHVwomXy5nPZ
hjVebbzl1Lvq1nLyamNO+Z4hf80krzb+uL5hMo4jrza+PVQrfcMg8mpjwtPQ
Mp9Y8mrhKFfzP3q1Iq8Wbrp/r1ajCPJqoU/cgG6XfMmrhbXW3Sy2cyavFr6X
N0NXC/Jk2OfAKM+neuTJsN6spCtJnw1qPBlWfbnX9/xbgxpPhiPCovyePTWo
8WS45J/U7jfuG9R8/Q/ti7XXz2Tcos//oc2f897R75pBzff7rj3WXXV0WSH5
37U7q83OlZwj77s29uoil3enyfumPTKsOO45kvdNO67h+GsnTpD3Veu5J2fl
uOPkfdWu91k7se5x8r5qNeevVk48Tt4X7ZP/sttfPEHeF+3D/lVjvyJ5n7Ul
L7T2ZmfI+6ytddl043ch32et96mLQZcLyavWLtlSlD7pGnnV2uFD6w74cYu8
T9qrvZffGFBG3ift++/Nq1c8I++TdvrL0ulb3pH3UdvW+NCt2V/I+6gNvjw0
NEKffl//aUObxo/Ls6Tf93/aos2Poj670O/3P63xkvsv9APo9/lBe/Hqt3XX
G9H58EF7rMHp0EFtyKvSHks633xbD/KqtL/LTfw2JZBXpb09vrthx4nkVWqX
NDhxetNc8iq17j2b1l2/irz3WtetPZtF7STvvTbD7n7OaCTvvXblvnMdIkvI
e6dtOdHi25Jn5L3TvuyijRvzjby32icr3twosqK/57fakJD3R3b40t/vW+2y
3dPdPzejv+832o6zqr7t706f/1q7M2WHy/VEuj680s4919U/dhb9vVdov3bu
l+uzhrwKbWPnKaa/7SfvpfacynX1gULyXmijmxjPG/CEvOfaWrteV8J38p5p
i74ZPu5iT9e/Z9qKWVc6zQ+m6+NT7XjnTa4P29H1s1zrfCk1oMtgur4+0SYk
32lzZSpdfx9r++V6N+uWSd5j7bjW50pu7ibvkTah9ZWiLhfIe6g9svjop/yH
5D3Q+uSCveFX8sq0t2eafw+zpftRmdZXoZkbHkT3m3vaDpFX1um1ofvTHe08
vwcNNQPo/nNbu6FrZd+XE+l+Vap1elsUULmYvFta70uZpdu2kndDayPvcUBP
S16JdlXwLv8f18kr1uY26ndmSQV5V7UlbmeD9tWm+3mRNvD40Ki+DnQ/L9Se
9m1/b049up9f0AZf/CMqqAXdzwu0sZEfNG170PPBae0xt00TioaRh9qGnUon
aKfS1+drr7UpGW++mD4/T9tq1KGUI1n07zna0Ki0u0f20rFGO2t7kIHJKfJk
sl7dVXlbrgr/rg4YM+La7DLh69VbGtinZ78WfPVF0x8D63wVvr86t1ZUxQpD
el5D9bjixcp4G3r+Oq3+MvBqcC83ej4rUJ+7okif6kfPbxfULYw+1b4YSs93
heombVL+btqYvCL1bw1a9ylpQZ9/Vd1/SCO3tHbkF6sDb47NGdSJvr5EjdH3
XHt0o+93Q/1aXvJ6SC/ybqmbJS0qXtiHvFL10PaLr13pR95tddvd5U38B5B3
R233Kn73mgHk3VM/Hr/KymcAeWXqoxXVqy70o88vU1sOXHJ+luA/UF/KvZ8Q
14u+/qHaJXxOWttu9P0eqZPdbq6K7UTeY/Xn4PZNp7Yj77G6+eLyP84IP/8T
9fVNs/sENSavXL1lRJ3Vx0LJe6reM6t71Vg/8p6pM7rNn9zFjbxn6tvb98zu
b0Pec/Wzdtv2rjEk74X64IXbd8y/0u/7pfpjx8eqY6/pfKlQ22vs32wpo/O5
Qv3oraz4qnD+vFLfnns2t9UpOp9fq0Oejl9aZx95b9SdPrW+Yr2BvLdq1eiT
Lycvps9/q3Zw+3dDs2nkv1Xb1qq6P2Q4ff07debqf89W9qDv9069dP7Wje9a
kPdefeq55v2QIPLeqwv+uN+3m4K892rX6532FtQhr1J97oVT+alX9PdbqVbA
GNvON+l6UKVe7G06ZQLS9aBKva57ydioHLoeVKmNu3UYm72Urgcf1N/7u5uc
TCbvg/r1jcXPlg4k7z/1aL0755TtyPtP3dn7QPKEYPL+Ux/Zobm3wp68j+rN
qyMeLxZeT/yo3ld5+u+hT+h6+kn9u/mAI8pCun5+Ul94O3jJhX10vfykPjig
QP6Hhq631eq8whEN9VLIq1YPf5xqm51A3md1HfyQ3b0DeZ/VTdZueuTYgLzP
6hEGbw5/cyTvi3p7L1sD/drkfVG7Tdq8rvFzuh99VWcfqmyaXUT3n6/qqD2b
F3U4TPebr+rW1YGekVl0v/qm7p0+bPyYuXR/+qauc7vJ/c9jyPuublDScOP9
OPK+q4es6nTbuyV539XZx9bPLgkk74f6Q5uoie/tyPuhPt9Ef0BqLfJkEOCz
81RmBd2/ZeCyYOVXv1t0/5fBuKIfkdFnhOdLWBlrkPxuj/D8CbmR71JD1gnP
p7B9ffx3kzTh+RUyD+xunTpZeL4FZae4hVuGCc+/cH3En/+MihOej2FFSOcL
5e2E52d4d0lfz6qx8HwNv63ucKEqUHj+hlV2TX3S3YTnc/A6EvX6rZXw/A5z
u3/cbWkgPN/DgtqzTnwSns/qgFx/ekDOO3q+qwPNi7uc835Gz3N1wG5ghnLs
fXoerAOzPiXPXHiTnv/04Iyme/XUIvL0YIFpq7bNL5KnBwN23X9/+wx5etDs
lWWjjsLzqh5cXvDFSnOMvLowelpV1PF88upCZs9NnkcPkVcXXgYHflt2kLy6
YFTw5/5WB8mrC0V7F1ReOUiePmyfbujR4DB5P487bB865gh5+nD23OuNM4Xn
a30YUffStMST5OlDU4tJvf0KyDOA26u69T98iTwDePD37TH218gzgNicXU1a
lZJnAEnZB4KbPCDPAFbf6DTj63PyDCEzQuP3dyV5htDkr5MVF76RZwgjno/v
WWRIv19DMPzW/eRSG/r9GsK9c3M6GrvT79cI9IrbvAsPovPFCEJ9V4ywaELn
ixF45L3rnNGePCN40draEIXzzwhqz7xQuGAYecbw7MXVvZXJ5BlDdpvTG9/P
J88YNubWSpi5hjxjuNH02LqsXeT9vC68rvyn1UnyTGDm0Plxw0vIM4Hhwb1m
mTwjzwSqx7ab7PGVPBPoF5zSIceC/r5NIG3ElGqNN/39ykGrbDH0dRT9vcsh
JH7p0KzOdH2Qg98quTYngf7+5TC/7WhfvWnkyWGnozYmJ508Uxh/cdrlZdvJ
M4W1p0pbHTlJnimo8U4bRSl5ptB39Yo/ct6SZwo4pH2jIYZ0PTWD3sZz27VU
0vXSDJwPdguFRnR9NQNzt2aLunWm66cZPDEYKZv8B11vzSDVf3f49hTyzGF4
yaTyeyvJM4fmU+/estxLnjksWzf9YZML5JlDrQZjXsQ9IM8cChVWLwdVk2cB
Sy/erexiSe8/WMC9Sz4B7n50/7GAOo1LrlwEev/CAma++BbVrhfdvyyg1tzF
DzJH0/sfFpDf7p/uu1Lp/mcBGTnX285fS++fWECPo3XSvPfT/c4CnuzrbjXl
Ir3/YgHtG+5/N7uM7peWcFlVf0jz/yifJcyb5Hthmwndvy3hxJuR2YeU9P6A
JbTv1zxnWDjd/y2hJKzT1iP0+lqKJYxonL4+ux89P1hCWmTAUb+x9Pq/Jbwc
bt8RZtHzgiXE7n92szyT3j+whDWT+uo5Cq//WcF0o/IdN47Q+w9WsGKvd8n/
Xj/8lc8KLvXrsKfsDuWzgrFV4zb4vqJ8VjB1TFHEG3p9MsUKiu69qxcqF14/
h8zBV8e9cRReX4d34x+4efsJr7+DbUrd6VcjhNfnYUeDZL1K4fVTa3iVn91r
bmfh9X1Isa/osKSv8Po/lHl0fmL0h/D+AKxp69Ohapzw/gHIF28r6zhNeH8B
ysOTfBRzhPcfwLFv3etdlwjvT8AhR6/zX1YK71/AnbnhxjYbhPc34Lz7wn9W
bxPe/4DFxjvGpu8W3h+BVfmjJn05ILx/Ak9nN11cclR4fwX0t7nMczspvP8C
LlEF/e+eFd6fgW7nNtczF17ftwGz77ciDtLr9Xk2sNfR515xEeWzgQcbH2wb
Vkz5bMDT5FKT5OuUzxZcHr7pr3eT8tmCrevk9/JblM8WHPynf1x+i/LZQn7n
U/PW3aJ8trDNY8b9gFuUzxaaT/RpqyZPYwvHNpsF3L5O+WzBc2GYfu0SymcL
95xeJh68SvlsYfs/y/W//EP57MD20W8Lr12ifHYwTbuiUE3vd4TZwb+Bzlmt
z1A+O8ivbPe+XEv57GBAosVR1VHKZwc/Fi35bnCQ8tnBBdNrlxbuoXx24PFj
cuOj2ymfHeSumj8qfTPlswPTufYLFesonz34Rlmd7byC8tlD38sm7ZrQ+RJm
D1//rdXp/lzKZw+zd9c3bzqD8tnDpJgnp3olUz57KNMM2RQ+lvLZw0zV2Wc3
/qB89lBQdO+8Op7y2cPH3MZ/JvWkfPawbJKl24SOlM8BNj9uUdGmNeVzAP+v
f8jeNKZ8DrD/yeM/R9L/n8Y4QKeoz4MKfCmfA5ir3v/z1ZXyOUDEjDZHrW0p
nwNMNbnjYkbvR+Q5wLhXEQ9eyyifA2xfV/jo8H90fXGAB+06fxxVQdcXBchP
m5VZP6TriwKUrrHdtt+k64sCyt+UfGlwma4vCpjVNHj0QeH/vxRg7Ph7w5DD
dH1RwLmKxMtbd9L1TwFuPY5qnDfR9U8BrTe/rVy6kq5/Cph7ZqKH8SLKp4Bc
TWTvOTMpnyMsWt3zhEky5XOEmKw3AzSjKJ8jtN/xrGnoEMrnCBdWnW91K47y
OULAvGUdF3aifI5wOG+nR2xryvfTP1AyIaAx5XOEkQ/lL+xDKJ8jNJ+/xczR
h/I5QsHLZvFhLpTPCcJX3Wo71JryOUGO/VO3vUaUzwmsh4zxd5BRPieY3az+
6tX/0f3NCWKvH1vW5BXd35zg4np0+/qI7m9O0MZJpb79L93fnKC1V687/16l
+5sTwKYZV7+cp/ubE6S2Kn7aDOn+5gz7312+ufkQ3d+cIeL00nZBu+n+6wwO
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
Iq3Qag==
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
UforY526P3cc36pJ7+Xq/tzRu5l95EJ1f2549pHX1unq/tzwYXQbj3Hq/txQ
XrD39hB1f24Y5VKwtae6Pzd8b7tyXjt1f274a+yN4Y3V/bnhq6D/mvqo+3ND
84jjZTbq/tzwtipgZi11f25odvfA+U9V1J8bxp+6n/WoivpzQ7397ZpeqqL+
3FAjan3r/VXUnxs+XzrgeEoV9eeGrj1qz5xGXqAbvlxdMqMfeXI3bOccsrEZ
efZuaPvo0TlH8ozcsPevFXk/Kqk/N+xveXFvfiX1J8OldVc0yKyk/mTYw/ho
m3mV1J8MR/dKOt+zkvqT4eb33xbJyUMZ1u0fO/5rBfUnw/LZD3oqK6g/Gdo2
32C2qIL6k+GYtQlTO1VQfzLsU3x8kFEF9SdDs6Scjbk/qD8Zlu1crDH/B/Un
w/xdnv0a/6D+ZHjkRfX04u/UnwyP3TkdsPY79SfDra+Cmrb4Tv3JcPrRuHHP
y6k/GUZa7V8xp5z6k2HxtmbD7MqpPxm29d26f9836k+GgzG+bug36ssVh96Y
n4FfqR9X3PAuLb/lV+rDFd1PZE04U0av3xWDlEVN6pfR63XFC6NGvtn4hV6f
Kx43XVlH6wu9Hlec27bw3KDPlN8V74zQ6n3sE+V1RYcZ9zdpfaJ8rrhyzIy2
7UopnwtuuNa1at5HyueCb7/pjj72gfK5oOrtoRZPSyifC2ruyHX59Z7yueCu
lh2OmL+nfC5oc+3YZsd3lM8FdxYEJzkUUz4X1DXfZ27ylvK54MgE5eNvRZTP
BR+W6y259ZryOaOyl2t2+ivK54zzy07pDX1J+ZzxjPYdG7sXlM8ZAxpcTFAW
Uj5nNOwa87LPM8rnjO+ad3v08gnlc8bF2vm1oh5TPmdMcez8U/WQ8jmjXKf1
QL8CyueMC01XXZ56n/I5od6IrXeP3qV8Tnh/8Br583zK54QjDRZG/rxF+ZzQ
5tVhE908yueEK1+de/PrOuVzwuL1VYteXqN8Tjh+xoLVx3MpnxPOarv16JTL
lM8Jx035sdLjEuVzQvvT9x6cOU/5HLG4y+TGrZDyOeKVRq2GZp2lfI54p6mf
qdlpyueI57a/+tb7JOVzxOkxcHfJMcrniMtqxY3bfYTyOeLCqSOXHjpI+Ryx
4UGrb9syKZ8jri25NGvOHsrniJW+0362zaB8Dji4s2+X8m2UzwFHaNTttWIL
5fvz+1qLqi03Uj4HHHM5uPHcdZTPAQ0apVbdX035HHBLx4Pt7VZSPgdcNC/J
u9UyyueAdsfn7+65mPI5YNfO+191X0j5HFB7rll16FzKZ49XJ+nLDGdRPns0
LVkzJ2ca5bPHf/vv6Bc7ifLZ41mXwb9+jqN89nhuxtyT00ZTPnuU9U5+/yya
8tnjvgYyjcAhlM8erVsFj544gPLZo8+gIfs396F89lg+xTTiZATls0OrLie/
KrtQPjvMa+kUcrwD5bPDHlfGXdvQhvLZ4adRSeMmKCifHfqXan8MaUL57PDV
nBiXT0GUzw4zxnd6vb4e5bPDQTN7BIX6UT47/OI71EDlSfnscKfLirgerpTP
Fs1lQYvz7SmfLbZeUjShoxXls8VCjcmDT5lQPluc4nlnnac+5bPFN7b60Uu0
KZ8tmnSwbf+wyrQmny2u2NRy8sZPpjX5bPFdVL9mA1+b1uSzRbcXtba4PzSt
yWeLvSc0OVFyw7Qmnw3eqcw9rrxQ46lssJ7sZNHmkzVelg3+Tl+dsWx/jZdm
g1s/nB29fFuNl/Dn+ZdTcFdqjRdtg1VP17V+mEz5bDBz0PwMv3mUzwbPTmu2
f+NUymeDaS9uBASNoXw2eCihjcG3IZTPGssVcaEv+1A+a7wdlX1aqyvls8aB
0Xs2925L+azxyKedla+bUj5rvJ4/5vPhhpTPGqdcWZep9KV81nhFptPf0o3y
WeODb8FBh+0onzVadtsTu8mM8lmj1gPzFo/1KJ8V/tidWjhBk/JZ/fn3x6/F
QypNavJZ4YTX50cfKTOpyWeF99oGHR7+waQmnxXOGxY/K+GNSU0+K2zXZ3Wx
7guTmnxWePtEX61fj2u8wD+P/xSdE/2gxrO3wtee2p7t79R4GlaI/5p835FX
4xVZ4opRT3XnXq/xVJb4b5xjrcKrlM8SZY6bEi9doXyWmD2ltWGjy5TPEs0C
bn1ukEP5LDFmYs505SXKZ4ljBre4VHiJ8lnixAs3VetyKJ8l5mZMHPGOPA1L
jPowuvWDXMpngVHO8HqYivJZYMmJAztX3aR8Friq/4mDQ/MpnwV6ae6tLrhP
+Szw6MLW/b8/pnwWOO/9/YFn1f1Z4OhJS0fUKaZ8fx7/YUN6+0+U78+fN/x0
lekPymeBqxfPqr9Ag/5+zTHgyYNTO/Xp79cch+qcLZhkSeefOV5rp1z22ZnO
P3OcEf001dGXzj9ztPg8cNqXIDr//nhO58ZMbknnnzkOlN+K296Fzj9zrA7L
bzWjP51/5jjFVtWlKobOvz+P71eU4zad8plhZnX56pLFlM8Mm1jKBkSup3xm
uDIpZdbwfZTPDJd3mGJicpbymeGpfq+ed71J+cxw31KbBd4vKJ8Z3pTtbbry
G+X78/gEnYUXa9H1zwxLumj00jGl658Zdiurez1Jfb0zRU2IWRjuSdc3U9Ta
PflH53p0PTNF+9DkOUua0PXVFB+2/h3xuy15pui3vWj5nn/IM8G4JS/qJtL7
Q5oJppz4aLJqFHkm2PZR2OfcyeSZ4GKN/jP85pFngiMPPww59C95xui07Fxq
7w3kGeOmikVlTrvJM8bpK3ok/zxKnjHqPmm17Ms58oyx8vsJo6ob5Blh4PxL
xhaPyTPCXbPXzw0sJs8IE6I1O/QrJ88I+2m+b7RQ27zGM8LnzXSM95uZ13iG
mDJ2wKIbzuY1niEuCDPu8drPvMYzxE/Zn+0/hJjXeIbY2HN0/PM25Bni+bte
Jv/9Q54BLmv5bvzsgeQZoPnXuFCX0eQZYLtpXTTSppJngA06noh6N588A5z3
eX6l8Qry9HF+X8NJvzeQp4+T55jPPLWLPH2sN+HotSZZ5Onj16uRPjP/I08f
f6/fMHx6Lnl6OPdy4IgGd8jTw5Hlr9w3PSVPD/f9GrQt+y15ehj/3FNn/hfy
9LBu9MB536rIq417m52IMdaxqPFqY/db3n6XjS1qvNr48vLpDq42FjVebbxZ
v8sECxeLGq82eiQ1HbXJy6LG08XJK/WczgaQp4vrfX6ljg0kTxczPY6YHQwl
TxcdR64snKEgTxe79G235HYb8nQw8a7nqUMdyNPBXYXj21l1IU8Hp/fb06jq
H/J08Pubw8eG9iRPB9/3/SQP70NeLWyk18suqy95tTCmXc8Oqf3Jq4XdUs/v
/T6AvFponpc+KH8gebWw7dP7Z30HkaeNdkvvdqkcSJ42Hii0zWszkDxtTL2Y
Hqiv9rRx3Zju6e36kaeNjYYHTdSIJE8L699KbxLUizwtfKGKxJfdydPCbhmJ
v027kqeFJU/X+Z7qSJ4WGj+22/myLXmaOFPR1/hfIE8TD5TYNjzdhDxNnHvt
u82YIPI08eLw8i8765Cnia+STtUbKSdPA+Pcbo087kKeBrZcdSsmxYY8DTx9
J6ahlgl5GghnIt/r6JCngZvOtS/dWkXn72/l+stpFws+0/n6W7m4h4Pz4Td0
flYrXa9su+P/hM7vauU0162lnW/T+VytPP1yeZrjZfJ+KXXeRXqknSbvl7Le
mn2a1w6S91M5N6LhtWPbyfupTHa8FjwwlbyfyjZH0+1zl5BXpcSNTYZXzSKv
Sqk/fpZX5XjyKpVFuzfNvjqUvErl4UM6+yb0Iq9SedOvfsXX9uRVKDMmTc2N
bEpehXJS70dLd9Yh74fy4MezZ5+4kvdD2fDquje1Lcj7odzQe99631rkfVe+
3rp9bHv19fK7sm98q9+j3tL1tlw52+5nccpDur6WK4/2X3vtmoquz+XKHXsv
NbdV0vX4m3J9au6dGYfJ+6YMnGDg/Hs7eV+V586cXJexlryvytKccWenLibv
q9K83+PPU2eSV6Y8dmLk0sxx5JUpL+R/vOYwlLwvyt21Jj673Iu8L8rDFs8L
TnYk74uy8OLzo19akPdZ6V2c0Xl6IHmflYEFt4b08CHvk3LOlKhVC53J+6TM
WbW7t4UleZ+Us7MG6//Wo+eXKh0azDy4pZre3z8qw294rzEvofuBD8qkHXXn
9HtI9w8lykOenW8tyKX7jRLlhXfdVq/Opvf/90rZip8TV+4l753SeIvlibkb
yStWftdeETZ6OXlvlefbam2NmE/eW2XMKecnimnkvVE6FEzICBpLXpFy57F/
mgYPJ++1st7GdzHtB5D3SmlyYEnK2F7kvVJO62i3dV838l4qF38/ZagVTt4L
pe6o4/fi2pP3XDnMf9pyrTDyCpUxQx6EH2xDXqGyQ9myA9Pb0POfKhP63ns8
rC09/rFyXK9/ksa0oz/vkfLSVLN3KR3JL1CGr3x44V4X8h4og4q3RQX1IO+e
ckJ54Jq9fcm7oxw/wPhc8BDy8pXdr0y6eTeGvFvKd67ZjRdMIi9P6b96l3aL
OfR8lbKRqsHl6iX0+FxlTEKbzHPqf4/lKF32XR83dyf5F5QTR3we1vgoeajU
mhs7tfACPT9b+X2bR924O/T4LKWf5tP9xfTvybQ9Ss3Wfmea/aDjNOXMhsGD
j+jQ+ffnCpO2+G2mKZ3PaYralfG39B3oeI/ifeTwvIuedH5mKa48HTuxoB79
fraiuvVg19ZNyUNFh+ZbHX+F0eMvKEa8rrtEi/79H52jeN3z2Ngug+j5uYoF
s3cdfDSa/n9RKTw6j7LbOY28PEVxgwX9di6kx99S7NMtsrq/ivx8RYf+vqqg
dHr+HcWzgKLyk/vpz7unaP1Rv2rAafIeKIb+atTAJZe8AsX6Ph5vyu6R90hh
sclgSIH687vHClWo6fMr6s8znypu5WZuOaNB179CxZhErwcHTOh6WagYcP7T
pTQnuh4+V2gN8tk9VX3/90Kxp87XC60a0/X2pcK9/pfob23Je6U4vX998eII
8l4pbltuOVwZRd5rxdsNrYJajSWvSNH86L4ffWeQ90Yx07/OekUSeW8Vdp6J
V9+tJu+tIuSBbY/eW8krVlg1M3NK2E/eO8X9lUmeUdnkvVesqp3675eL5JUo
vGd339gwj7wSRcjmy0ccH5H3QaE14mm/Pa/J+6joFlOv/f1S8koVL0ovd9ta
Qd4nxY1Wj6dpa9P79SdFw7gRpRWG9P7+SVH32QmzuVb0/v1ZcfjpmxFrnOj9
/rMCy1seCvSk9/Mvio+aK+718Sfvi2LCpR6Vmg3J+6I4HFc6NqAxeWWK8F27
z9xtTl6ZYsbo3VurWpH3VVHv8x2Lje3I+6qIWZ/W7Fgn8r4qgs3Wzm+rvv/5
pvjp1mhhp+7kfVN8CvG3y+lBXrnCtM7j8KO9yCtXWI3fPcZafT9YrrjY0+33
2z7kfVe8XOmJdSPJ+65wv/90T1Ef8n4o2u45VmrWh7wfirNT7X7v70XeD8Vt
t9A5//Ugr0LhbZbZrbU6X4Wil8On5OZdyatUHI1/uvBAJ/IqFbbW2pdS25FX
qZg/44nB//qpuf9QWHw06PJQ3V+VIuBl5KmQxuT9VPhNvXzQuiF5PxUv2404
N8WfvJ8K81bBRwd4kvdLsePTg1nX1X+/vxTnitq2zrUir1pR8rp/7x5G5FUr
tGNGh07UJq9asSl8S4q8Un3/prAKHRk6+ZP6/k5x7vAVryFFdP5pwLMxqfGf
H9HjNcD16eF471t0/mpAvUzZMr0cer4GtDat1zTtFJ3/GmB5d7Lv0wPkacJz
7Uf2j7eRpwkLqxPfpq4lTxMe2OYttlHfz2lCYqKz3oBZ5GlC0v7zc8ePJ08L
Vh3Kl/caSp4WaHT5GmzZizwtKKpw+52pvp/Tgu4h0+/7NCVPC4rrVMuS65Cn
Ddum92j92JU8bRjXZMleFwvytGFM5zsX+6jv57Shfd4/Givo+yOVNvS+kncl
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
DtjrLT+dR9dnJ9iTuKJXzDW6PjvB2jwY6ZVD+Zwg36k04wNSPie48qRj8YXT
lM8Jzg79UrH7OOVzhoC+y1I3HaZ8znD4x/tJ2zIpnzNc3e8XenIX5XOGar2H
c55to3zOELbHr8BuM+Vzhm5fna4OS6N8zvC171HVhdWUzxlMSut0C1Z/X+UM
/qZNss8spXzOkFTSeEjvRZTPBaYdit+gO5/yucAq3Zn7rs6mfC7w9Fbgze3T
KZ8LlOd3abJqCuVzgdvGM23XTqR8LtB0+9Gkg2MpnwtcMEjc9TSG8rnArJ4D
FnqMoHwu8KVvvv9s+ry96M/zUys2fhxE+VwhY8mu/En9KZ8rqEZfuWAWSflc
4UD17r7ne1I+VzAY3nbO4u6UzxU+nF1rEd2V8rmCZ2xhae9wyucK8ic/SwZ2
oHyukL9vz8PpYZTPFeDn7QX7WlM+VzhW+uTIJ6B8Mnhu/sW7Ywtz+vlAqLOt
5fYTTSmvDLQ2dytsHGpOP18IZyc2Sb0eTPllUKwonzk5qMYDGbRfnda6fkN6
PTJ4vTJt/a96NV6kDGaNMKj3pA69PhnYmD7Zd8O/xouTwYbWjqdu+dLrlcG9
dDfNIu8aL1kGtV7elxvK6fXL4HqzNzfBs8bLkMGX0x+3JLpTHzI4ffxY6GNZ
jYcymNe8v6KlK/Ujg47LFnc/Rt/XFshg89x1Vo2dqC8ZDNA5L891qPHKZBA2
v63fSHvqzw2i+ixHKzvqzw1mdhqw9IYN9ecGjibPA9ZYU39uYKsqbDfSivpz
g4F5d+e0s6T+3OBzW/34hhbUnxvUdz74wMec+nODni6/2/iZUX9usLph+PBg
U+rPDVw/2r8IN6H+3OD28PrDxxhTf27wtN+BtFQj6s8Ngm/aB1wzpP7cQLdy
7NXahtSfG/x3rY5nZwPqzw02vR/+bj3dz6rcoKTbuZuf9Kg/N2g5e1lSFz3q
78/rG3PhalZt6s8NwkNNushqU3/uMGd13rUUXerPHY7Z+f421qX+3GHE7G87
/tWh/txhfO6dGdY61J877Jrm02ZbLerPHQouWWFQLerPHVZrJ2SptKk/dyj1
Mn81Spv6c4cB8+vYG2lTf+4Q/PCbY5YW9ecOm3a1OjFQi/pzhzePtpww0aL+
3GHRj3bvz2tSf+7gtt3FfYYm9ecOztl764RoUn9/8n40fV6uQf25wz1tPfNT
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
GA==
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1:eJxd3HVcVOn3B/BRASkVGGrIoYYaSkDEmmMsFiaIYGJhYWJhYmGha7uYrCIW
xoqFrs5ZAwuTNVgLCwsTUFHEH9+fnDv3Hv/xdV/Cmw8fLneuc5/zuAwc031I
bZlMdqOuTPa/v3/9CUf/bzHnuz2xhPXp1X8qGgvHwf/7U6o7vpJf/adEd5zw
vz/FuuP/54oaS71C5hUwL595ecxD5uUyL4d52czLYl4G89KZt4p5acxLZV4K
85KZl8S8ROYlMC+eeXHMi2JeJPMimAfMC2deMPPUzFMxT8k8BfPkzDNlngHz
ZMyrCGPnX5jUKwmTesVhUq8oTOoVMq+AefnMy2MeMi+XeTnMy2ZeFvMymJfO
vFXMS2NeKvNSmJfMvCTmJTIvgXnxzItjXhTzIpkXwTxgXjjzgpmnZp6KeUrm
KZgnZ54p8wyYJ2NeRSN2/jWSeiWNpF5xI6lX1EjqFTKvgHn5zMtjHjIvl3k5
zMtmXhbzMpiXzrxVzEtjXirzUpiXzLwk5iUyL4F58cyLY14U8yKZF8E8YF44
84KZp2aeinlK5imYJ2eeKfMMmCdjXkUoO/9CpV5JqNQrDpV6RaFSr5B5BczL
Z14e85B5uczLYV4287KYl8G8dOatYl4a81KZl8K8ZOYlMS+ReQnMi2deHPOi
mBfJvAjmAfPCmRfMPDXzVMxTMk/BPDnzTJlnwDwZ8ypC2PkXIvVKQqRecYjU
KwqReoXMK2BePvPymIfMy2VeDvOymZfFvAzmpTNvFfPSmJfKvBTmJTMviXmJ
zEtgXjzz4pgXxbxI5kUwD5gXzrxg5qmZp2KeknkK5smZZ8o8A+bJmFcRzM6/
YKlXEiz1ioOlXlGw1CtkXgHz8pmXxzxkXi7zcpiXzbws5mUwL515q5iXxrxU
5qUwL5l5ScxLZF4C8+KZF8e8KOZFMi+CecC8cOYFM0/NPBXzlMxTME/OPFPm
GTBPxryKhuz8ayj1ShpKveKGUq+oodQrZF4B8/KZl8c8ZF4u83KYl828LOZl
MC+deauYl8a8VOalMC+ZeUnMS2ReAvPimRfHvCjmRTIvgnnAvHDmBTNPzTwV
85TMUzBPzjxT5hkwT8a8iiB2/gVJvZIgqVccJPWKgqReIfMKmJfPvDzmIfNy
mZfDvGzmZTEvg3npzFvFvDTmpTIvhXnJzEtiXiLzEpgXz7w45kUxL5J5EcwD
5oUzL5h5auapmKdknoJ5cuaZMs+AeTLmVQSy8y9Q6pUESr3iQKlXFCj1CplX
wLx85uUxD5mXy7wc5mUzL4t5GcxLZ94q5qUxL5V5KcxLZl4S8xKZl8C8eObF
MS+KeZHMi2AeMC+cecHMUzNPxTwl8xTMkzPPlHkGzJPx8y2AnV8B0q9XGCD1
8wOkHgZIvRzmZTEvnXlpzEthXhLzEpgXx7xI5gHzgpmnYp6CeabMkzGv1J/1
58/682f9+bP+/Fl/zMtiXjrz0piXwrwk5iUwL455kcwD5gUzT8U8BfNMmSdj
Xqkf68+P9efH+vNj/fmx/piXxbx05qUxL4V5ScxLYF4c8yKZB8wLZp6KeQrm
mTJPxrxSNQZI+tMd/+pPd/yrP93xr/50x7/6U2OgpD/d8a/+dMe/+lNjkKQ/
3fGv/tTYUNKfGoMl/akxRNKfGkMl/amxkaQ/NTaW9KfGJpL+1NhM0p8aNZL+
1NhK0p8vRkj688WOkv58sZukP1+MlfTni/GS/nxxuKQ/X5wo6c8X50r688VV
kv58MUvSny+elPTni3cl/fniV0l/vuj0Xdxf9ffzXdyfL6Z8F/fni9rv4v58
0ahS3J8vDqgU9+eLFyrF/flgqx/i/nzwxg9xfz44tUrcX/XH/xT354NqWU9R
fz6oqdVT1J8PzqndU9SfD1bV6SnqzwdP6PcU9eeD5+qKvCQf9DEWeQk++MVU
5MX5YAszkRfpg5aWIg98cLmtyAv2wSuOIk/lg2/cRJ7CBxv4ijxTHxwcLPJk
PqhoLvJKvXF4O5FX7I2re4i8Qm98MVjk5Xtj7iSRh944dom4P2+ctU3cnzeO
0or788Z/H4n788ah+rGi/rzxY2CsqD9v7DcoVtSfN/69KVbUnze2fBwr6s8b
uwfEifrzxnmL4kT9eeO+j3Gi/rzx2fBeov68cVlZL1F/1flW9xb1540rIvuI
+vPCLcq+ov68cKdlP1F/XtjDr7+oPy/8PCZe1J8Xpj8ZIOrPCz3TBon688Jp
E4aI+vPCeZlDRf154SjVCFF/XnhGf5SoPy/c3mWsqD8v/GoxQdSfF26OnyLq
zwux4wxRf15o9nqOqD8vVEYvEvVX/fHbl4v688JBVX+I+vPCtbO3ivqrzt9z
r6g/T0zdmyvqzxPzjpwX9eeJ37LviPrzRJ8br0T9eWJ6YpWoP088ecPqgq4/
TxzQN/CCrj9PvDu58wVdf57Yf+3YC7r+PDGz2boLuv48cULVaZ2X4ImbZpfp
vDhPrJ2ivqjrzxM/XBx5UdefJ+5ol3NR158nhtfSu6TrzxN32vS/pOvPE4fd
PHdJ158nBm4Ov6zrzxN/s/j7sq4/FbqUd87X9afCfS3L8nX9qbBUve+Krj8V
JqpnXdX1p8KyyuHXdP2pcPTucdd1/anQ/4/0G7r+VBi++PlNXX8qHLs/7l9d
fyo8kv3tlq4/FQbvunJH158Kz/a+W6jrT4X7FS73df2p8FLxvoe6/lSoXLDo
sa4/FbZcmftM158KByxs91LXnwoTXkGJrj8VOnXe90HXnwpz5m4q1/Xngbt3
OXzX9eeBC7s3rdVd6M8DB+wwNuwu9OeBy5dtatBd6M8Dr98ytO0u9OeB3/sP
cuku9OeBGJPnK3jpHrg6vlOY4KV5YJN71m0EL8UDG9m36S54SR6YeqBigOAl
eGD9v/onCV6cB9obbU0VvEgPHHvzwwbBAw+MOZiSI3jBHqjWLLkieCoPrBrV
5bXgKTzwsKGFcZTQnweO83PyixL688D9d85FRQn9ueOjpIEzo4T+3FE5s8fe
KKE/d/xXbfRY8PLd8Y7nR0W00J872nZaEhst9OeOKXPjN0UL/bnj2436r6KF
/tzxt3YOzXoI/bnjHMvodT2E/tzx0vyR33sI/bnj4uZBw2OE/tzxRKP5j2OE
/txxhE2vIT2F/tzx4B9HynsK/bljL4Ojq2KF/txx0J1lECf0547n4xf/iBP6
c8dr28zyewn9uWP38O17ewv9uWO/3q+39RH6c8Nd9bcd6Cv054YDRx2+1U/o
zw0fWvpZxQv9ueHBo83HDRD6c8PCW7+VDBT6c8O5G28sHCz054ah7ze1TxD6
c8PnGzYEDRP6c8O/T3xqPULozw2btzKYlyj054bJf08uHy3054b6rXw3jhP6
c8OJ6R2nTxD6c8O3Kzqvnyz054YrV1V8myr054ajhyVsmyn054b9NYbpc4T+
qvt4feBxqtBf9ffbe+3cJUJ/btisb+z85UJ/rrhjqcG7NUJ/rhi3XnVug9Cf
K248edxiq9CfK76a1e7RTqE/V/zr5KPgA0J/rhjzycXumNCfK1pfbL8Rhf5c
sW9Zw3MXhf5c8XzHgRkFQn+uWCuofpOHQn+u2K+p55ZXQn+u+MR7wINyoT9X
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
Tx46MebRI/JqoYtLm8Z/vyOvFq6Z9bpy5Q/yZGj6ru3CPqZ0vZRhgyL7LHN7
uj7K8O7bStUeb7peyzCstckzl8Z0fZZh2Zatp0dH0Of/1D4uNDq2OJo+/qd2
2HXHK6MH0vW6Stv/dLmLJf1/IKFKa14x82PSDPKqtGdP1VuzYDF5P7RHNzxe
0G4deT+0Pf5bP+LANvIqteN6bTHI3U9epXb+mcRufU6QV6mdFnB7zOo88r5r
88f55va+Qd537Q6fdsez75H3TTv0ycLGc56T9007bXJmyJ135H3T7gwb9jbr
C3kV2lH1ejwp+UlehdagqcPtzLr0+v5V29r/2/VL9el+4qv2mfE7195WdH/w
VbtlY/6Q7vb0ev9FazTJb9ZeJd1ffNHOtw7aOtyDvM/aMgPnbvO8yfusrfr0
X7/vavI+a/feC/iQH0Beubbjug/TvwSRV338uuR6cjB5ZVrVpuOmUSHklWl3
mHTPmhNCXpm29pkZww1DyCvVKh84THnWkLxSbX5RWAebIPI+acvrvtz7pz95
n7Qzi83Oz/Ml75P2wvyS+qeF+/+P2tGuI6J6u5H3UWte0P9IdyfyPmjDp/ye
vduWvA/adqNnVQ6xIO+DVrXK8+QCE/r899qt7ZOi5Xr08e+0c5qlTzStpJ/X
W+254+2dJ5fSz7tEO3fTofSer+nnW6JNOzV0wsEi+nm+0f7uUHde2m06H15r
fzx89Oj1ZfJeaYel9Hx0E8l7qX2U3Nimw2HyXmq/3X8QE7OLvBfaEX00239s
JK9YOzj6UfOI5eQ91+6bsHFpo7nkPdPuOzks4NZE8p5pU5a/eOk1jLynWtxS
ltVY+P/6E23bDVZTTSLJe6z9Z/rdlTuF+6Ui7ZQhyhY2AeQVaT3rDnrcT0mf
/1D7I/3u51Rz+vj72obDM4zW1aavd0+7Qv/+X2tL6fpTqI1veGa58H6n7K72
dubByLm36Hp0W3vrQNjSWXl0vflXG/bT7suio3R9KtAGjUj02r2TvBvaxfYr
D71IJ++6to1BX2WHJfT5+dq2N90f3p1OH39R2y7ybfsNo+nr5Wl3JKzb/kc8
+We0W244W93tTh5qO3i/XR//G31+rnbM/gDL8Mb08TnakBnRocN86d93afXq
L0stc6LjdG1ARVL8MwvyZLL3W0+8bF5X+HfNlS0mDepW0uvRLk3mpDeLfvtI
r2c5GpN+NwqqiunfczVDZ3fxavyAXt9Q80+7gbM/F9DHn9GMN328usVlen3M
09RaYnHT8gx9/kWN4eCE/jNO0Othvsb4fLTt9EPkXdeoxw5ZYrmPPv6GJv9L
v6/td5JfoPlv0JbOztvo8//VXCnY7LtOuD+6rWlntKkwZz15dzXxU6Z2nryO
vEJNeNJJn6fC/cQ9zd2SM8e+riTvvqZNmGvJMeH+46Gm2DBggPsK8oo05ZV/
92kq3F8VaQbtrpX/YwX5jzXLone3GbmKPv+JZonSSX/uGvp6TzX//vm2rPUf
5D3T/JwyZnv2BvKeaZrvWNT9xBbynmvOuex4OiqTvGLNXdvCkn92kfdCY9XF
7cCh/eS91DQ4/8mp9RHyXmoKP5+8N/wkea80kzdcaepxjrzXmvxAv/bjrpD3
RlPy45+z7W+TV6JZsmKB1+5H5JVoLk76sGvpK/LeavDO8GbvS8l7p/H+S7b6
YhV57zW1vT29bIzp/Pug2broj0Y3rej8/6DB7r3yylzo9+WDJubM3d1T/On8
/qh5Hui4oGdTOl8/ap4kOdxY3I68T5pdmfa3TGLI+6RpEuedWzCIvE+am4t2
pdwbR16pxiv8UwOHFPJKNSVlnwOWLSOvTGPWrNZKn03klWmcbiYVvNpDXpmm
Xu11s88eJ69cc/fqSMeci+SVa/rVm+e87y55nzUNBzz4vpeeTyR81nS1Oumx
5zN5nzUGlxbLN+vT9eqL5tWnHa1mWdL18IvGxrVV07ZudP37Wn0+OK1+F0TX
v6+a3Mdxn0cBXf++aozauLmc6iy8vmva3Rvw9k4f4fVfozzUrduhEcL9gaZB
p3qDI6cI9w+aLy/1BqTPF+4vNNeTBuxZvVK4/9BkNOt2I2yLcH+iGf9vs9+n
7xHuXzR7xjy52eeocH+jiQqNOXXztHD/o4n58nz33SvC/ZEm5+FD3+F3hfsn
Tbcdweazngj3V5ortrVHWJUI91+aq9M+p3qWC/dnGueHSyoP/BDu3zSrTby2
79Wn1+ufmqRQi22KevT6K4PKmNYDP8rp9VcGk6Y2WB9kR6+/Mrhls6PzHWf6
fBmcuTfm5iN3en2XgUezkPPtvMmrBTk9vJ3N/MirBa8zLzmGBJJXC9a1XhKb
05C8WpAwss/RtBDyakGBpdFEbSh5tWHInwnOHRuRVxt+ru21LqARebVh+qLD
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
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[1, 0.75, 0], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
uObvKxqv2B3vbC7TeIXuOPaEdYKmP3fcFdUlQdOfO9p3m5Gg6c8dHTocT9D0
545RAXUJmv7csVLRLVHTnzum+KYlavpzx67btWZr+nPHWe/Gz9b09+N4Z9ls
TX/uOGbjzDma/tzxxlX7uZr+3HFT/M25mv7cUdtp8zxNf+54d/nc+Zr+3PHq
i/lJmv7cceH6XQs0/bnjxpVlCzX9KXGF7R+LNf0pUda4bommPyVWZVxZqulP
iUu/FyzX9KdE9/W2qzT9KVGvYPdqTX9KfH4t6R9Nf0pstPbkek1/Srzt3Xez
pj8l/rar3zZNf0ps8evNdE1/Sux/8fZeTX9KnNJ07CFNf0rccHL/MU1/SrQM
3nla058STU/H5mj6+3F80OK6pj8lHvrvxD1Nf0qsqZn8XNOfEjNGjSjT9OeG
ld8P1Gn6c8OzH8fr6Qv9uWG8xx1bfaE/N2z3l66vvtCfG04/27KDvtCfGyoN
Nw7QF/pzw1/8Y8cLXqobLvj3dbLgJbuh1dff9gpeohvaDNW+KnhxbnjDr32F
4MW4YerKUbYGQn9uOM6vuKuB0J8b3n9lP91A6M8NzdYtOmwg9Pcjb+WeMgOh
PzdUjTIKMBT6c8Mu7n1mGgr9uWGiifV1Q6E/NzxcZeNpJPTninoHFclGQn+u
uDWxQa2R0J8rdhu6a5yx0J8rmiwyrzIW+nPF/KqB80yE/lyxr2KXs6nQnyum
XG1/w1TozxVPli9cZib054pjT3753VzozxVDL4d0tBD6c0WcVNfGUujPFXd1
a9bTSujPFau23ZpqLfTnirenKNVyoT9XLPplrout0J8r7ug+fZed0J8rHkrP
7+0g9OeKno0THRVCf674tvsJK2ehP1dcOKGijavQnwu6nHi4Sin054KjZBPt
PYX+XPDuwG9F3kJ/Lhj93uSZr9CfCxY0Xu/WQujPBV9OfngwSOjPBYN9ExaF
Cv25YBevZUfaCv254MSts1t3EPpzweezOjl3EfpzwX5erceHC/254PbNv/j3
FfpzwRU3ngwfIPTngquHf1L8IfTngl8uuQ2LEfpzwWMzt7QbI/T3I+/j9scn
C/25oF6zjY8ShP5ccEdZzYlFQn8uuOTw8CGrhf6ccZjNxZtbhP6cUbvPdc8M
oT9n7HvJbkKW0J8zeg1sfeqi0J8zvtp/SH5X6M8Z/9Q32PRK6M8ZR414F1kr
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
zZ5/ljxtLImf+Vf6NfK0UO3dpWW3++Rp4V+uL82HvyRPC/tp9R5UW0aeFlaN
2JBVW0ueFn70tvAbqk332wZ4MDXYuJk+3V8b4H37YU37mdP9tAHKVie437al
+2cD3I1B+buc6X7eALcucr91xYM8GbbdfWloK1/yZDgl28D6QwvyZOh74kpt
aTB5MnR7XzLNW3g+leHiyq4z97Sh7/+uPmk0JGJEO/r67+oNh9ae+VNFr/dN
fa1k0vcNKvK/qV++G3zcWEXeN3XVJbn+2bbkfVUPuuK+/GBr8r6q9eW7fnnU
krw69aN+Jqe6BZFXp57ddu2tT/7k1akXDetY88abvC/qF9Nu1TkryfuizpvX
3iPdkbzPapvihn5TrMn7rI5uZNtivTF5n9XjM0+dMtMlr1bdbO3tM6+/0e+v
Vh2i1zLV4SP9/mvUh5xX1J0ood93jfrTTKuG55/Q77dGvVlX3wVu0fnxST1o
71uX4FzyPqmDYYrrvpPkVauvByWszNhPXrW6w8QZzm22kletDgqtufUnPY+k
flQ3Onvhlfd88j6qe58wvrNxMnlV6o1zOvZVDyevSt19Vi5sHEBelfr3Q7sP
t+lGXqV6hYFp0e5Q8irVY59nOr/zJK9CPeObVbmRDXkV6kLtwgLbpuRVqM8e
vzbS5jNdTz6ojz/1GWBRQtePD2rPiandLIXnj3K1xYO2r5SX6XpTrg42u3uz
9wm6vpSr8/7KTdu0h76/TD0sMfCm5Qb6+vfqqai4fmEJvd47dUX39KLMGeSX
qkdcDfQuGU1eqbrJiJJd4/8g763aLqmha0Qf8krU8Qajm//Tkbw36mkTh3uH
BZP3Wv3CPtpnhCd5r9Wnu79u0sievFfqm0V5vVxNyCtWnzcY0/pqI/JequUl
Icd0vtD95oXa+UHEb3fL6X70Qq23eFnvzq/ofvVc3UV38qzfHtP955n60KbD
/Yzv0P3pqfrbmo0vp1wjr0g9sY3JrZUXyStSy/UXDRx6hr7/sdrjw7iO707S
1z9Uz++R+yroGL3eA7V9WKNmqkzyC9VWh2Gu3kHy7qkt7u55vnEfeXfUncq6
Xa/aS94t9b0w7Z7me8krUNsuL3v3ZQ95+Wr325/P7t1L3g119MAbMS776Pvz
1D0Gm9ZGH6Cvv6SG3Y8cYw7T6+WoLQ+s0/U9Sv459Z+zDUYeO0Eeqk+6Xkv8
rqbvz1JXtX1mo51DX5+pnm2Rvfx0Hv333eqEQ9MuNrtFx6nqbxuGtgkXng9k
sjbq/V/NXwr/XTV57erDc94L368amrts0/IawVdlW73cEqRNv+8s1YCx49qO
MaTzBVUDdq9La2FD58s5lWrpos3TlXS+5KjuDdl4sn0Aff8l1Xi/Sr+ZQOdf
nuqMY8dSt57k3VDlj7q8OWAwfX2+yr/z2OOb/ia/QDXSt+GEQfH0/bdUL5fv
z/9zIb3eHVUnp9iD+/4h755q2cFMtd9O8gpVFthsedFR8h6olg2bvepoDnkP
VWW5zd133SHvsarun4Xr9wrPB0WqmpOL/I4JzwdFKrP1pa5n6O+V1Keq0a5W
J9WWdD15purbwKrVbiVdf56rBhmv+RQXTNeXF6o1qerBlmF0PXqhSo13L03q
R95LVUJ6cpdTf5FXrDKZtDZoXxx5r1QtzSbu7D2HvNeq0aeiT29aQd5rlY3K
KH/JZvLeqMpmvhhnKrxfVqIavV8x1jOLvLeqDr75T3MvkFeqCny+0eNNPnml
qgVB0R/mPCLvnerkzU1tlr8m773KNSkjurHwflaZqtfas6Yv68grV71tmRXl
rEP3q3LV6oL1p7MM6X5Wrpr4sqJhuiXd7z6oPm58PPGZPd2/PqhMOz888bcr
3d8qVHZP+n9o5UVehWraiMptvfzIq1BVTl6U928AeZWq6VpvHrcKIa9S9e2P
bqgvPB9UqVSbJ12VtyGvSjVl+/77UW3Jq1KdXNcx8Glb8j6q+v9etHm9cP//
qPpasbL/0jbkVatev0w0O9GKvGrVVpuh352E54FqVV3fzadzAsn7pMpzav73
Hn/yPqn0LGH5dW/yalQFNqOahSrJq1EdDbz7X4nwPFCjkpdXab+2Jq9Wte2b
9rAgE+H+r2q8t9+Su7rC84HqdkWvFQXf6ff3WfVfm4By32r6fX9Wzbq4I6ns
Lf0+v6i2m8qW2D6l3/8XVbft45OzbtPvt051dc+j0Tfo/dOYOtWdFmuih2eT
V6dyWPnwxfyD5H1VmTQIOxmwnbyvqv2Dnr+Zuoa8b6rAb30O/+/95PrnL9VW
nR1LS6aS9031XeHl7vE3ed9Vj1s49XccRN53lX+HLvaF9H67TAartQZt+L0N
fb0MriYsMsryIV8GY4ddvfbBjr5fBh/+7qgypc9T8mQQOG7KTZevdD1oAK6F
+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
eZXMq2WeLFQ4/j+VZaXU
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
Pw+8tueWxjPywKqGlpM0/XngkO39J2n6c0f/fTsnafpzxx19dSdr+nPH7XUj
J2v6c0dDh3uTNf254+Hp8ama/tyxhWFtqqY/d3z8LCdN0587/r24zxRNf+54
b4f3VE1/7titk900TX8//v9V7+ma/txxS7O4GZr+3LEXHErX9OeOZx1bzdL0
545l717P1vTnjku33p+r6c8dnYoaz9f0544dFk9aqOnPHfcolYs1/bnjmKPt
l2n6k+Ny/4NZmv7k6HPsj9Wa/uTY7GTlWk1/cmzXAHM1/cmx6JBPnqY/OU4+
D/ma/uTo9LxJgaY/OT65svmIpj85Zg92PKXpT44JL1eXaPqT4/0kz5ua/uTY
99ybh5r+5BhvZFmj6e+Hd/XwN01/clw3R7dZqtCfHAcWy51Shf7kuP5qj+BU
oT85qp4e65Iq9CfH8stbhqYK/clxWaeodMGrdcND27+sF7xKN/RN0DsheOVu
GFF8olLwStzQcNFSkzShPze0PFDeJk3ozw03xZiPSxP6c0O/YUU704T+3PDM
+SFP04T+3PBzxxzfKUJ/bmiSpz9litCfGw69NeTyFKE/N/wrMlkxVejPDUd5
6mdNFfpzQ50GzXWnCf25YSuPZenThP7ccP/s1QbThf7c8Ft0n9zpQn9u2NXE
InKG0J8bZmwI+zJD6M8Ntwxrfzpd6M8VpxXc3TBT6M8V6yLPL5sl9OeKb+o+
ZM8W+nPFZ+tmHJkj9OeKT/Q2f5gr9OeKjzqW9Zwn9OeKUpfDl+YL/bni7b89
xywU+nPFjqo2QZlCf664bnQn1yVCf664b+6/bZcJ/bkiWD5e9ofQnyseupJm
sVLozxWjd8vKVgv9uWKDvtuurhH6c8Xgp63M1gv9uaK6euz6jUJ/rvitUJW6
VejPFdc6Ntu5Q+jPFTcOU4f+JfTngsO37/YsEPpzweIlx+YdFvpzwVcDB/Qr
EvpzQffRWTtPC/25YOpnvVkXhP5csPdI3efXhP5c8NbNhTW3hf5csIdf7/WP
hP5cMHrJY8kLoT8X7OK8yO2D0J8LFv4+yUbHj/pzwfeV6pfGftSfC/r4Je2z
8aP+XPD7pGUTPfyoPxeMSG/VNdSP+nPB41V5nTqSJ3fBri+80/uSJ3XBaX/E
6Y0iz8gFTzhZ1U4nT+KCceaz4laQV+uM32L8huwir9IZ15U6SU+TV+6M2WkP
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
zPB5UuuTz67Y1eczw+75N80CTtrV52uO10Zv25lfUO+VNEeXO/esh22t9wqa
48GPF58NXl3v5TTHdQFNN+1cUO+lN8eNExf+HTm13ktojpPiFqa0TqJ8zbHs
wl++q4ZQvuaIB57p9e1D+Zqj4lTa1wWdKV9zLJ/64FmgivKZ4qmqe6mxQZTP
FJUJC511vSifKR4vHuwWLqN8pmg9ZnzGN0vKZ4rDF21r3K8p5TPF/R1MPHvo
UT5T7HAx0ebpN9v6fKZYrVSj/KNtfT5TXPzYeHfTN7b1+Uxx5eyu0q3VtvX5
THB8zaTHL6ps6/OZ4E3DsiXVj+q9AhM8eGZsyJaKei/HBAe/v5dldb/eSzfB
Xr6mH365W+8lmKB5yZ/tW9yp96JMcG0naW31bcpngjp5txoPuUP5TLDHnw+k
a+5SPhNEL4/IlfcpTzOUHfMLi/mXvn4zjDUtdSl9TF+vGQZcSz1j9pT8Zvg6
JWuw2UvymuH4pwmnL9eS1xR7xYS0i/xEXlNUbT90KKUB9dsUPYwfLexlQK93
U1wUY5X/2JRe36bY+OqK1Y629Hoa47sZ3X6VuNHrZ4xvzUznzvQjzxi3jvge
ta4FecbYedRvyV0jyTPGS/2u/bKoJ3lGmPF204XoePKMMPZBweKsRPKM8P6Q
9LPd0sgzwtKgmbGp88kzwtH/3bhiuJq8JugZ2DLx01bymuDbjiFOqgPkNUFD
XLHx8mnymuDzKpvBm8rIa4Lnd41du/sxeYY4sn2nflVvyTPELSt3T+nQiH6+
DfFu3bzDxy3oemOIzxp33tVBTtcXQ0wqOnbjGr2/KzHAFq1e5fcT3r8Y4Lu2
sOoavX9IMMCOMdM++o0gzwBXjmzeZsRk8gxw6vv295Lnk9cYDZ6Mj1dlk9cY
H0bHjTi/jbzG+KZdn+O6h8hrjM9mTIuqOkNeY6wd/kg5vIw8fYy/kXUu7SF5
+tjq94XrrGvI08cz9+cuDP1Knj7udji475IB3Y/0MfaqatF1C7r/6OH2sGX/
RjjR/UYP7/WY+q+pgu4vetgtSm4bFkL3Ez28k7ll/h4VeXo4fd2wrLG/kNcI
966Ikk7uTl4jnPv3zLHHfyWvEfpb1Ca3iiOvEf56Y+aYmt/Ia4QGu29GXh9B
ni6u/PRvfFUiebrYv+7lLpdk8nTxb/g9f9448nRxtH7IeNPx5Oni0fL1O9Tj
yWuIJ09UzVs+nryG2Nh/dEVGCnkNsa7NQNvcseQ1xDmtdcPujyGvIb47nl/S
bhR5OnjncHO9Kwnk6SDmjcybP5g8HXQ++65hcn/ydPCaQ7j+wl7k6eCUJgc8
7kSR1wCHrGs7ZkR78hqgrOWX4aEtyWuABUMvK7oFkNcA5cdW9imQk9cAa87d
/jraljwJfghrdWBuM/IkuHn3mDk6DcmT4JPEpw+r39H5IsGola32dX1C558E
Bx62CPO9Tefbd/UmyQer7Av08d/V+yO3Rq08RufnN3Xy/h5O/rvpfPym1rk4
2ytlHXnf1C8en2szcjF5X9VjO/gm2U8j76s6/rdF39ckkvdFva5wY9yL/uR9
UVd/tnKQdSHvi1o5sc+zNi3I+6xuNL/zrN6e5H1Wq9tZ7UmyJu+TWhJR2DJH
n7xP6oznm6vvvafryyf1MP+4SZ0q6XpSp57t5pZWdZ2uR3XqcbPWpJw6Q9ef
j+qYX+YeeSJcvz6q3+7aOWFIHnkf1b/9eiarpXC//6BO1Nl4avp88j6om3Ya
lBiSRt579asFb7YmCtfX9+rpE9QB3vHkvVdPu7I4ZUpP8t6p95zc+XtCJHnv
1M3v9tn1tgV5b9Vl56b19fUn763aeuJxe1s5eW/Vd/xOeJ60I69W/UTnnYeX
OXm16vajV0KsEXlv1Jkujoa9G5H3Rh05ynmp83e6v71Rz4ZpHYrr6H72Wj0i
4HuT9u/ofvharZOZ6r7hNd3/atQrvdrA7Zd0/6xRL7vVdNCHavJq1FffT6/5
8Jw+/5Xacu+5wrvP6eNfqheh5cP//f7w8+u9UJcPinjR8yX51eqKM0bHH9aQ
V61+1Fi9POYtec/VSxQxTTZ/JO+Zulm6jvelr+Q9Vd/o2bX31Yb0/T9Rl65I
6bXdkPp7orbdObB/t+bUV5V6+rDaxkU21E+letKF+6Neu1C//6n/eXlI76EP
eY/Vr5+uKpsfRt5j9dj8xt3uR5D3SH3N4Lcxt6PJe6h2DhhfOH4Aef+qPyYt
aLtlJHkVau9H53bHTyKvQv00tRzWzaXPv6/eO6HsQc8V9PF31QP6T5FO3Exf
7476D8vdPl/2kV+uHv7Q3OL2SfJuqaXxxgt0S8m7oR5sua9J8iPyytQ7F0tr
TN6SV6peULV3yB1d+vm8qv7jS+HYUxb083tFfbLoisVxOf18lqin71zR4n/P
U39+/Hl19peos/t/oZ/XYvWdgau2rYmln+9T6ph9RmWD6fmaBNU2x5/3+5ZG
n1+oTuyeO2LoIvr4AvWWixHd59Pzqpwdarvzn7PidtFxjvrUkdAXd44I1z/J
nePFvd6dF/6/6r8ZasPcW8Lnq6w3Bq2/Win4KvNXe97OeCt8fdVdo6QeGxvQ
9RlVpzsNGKBoStfvUyqLtUUe1jZ0PS5WwcO1LQcIz2/Oqyofnlte40fX8xLV
qfmbtl4MJ++Kas/AxPHV7ejjr6oO9+w+O7IL+aWqzh2+PLrekz6/TLXidXnY
ylj6ejdUXt3uH54RT94tlTrnReDyoeSVqzbvu2pSPIK8O6rQXIy1TSTvrmrW
/LH7l4wh777qlw1FIxySyatQhdZcG3Q+mT6+QnWkxSPPpcnk/6vqMmrs2yTh
ec9DlfUKmxWJo+nrPVK5/Plqesbv5D1WXQ+ILVEnkPdYtefhPKXtEPL+UwUt
GWvw5wDyKlXtjw9sE9mHvCpVVKFOf4do8p6oIpcGT/PsSN4T1ehUv16j25D3
VLVp0ii7miDynqniPR3XHvYi77mqpH1P6SVH8qpVv0dlx4WZk1et6j0iedd3
ffJeqOLnRxcoPtP5/FK1OSB21bkXdP68UsGKC7fvPqDzr0b12zGXhJSr9PE1
qk+Pv01YdZJ+XmpUY5yKsrsX0Oe/Vg1Uv96av5nOv9eqDU+WHzyQRd4blXOA
of2k2eS9USXdsR/4ZRx5b1QDCne69BhCXq2q0dbubWb2IK9WFZbbMCsbyHur
cjy4xGqz8Pe2tyrL08bn8x3Ie6vqFTN08wlj8t6pvuUfyn7xRbh/qZp2ezO/
VbVwf1MNvdkn/Mgd4f6nsl3gETXugnB/VP0WmRSWfFS4f6p0De61Ve8S7q+q
lstvJ//+p3D/VRlKTiyculi4P6scqzoYSmYI92/V+0BH6+/Jwv1dVebxePbs
34T7v8pwjv/xVX2E3w9U+YuaXmzbmbxPqvjT+dGL25D3SfVi+29jZirJ+6zq
k93stpsneZ9Vr56cPDPTkbwvqs6XSv9da0neF5VqSqdf05qS90W1ZNOuU876
5H1VTfELDV4jIe+r6sbpNPf/PtH97ZvKqv3AdP33dD/7proQvWyx7hu6H35T
eY9O1nnwku5/31UXrXq9zxbun99Vn891fqR8Tp4EZJuitv79jD5eAp5Wd1Kb
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
        "]],
       FontFamily->"Arial"]}, 
     {RGBColor[0.571589, 0.586483, 0.], PointSize[
       NCache[
        Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
      StyleBox[LineBox[CompressedData["
1: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
bMfqM8NJ+eG/fFux+swwrebgYzHNWX1m+GpNkwbXm7D6zLBxWGfPjX6sPlN8
PdhDesab1WeKDbL77Gjtyeozxfvrrk2XKVl9pmgX5Wzcx43VZ4qyzlbzvruw
+kzRtzTg008nVp8plh2fYR7vyOozxYdzIkb4y1h9pnjZIipkhAOrzxS7Rj/Y
Wt+B1WeC/hfMw60dWH0m2HTP8sNLHFh9JnjlkqPDWOZlmOD1Z0vGn3Jk9Zng
WL8n/cc7s/pM8Nuxde1WurL6TPD02ZbBMgWrzwT7HnIwNvVg9Zng+0CNZpgX
q88EC+6saOjmy+priCbjRyeGBLD6GqK8iZVZQVNWX0Nc3/1g5BYNq68hmh/o
GVnahtXXEA80Tno1LIzV1xBV2V0OduzM6muIy85e+vFPNKuvIT75PqOsZh9W
X0M8I3vof2kAq68hTv95dM3dYayeBuhXcnec21j28xvgj6g3H/cmsZ/XAFOe
z5Um8PO7Aa74PvxgzDzmNcBdG6sGjF3KvPpYb+KBXfszmFcfMdbnYf3NzKuP
Rk2eBs3Zxbz6eLnY77ZZDvPqY2H7fcf3HmdePawX3vNOlzPMq4cth9g2+MKe
l+LrYfDBFoGrbzKvHr6N1HNq/IB59fDxyJCNuRXMM0bvOU3/cX3LPGMs3yvN
mvSFecaYsvjlhx2/mWeM7fpD//1G7PpnjHXufa05rwG7HtfFd3Wq9Dwbsetv
XWzncHznSnt2va2LGqnbYGT3g+q6GNij7PpWFfPq4sQGtw60UDOvDn7Yu/zb
3CDm1UGHPtNLpmuYVwfrHig7ZNOWeXUw+X25d68w5tXBmYGd1UGdmFcb3d66
PDsQybzaaNv1t/bf7syrjefWREwb1It5tfHOzTae/xu//nq1sUb/3Y378Puz
WnigZ9cm2QOYVwvb9OzbZfYg5tXCK77t71fEM68Wpo9Zs/oKGy8ltXDj0SFr
WwxhnhGuV8/oqeb3d0bYYUf7HXsGM88IZ5QNzd3DPSO0GmZi4jeIeUb46sW3
HS0HMM8QI2e4nr8dyzxDzP3azOZrH+YZYk5p7ratPZlniC5z1l14GM08Q7T8
2igkuyvzDHDMr0xVvY7MM8Dsd2+eG7DxOd4A473XBq1pzTwDVJpN87rcnHkG
2LwmumYFMk8fu73KPSf3YZ4+VjYfUitKyTx9POnyUhrgzDx9vLhh5NgrNszT
x7YLXPPl5syriaduPP7Ykj//1ERz53RnN/b8FF8T/XfNzLj3nZ3PNbFeydgL
Q6rY56Mmzrm5quP1l+zzoYfRJX3vOzxmnw89/LbNpX2PEvb50EO/+Ivj/rnK
PD3cOjK4xzY+v6aHPQdff1d4ink10GDqWXify7waOBamtFfsYV4NfKv3WDJu
K/Nq4PMOhVGla5lXA9f38ZcNSmeeBNt1LJVZLWCeBE1Pp3z79g/zJBifu01l
PoV5EsxR/q43LJF5ElzSNq5QL4F9/29tevfFHZ8MZP/+t/Zuu7A4877s5/3S
ZmbOTl7dnfm/tI4jLr4a34V5v7QPK6+vOxDOvJ/ai187tO4cwryf2vUX3kF0
S+b90LpsP7KtsBnzfmjP5I1Q7eDj7w9tUtCkwO9+zPuujTvy/FK+D/O+a1OD
S1brN2beN63ZKvNHWhXzvmk7mdVb+EXJvG/a8v7ODnvcmVetjZyoOfSIj2fV
2hGrTuitVDDvq7aqaGfMBQXzvmpbTuqXOd2deV+1XZYMiz7Ix/sv2rlFl9IH
qpj3RZuSvbr2ci/mfdYernVDT+PDvM/aRQvzBw3wY95nrU3TKbm/Apn3SSvP
KTSr34x5n7TLPg5uvQiY91FbuXXlriltmfdRu7nOo6jrYcz7qO3SL/T7ws7M
q9Le/3Hg504+PlZpX2cuGu3Yh3kftLUK79i8HcC8D9oRD1sn1xvOvA/a5Pd7
Sifw8fG9tqv+eU/Xycx7rx0zobqZ6T/Me6f1hUFrA+cz753W+X3j7EXLmPdO
62L6cEfDtez732rnj32cdXgL+/dv/tQTvD4pm/2819r0pzCsay7zK7U/ryWW
BPH73UptwvHhOxV8fvyV9tj380sb8fm6l9oF9gGhv+8w74UW3vZacOcR855r
28+vsF/3knnPtd6jE0tbsfkf9TPtkQ2T9p39zrwK7cZTVll2+ux681TbblZZ
ZWtjdj16opUkDCnxMWfXqyfabZ633pTx54ty7UvXoPIwZ3Z9eqxd3ePk1qFK
5j3SjsnY3zeQzX8UlWlv746avjeQeWXaRuEzj5xvzr7/gfZI8M9aKfz56J52
8eE9eKc9+3ml2l4Hx8/I78D8Eq1x4a1m0JV5d7SbNoaGhUcz75a2tUdE9KMY
5t3Q3vvhNOp3b+YVa+/PDTfY0o9517SD1Otfn49j3lVt+0GNBozl41GRtoFL
r1prB7J/f15r9e7y81Z8vCzQVlUNTxrK5jvU+dqyO+qM+nx8Q23W/Y5Lffn3
52lXWl43v9Wf/fscLRh5wTc+3u3UXmkQsjqzLzvO0JqN8al9kc+/SCRrPmQ9
mdKD/73mwDTzstxu/Ps1Y0MGmk7tzH3N09gx76+F85+vWVTu2el4CK9PE/5t
anSzlrx+ze4F+XNigvnvpwnv7JvbyJ///pqWE4p+TfHi+WjeOHldXuDG89Nk
9LS8HiHj+WpWGx2tPmPF89c8qn1r1LeG/P9Hkzxg74qqWvz/T/Py1NGfhyX8
/1dzZn+z+PCv7Pwv0RwPPJPzv/nP/84PTXfrUa/0nrHPwz3NjVIPTz/+PPpA
s9mydE9XPv9cplHa9j8wiM/Hl2leFhxIGZfP/Eeay+MKJqYeY9//WLPFJev2
5gPs55VrQg7GPb+6g3lPNDPd7R82ymTeE42jzOPe9FXMe6p5/F351Jg/f1Zo
vn/t8vBcKv98apofxHl50/nnV3Ol+NfEpxP451tzc/Ya48hR/POvKfvxLrHW
EH590GRNdtlYN45fPzS/HrfW9O/Jry+a3Q+2o0k3fv3RNO8xL8ShI78+aRa/
uZG1uD2/fmk+nWkRP7g1v75psh9nHNrVgl//NM2tJwzt05RfHzXGAUY1ZvHn
o3eajS+6Z9ir+fVVs6Dwwltfb3791SQ0fdX3tCe/PmuCmy25d9mDX781d1p1
/Rqj5Nd3jXl61N2B7vz6r7n7ZGirdwo+Pmjq/Jgx54eCjx+a40vHr5rnzscX
zdNNgV9Wcu+jZuiLpvnOfLz7pHljFbbfy4uPX5rz1TuMD3vz8U3zZMqCf4+o
+fin+dLnYTefQD4+ajT34185BPPxU1O10ik8mT8PftEMT6n1oGMbPv5qNhw3
yJ0TysdnTb3Y9gvknfj4rWn16fJ5eRQf3zXmdZsumNWLj/+aBob3Nwb25/cH
mjPL6ixrPpTfP2j2OmXsWjya319oHm9Z+8ltEr//0LyYHNZOkszvTzSjN1q1
NJ3L7180wzPeRXdfwu9vNPd/LL9xbjW//9Esq3Ao77eJ3x9puj9Zt8hiF79/
0tTeePTi44P8/kpzIW3mNDzO7780U5/6Tdl+ht+fabbWNVu55BK/f9NkrgrY
OO4Wv7/TRKiHjuDvZyQSMJ/0/nHD5/z+EDbVjqo69o7fP0JvdZ2drav5/SV8
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
/Fvrcvn75xw5RB57AB66/Y1gbvp5ladu/yNMlJw51Vi3PxImJlUc9dHtn4Tf
LU7MU+v2V8Ko7CF+/rr9lzC/6+3jAbr9mdBqkNapiW7/Jjz5kTU8SLe/E1xU
Faub6vZ/wtbKndnBuv2hMKT8845muv2jcPHX7sXNdftLYdbblP4tdPtPQT7d
1lnD83ODY6feXNfw/NzgnHOvROD5uUHM2CyDljw/N+i1+sf8ljw/N9DGj9Vv
xfNzg/3eRomteH5u4Ncl63Yrnp8bpKxWqFvz/NwgZHNUamuenxt8sXh6rTXP
zw2WXJ9h2Ybnp4D1hv92a8PzU8BZ/8CFbXh+CnisGoRteH4KmP/09Js2PD8F
2PY8ZdWW56cAh/ATLdry/BTw7LNVXFuenwI0ZxTJbXl+CvhV1mRdW56fAhQ3
F+dyL1kBo+qOLOJemgL2d6r/iHsZCmjUJquKe1kKmHspXl+wfxseTpxqJtjf
DcuuN3AU7P+G4IK2noL94TC7XNNEsH8cPu62bSXYXw4fbnwJE+w/h8WzX3YV
7E+HiMV1ewr2r0OPzaNiBfvbYeE093jB/neYah02XLA/Hu7dLBsl2D8Pq5d/
TxTsr4fTT7MmCvbfwx7HN5MF+/MhJrV0mmD/PiR1mZQs2N8PPneK/hHs/4fz
68pSBP0BYEL/Y6mC/gEwWBM7V9BfAAL33J4n6D8AD1e5LhD0J4BewzumCfoX
gLEseqGgvwFUtYVFgv4H8K5+w8WC/gig1+PcYkH/BDh4YPgSQX8F2D/4xxJd
fko4NmfqUl1+Srj77PVSXX5KMFZ1XabLTwnRF3ct0+WnhIHm1ct0+Skh16dF
ui4/JUR5TknX5aeElh/3p+vyU8K4mLJ0XX5K2GxVZ7kuPyXk3PFarstPCR88
Oy3X5acEy3XDl+vyU0KN1SnLdfkpIXbeGp1XpQTboj06T+IB6w+c0nnGHlA9
85LOk3rA56l3dZ7cA77efarz1B5w69Jbnffnbil95ledF+EBRnYSYX8RmHDa
UNh/BCyWGAv7k8A/mSbC/iWgqGsp7G8CO55Ihf1PQKaxE/ZHgRlKmbB/Cpw9
5CTsrwJNXroI+6/AhptyYX8WGJqsEPZvgYcf3IX9XUDj5yHs/wIPwlTC/jAQ
2sxT2D8Gout5CfvLQKvTXsL+M3Cib2Nhfxr49bSxsH8N3OrpLexvA0e03sL+
N/CvpY+wPw5cjfMR9s+B6Zt9hP11wO+uj7D/DrjV8RX254HBal9h/x64H+0r
7O8DUeN9hf1/YMZiX2F/IPiwTeBVqECdJ/CqVJBzXuBJPOHWbYFn7AnvygWe
1BPC3gg8uSe4fBF4ak849EvggSe4G4j6J0F2HVF/JejXQNR/CeLMRP2Z4KKl
qH8T5EhF/Z1AZSvq/wQh9qL+UNBAJuofBemOov5ScN9J1H8KPjqL+lPBIxdR
/yrY5SrqbwXd5KL+V1AuF/XHgj5uov5ZkO8m6q8F1gpR/y0YoBD154JNClH/
LripEPX3ghri/l8gF/cHg7bi/mHQT9xfDMaL+4/BHHF/Mlgp7l8GW8T9zWCv
uP8ZHBH3RwOtuH8anBX3V4OL4v5rcEXcnw2Kxf3b4Ja4vxvcEfd/g1Jxfzi4
J+4fBw/E/eXgobj/HJSJ+9PBI3H/Ongs7m/Hj//m1xjKxf3x+PHf/HTHf/Nr
DE/E/ff48d/8dMd/89Md/81Pd/w3P28g/QFB3K9Nd/z/32+mO/6br+74/zkZ
8eTEUxFPTbwg4gHxQogXQbxI4sUQL5Z48cRLIF4i8ZKIl0y8VOKlES+deBnE
yyReFvGyiZdDvDziIfEKiFdEvGLilRCvjHgVxKskXhXxqokn8SHnn4/YM/YR
e2Y+Yk/qI/ZkxJMTT0U8NfGCiAfECyFeBPEiiRdDvFjixRMvgXiJxEsiXjLx
UomXRrx04mUQL5N4WcTLJl4O8fKIh8QrIF4R8YqJV0K8MuJVEK+SeFXEqyae
xJecf75iz9hX7Jn5ij2pr9iTEU9OPBXx1MQLIh4QL4R4EcSLJF4M8WKJF0+8
BOIlEi+JeMnESyVeGvHSiZdBvEziZREvm3g5xMsjHhKvgHhFxCsmXgnxyohX
QbxK4lURr5p4EjU5/9Riz1gt9szUYk+qFnsy4smJpyKemnhBxAPihRAvgniR
xIshXizx4omXQLxE4iURL5l4qcRLI1468TKIl0m8LOJlEy+HeHnEQ+IVEK+I
eMXEKyFeGfEqiFdJvCriVRNP4kfOPz+xZ+wn9sz8xJ7UT+zJiCcnnop4auIF
EQ+IF0K8COJFEi+GeLHEiydeAvESiZdEvGTipRIvjXjpxMsgXibxsoiXTbwc
4uURD4lXQLwi4hUTr4R4ZcSrIF4l8aqIV008iT85//zFnrG/2DPzF3tSf7En
I56ceCriqYkXRDwgXgjxIogXSbwY4sUSL554CcRLJF4S8ZKJl0q8NOKlEy+D
eJnEyyJeNvFyiJdHPCReAfGKiFdMvBLilRGvgniVxKsiXjXxJAHk/AsQe8YB
Ys8sQOxJA8SejHhy4qmIpyZeEPGAeCHEiyBeJPFiiBdLvHjiJRAvkXhJxEsm
Xirx0oiXTrwM4mUSL4t42cTLIV4e8ZB4BcQrIl4x8UqIV0a8CuJVEq+KeNXE
kwSS8y9Q7BkHij2zQLEnDRR7MuLJiacinpp4QcQD4oUQL4J4kcSLIV4s8eKJ
l0C8ROIlES+ZeKnESyNeOvEyiJdJvCziZRMvh3h5xEPiFRCviHjFxCshXhnx
KohXSbwq4lUTT9KEnH9NxJ5xE7Fn1kTsSZuIPRnx5MRTEU9NvCDiAfFCiBdB
vEjixRAvlnjxxEsgXiLxkoiXTLxU4qURL514GcTLJF4W8bKJl0O8POIh8QqI
V0S8YuKVEK+MeBXEqyReFfGqiScJ4sf/BygfpHQ=
        "]],
       FontFamily->"Arial"]}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->Automatic,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.86541357846204*^9, 3.86541363269973*^9, {3.865417978561264*^9, 
   3.865418007918109*^9}, 3.865418053903922*^9, 3.865418359054146*^9, 
   3.865418496696948*^9},
 CellLabel->
  "Out[230]=",ExpressionUUID->"6c525e23-68d4-4f3c-936e-5e5dc543fc92"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Rayleigh-Ritz Method (toy model)", "Subsection",
 CellChangeTimes->{{3.865414732631936*^9, 3.865414746343854*^9}, {
  3.865418744460534*^9, 
  3.865418747372932*^9}},ExpressionUUID->"a92b9256-56cf-4ac5-bf02-\
535f3f7c263f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["a", "\[Dagger]"], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.865408723663417*^9, 3.865408766284192*^9}, {
  3.865408868345871*^9, 
  3.865408875369772*^9}},ExpressionUUID->"7c255619-1473-4c1a-b807-\
5322b7741df0"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"SuperDagger", "[", "a", "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.865408766511269*^9},
 CellLabel->
  "Out[1]//FullForm=",ExpressionUUID->"a6b0df3f-1b23-4457-a121-60f61993efd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "\[CenterDot]", "b"}], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.8654088179341917`*^9, 3.8654088572605124`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"71ce49ec-4eae-4cf6-90d6-995bff3c38f1"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"CenterDot", "[", 
    RowBox[{"a", ",", "b"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.865408857599496*^9},
 CellLabel->
  "Out[2]//FullForm=",ExpressionUUID->"d8a4a7e6-69b9-4979-9cc4-8a6ecbbbe012"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CenterDot"}]], "Input",
 CellChangeTimes->{{3.865408878318441*^9, 3.8654088816762657`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"5aa73839-6b4a-41dc-b0a9-3538e83af073"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/CenterDot",
              ButtonNote->"paclet:ref/CenterDot"],
             "\"paclet:ref/CenterDot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CenterDot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"]\\\"}]\\) displays as \\!\\(\\*RowBox[{\\\"x\\\", \\\"\[CenterDot]\\\", \
\\\"y\\\", \\\"\[CenterDot]\\\", \\\"\[Ellipsis]\\\"}]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/CenterDot", 
                    "paclet:ref/CenterDot", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/CenterDot.\
html"], None}, "http://reference.wolfram.com/language/ref/CenterDot.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`CenterDot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{19., {6., 13.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{19., {6., 13.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/CenterDot",
              ButtonNote->"paclet:ref/CenterDot"],
             "\"paclet:ref/CenterDot\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CenterDot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"]\\\"}]\\) displays as \\!\\(\\*RowBox[{\\\"x\\\", \\\"\[CenterDot]\\\", \
\\\"y\\\", \\\"\[CenterDot]\\\", \\\"\[Ellipsis]\\\"}]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {5., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {5., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"CenterDot\", \"[\", RowBox[{StyleBox[\"x\", \"TI\"], \",\
\", StyleBox[\"y\", \"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"]\"}]\) displays as \!\(\*RowBox[{\"x\", \"\[CenterDot]\", \"y\", \"\
\[CenterDot]\", \"\[Ellipsis]\"}]\).", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/CenterDot", "Web" -> 
      "http://reference.wolfram.com/language/ref/CenterDot.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "System`CenterDot"], False]]], "Output",
 CellChangeTimes->{3.865408882142577*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"d4451c26-455f-4b8a-a445-7d041c651cae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CircleTimes"}]], "Input",
 CellChangeTimes->{{3.865408893342374*^9, 3.865408899481349*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"ee48fdcb-16e3-4ce7-8358-0f5d94405611"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/CircleTimes",
              ButtonNote->"paclet:ref/CircleTimes"],
             "\"paclet:ref/CircleTimes\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CircleTimes\\\", \\\"[\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"]\\\"}]\\) displays as \\!\\(\\*RowBox[{\
\\\"\[CircleTimes]\\\", \
\\\"x\\\"}]\\).\\n\\!\\(\\*RowBox[{\\\"CircleTimes\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"]\\\"}]\\) displays as \\!\\(\\*RowBox[{\\\"x\\\", \
\\\"\[CircleTimes]\\\", \\\"y\\\", \\\"\[CircleTimes]\\\", \
\\\"\[Ellipsis]\\\"}]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/CircleTimes", 
                    "paclet:ref/CircleTimes", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/CircleTimes.\
html"], None}, "http://reference.wolfram.com/language/ref/CircleTimes.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`CircleTimes\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{19., {6., 13.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{19., {6., 13.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/CircleTimes",
              ButtonNote->"paclet:ref/CircleTimes"],
             "\"paclet:ref/CircleTimes\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CircleTimes\\\", \\\"[\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"]\\\"}]\\) displays as \\!\\(\\*RowBox[{\
\\\"\[CircleTimes]\\\", \
\\\"x\\\"}]\\).\\n\\!\\(\\*RowBox[{\\\"CircleTimes\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"]\\\"}]\\) displays as \\!\\(\\*RowBox[{\\\"x\\\", \
\\\"\[CircleTimes]\\\", \\\"y\\\", \\\"\[CircleTimes]\\\", \
\\\"\[Ellipsis]\\\"}]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {5., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {5., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"CircleTimes\", \"[\", StyleBox[\"x\", \"TI\"], \"]\"}]\) \
displays as \!\(\*RowBox[{\"\[CircleTimes]\", \"x\"}]\).\n\
\!\(\*RowBox[{\"CircleTimes\", \"[\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", \
StyleBox[\"y\", \"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"]\"}]\) displays as \!\(\*RowBox[{\"x\", \"\[CircleTimes]\", \"y\", \"\
\[CircleTimes]\", \"\[Ellipsis]\"}]\).", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/CircleTimes", "Web" -> 
      "http://reference.wolfram.com/language/ref/CircleTimes.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "System`CircleTimes"], False]]], "Output",
 CellChangeTimes->{3.865408900180703*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"2968f83a-d6ef-43c8-9983-26bd663ed3ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "\[CircleTimes]", "b"}], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.8654089217656317`*^9, 3.865408930252756*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"98d46f22-c572-4047-931a-c5ff8a5c4efa"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"CircleTimes", "[", 
    RowBox[{"a", ",", "b"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.865408930873796*^9},
 CellLabel->
  "Out[5]//FullForm=",ExpressionUUID->"68bb7114-dd86-4bdb-a059-e81590fde21e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"a", "+", 
     RowBox[{"2", 
      SuperscriptBox["a", "\[Dagger]"]}]}], 
    SqrtBox["2"]], "\[CenterDot]", 
   FractionBox[
    RowBox[{"a", "+", 
     RowBox[{"3", 
      SuperscriptBox["a", "\[Dagger]"]}]}], 
    SqrtBox["4"]], "\[CenterDot]", 
   FractionBox[
    RowBox[{"a", "-", 
     RowBox[{"I", " ", 
      SuperscriptBox["a", "\[Dagger]"]}]}], 
    RowBox[{
     SqrtBox["2"], "I"}]]}], "//", "TreeForm"}]], "Input",
 CellChangeTimes->{{3.865408944944395*^9, 3.865408995692936*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"bb09ab51-8969-4839-8eec-ea973052a95f"],

Cell[BoxData[
 InterpretationBox[
  GraphicsBox[
   TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQHeL2IM97OofD2cT+BVbveBwe5u45tif6o/3150s3
/1Zhd4DQ1+0fgcUZHRig4AZY/DtU3XN7GB9izh+4+utQcZj8Q6g4uvobUHPu
aBnaxjiwOKDzYfaiuovdASYPs+/SEimt2ZxcDqj2s6PZxwPnw9TD7DsuxyJ+
6xI/Bh9mP8Q+Ebi5MHmYffFnvjXynBOC8yH+FYTbB9MP40PCXwLNveJo7pPC
UA9znz9z6NNX1dIYfJh7AXxA72Y=
     "], {
      {RGBColor[0.55, 0.45, 0.45], 
       LineBox[{{1, 2}, {1, 12}, {1, 20}, {2, 3}, {2, 6}, {3, 4}, {3, 5}, {6, 
        7}, {6, 8}, {8, 9}, {8, 10}, {10, 11}, {12, 13}, {12, 14}, {14, 15}, {
        14, 16}, {16, 17}, {16, 18}, {18, 19}, {20, 21}, {20, 22}, {20, 25}, {
        22, 23}, {22, 24}, {25, 26}, {25, 27}, {27, 28}, {27, 29}, {29, 
        30}}]}, {
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["CenterDot", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 1],
         TagBox[
          RowBox[{
            FractionBox[
             RowBox[{"a", "+", 
               RowBox[{"2", " ", 
                 SuperscriptBox["a", "\[Dagger]"]}]}], 
             SqrtBox["2"]], "\[CenterDot]", 
            RowBox[{"(", 
              RowBox[{
                FractionBox["1", "2"], " ", 
                RowBox[{"(", 
                  RowBox[{"a", "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["a", "\[Dagger]"]}]}], ")"}]}], ")"}], 
            "\[CenterDot]", 
            RowBox[{"-", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " ", 
                 RowBox[{"(", 
                   RowBox[{"a", "-", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    SuperscriptBox["a", "\[Dagger]"]}]}], ")"}]}], 
               SqrtBox["2"]]}]}], HoldForm]],
        Annotation[#, 
         HoldForm[
          CenterDot[
          2^Rational[-1, 2] ($CellContext`a + 2 SuperDagger[$CellContext`a]), 
           Rational[1, 2] ($CellContext`a + 3 SuperDagger[$CellContext`a]), 
           Complex[0, -1] 
           2^Rational[-1, 2] ($CellContext`a + 
            Complex[0, -1] SuperDagger[$CellContext`a])]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Times", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 2],
         TagBox[
          FractionBox[
           RowBox[{"a", "+", 
             RowBox[{"2", " ", 
               SuperscriptBox["a", "\[Dagger]"]}]}], 
           SqrtBox["2"]], HoldForm]],
        Annotation[#, 
         HoldForm[
         2^Rational[-1, 2] ($CellContext`a + 2 SuperDagger[$CellContext`a])], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Power", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 3],
         TagBox[
          FractionBox["1", 
           SqrtBox["2"]], HoldForm]],
        Annotation[#, 
         HoldForm[2^Rational[-1, 2]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["2",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 4],
         TagBox["2", HoldForm]],
        Annotation[#, 
         HoldForm[2], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox[
             RowBox[{"-", 
              FractionBox["1", "2"]}],
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 5],
         TagBox[
          RowBox[{"-", 
            FractionBox["1", "2"]}], HoldForm]],
        Annotation[#, 
         HoldForm[
          Rational[-1, 2]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Plus", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 6],
         TagBox[
          RowBox[{"a", "+", 
            RowBox[{"2", " ", 
              SuperscriptBox["a", "\[Dagger]"]}]}], HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`a + 2 SuperDagger[$CellContext`a]], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["a",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 7],
         TagBox["a", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`a], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Times", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 8],
         TagBox[
          RowBox[{"2", " ", 
            SuperscriptBox["a", "\[Dagger]"]}], HoldForm]],
        Annotation[#, 
         HoldForm[2 SuperDagger[$CellContext`a]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["2",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 9],
         TagBox["2", HoldForm]],
        Annotation[#, 
         HoldForm[2], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["SuperDagger", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 10],
         TagBox[
          SuperscriptBox["a", "\[Dagger]"], HoldForm]],
        Annotation[#, 
         HoldForm[
          SuperDagger[$CellContext`a]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["a",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 11],
         TagBox["a", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`a], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Times", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 12],
         TagBox[
          RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
              RowBox[{"a", "+", 
                RowBox[{"3", " ", 
                  SuperscriptBox["a", "\[Dagger]"]}]}], ")"}]}], HoldForm]],
        Annotation[#, 
         HoldForm[
         Rational[1, 2] ($CellContext`a + 3 SuperDagger[$CellContext`a])], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox[
             FractionBox["1", "2"],
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 13],
         TagBox[
          FractionBox["1", "2"], HoldForm]],
        Annotation[#, 
         HoldForm[
          Rational[1, 2]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Plus", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 14],
         TagBox[
          RowBox[{"a", "+", 
            RowBox[{"3", " ", 
              SuperscriptBox["a", "\[Dagger]"]}]}], HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`a + 3 SuperDagger[$CellContext`a]], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["a",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 15],
         TagBox["a", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`a], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Times", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 16],
         TagBox[
          RowBox[{"3", " ", 
            SuperscriptBox["a", "\[Dagger]"]}], HoldForm]],
        Annotation[#, 
         HoldForm[3 SuperDagger[$CellContext`a]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["3",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 17],
         TagBox["3", HoldForm]],
        Annotation[#, 
         HoldForm[3], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["SuperDagger", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 18],
         TagBox[
          SuperscriptBox["a", "\[Dagger]"], HoldForm]],
        Annotation[#, 
         HoldForm[
          SuperDagger[$CellContext`a]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["a",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 19],
         TagBox["a", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`a], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Times", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 20],
         TagBox[
          RowBox[{"-", 
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"(", 
                 RowBox[{"a", "-", 
                   RowBox[{"\[ImaginaryI]", " ", 
                    SuperscriptBox["a", "\[Dagger]"]}]}], ")"}]}], 
             SqrtBox["2"]]}], HoldForm]],
        Annotation[#, 
         HoldForm[
         Complex[0, -1] 
          2^Rational[-1, 2] ($CellContext`a + 
           Complex[0, -1] SuperDagger[$CellContext`a])], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox[
             RowBox[{"-", "\[ImaginaryI]"}],
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 21],
         TagBox[
          RowBox[{"-", "\[ImaginaryI]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          Complex[0, -1]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Power", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 22],
         TagBox[
          FractionBox["1", 
           SqrtBox["2"]], HoldForm]],
        Annotation[#, 
         HoldForm[2^Rational[-1, 2]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["2",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 23],
         TagBox["2", HoldForm]],
        Annotation[#, 
         HoldForm[2], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox[
             RowBox[{"-", 
              FractionBox["1", "2"]}],
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 24],
         TagBox[
          RowBox[{"-", 
            FractionBox["1", "2"]}], HoldForm]],
        Annotation[#, 
         HoldForm[
          Rational[-1, 2]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Plus", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 25],
         TagBox[
          RowBox[{"a", "-", 
            RowBox[{"\[ImaginaryI]", " ", 
              SuperscriptBox["a", "\[Dagger]"]}]}], HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`a + 
          Complex[0, -1] SuperDagger[$CellContext`a]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["a",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 26],
         TagBox["a", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`a], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Times", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 27],
         TagBox[
          RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            SuperscriptBox["a", "\[Dagger]"]}], HoldForm]],
        Annotation[#, 
         HoldForm[Complex[0, -1] SuperDagger[$CellContext`a]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox[
             RowBox[{"-", "\[ImaginaryI]"}],
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 28],
         TagBox[
          RowBox[{"-", "\[ImaginaryI]"}], HoldForm]],
        Annotation[#, 
         HoldForm[
          Complex[0, -1]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["SuperDagger", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 29],
         TagBox[
          SuperscriptBox["a", "\[Dagger]"], HoldForm]],
        Annotation[#, 
         HoldForm[
          SuperDagger[$CellContext`a]], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["a",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.018181818181818184`],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 30],
         TagBox["a", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`a], "Tooltip"]& ]}}],
    Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxTTMoPSmViYGCQA2IQHeL2IM97OofD2cT+BVbveBwe5u45tif6o/3150s3
/1Zhd4DQ1+0fgcUZHRig4AZY/DtU3XN7GB9izh+4+utQcZj8Q6g4uvobUHPu
aBnaxjiwOKDzYfaiuovdASYPs+/SEimt2ZxcDqj2s6PZxwPnw9TD7DsuxyJ+
6xI/Bh9mP8Q+Ebi5MHmYffFnvjXynBOC8yH+FYTbB9MP40PCXwLNveJo7pPC
UA9znz9z6NNX1dIYfJh7AXxA72Y=
      "]]& ],
   AspectRatio->NCache[Rational[3, 11]^Rational[1, 2], 0.5222329678670935],
   FormatType:>StandardForm,
   FrameTicks->Automatic,
   PlotRange->All,
   PlotRangePadding->Scaled[0.1]],
  TreeForm[
   CenterDot[
   2^Rational[-1, 2] ($CellContext`a + 2 SuperDagger[$CellContext`a]), 
    Rational[1, 2] ($CellContext`a + 3 SuperDagger[$CellContext`a]), 
    Complex[0, -1] 
    2^Rational[-1, 2] ($CellContext`a + 
     Complex[0, -1] SuperDagger[$CellContext`a])]],
  Editable->False]], "Output",
 CellChangeTimes->{3.865408996009849*^9},
 CellLabel->
  "Out[6]//TreeForm=",ExpressionUUID->"dadc56d4-b2f9-442d-b8eb-c5467e726d1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"a", "+", 
     RowBox[{"2", 
      SuperscriptBox["a", "\[Dagger]"]}]}], 
    SqrtBox["2"]], "\[CenterDot]", 
   FractionBox[
    RowBox[{"a", "+", 
     RowBox[{"3", 
      SuperscriptBox["a", "\[Dagger]"]}]}], 
    SqrtBox["4"]], "\[CenterDot]", 
   FractionBox[
    RowBox[{"a", "-", 
     RowBox[{"I", " ", 
      SuperscriptBox["a", "\[Dagger]"]}]}], 
    RowBox[{
     SqrtBox["2"], "I"}]]}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.865409018249688*^9, 3.865409019884425*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"ddbf4e4d-8437-4984-9c6f-45bec73a557e"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"a", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "\[Dagger]"]}]}], 
   SqrtBox["2"]], "\[CenterDot]", 
  RowBox[{"(", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"a", "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["a", "\[Dagger]"]}]}], ")"}]}], ")"}], "\[CenterDot]", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{"a", "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["a", "\[Dagger]"]}]}], ")"}]}], 
    SqrtBox["2"]]}]}]], "Output",
 CellChangeTimes->{3.865409020143509*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"899131fb-d90d-4a59-8d1a-3675f081a6e1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "n", "]"}]], "Input",
 CellChangeTimes->{{3.8654147901400747`*^9, 3.8654147945048227`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"367e6b11-a279-4db0-8c3f-de5c6a43064d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ket", "[", "n", "]"}]], "Input",
 CellChangeTimes->{{3.865414778895557*^9, 3.865414783496331*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"80afbfb9-a609-48c4-8613-85c5a650ad0f"],

Cell[BoxData[
 TemplateBox[{"n"},
  "Ket"]], "Output",
 CellChangeTimes->{{3.865414785026435*^9, 3.8654147979132032`*^9}},
 CellLabel->"Out[77]=",ExpressionUUID->"6209efbe-e6d9-4bd1-9411-15821a5d271f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", 
  TemplateBox[{"n"},
   "Ket"]}]], "Input",
 CellChangeTimes->{{3.865414880274473*^9, 
  3.865414918790595*^9}},ExpressionUUID->"1d41918a-bd52-426f-ab98-\
3ea5482e7408"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalP]", "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "\[Dagger]"], "-", "a"}], 
    RowBox[{
     SqrtBox["2"], "I"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalX]", "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "\[Dagger]"], "+", "a"}], 
    SqrtBox["2"]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.865414963589452*^9, 3.865415000377941*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"fc1948db-70f2-4399-aca0-9f52aca38bb0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"a___", "\[CenterDot]", 
       RowBox[{"(", 
        RowBox[{"b_", "+", "c_"}], ")"}], "\[CenterDot]", "d___"}], "->", 
      RowBox[{
       RowBox[{"a", "\[CenterDot]", "b", "\[CenterDot]", "d"}], "+", 
       RowBox[{"a", "\[CenterDot]", "c", "\[CenterDot]", "d"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"a___", "\[CenterDot]", 
        RowBox[{"(", 
         RowBox[{"b_", " ", "c_"}], ")"}], "\[CenterDot]", "d___"}], "/;", 
       RowBox[{"NumericQ", "[", "b", "]"}]}], "->", 
      RowBox[{"b", 
       RowBox[{"(", 
        RowBox[{"a", "\[CenterDot]", "c", "\[CenterDot]", "d"}], ")"}]}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"b___", "\[CenterDot]", "a", "\[CenterDot]", 
       TemplateBox[{"n_"},
        "Ket"]}], "->", 
      RowBox[{
       SqrtBox[
        RowBox[{"n", "-", "1"}]], 
       RowBox[{"b", "\[CenterDot]", 
        TemplateBox[{
          RowBox[{"n", "-", "1"}]},
         "Ket"]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"b___", "\[CenterDot]", 
       SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", 
       TemplateBox[{"n_"},
        "Ket"]}], "->", 
      RowBox[{
       SqrtBox["n"], 
       RowBox[{"b", "\[CenterDot]", 
        TemplateBox[{
          RowBox[{"n", "+", "1"}]},
         "Ket"]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CenterDot", "[", "a_", "]"}], "->", "a"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Note", " ", "that", " ", 
    TemplateBox[{"1"},
     "Ket"], " ", "is", " ", "the", " ", "vacuum", " ", "in", " ", "these", 
    " ", "conventions"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.865415142589609*^9, 3.865415149962151*^9}, {
  3.8654152020710897`*^9, 3.865415263852202*^9}, {3.865415369488689*^9, 
  3.865415448586157*^9}, {3.865415485161026*^9, 3.865415524992312*^9}, {
  3.865415648226223*^9, 3.865415693805203*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"ee5731cd-92d4-45e6-b93a-821b10c52aef"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"rules", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"before___", "\[CenterDot]", 
         RowBox[{"(", 
          RowBox[{"number_", " ", "operator_"}], ")"}], "\[CenterDot]", 
         "after___"}], "/;", 
        RowBox[{"NumericQ", "[", "number", "]"}]}], "->", 
       RowBox[{"number", 
        RowBox[{"(", 
         RowBox[{
         "before", "\[CenterDot]", "operator", "\[CenterDot]", "after"}], 
         ")"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"before___", "\[CenterDot]", 
        RowBox[{"(", 
         RowBox[{"op1_", "+", "op2_"}], ")"}], "\[CenterDot]", "after___"}], "->", 
       RowBox[{
        RowBox[{"before", "\[CenterDot]", "op1", "\[CenterDot]", "after"}], 
        "+", 
        RowBox[{
        "before", "\[CenterDot]", "op2", "\[CenterDot]", "after"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"before___", "\[CenterDot]", "a", "\[CenterDot]", 
        SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", "after___"}], "->", 
       RowBox[{
        RowBox[{"before", "\[CenterDot]", 
         SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", "a", 
         "\[CenterDot]", "after"}], "+", 
        RowBox[{"before", "\[CenterDot]", "after"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"CenterDot", "[", "a_", "]"}], "->", "a"}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8654169794655447`*^9, 
  3.865416983480701*^9}},ExpressionUUID->"26baed4f-4c6d-4e8c-a886-\
7339e1f263cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{
     "\[DoubleStruckCapitalP]", "\[CenterDot]", "\[DoubleStruckCapitalP]", 
      "\[CenterDot]", 
      TemplateBox[{"n"},
       "Ket"]}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{
     "\[DoubleStruckCapitalX]", "\[CenterDot]", "\[DoubleStruckCapitalX]", 
      "\[CenterDot]", 
      TemplateBox[{"n"},
       "Ket"]}]}]}], "//.", "rules"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.8654150050255632`*^9, 3.865415016361511*^9}, {
  3.8654150493058043`*^9, 3.865415140061047*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"f9dc05d7-0c13-43b1-bbd4-2a1f8c3b8b6b"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", "n"}]}], ")"}], " ", 
  TemplateBox[{"n"},
   "Ket"]}]], "Output",
 CellChangeTimes->{
  3.865415075344646*^9, 3.865415120592423*^9, 3.865415277047514*^9, 
   3.8654153216185513`*^9, 3.865415393597237*^9, {3.865415504381933*^9, 
   3.865415540245624*^9}, 3.8654157039042892`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"422f0875-89e7-429f-b6f5-7b4b8c85e44b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{
     "\[DoubleStruckCapitalP]", "\[CenterDot]", "\[DoubleStruckCapitalP]", 
      "\[CenterDot]", 
      TemplateBox[{"n"},
       "Ket"]}]}], "-", 
    RowBox[{"20", 
     FractionBox["1", "2"], 
     RowBox[{
     "\[DoubleStruckCapitalX]", "\[CenterDot]", "\[DoubleStruckCapitalX]", 
      "\[CenterDot]", 
      TemplateBox[{"n"},
       "Ket"]}]}], "+", 
    RowBox[{"20", " ", 
     FractionBox["1", "24"], 
     RowBox[{
     "\[DoubleStruckCapitalX]", "\[CenterDot]", "\[DoubleStruckCapitalX]", 
      "\[CenterDot]", "\[DoubleStruckCapitalX]", "\[CenterDot]", 
      "\[DoubleStruckCapitalX]", "\[CenterDot]", 
      TemplateBox[{"n"},
       "Ket"]}]}]}], "//.", "rules"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.86541574031684*^9, 3.8654157608963842`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"55d4036e-aee0-43d7-8f3a-6d886c5af17d"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "24"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"5", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "4"}], "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "3"}], "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]], " ", 
     TemplateBox[{
       RowBox[{
         RowBox[{"-", "4"}], "+", "n"}]},
      "Ket"]}], "+", 
    RowBox[{"4", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "39"}], "+", 
       RowBox[{"5", " ", "n"}]}], ")"}], " ", 
     TemplateBox[{
       RowBox[{
         RowBox[{"-", "2"}], "+", "n"}]},
      "Ket"]}], "+", 
    RowBox[{"129", " ", 
     TemplateBox[{"n"},
      "Ket"]}], "-", 
    RowBox[{"258", " ", "n", " ", 
     TemplateBox[{"n"},
      "Ket"]}], "+", 
    RowBox[{"30", " ", 
     SuperscriptBox["n", "2"], " ", 
     TemplateBox[{"n"},
      "Ket"]}], "-", 
    RowBox[{"116", " ", 
     SqrtBox["n"], " ", 
     SqrtBox[
      RowBox[{"1", "+", "n"}]], " ", 
     TemplateBox[{
       RowBox[{"2", "+", "n"}]},
      "Ket"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox["n", 
      RowBox[{"3", "/", "2"}]], " ", 
     SqrtBox[
      RowBox[{"1", "+", "n"}]], " ", 
     TemplateBox[{
       RowBox[{"2", "+", "n"}]},
      "Ket"]}], "+", 
    RowBox[{"5", " ", 
     SqrtBox["n"], " ", 
     SqrtBox[
      RowBox[{"1", "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{"2", "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{"3", "+", "n"}]], " ", 
     TemplateBox[{
       RowBox[{"4", "+", "n"}]},
      "Ket"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8654157645935287`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"5de732cc-f115-4516-868f-a8a49c8f39d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HonKet", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{
      "\[DoubleStruckCapitalP]", "\[CenterDot]", "\[DoubleStruckCapitalP]", 
       "\[CenterDot]", 
       TemplateBox[{"n"},
        "Ket"]}]}], "-", 
     RowBox[{"20", 
      FractionBox["1", "2"], 
      RowBox[{
      "\[DoubleStruckCapitalX]", "\[CenterDot]", "\[DoubleStruckCapitalX]", 
       "\[CenterDot]", 
       TemplateBox[{"n"},
        "Ket"]}]}], "+", 
     RowBox[{"20", " ", 
      FractionBox["1", "24"], 
      RowBox[{
      "\[DoubleStruckCapitalX]", "\[CenterDot]", "\[DoubleStruckCapitalX]", 
       "\[CenterDot]", "\[DoubleStruckCapitalX]", "\[CenterDot]", 
       "\[DoubleStruckCapitalX]", "\[CenterDot]", 
       TemplateBox[{"n"},
        "Ket"]}]}]}], "//.", "rules"}], "//", 
   RowBox[{
    RowBox[{"Collect", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Ket", "[", "_", "]"}], ",", " ", "Simplify"}], "]"}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.865415881533759*^9, 3.865415907981855*^9}, {
  3.8654159391866817`*^9, 3.8654159423543987`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"1f57ccd7-8e56-4ceb-873e-ea8a57a025e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["5", "24"], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "4"}], "+", "n"}]], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}]], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}]], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]], " ", 
   TemplateBox[{
     RowBox[{
       RowBox[{"-", "4"}], "+", "n"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}]], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "39"}], "+", 
     RowBox[{"5", " ", "n"}]}], ")"}], " ", 
   TemplateBox[{
     RowBox[{
       RowBox[{"-", "2"}], "+", "n"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   RowBox[{"(", 
    RowBox[{"43", "-", 
     RowBox[{"86", " ", "n"}], "+", 
     RowBox[{"10", " ", 
      SuperscriptBox["n", "2"]}]}], ")"}], " ", 
   TemplateBox[{"n"},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   SqrtBox["n"], " ", 
   SqrtBox[
    RowBox[{"1", "+", "n"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "29"}], "+", 
     RowBox[{"5", " ", "n"}]}], ")"}], " ", 
   TemplateBox[{
     RowBox[{"2", "+", "n"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["5", "24"], " ", 
   SqrtBox["n"], " ", 
   SqrtBox[
    RowBox[{"1", "+", "n"}]], " ", 
   SqrtBox[
    RowBox[{"2", "+", "n"}]], " ", 
   SqrtBox[
    RowBox[{"3", "+", "n"}]], " ", 
   TemplateBox[{
     RowBox[{"4", "+", "n"}]},
    "Ket"]}]}]], "Output",
 CellChangeTimes->{3.865415908624036*^9, 3.865415944191202*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"233831be-a986-402e-a437-bc6cb1b55608"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"M", "=", "100"}], ";"}]], "Input",
 CellChangeTimes->{{3.865416003824716*^9, 3.86541600558232*^9}, {
  3.865416767800681*^9, 3.8654167680351458`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"dc54d0e4-e2b5-4436-86be-8c50558c7cfe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"options", "=", 
  RowBox[{"Cases", "[", 
   RowBox[{"HonKet", ",", 
    RowBox[{
     RowBox[{"Ket", "[", "a_", "]"}], "->", "a"}], ",", "\[Infinity]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.865415988563632*^9, 3.8654160761275387`*^9}, {
  3.865416156928769*^9, 3.8654162057755823`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"2e9d18d3-0914-4520-8d92-d55180c72501"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "4"}], "+", "n"}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "n"}], ",", "n", ",", 
   RowBox[{"2", "+", "n"}], ",", 
   RowBox[{"4", "+", "n"}]}], "}"}]], "Output",
 CellChangeTimes->{3.865416191418167*^9, 3.8654162908531027`*^9, 
  3.865416770655322*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"dd58b036-2afb-495b-b86d-4d2dbae55c82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrixRules", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n_", ",", "m_"}], "}"}], "/;", 
       RowBox[{"m", "==", "aa"}]}], "->", 
      RowBox[{"Coefficient", "[", 
       RowBox[{"HonKet", ",", 
        RowBox[{"Ket", "[", "a", "]"}]}], "]"}]}], "/.", 
     RowBox[{"aa", "->", "a"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "options"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.865416211556892*^9, 3.865416269008521*^9}, {
  3.8654163084224777`*^9, 3.865416317153226*^9}, {3.865416359475149*^9, 
  3.865416362897622*^9}, {3.865416488188857*^9, 3.865416489985839*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"1ed3a581-d23d-4b6f-9437-1cbf5d88c717"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_", ",", "m_"}], "}"}], "/;", 
     RowBox[{"m", "\[Equal]", 
      RowBox[{
       RowBox[{"-", "4"}], "+", "n"}]}]}], "\[Rule]", 
    RowBox[{
     FractionBox["5", "24"], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "4"}], "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "3"}], "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_", ",", "m_"}], "}"}], "/;", 
     RowBox[{"m", "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}]}]}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "6"], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "39"}], "+", 
       RowBox[{"5", " ", "n"}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_", ",", "m_"}], "}"}], "/;", 
     RowBox[{"m", "\[Equal]", "n"}]}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "8"], " ", 
     RowBox[{"(", 
      RowBox[{"43", "-", 
       RowBox[{"86", " ", "n"}], "+", 
       RowBox[{"10", " ", 
        SuperscriptBox["n", "2"]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_", ",", "m_"}], "}"}], "/;", 
     RowBox[{"m", "\[Equal]", 
      RowBox[{"2", "+", "n"}]}]}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "6"], " ", 
     SqrtBox["n"], " ", 
     SqrtBox[
      RowBox[{"1", "+", "n"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "29"}], "+", 
       RowBox[{"5", " ", "n"}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_", ",", "m_"}], "}"}], "/;", 
     RowBox[{"m", "\[Equal]", 
      RowBox[{"4", "+", "n"}]}]}], "\[Rule]", 
    RowBox[{
     FractionBox["5", "24"], " ", 
     SqrtBox["n"], " ", 
     SqrtBox[
      RowBox[{"1", "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{"2", "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{"3", "+", "n"}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.865416269994155*^9, 3.865416291846383*^9}, {
   3.865416346958188*^9, 3.865416364958353*^9}, 3.865416520756105*^9, 
   3.865416772181673*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"cddbb664-1129-4d62-b5c3-ba464b81f828"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hmatrix", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"#", ",", "30"}], "]"}], "&"}], "@", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"matrixRules", ",", 
     RowBox[{"{", 
      RowBox[{"M", ",", "M"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8654163666942043`*^9, 3.8654163762405663`*^9}, {
  3.8654164088019648`*^9, 3.8654164116649323`*^9}, {3.865416529906847*^9, 
  3.8654165305458183`*^9}, {3.865416716293166*^9, 3.865416724562654*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"816d1884-1efe-42be-83de-cd436ad49e5a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {16., {0., 16.}}], Appearance -> None, 
              BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True), 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJzt0msw1Xkcx3FUxK7EtKU6m8vGoVQqKkqfHRVpc4mSYzmh7LJ021xmc+1i
ijQ2tW0oSXQkEemCSuxFmulcOi5xOOdwzkHnqlK0bWZnZ/bBPvk//fd/8H/w
m/nN69H3M/O2idofGD1FT09v7n/v3797chO70JaLiytL61dPdGCk1Ea2rVIJ
2mn/v9c27zdvjRMiQiE2H8hRYOJOy7McJx0aTjlvaqgfwQtvTnXqeQ3aQ/ZO
7nqro9z9tH9a3xjFSX0yKUCiZTpDrZQjTXHIIt5Ih1xrXwPR9GEMyQuKNbfU
yBudU/RRrCPsjWq7aCfHE27kZ7wQCVBRsPVJ3D45bCzGZrCEWlTcUxztjlOA
wUzhBgtVsEi97xjVriPsjWq7aCfHvyyxNzp3XQBPA4+ILU0yXLmkLYw/qcWS
E0Zt1f0ymNkFrr//UYkNVf6Vp+t1hL1RbRft5HhlB3sy5KQAvcxcpmSjDMKy
5RJ5sBYurFZuBHsQ0TuZWnNnJQq2ixmZJTrC3qi2i3ZyvChgw+H2nQJsMjcR
Pf91EB/ixuqOzdBinqtjoUYjRe2bqeLdP7yE5lD0EbfTOsLeqLaLdnL896Sg
A7McBEjuCWUINAM4E1WyKKZNg1UZ1wIrLSW4uWfctLpqBK5fD3U3HNYR9ka1
XbST4xx3s64YYwGGiheezsocQDXvcmhtgQZPeQ0TSw/1oUVlmj76bhieq6Ks
9WN1hL1RbRft5PiHyMzHMSI+coo9lBf6pLj5s9M8mx0a2EwV2seqerA+7dul
i32GsXaZKNQsREfYG9V20U6O558tn/fjIz5CSjRJUYlSHA+em//WUYNo/W/6
Q450Y+zV+AL21SF8nx50Qu6tI+yNartoJ8flwznv7fP52LfNXvpFjQQmiVcL
RofV+LjyLGPSpRPMe/oB2dOG4D+fW565RkfYG9V20U6OT3ddsVmRxEdjrcEK
oVoMdlgpK6BZjah6U+Pg8Ocw6rEzCfZUoMY5dDTZTkfYG9V20U6ORxpXzfff
yofMxTfc72E/wgxDr3dlqPH3rNrInj8ECBbUGRlby6Gn5zaQV6cl7I1qu2gn
x4tL9Xa1ruBD2toz4mrUj9f7btS2sNSYOG/6+maiAFYHDZ+GGMiQXXHqtvla
LWFvVNtFOznuYLiFOWDMh1PZEz+RTIRjN0Z8hAw1LBnLG7PXCLCbGRee7DAI
k6FTFqMSDWFvVNtFOzm+rsOj2ULOQ+Hg9tkaNxESfaYX+bxXYVwayJuh5aPT
hZVhajWAy6x7neoDGsLeqLaLdnL8ZVOEe+MvPOT95dn4wLYXznfSU4ceqXBp
9Rpm/DU+AlV7n/9pJUVKjcScaagh7I1qu2gnx702JZ9PiOVByJG2ThzvQbk2
Zc7IJRV2zA1ovRLJR+SR2FteO8Tg+Fe2FV9WE/ZGtV20k+MHG+MnsxbwkOkq
qnr90wt0F/VumPmdCotkvldqrPgwbGHZe2X0IeWM7USQh5qwN6rtop0c3/am
nb21k4sFC8cf6yd2o6HXcU76MhVu+/FyFrfwIE/zM8t92AuP4tnlXhIVYW9U
20U7OV5eWFxuV82FdVWsb9rLLlh/zqgIsFDBlMeLrNjMgwO3KMVyZg/GykcF
SVkqwt6otot2crz53GdTg2O48L2vp7g72okHqU5CH7ESa5fvf7DyHRcOTbkC
T2U32jPjC6dsVhH2RrVdtJPj3oK8PQUbuchx3LUz/GAn2MwkPuc3JTjPEsTm
2VxcWBI9FBbdBU6ZaqT6HXFvVNtFOzkuNk995R7ERV9K6cVpFzvwVWLdybCj
SjTW5di6ZXFxNMaes86jA/b+JTJvFnFvVNtF+6d1tn5q2+O7XJyIv5uwXSJE
mfpwxTln4t6odj/t1PR/APBn2iU=
              "], {{0, 0}, {25, 25}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["488", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"100", ",", "100"}], "}"}], "SummaryItem"]}]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJzt0msw1Xkcx3FUxK7EtKU6m8vGoVQqKkqfHRVpc4mSYzmh7LJ021xmc+1i
ijQ2tW0oSXQkEemCSuxFmulcOi5xOOdwzkHnqlK0bWZnZ/bBPvk//fd/8H/w
m/nN69H3M/O2idofGD1FT09v7n/v3797chO70JaLiytL61dPdGCk1Ea2rVIJ
2mn/v9c27zdvjRMiQiE2H8hRYOJOy7McJx0aTjlvaqgfwQtvTnXqeQ3aQ/ZO
7nqro9z9tH9a3xjFSX0yKUCiZTpDrZQjTXHIIt5Ih1xrXwPR9GEMyQuKNbfU
yBudU/RRrCPsjWq7aCfHE27kZ7wQCVBRsPVJ3D45bCzGZrCEWlTcUxztjlOA
wUzhBgtVsEi97xjVriPsjWq7aCfHvyyxNzp3XQBPA4+ILU0yXLmkLYw/qcWS
E0Zt1f0ymNkFrr//UYkNVf6Vp+t1hL1RbRft5HhlB3sy5KQAvcxcpmSjDMKy
5RJ5sBYurFZuBHsQ0TuZWnNnJQq2ixmZJTrC3qi2i3ZyvChgw+H2nQJsMjcR
Pf91EB/ixuqOzdBinqtjoUYjRe2bqeLdP7yE5lD0EbfTOsLeqLaLdnL896Sg
A7McBEjuCWUINAM4E1WyKKZNg1UZ1wIrLSW4uWfctLpqBK5fD3U3HNYR9ka1
XbST4xx3s64YYwGGiheezsocQDXvcmhtgQZPeQ0TSw/1oUVlmj76bhieq6Ks
9WN1hL1RbRft5PiHyMzHMSI+coo9lBf6pLj5s9M8mx0a2EwV2seqerA+7dul
i32GsXaZKNQsREfYG9V20U6O558tn/fjIz5CSjRJUYlSHA+em//WUYNo/W/6
Q450Y+zV+AL21SF8nx50Qu6tI+yNartoJ8flwznv7fP52LfNXvpFjQQmiVcL
RofV+LjyLGPSpRPMe/oB2dOG4D+fW565RkfYG9V20U6OT3ddsVmRxEdjrcEK
oVoMdlgpK6BZjah6U+Pg8Ocw6rEzCfZUoMY5dDTZTkfYG9V20U6ORxpXzfff
yofMxTfc72E/wgxDr3dlqPH3rNrInj8ECBbUGRlby6Gn5zaQV6cl7I1qu2gn
x4tL9Xa1ruBD2toz4mrUj9f7btS2sNSYOG/6+maiAFYHDZ+GGMiQXXHqtvla
LWFvVNtFOznuYLiFOWDMh1PZEz+RTIRjN0Z8hAw1LBnLG7PXCLCbGRee7DAI
k6FTFqMSDWFvVNtFOzm+rsOj2ULOQ+Hg9tkaNxESfaYX+bxXYVwayJuh5aPT
hZVhajWAy6x7neoDGsLeqLaLdnL8ZVOEe+MvPOT95dn4wLYXznfSU4ceqXBp
9Rpm/DU+AlV7n/9pJUVKjcScaagh7I1qu2gnx702JZ9PiOVByJG2ThzvQbk2
Zc7IJRV2zA1ovRLJR+SR2FteO8Tg+Fe2FV9WE/ZGtV20k+MHG+MnsxbwkOkq
qnr90wt0F/VumPmdCotkvldqrPgwbGHZe2X0IeWM7USQh5qwN6rtop0c3/am
nb21k4sFC8cf6yd2o6HXcU76MhVu+/FyFrfwIE/zM8t92AuP4tnlXhIVYW9U
20U7OV5eWFxuV82FdVWsb9rLLlh/zqgIsFDBlMeLrNjMgwO3KMVyZg/GykcF
SVkqwt6otot2crz53GdTg2O48L2vp7g72okHqU5CH7ESa5fvf7DyHRcOTbkC
T2U32jPjC6dsVhH2RrVdtJPj3oK8PQUbuchx3LUz/GAn2MwkPuc3JTjPEsTm
2VxcWBI9FBbdBU6ZaqT6HXFvVNtFOzkuNk995R7ERV9K6cVpFzvwVWLdybCj
SjTW5di6ZXFxNMaes86jA/b+JTJvFnFvVNtF+6d1tn5q2+O7XJyIv5uwXSJE
mfpwxTln4t6odj/t1PR/APBn2iU=
              "], {{0, 0}, {25, 25}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["488", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"100", ",", "100"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.0488`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1.0206207261596575409155350311274547466524781169402792201\
802`30.", BaselinePosition -> Baseline, ContentPadding -> False, FrameMargins -> 
                    0, ImageSize -> {{1, 300}, Automatic}, StripOnInput -> 
                    True], LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "4.125`30."}], BaselinePosition -> Baseline, 
                    ContentPadding -> False, FrameMargins -> 0, 
                    ImageSize -> {{1, 300}, Automatic}, StripOnInput -> True],
                     LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    
                    RowBox[{
                    "-", "5.\
6568542494923801952067548968387923142786875015077922927068`30."}], 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, ImageSize -> {{1, 300}, Automatic}, 
                    StripOnInput -> True], LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "11.125`30."}], BaselinePosition -> Baseline,
                     ContentPadding -> False, FrameMargins -> 0, 
                    ImageSize -> {{1, 300}, Automatic}, StripOnInput -> True],
                     LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, DefaultBaseStyle -> "Column", 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[Automatic, {100, 100}, 0, {1, {CompressedData["
1:eJwlzy8vxAEAgOGf3XYz210gEAgnnEAgEAgEggtsCAQXzm4Ef0YgEAiEEwgn
nEAgnEAgEAgEAoFAYDOz3WaKolwxz+3e7fkAbyw1NzRbEQRBOigXIkwVUWqo
o4FGmmihjQ666KGPBIOMMEaSCaaYYYElVlhjg0222WGXfQ454oQzLrjihjse
eOKFNz4o8M0PvxT5K/2YqyRCNbXUEyNOM62000k3vfQzwDCjjJNikmnmWWSZ
VdbJsEWWHHsckOeYU8655Jpb7nnkmVfe+aTAF/+uljKN
     "], CompressedData["
1:eJwVyNWyqgAAhWFMQAwQu0XsDlAxUDBRVFCwsNje79c+j3HYM2tmffOn9V9Z
NwMA8M8EAMYAm8litltNNtBihuxW0GKCbZDZancgsAW0WR12J4S4QBvsgJxu
OwKDHhfkRh1OBMY8Li/qdLhdGIJ7vKjP7XThmN/jC3hRtwfD/UGfNxRAg34c
C/tC3kjAHw7i0VjI96d4MJqIRUKBZDwcDaZioUQkGU9Hw6kEEYllkul4lIwl
UkQma5AgE6lcOpNPZslcIUVk08V8hiwVckQ5U8xnK6VcgSxX/1QzWM7Xi9VG
rVSolOvVZrFVqtQazWq7Xq51WpVGk2pX63Sj06p121S9SfcMdql+u9lienSn
3e0PKJoZ9jpUfzDqMr3xkB4ZjWWG40lvwI760+GE4cYDfjRlOaPN5vyUHY25
xWTG8vPpcrGazLg1P50vVwK3mC35+Xqzmi2E7UZcrueL1U7Y7tdLcbMVDruV
uN9I6+1BFnbi5ijttyf5sFOO4l5SdwYl5bw/yofLST1elbOknuTL7Xy9K8eb
qp0uj7tyPava5fa8nx/X1/umXZ6f6/310J/a+/Zj4KPp7+/z8Xn9fJ/627i3
/v0PibVi1w==
     "]}, {
    1.0206207261596575409155350311274547466524781169402792201802`30., \
-4.125`30., \
-5.6568542494923801952067548968387923142786875015077922927068`30., \
-11.125`30., 
     2.2821773229381921394040407616700088914697695624915968926117`30., \
-7.7567175188133973109580662365686560745588336887461220733692`30., \
-5.6568542494923801952067548968387923142786875015077922927068`30., \
-8.0829037686547607031280829270274043790664245177817762642613`30., 
     3.952847075210474164998616930540898167149443924156521033572`30., \
-15.625`30., \
-7.7567175188133973109580662365686560745588336887461220733692`30., 
     6.03807364424559940571611006548740488464172203114957212029`30., \
-6.7082039324993690892275210061938287063218550788345771728127`30., \
-17.625`30., \
-3.6514837167011074230464652186720142263516312999865550281793`30., \
-8.0829037686547607031280829270274043790664245177817762642613`30., 
     1.0206207261596575409155350311274547466524781169402792201802`30., 
     8.5391256382996653193508655671008766589458605528790274412848`30., \
-17.125`30., 1.080123449734643371827661239347999442950867384509724424952`30., 
     2.2821773229381921394040407616700088914697695624915968926117`30., \
-6.7082039324993690892275210061938287063218550788345771728127`30., \
-14.125`30., 11.456439237389600016470117984320021222461141441919929756518`30.,
      14.7901994577490401064183207289040426210373760075784618722303`30., 
     7.4833147735478827711674974646330986035120396155574538926076`30., 
     3.952847075210474164998616930540898167149443924156521033572`30., \
-8.625`30., -3.6514837167011074230464652186720142263516312999865550281793`30.,
      6.03807364424559940571611006548740488464172203114957212029`30., 
     15.5563491861040455368185759663066788642677730801410759486953`30., 
     1.080123449734643371827661239347999442950867384509724424952`30., 
     18.54049621773915737177849360200178265245`30., -0.625`30., 
     25.29822128134703465599114835546174826976`30., 
     22.70737765573118749066899607288645274396`30., 
     7.4833147735478827711674974646330986035120396155574538926076`30., 
     8.5391256382996653193508655671008766589458605528790274412848`30., 
     9.875`30., 22.875`30., 
     15.5563491861040455368185759663066788642677730801410759486953`30., 
     36.70830968595530414470087297879781594664`30., 
     27.29087148968802474043985427348639510905`30., 
     11.456439237389600016470117984320021222461141441919929756518`30., 
     38.375`30., 25.29822128134703465599114835546174826976`30., 
     14.7901994577490401064183207289040426210373760075784618722303`30., 
     32.29099461666260495202725854635041210918`30., 
     49.78620960332958171870529939123072075791`30., 
     18.54049621773915737177849360200178265245`30., 
     64.53164598345011479375122891637787609775`30., 
     37.70775782249589021564595553074233128186`30., 
     36.70830968595530414470087297879781594664`30., 56.375`30., 
     49.78620960332958171870529939123072075791`30., 
     22.70737765573118749066899607288645274396`30., 
     43.54116825871043774482855782845008207873`30., 
     80.94442537939224879330183366897326983473`30., 76.875`30., 
     49.79123082096551935634330277275914386591`30., 
     99.02440776562783025374420507399344010812`30., 
     64.53164598345011479375122891637787609775`30., 
     27.29087148968802474043985427348639510905`30., 99.875`30., 
     80.94442537939224879330183366897326983473`30., 
     118.77148928369411781216413892666025473221`30., 
     32.29099461666260495202725854635041210918`30., 
     56.457948953181074624301249649227884884`30., 125.375`30., 
     140.185591271000458693927935103118618855`30., 153.375`30., 
     63.54132513569417211229929226969768907041`30., 
     99.02440776562783025374420507399344010812`30., 
     37.70775782249589021564595553074233128186`30., 
     43.54116825871043774482855782845008207873`30., 
     163.2666530556684131844762805712763261426`30., 183.875`30., 
     71.04136119191410876242204071741561715764`30., 
     118.77148928369411781216413892666025473221`30., 
     188.01462709055378173263086763435444886969`30., 
     78.95805848676878402364044275345832881804`30., 216.875`30., 
     140.185591271000458693927935103118618855`30., 
     49.79123082096551935634330277275914386591`30., 
     56.457948953181074624301249649227884884`30., 
     163.2666530556684131844762805712763261426`30., 252.375`30., 
     214.42947558579720595044509039779120658356`30., 
     87.2914180585163060545224995222332173126`30., 290.375`30., 
     188.01462709055378173263086763435444886969`30., 
     96.04144070833867563621314888275805805382`30., 
     242.51116812771049506956458210566489711406`30., 
     63.54132513569417211229929226969768907041`30., 
     272.25967996259257583042413395610169794888`30., 330.875`30., 
     214.42947558579720595044509039779120658356`30., 
     71.04136119191410876242204071741561715764`30., 
     105.20812706250406394979943892433035216994`30., 
     242.51116812771049506956458210566489711406`30., 
     303.67499073845379801393257343780281750843`30., 
     78.95805848676878402364044275345832881804`30., 
     114.79147761629925692788393707779993248787`30., 373.875`30., 
     272.25967996259257583042413395610169794888`30., 
     336.75708356816094349309718249098707702719`30., 419.375`30., 
     87.2914180585163060545224995222332173126`30., 
     124.79149276559947724851349282477341218393`30., 
     135.20817282989959849197079753014359798442`30., 467.375`30., 
     96.04144070833867563621314888275805805382`30., 
     371.5059443221153448932547513303935277815`30., 
     303.67499073845379801393257343780281750843`30., 
     105.20812706250406394979943892433035216994`30., 517.875`30., 
     146.04151806934903263327731115760053441198`30., 
     336.75708356816094349309718249098707702719`30., 
     407.9215610874227864022579287218225591651`30., 
     157.29152869751123376930408726661751765046`30., 
     446.00392374955626616558415771144232519082`30., 570.875`30., 
     371.5059443221153448932547513303935277815`30., 
     114.79147761629925692788393707779993248787`30., 
     168.95820489103214901024193365061460613848`30., 
     485.75302366531904069833300253516889983235`30., 
     407.9215610874227864022579287218225591651`30., 626.375`30., 
     124.79149276559947724851349282477341218393`30., 
     181.04154679704508828980557285939964834773`30., 684.375`30., 
     135.20817282989959849197079753014359798442`30., 
     527.16885340467526524773451448266397706049`30., 
     446.00392374955626616558415771144232519082`30., 
     570.25140654510153226130843261177368207663`30., 744.875`30., 
     193.54155453889826947168665519177015630544`30., 
     485.75302366531904069833300253516889983235`30., 
     146.04151806934903263327731115760053441198`30., 
     615.00067750640188488515311367543215546934`30., 807.875`30., 
     206.45822822062578186838904859476468559482`30., 
     157.29152869751123376930408726661751765046`30., 
     527.16885340467526524773451448266397706049`30., 
     219.79156793046755398846458997231924471171`30., 873.375`30., 
     661.41666141699212565354289370020866054921`30., 
     570.25140654510153226130843261177368207663`30., 
     168.95820489103214901024193365061460613848`30., 
     233.54157374366275060079427493521147290672`30., 
     181.04154679704508828980557285939964834773`30., 
     615.00067750640188488515311367543215546934`30., 941.375`30., 
     709.4993540048738714801631649619008571027`30., 
     759.24875150813825139138239039366884573236`30., 
     247.70824572468313373023646364077266354756`30., 
     661.41666141699212565354289370020866054921`30., 1011.875`30., 
     193.54155453889826947168665519177015630544`30., 1084.875`30., 
     810.66485060103598894090186591772918853512`30., 
     206.45822822062578186838904859476468559482`30., 
     709.4993540048738714801631649619008571027`30., 
     262.29158392903116555002280312739986697447`30., 
     759.24875150813825139138239039366884573236`30., 1160.375`30., 
     277.29158840469719520705435209874333429711`30., 
     219.79156793046755398846458997231924471171`30., 
     863.74764833254394221482993056799608906866`30., 1238.375`30., 
     918.49714207503117303895232102551212637483`30., 
     292.70825919334766868094534875362602102456`30., 
     233.54157374366275060079427493521147290672`30., 
     810.66485060103598894090186591772918853512`30., 1318.875`30., 
     247.70824572468313373023646364077266354756`30., 
     308.54159633129965814545667155259385442332`30., 
     974.91332948113905660248963947218033720521`30., 
     863.74764833254394221482993056799608906866`30., 
     918.49714207503117303895232102551212637483`30., 
     324.79159985032453627330662013970285503997`30., 
     1032.99620844738179835918438974732845599191`30., 1401.875`30., 
     262.29158392903116555002280312739986697447`30., 
     341.45826977831419920046951231239894670866`30., 
     277.29158840469719520705435209874333429711`30., 
     1092.74577708327627896492817775267814832338`30., 1487.375`30., 
     974.91332948113905660248963947218033720521`30., 
     358.54160613983606872361029031768641277994`30., 
     1154.16203368504545519507343052436669480099`30., 
     1032.99620844738179835918438974732845599191`30., 1575.375`30., 
     292.70825919334766868094534875362602102456`30., 
     1217.24497671312381281283996892529007008228`30., 
     376.04160895659760309235207347671153642436`30., 1665.875`30., 
     1092.74577708327627896492817775267814832338`30., 
     308.54159633129965814545667155259385442332`30., 
     1281.99460477283860785633507739528231284761`30., 
     393.95827824783679750292862459345549260086`30., 1758.875`30., 
     324.79159985032453627330662013970285503997`30., 
     1154.16203368504545519507343052436669480099`30., 1854.375`30., 
     341.45826977831419920046951231239894670866`30., 
     412.29161403065185313114380238113064055422`30., 
     1217.24497671312381281283996892529007008228`30., 
     1348.41091659775581928123755285418368395984`30., 
     431.04161632028061055874977336308341882657`30., 
     1416.49391103527162320387691119293619464716`30., 
     1281.99460477283860785633507739528231284761`30., 
     358.54160613983606872361029031768641277994`30., 1952.375`30., 
     1348.41091659775581928123755285418368395984`30., 
     1486.24358703410390863433778551128602469173`30., 2052.875`30., 
     450.20828513033831105863803091760263271946`30., 
     376.04160895659760309235207347671153642436`30., 
     469.79162047302064098431357701682268127241`30., 
     393.95827824783679750292862459345549260086`30., 
     1416.49391103527162320387691119293619464716`30., 2155.875`30., 
     1557.65994363339779631182543404061951235098`30., 
     1630.74297995320730022841401712327251096693`30., 
     1486.24358703410390863433778551128602469173`30., 
     489.79162235927773505714726417425289183705`30., 2261.375`30., 
     412.29161403065185313114380238113064055422`30., 
     1557.65994363339779631182543404061951235098`30., 
     510.20829079896379120148837678523851919562`30., 
     1705.49269518615450836002549760278232398302`30., 
     431.04161632028061055874977336308341882657`30., 2369.375`30., 
     2479.875`30., 531.04162580096612736505033494047410909213`30., 
     1781.90908859009976149012779250421957899779`30., 
     450.20828513033831105863803091760263271946`30., 
     1630.74297995320730022841401712327251096693`30., 
     552.29162737331684690496059112227395997042`30., 
     1705.49269518615450836002549760278232398302`30., 
     1859.99215948168268974442357306031813086955`30., 2592.875`30., 
     469.79162047302064098431357701682268127241`30., 
     573.95829552328974069986029845450092526413`30., 2708.375`30., 
     1939.74190723061573665673323226112548353791`30., 
     489.79162235927773505714726417425289183705`30., 
     1781.90908859009976149012779250421957899779`30., 
     2021.15833125462983853073597857826886973013`30., 
     596.0416302574846155743363703828340113199`30., 
     510.20829079896379120148837678523851919562`30., 2826.375`30., 
     1859.99215948168268974442357306031813086955`30., 
     2104.24143101498693022354415184083375716951`30., 2946.875`30., 
     618.54163158190087989517343091917360820297`30., 
     1939.74190723061573665673323226112548353791`30., 
     531.04162580096612736505033494047410909213`30., 
     552.29162737331684690496059112227395997042`30., 
     641.45829950200192261289464562134953020033`30., 
     2188.99120601248647410049122142625404451779`30., 3069.875`30., 
     2021.15833125462983853073597857826886973013`30., 
     573.95829552328974069986029845450092526413`30., 3195.375`30., 
     2275.40765578390370326531554716223456476895`30., 
     664.79163402277157918186747356708659073608`30., 
     2104.24143101498693022354415184083375716951`30., 
     2188.99120601248647410049122142625404451779`30., 
     2363.49077989880609279474880367656895972316`30., 
     688.54163514876377687109848631330722389127`30., 3323.375`30., 
     596.0416302574846155743363703828340113199`30., 
     618.54163158190087989517343091917360820297`30., 3453.875`30., 
     2453.24057795670201435324917770300045418333`30., 
     712.70830288414628515039056361010669042798`30., 
     2275.40765578390370326531554716223456476895`30., 3586.875`30., 
     2363.49077989880609279474880367656895972316`30., 
     737.2916372327393578446121209994213725961`30., 
     2544.65704958448182630884280601434392141779`30., 
     641.45829950200192261289464562134953020033`30., 
     2637.74019443411699574398565034330854156888`30., 
     664.79163402277157918186747356708659073608`30., 
     2453.24057795670201435324917770300045418333`30., 3722.375`30., 
     762.29163819804993756696757107572188393862`30., 
     2544.65704958448182630884280601434392141779`30., 3860.375`30., 
     2732.49001218058739799595923616347983282601`30., 
     787.70830578330199551878406551540089941417`30., 
     688.54163514876377687109848631330722389127`30., 
     2637.74019443411699574398565034330854156888`30., 
     2828.9065025200108228478999664233247250414`30., 4000.875`30., 
     712.70830288414628515039056361010669042798`30., 
     813.54163999146349779952697204913894705606`30., 
     2732.49001218058739799595923616347983282601`30., 
     2926.98966516795204074828738966669457171426`30., 
     737.2916372327393578446121209994213725961`30., 
     839.79164082527042024312645781502031386777`30., 4143.875`30., 
     762.29163819804993756696757107572188393862`30., 
     866.45830828724817531410206397300704607093`30., 
     2828.9065025200108228478999664233247250414`30., 
     3026.73949985789163553384842216331392701254`30., 4289.375`30., 
     3128.15600633983726511824593335786319888015`30., 
     787.70830578330199551878406551540089941417`30., 
     2926.98966516795204074828738966669457171426`30., 4437.375`30., 
     893.54164237973076498345849492694604512773`30., 
     921.04164310487793130236020873329326002286`30., 
     3231.23918437906212926807874598078918091205`30., 4587.875`30., 
     3026.73949985789163553384842216331392701254`30., 
     813.54163999146349779952697204913894705606`30., 
     839.79164082527042024312645781502031386777`30., 4740.875`30., 
     948.95831046469054040111767484375431729226`30., 
     3128.15600633983726511824593335786319888015`30., 
     3335.98903375495725464565291887625220912599`30., 
     866.45830828724817531410206397300704607093`30., 4896.375`30., 
     3442.40555425998579421482181741891419258579`30., 
     3231.23918437906212926807874598078918091205`30., 
     977.29164446102440487089124822537307975338`30., 
     3550.48874569872891652345052491460555824869`30., 
     1006.04164509560272311467125498553599597789`30., 
     893.54164237973076498345849492694604512773`30., 5054.375`30., 
     3335.98903375495725464565291887625220912599`30., 
     1035.2083123700272916003594663326575688918`30., 
     3442.40555425998579421482181741891419258579`30., 
     921.04164310487793130236020873329326002286`30., 5214.875`30., 
     3660.23860788701406029400322145547669815446`30., 
     3771.65514065111737649164368750195956784795`30., 
     1064.7916462857886264437901407968840200037`30., 
     948.95831046469054040111767484375431729226`30., 5377.875`30., 
     3550.48874569872891652345052491460555824869`30., 5543.375`30., 
     977.29164446102440487089124822537307975338`30., 
     3660.23860788701406029400322145547669815446`30., 
     3884.7383438270330950209915154303610737483`30., 
     1094.79164684427511391843390628960620061449`30., 5711.375`30., 
     1006.04164509560272311467125498553599597789`30., 
     3771.65514065111737649164368750195956784795`30., 
     3999.48821725980335460161979731340023613931`30., 
     1125.20831404678129493354041749656904226577`30., 
     4115.90476080290273764198411552737279854514`30., 
     1156.04164789451537590951033831056005119812`30., 
     3884.7383438270330950209915154303610737483`30., 5881.875`30., 
     1035.2083123700272916003594663326575688918`30., 
     1064.7916462857886264437901407968840200037`30., 
     3999.48821725980335460161979731340023613931`30., 
     1187.2916483886060475270515307957157886787`30., 6054.875`30., 
     4233.98797431767237024345772644022278234998`30., 
     1218.95831553010868329774869450409679279897`30., 
     4115.90476080290273764198411552737279854514`30., 
     1094.79164684427511391843390628960620061449`30., 
     4353.7378576727989920731549053389275035748`30., 6230.375`30., 
     6408.375`30., 4233.98797431767237024345772644022278234998`30., 
     1251.04164932001098159719473295909960040513`30., 
     4475.15441074383488138085381385098744964271`30., 
     1125.20831404678129493354041749656904226577`30., 6588.875`30., 
     4598.23763341275494516868161700029868434704`30., 
     4353.7378576727989920731549053389275035748`30., 
     1283.54164975923810754746461784443864866108`30., 
     1156.04164789451537590951033831056005119812`30., 
     4475.15441074383488138085381385098744964271`30., 
     4722.9875255675476605609450894810975517562`30., 
     1316.4583168486573847886956730818401887016`30., 
     1187.2916483886060475270515307957157886787`30., 6771.875`30., 
     4598.23763341275494516868161700029868434704`30., 
     1218.95831553010868329774869450409679279897`30., 
     1349.79165058908258161657086559838924950663`30., 
     4849.40408710183688689063758448434939495792`30., 6957.375`30., 
     1251.04164932001098159719473295909960040513`30., 
     1383.54165098127783107833935401734747060549`30., 
     4977.48731791453186420682058659582090009082`30., 7145.375`30., 
     4722.9875255675476605609450894810975517562`30., 
     1417.70831802596122032463310095330055656355`30., 
     5107.2372179095029773876278061790134569614`30., 
     1283.54164975923810754746461784443864866108`30., 
     4849.40408710183688689063758448434939495792`30., 7335.875`30., 
     1452.29165172380808073059993406784103142977`30., 
     1316.4583168486573847886956730818401887016`30., 
     5238.65378699528109978152081039410059005075`30., 7528.875`30., 
     4977.48731791453186420682058659582090009082`30., 
     5107.2372179095029773876278061790134569614`30., 
     5371.73702508477853973682556303719634857401`30., 
     1487.29165207545400696152096272466137644525`30., 
     1349.79165058908258161657086559838924950663`30., 7724.375`30., 
     5238.65378699528109978152081039410059005075`30., 
     1383.54165098127783107833935401734747060549`30., 
     1522.70831908149763020811280412741401044996`30., 7922.375`30., 
     5506.48693209502980051059373605975989736849`30., 
     5371.73702508477853973682556303719634857401`30., 
     1558.54165274250316820599876355995766489665`30., 8122.875`30., 
     5642.90350794695053148135328294983571699345`30., 
     1417.70831802596122032463310095330055656355`30., 8325.875`30., 
     5506.48693209502980051059373605975989736849`30., 
     1452.29165172380808073059993406784103142977`30., 
     5780.98675256511319860346744538755615652597`30., 
     1594.7916530590027723399381685636613041777`30., 8531.375`30., 
     5920.73666587753813662447301947656494796069`30., 
     1631.45832003149869007962392582706857055387`30., 
     5642.90350794695053148135328294983571699345`30., 
     1487.29165207545400696152096272466137644525`30., 
     6062.15324781549876648433082426351724202132`30., 
     5780.98675256511319860346744538755615652597`30., 
     1668.54165366046525916838638292946355560489`30., 
     1522.70831908149763020811280412741401044996`30., 8739.375`30., 
     1706.04165394635074836136496752810656060429`30., 
     6205.23649831333987005613545962815002967775`30., 
     1558.54165274250316820599876355995766489665`30., 8949.875`30., 
     5920.73666587753813662447301947656494796069`30., 
     1594.7916530590027723399381685636613041777`30., 
     6349.98641730830791231477891137700858786611`30., 
     6062.15324781549876648433082426351724202132`30., 9162.875`30., 
     1743.95832088957905806161958602835234313665`30., 9378.375`30., 
     1631.45832003149869007962392582706857055387`30., 
     6496.40300474039248931513939692816286324357`30., 
     6205.23649831333987005613545962815002967775`30., 
     1782.29165449055129291034263455364244519769`30., 
     1821.04165474964721723256155211175910961225`30., 
     6349.98641730830791231477891137700858786611`30., 9596.375`30., 
     1668.54165366046525916838638292946355560489`30., 
     6644.48626055217806006583314513834210486652`30., 
     1860.20832166722660320655792292132169977812`30., 
     1706.04165394635074836136496752810656060429`30., 
     6496.40300474039248931513939692816286324357`30., 
     6794.23618468870519241718330668433411723303`30., 9816.875`30., 
     1899.79165524363048069973165615556696776915`30., 10039.875`30., 
     6644.48626055217806006583314513834210486652`30., 
     6945.65277709734061825464362714411887882538`30., 
     1743.95832088957905806161958602835234313665`30., 
     1939.79165547918229688359263330783613366242`30., 
     1782.29165449055129291034263455364244519769`30., 10265.375`30., 
     6794.23618468870519241718330668433411723303`30., 
     7098.73603772765545231977547864713174771089`30., 
     1821.04165474964721723256155211175910961225`30., 
     7253.48596653131098250644739074240460324045`30., 10493.375`30., 
     1980.20832237418899299524875886295807499215`30., 
     6945.65277709734061825464362714411887882538`30., 
     1860.20832166722660320655792292132169977812`30., 10723.875`30., 
     7098.73603772765545231977547864713174771089`30., 
     7409.90256346195148806483710996907225169542`30., 
     7567.98582847510358629164418820399634372911`30., 
     1899.79165524363048069973165615556696776915`30., 10956.875`30., 
     7253.48596653131098250644739074240460324045`30., 
     7409.90256346195148806483710996907225169542`30., 
     1939.79165547918229688359263330783613366242`30., 11192.375`30., 
     1980.20832237418899299524875886295807499215`30., 
     7567.98582847510358629164418820399634372911`30., 11430.375`30.}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.865416376930394*^9, 3.865416412283412*^9}, 
   3.865416532897962*^9, 3.865416726638124*^9, 3.865416773593899*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"9336fd1d-e67c-4eee-a542-43b50956c963"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "@", "Hmatrix"}]], "Input",
 CellChangeTimes->{{3.8654164041559267`*^9, 3.865416422035471*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"bc84b468-afce-46e0-a397-a300397f8c84"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt3XlUjuvfNvBkysw2J3YyFZGZBvtb5lkTtYlkSLs0aKBBhCgUEUmmDJva
ZU6mIlOISpQmzfN9X9cVNjKknv2s93n/PH/vOp/3Wu9vPe86rGV9WOtYy+q/
Yx2+93kPXOVqvraliorKmv/6/Z9//l+/3hOEEEII4f9vmg3UuXKtUqCQb+2i
7hbUUJOXr6cg5TLzF9+lTHGeJpKWd685B7VLyVy5VC/CbcP/8d8p8+1xaVZZ
wX/9/X//+vf//BBCCCGE/13NN9T0j1AKJE0rmlf4tYYWanQIWrc2j5lfoOK6
edyvIm2KNI7cN7+U9CeZnNxg5c7MN7iduO2XU097eqs2359QSKb+j2eOqh/9
b/+5IYQQQgj/b73lELrY46NAa7RbZJf0qqWIX8sfbSpk96jAL62NDH8INMX6
RM4ct1Jy1684Hmfkwcy7/Xkw4fe4ekp0O6jutbuQ1JQXWp0oNGbm/7t7F4QQ
Qgjh/2uzNfJLWjcIdOfl7PvFw2vpmY3jr/2H5zPz597t3ByYK5BFlG6Lx+Gl
pDnJeMR0TU9mfv2JkvdHt9XTql1PVNa9K6RXrbLOdtOdw8zz7l0QQgghhP8u
Wy8M0+qnIlJ1isG6I+a1tGbq6iSrVHaPmpIlTemSINAyY0n9Z2IpeTlbzTFU
9WLm66wDXYys6+mw9bGrh0e9I+tUlwDfBFNmnnfv4r3vghBCCCGUS0uzOOPT
rUQaemxQs619Lbkbe68f1qOAmS/OsC/NiRDIY/v+6lbZpXTleRfyTvoXPSo3
YKSJXj3Nruk+skXAO2pMqQ4d9NySmefdu3jvuyCEEEII5bIia0zvvzqJ1PQk
0aI8tJbK6n4uD7nM7lFOJmfOVngI1Cbsxru7X0ppZNujm3WPbWTmHdVzRsa0
qSf/sXoesa/eUYC76feW2dbMPO/exXvfBSGEEEIolw8Gazwf9ItIt3ONIz1P
19LHS6dW7Wpk96iZQ5/WjDUTaNXJTg/G9C0j7RYFc8h7EzPvornNdUOxRBMN
xB37NIuosiDuSb8cG2aed+/ive+CEEIIIZTLhe1HJxX2Ecl25eyhb+/VklOT
xomeboXMfPzpnPhHowTauftIuL1hGZ15lXX+ioU3M/+xLvDj8USJPJoW2F5x
LSIN/8ZNE+xXMvO8exfvfReEEEIIoVxWHBnhE/qrSKU7o/dovKul1BulLQwq
2D3KNz/94+GOAuWMsLBcuryM7AK3hgeM9GHmv28sTRy+X6LRW81ad7lXRFq1
x5K+2qxi5nn3Lt77LgghhBBCuTyZ3llFf6hIN2fPeTLrWy0p3yrC/l78jpn/
kJnT99x75T99S0zV8CmjXXnPrSJK2D1qx9PwJHUHiTySGrz+6lBM50YlXMld
uIaZ5927eO+7IIQQQgjl8lhcvmmxrkhOsVPfWvWqI3G14dypz9g96pdvp+2+
ZSgpcWHHNfuiyuieZenqQYm+zPz+wpMtnU0kmphofHW7dTEFm86wfG1oz8zz
7l28910QQgghhHL5c0yIk/84kYJjQpLnj6uj+hWvRw41KGLm85daDw+7qKR1
g2zq790tI48Tsc2d9/ox8xrXW4QM7CeR/3rdm0fOFVPxgkUXagc5MPO8exfv
fReEEEIIoVzerrdt16AvUmjJsBsmi+rI0MEhtkUcu0cd1vrm4RCipLdtihwu
vSujkgODR/y+YjMzP2Jh0uLJn0WaVXInqK6+mM4MfR2r3taRmefdu3jvuyCE
EEII5bJr4/YCFxKpbYW/iXJ1He1vE5++pVcxMx/zPmHToQNK+lKUrnWnSzkF
PAhO0LM7yMwnx2esvJop0sHOgpa3QQm9LEhf5lDlxMzz7l28910QQgghhHJp
3SLmRNNUkdJ36h5cuaGOsqU54jYbdo+akXRa68sJJXWa6ORfMqOcogem9D1y
5RQz/ypj8sWQv0Sy+34/eFpgCdk7Tk3OuufMzPPuXbz3XRBCCCGEcpmqsG9c
OFeka5mxqS1D6+hTWOvlswV2j0pprvX/fkFJbZf1uHdxQzlpWzsNP2fwJzNv
n/DdIG2nSNfPTLw9L72EXHP0MpaEuzLzvHsX730XhBBCCKFc3tb5/Ef2ApGG
rbJubx5VRyfUdi4JGFPCzJf4dfYenqCkiRe0Xnw7X04Oi0euP/M0jpnfsrxH
e0c7kR611F76rH0pSZ3mPfW76sbM8+5dvPddEEIIIYRy2X9Bfw/1xSK9OZ4z
JuNGHWWRVrRfCrtH9R796qhJipKySx3G5BeWk3fkre9nBl1l5tfV297ZMEmk
uCRrH5/xpbSv2vzmx6QNzDzv3sV73wUhhBBCKJeWqT32HrYWSX9goMPnh3Vk
FvtA31O1lJkPbj2qgl7+06POVr+f17WC5i/qufqpTQIz/2Z6y/jCTiLlvCn4
+Wx5KVXr9t7a8MSdmefdu3jvuyCEEEII5fJUgMcyablICxvy03Vy6ygv78Yv
qpPYPWpo5TDLIXlK6h50rJ359Arq8/tQ19/232TmHy5vKr5QKRDNuVSTuKuU
lKVHBux56cHM8+5dvPddEEIIIYRy6ZvXpsXU1SJ9f3o5fq6yjuw8tLSWO7F7
VM1TP6+LZUryNVmq1sLlP3tU2Pu2v95h5scYmFm8vSuQUuPNxGmXS+mias7h
v155MvO8exfvfReEEEIIoVz2zsjwC3MQ6Vt469bWzXWU5dvWYecpdo+66XRx
gp2opJTum9+MPF1Bj+d9njZ4ejIz79GcE7M+VKCeDceGrSgqpTf51cc3fPVi
5nn3Lt77LgghhBBCuYy1e/Ei31mkrjaFb826K0jnw5pK3zfsHpX+zLd/41cl
5ce8aRDfVFDHkM0n5oxJYeZrV+Wdsl0r0LSg1SbDWpeRSu7xRxcbNjLzvHsX
730XhBBCCKFcOoY3vu/vIVKPgWO0Jg9TUGSewZEpbcuY+fMPKnS3tBLoytaV
XiZtKimh5rnj8OQHzHzx7rF5CVMEuu61OWWfbhlVmnR5uOnTJmaed+/ive+C
EEIIIZTLivt6ar4bRRocUjJGMU5BwV+SZ03TZveogZNqV9d0EWhYV6352pMr
SX1P8e6EGY+Y+cWelWbrewm09mH1uUMWZRSg/ltkpuTNzPPuXbz3XRBCCCGE
cun4uvFOhL9I2/+0GZK2UEG9WplGD3dh9ygHteCHk/oJdDat9+Yzf1TSoXaJ
32vSHjPz0bOexe+tU9Khnp+H6wT806NiTJrSO7K/d5h37+K974IQQgghlMst
Rkc31waIpNGlg/biZQpa2fVxcto+do9qr70ta/hggd4b9Tj4JKySVngOPP+4
6Qkz3/+2TmzbR0p6OkC1wOl8GW2zqdthosr+3mHevYv3vgtCCCGEUC71QjPz
vweJNEgnuHPnjQp63m3WjvnZ7B5VPdNq6xw9gcr93DztH1TSGle3O3P9nzLz
6lJ5ddVxJU3ZtVKa/7KMZmxZUDb1M7tH8e5dvPddEEIIIYRy2Xpizoype0W6
cHhiK/ftCkrvHd8p6BO7h/haPLNcZCCQS8vmy1EfKil6s4em79dnzPzO1jr9
hocq6fiXNYJjYxmVGpbZ95q+l5nn3bt477sghBBCCOXSSWuq47owkUyWh2hX
HFbQ6neWbfsOK2fmUwZnmxnNEMhQ8/70VQOrSLvvkDxztzRmvpPoNWLJMSXl
/hlcvcagnNxWWkToFx9n5nn3Lt77LgghhBBCuexwuWJ10GGRAnVWpRrHKkh7
6MZJ3r+ze9T0/b4bu5oKNLXHlbHJplU01WVrWXblC2a+Ltrd5XScku4dT/r9
/LZySslynak75gIzz7t38d53QQghhBDK5ex3t8eeiRKp4sfNoj1JCqr+2uXk
ub3sHjXR12dekLVABwzPtXngVUXpquZDVNTSmfnwecc+b7+tJJOhF2yX3iun
V86TzcdduMTM8+5dvPddEEIIIYRyGfrX47c3T4n0KSfU5UGmgu5YaxmeTGb3
KMM9lvd1Vgvk4/Xp/NRzVVTwVpGV7ZXBzGfkjplMT5VUq+Hl5PS9nGIsIoYc
bXWdmefdu3jvuyCEEEII5XK+eivTZ+dEcrxd4V1ZrqCucy92XlvP7lEx0c+X
XncWaGMrj2ir11U0PKbPK/PSTGb+6IyJE99mKykhYKh//oQK6kPnIw/FJTLz
vHsX730XhBBCCKFcmgXPuPv+gkhmpgdnvZEU9PhQVYlL5wp2flde/8HeAhk3
DPi7ubmK7NsouiSffcXM39yqsA+pVNJw3dq2+30rKGxP9OiQSvb35fHuXbz3
XRBCCCGEcjmxVPNh/iWRvp/t8r1eTUl/fdL9fak5u0cFqGxT27xdII0FDScN
R1ZTVNielX8uzmLmz15JK8z7oCQjx5VDbiZUkGX3d2FbN91j5nn3Lt77Lggh
hBBCuUwNf5HbcFUkT6t7d2/2UFK235IjTW7sHiVVBZzduEeg3uoZozVNq+lj
lOXC8mJ2j9J81KejSrOS3HomzTaSKmjpjbcek1TY3/PCu3fx3ndBCCGEEMql
w9iuu9/eEkn3paHdxVFKKhy03z8wgd2jvJ8vKzp+SKCH9T/2bd9cTfF/O7/3
CH3NzI+6md3QoqNAaSN/bBgwrJLcZu9Rv3j/ITPPu3fx3ndBCCGEEMpl88jB
cxR3RQr/U9FzoYGSMptjtR+9ZveoST6Zv/11UiC/JPOZ3jHV9OqSkeFSgzfM
/IuQppPFfQSaeb3/6eW2lZT2MDhJ05f9PS+8exfvfReEEEIIoVwucz/1oDBF
pLui8bcf85UUkK427feWlcy8bmzh05MxAtWOy1rSIruaRl29O+pwFbtHJY/K
8y4YJpBLgOmcyuhKMnJudDvon8rM8+5dvPddEEIIIYRyGWGzqMuzJyKVLeq9
JMJWSe+sSsOTxrF7VGe1AG/fawKFfvRK6d9cTScDq9IG789m5jc/LYpYP16g
8aX6gUW5lWSZGNZOdRT7fXLevYv3vgtCCCGEUC73iePGXk4TaW6ms25/dyU5
XhjdT1zN7lGvfksynZIk0GM/2pGuU0PfFyV0aTcph5l/aWLmlm8skMbFNk/G
da6i1GrXE675z5l53r2L974LQgghhFAuJw5dMPxApkghrtM3hwUqyffJtzxF
OLtH2bZemH/mkUDvbZpHDJ1bQ2WxIR9MEtk9Kv7E2NYDFwg0rCaxQ820KvJr
OqpbuJX9Pjnv3sV73wUhhBBCKJeRbY81OGeLdHD8sRnvI5RknGSYfuMRu0f1
Tb+lMj5doAGHO51u9Kih6ZoHgzKXvmXmS588ehm0TKBSh00vyrZX0eKZ+hnT
Xdnvk/PuXbz3XRBCCCGEcjmoXpG4Klek8rS5b/qdUZLK0hH3H5Wye0g43VkU
/1agn+6GrvYnakjLQjv16k92jyqrDMgLXCfQWH+p/6KbVXRf95tFfAf2u5q8
exfvfReEEEIIoVyOep7drU+xSIG/PZ/udVdJcXbDf7+uVcXMf6w1S+1QKpDw
Y1fE6tQaeusz62LtyVxm3qMq7pSNh0AxTbM39lVWkcnPbYpgs1fMPO/exXvf
BSGEEEIol2Zq+/xUy0Q6MMHniU+qksaKHW4tI3aPqhzY0qJQFKjx4ayfz1Rr
6YxPN0vPkDxmPuLpdK0uWwWaJu7KNh5QTa9y42PuqLPfg+Ldu3jvuyCEEEII
5fKtUVnAxRqRCnp81YkvUVKr5sZ7VQHsHrXqbNuwBd8EWqH8NCd3fC19z00+
YmmWz8x33BiaWxoi0O5BOXGXl1bT2rm/uDmpsd+D4t27eO+7IIQQQgjl8nR+
y8OhCpEidsSc2K1QUtP1V3u0T7B7lNnVcidlG5FmX6xatdqtlp70cN6/27CA
mTftp5o1O1Kg9UJ+zwMh1bSwY7DOsZfsHsW7d/Hed0EIIYQQyuXZF6F28+pF
6hGmYuzZqKSv2bVPHr5g96gFj8xc3XqI9HazInt7XC1ZeW7V6z64kJkfcqZy
596zAm3QergzM7maikzOls7Zx34Pinfv4r3vghBCCCGUy/Eb5rds9UmkhYq8
ZfM6CzRB33fS8O/sHuI8yjLq3UCRzrioRE+orqUOfnWbPrR/x8zvaT/hS8wl
gaKehP5wlKpJXbn68KYF7PegePcu3vsuCCGEEEK5PPmSfG9+FakkasyHzpoC
9W0ILFmhXc3M99CvE/T0RGpcMvixn2YdOV456TD4PbtHbbX8e+Dp2wJV5xht
Wj2ghpraps0a3J79jgHv3sV73wUhhBBCKJd/lK5LXftTJNu49ir3xwgUMazd
vZVL2D3q/egSZbWhSCamZkHhS+rINfHvoz2zipj5Z452AbdSBSoZ2eh01qqG
6pMcW5oq2T2Kd+/ive+CEEIIIZRLp8uPazqrSrRt6JrgZdME2l7d5o1eILtH
+eyYEvZ+ukitdHL17njX0fe3aY73thcz8yWbfmjZZwnk0cf978W7amjkg35X
v59hv2PAu3fx3ndBCCGEEMpl/6ODfmS2ksgvpVfOo//8Hrxe16tMTrF71KHU
Q+ufLRJp5qIlHtdP19HJmx1XVlmVMPO77FtukwoFGuH2ImBtQg310Xe3GWzN
fseAd+/ive+CEEIIIZTLwSEaf5l1kKjLvsjWS+0F0gxzjZ5Qwu5R2X5XT+xd
KlLS6HPHV6TVkXu7dq3u9ixl5rcPvNstolag/V0mBCUpa6j9nJbd0sew3zHg
3bt477sghBBCCOXy9s/KdWqdJZpB82cccxPIMLiLZvk3dg9xun5wkMFakQym
Jcfd/VhHK2nNmFtb2D1qyZbzj6p+CHQxTk3UM66l2/rfqj75s98x4N27eO+7
IIQQQgjlcti2WQ+29pBo9vRMh/a7BfpjQMosN/0aZr5w7aSmN64i9Tp7IjpN
XUGpJZ0mK6rZPWpCjd/UoPYilTSvdR8RUEtLFzuePubDfseAd+/ive+CEEII
IZTLxyE+Orq9JVpoFnhscLhA1gcsx9+0YPeomelOczd6i9T5St9UR0MF3dit
V5JqWMbM/6HR4tOsfiLdP/bGzeV5Lam162X/4Cj7HQPevYv3vgtCCCGEUC49
unWfm9hPosgdZY3zzgl079WosMUB7B51/314RvV2kWba+u0qWqWgSEeLyFVn
/kWPmn2t7qSOSPppDS0Gq9VRy46vNezD2J+/4927eO+7IIQQQgjlcoB7GRlq
SrT0+P1c2xsCXS7dofUgnt2j+qT5XZgaKpJP/whd1T0KWhMbPXycWjkz/31x
VtSrSSLlrm2OnDizjuK2j8vaHcj+/B3v3sV73wUhhBBCKJeWiZXt7w6WSOvW
AN2VqQK5dbBUfstj96jGzIE5u4+IZKOx5lbeFQUN0FWLmOzM7lGnf465FzxL
JLM2i/4O2l5Hn3qln713g/35O969i/e+C0IIIYRQLu9Xa8RN0JHoWkPTt/m5
Ak04f0rR3KqWmX8yP9Aq6bRIo6qLdexyFWQwxKfAPYvdo17+feFIXwuRov8Y
NcXoUh2d83jcQf0o+/N3vHsX730XhBBCCKFc2nTaoxk3UqLHAStNhtYKpNV9
neab0eweZZfgMq8hVqSLYu4L3y8KCjvS876VVgUzv0onxMJlpUie18b3PF5a
R/Nf++ofWsS+d+Ldu3jvuyCEEEII5bLNwW9Bk0dLNHGYxoIXHwTK2VViUTeH
3aO2jJi+SSVBpAOvDqut01DS9uYVN34EsnuUqpXPiAdOIk0f072bfQcFDS/s
61d6j92jePcu3vsuCCGEEEK5NHRuuXfXRInaD4kxOtlOpAxDJ72yIHaP2hCT
2fApWaSfQ2uHt56qJIdQ98DsanaPSlnX9vkdX5HsRDJtnKagXzoM9Opqzr53
4t27eO+7IIQQQgjlsujXouPt9CVauGSdoUZ3kVbkFWUeiGb3qBmbOqdnPxXJ
5M7jsYvXKYmuTNAtn1XJzOe8dDqVuVOka0H9mwqdFbTRZfX0H/fYPYp37+K9
74IQQgghlMtO88zmLiCJfGwb+j8bLtK2Vmv7DC5m95C5u39+OZUl0qPGXzWt
QpTUcdme+MEx7B5lteE365iDIu1pq2Ww7qSCVJOmhtMU9v/T8e5dvPddEEII
IYRy+ZfX4TapJhKZjLvb5dfxIrmezh7i+oXdQy6tPeq1pFCkykzhY/urSkpy
Xtj6eNsqZr6sk/rIrSdEskluOmrzVEHvfbTfP7vA7lG8exfvfReEEEIIoVx6
nDPx05gpkaivM3rHdJHUVu0/021gHTOv6xG3tmeFSLlVnz4vylDSpAf7fyZb
sHvUntCIp41xIm2+ojNlQJOCalZsbD1xIntf4t27eO+7IIQQQgjl0tJ80BPn
uRI57FdPe2MpkvnEF4u3zWP3KG23Q6FnhH/61guv8HUflfTR8FabU1f/RY+y
q4s6nChS5rbWi3SGKslmU3P98pPsHsW7d/Hed0EIIYQQymXHcwaVtxdKdODe
/qKua0XaEbSb7nmxe9TlAI32/b6IZOEyvteYXgJNtnhek9CZ/T0sXzz/Mv34
UKTYyWr1JZZKavAZsrSkN3tf4t27eO+7IIQQQgjlskNqUJ6KhUSmrrsdDbxE
Wtb+pe2zU+weVRo1pXBLs0hTm/puidcXqDw+KLrZkd2jnAI8tRaki7R1SMU1
lc1K+iSYvf7Tn92jePcu3vsuCCGEEEK53CC1PzPVSqLhLmobTHeKlP36UOKp
5+we5XHrvUqGmkSH6zu8yLcRqGbKpdFbU9k9asGL+LdO+SIVNFS2So9VUq+5
/dKefGL3KN69i/e+C0IIIYRQLlsnHVh+/HeJQlZUG47dJ9L6Mf063Cll9xDT
n9+PDOkq0a6CR7MivQU6+FPTNrYz+93Luquae5yqRPpiVa03OFdJmy0T1W44
svcl3r2L974LQgghhFAuDdcnJCTaSqS6NUph8qdIFm0et03UUDDzs1Rv2c/r
K9HDPKcVOscEGmvU+8RBB3aPMh7/ymj+B5HezKgZ16aVQMM6DtrnUcLuUbx7
F+99F4QQQgihXFrlxqi3WSVR/ufgmMaLIuWb2z93HMfuURUX6nbbaElUOvLq
7+uTBVpbbHn1ygN2j4q+FNxhxA+R4v5IWWauI9D48REDNxmzexHv3sV73wUh
hBBCKJd3Hdvqj7OX6GGizuHHySJZZTh832jD7lFnx29v8fsIiWb+tNW3KxEo
rMn8WEt19l23s8PlpPQ2ErXzSOk2d/E/vWvm+fHZ19g9infv4r3vghBCCCGU
y3U6J3WXOUpUUGL1wztdpEVn2qwy3cnuUUMHbEg3Hi/RwlT9n21biHS+nevS
vRvYPepTcjdns18k0m6fEv0yQKDi1sH7VAazexHv3sV73wUhhBBCKJcrlc6f
/V0ksj/dq7BvkUif+s5WabjI7lHBZ1zbjzGUSBzxop76iWTZps+N5BvsHjXx
8mWNxP4SqendVyuIEyjS3VCvMZzdi3j3Lt77LgghhBBCuazXnnHllptEd7On
bt1VJdKxkvXHSx+xe4itWdqW+mkShW1s7TfXSCQfvw/9Lndg7z/bIpfU9hkm
UdnuiENmmQJdW/S5yOg9u0fx7l28910QQgghhHKZe27PoCxPiT49HG2u8lmk
dz/7xgwU2D1k+yu9WUfnSzTOeEFdm+UiLVygujhnJbtHTX7gFEFjJZqWduiS
5zeBPvea3zF3ObsX8e5dvPddEEIIIYRy6XW/0/pKb4nMrqWctG8lUSu1SIVe
DyUzv87PZ/WoxRJ57ehq4OUv0um4jBWjb7B71F87k6bNmiLRmsiDp7UGieS7
13ObcRq7F/HuXbz3XRBCCCGEcmk+I2v3x80SuUz8ueZ2d4lSA1TXdDBi96h0
1Y1vLi2XyFo4tP7wCZFipA2TUtTYvSW3avZ7vdkSzfy033nZfJGmX3SZ4jOB
3Yt49y7e+y4IIYQQQtkck7/5R4BEBtafz33Vkih8R0CPhNXsHhWffe36pDUS
vdv3IG1mokhL/OLPfp/N7i0dfyu+1ctMIq1da5c3OYvkQq5tG0L+xb7EuXfx
3ndBCCGEEMpl8qWvdho7JHJPPBLbcoREQz5tfXTKm92jCjKN0/atl8hlyPnk
tByRzmrndvsUxe4tl3LKVj9YJtGun3aF8yNESrnb0SzjM7sXce9dnPddEEII
IYRyecX5VfnPYIn0vP0OGplI9PzqrX7O19g96uvQS70SNkoUFHNo2sBGkdY5
hfvHN7F7S3K8xQc9B4nclu6smflEpElas9SbXdl53r2L974LQgghhFAuz0Wd
de+xV6IUrUl7NedIlPMw0ODvVHYP2bP0a1bZFonWmAn1av0kUmwzce2yiJ3P
9suIOu4u0WIxoHecIFLXb0EfPN+yexHv3sV73wUhhBBCKJdRFzTvqu2XaHLR
4evdrCXSnj3oxSuR3UPMSulH750SPVy/8v62sRKlz55frBHCzn+aar6yrZ9E
4xMtnXw6SjTHOPOtno58exfvfReEEEIIoVzeW9/uS48DEv2W8e50hq1ERmZb
ln9oITDzl1VPW2mEShQbsKZ3uqlEDhdi9OoK2L1lnLhR2SdIopVJG1V7GEgU
emmLZ8Yp+fYu3vsuCCGEEEK5/HNGR0XTIYneprk8iHSRKPrU97V/aLN71PgU
rSopQqLMaYHvFV4S3W/+uMjTkJ3XHZfr1SFcovmmke766yTqntZsbdSTnefd
u3jvuyCEEEII5fKCEJJQESnRjEs2tov8JWqoOnj10kJ2z9G6Pqrg+UmJLKzt
so/+04+aAydcig1m51Vri37p81SiszaBOyfZ1dO2Ie4v7p+rZ+Z59y7e+y4I
IYQQQrk8bXTXozRKooy4Oy+yAiW6P6JPz0mr2L1oyHKP7QnxEk30vy7NN6+n
mILFm8uPsXvRXY+ON2J7/dO3Bm4Z7f9TosEhZ875/cHO8+5dvPddEEIIIYRy
mVf6qnPecYn6qtemGYdIVLVV+T7Ei91bVi37dZmF3T896lb02KvD6kl3uclv
YdvZvSjrhW+kYblI64s/WhSUSJSlZycWW7HzvHsX730XhBBCCKFctr0y2/di
tEQzDJZaJEdJ9DE/YZjhMXYPsXW8tdhfT6Jgp5eJOzvU09NVC4693sDuRZPd
utTbXhZJ+vPo3+qPJLJMuWb/fCY7z7t38d53QQghhBD+u3y7fN/4UbMlWtM5
8ohv33pq+qxW1d+X3XM+lk7oGR4hUqBnjUmvGxIJAc8TPX9j53n3Lt77Lggh
hBDCf5fuGge+ePtKFPXrnS61E+rJIDbpnupeds9pPeDJo/RnIo2amnrWN0ui
7l/bDbdcxM7z7l28910QQgghhP9TdLjgWxXVKJJSPXfbQ0mirjZF6XdWsnsR
797Fe98FIYQQQvg/xWH+rQRluER3JfHPudPrqeB2R8P94exexLt38d53QQgh
hBD+T/c/AB+Rhjc=
   "], {{0, 0}, {100, 100}}, {0, 1}],
  BaseStyle->{FontFamily -> "Arial"},
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{99.5, 
       FormBox["1", TraditionalForm]}, {80.5, 
       FormBox["20", TraditionalForm]}, {60.5, 
       FormBox["40", TraditionalForm]}, {40.5, 
       FormBox["60", TraditionalForm]}, {20.5, 
       FormBox["80", TraditionalForm]}, {0.5, 
       FormBox["100", TraditionalForm]}}, {{99.5, 
       FormBox["1", TraditionalForm]}, {80.5, 
       FormBox["20", TraditionalForm]}, {60.5, 
       FormBox["40", TraditionalForm]}, {40.5, 
       FormBox["60", TraditionalForm]}, {20.5, 
       FormBox["80", TraditionalForm]}, {0.5, 
       FormBox["100", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {59.5, 
       FormBox["60", TraditionalForm]}, {79.5, 
       FormBox["80", TraditionalForm]}, {99.5, 
       FormBox["100", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {59.5, 
       FormBox["60", TraditionalForm]}, {79.5, 
       FormBox["80", TraditionalForm]}, {99.5, 
       FormBox["100", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.865416422429166*^9, 3.8654165348521233`*^9, 
  3.865416728902472*^9, 3.8654167748124943`*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"f731224d-89c3-4f2b-82f4-9ec0f00023b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Hmatrix", "//", "Eigenvalues"}], "//", "Sort"}], "//", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"#", ",", "10"}], "]"}], "&"}]}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.865416537302923*^9, 3.8654165794578037`*^9}, {
  3.865416732245358*^9, 3.8654167354145937`*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"dc7577db-8a67-46ed-83e3-14be0829c81a"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"-", "26.88071322001426526776194886569654189656`30."}]},
     {
      RowBox[{"-", "26.88071321918455130060864478113079538968`30."}]},
     {
      RowBox[{"-", "20.82519112557437738954141396115839966212`30."}]},
     {
      RowBox[{"-", "20.82519090386285260924416331642019161397`30."}]},
     {
      RowBox[{
      "-", "15.0763261586985867047363328695556712804089528585668665437324`30.\
"}]},
     {
      RowBox[{
      "-", "15.0763017649924014706645760806509241472578459840587411150244`30.\
"}]},
     {
      RowBox[{
      "-", "9.6962874714171005551370164418929508616269352744213894273538`30."}\
]},
     {
      RowBox[{
      "-", "9.6948339001932005935024576716993724361382484764493663403178`30."}\
]},
     {
      RowBox[{
      "-", "4.8201946418922119933240288149087286911488524621029574157881`30."}\
]},
     {
      RowBox[{
      "-", "4.7719644906598637953801468356572670033264636471993897193029`30."}\
]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.865416580260395*^9, 3.865416735750429*^9, 
  3.865416777322516*^9},
 CellLabel->
  "Out[122]//TableForm=",ExpressionUUID->"86cc3850-a753-476b-9771-\
46a6f1172ed9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Rayleigh-Ritz Method (our model)", "Subsection",
 CellChangeTimes->{{3.865414732631936*^9, 3.865414746343854*^9}, {
  3.865418744460534*^9, 
  3.8654187554693336`*^9}},ExpressionUUID->"8847525a-e376-436a-a283-\
514cfd31d65b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"latexCouplings", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "->", "\[Alpha]"}], ",", 
     RowBox[{"\[Lambda]", "->", 
      SqrtBox["\[Delta]"]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"physicalCouplings", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", "q2"}], "+", 
          RowBox[{"m2", " ", "q1"}]}], 
         RowBox[{"m1", "+", "m2"}]]}], "\[Tau]"}]}], ",", 
     RowBox[{"\[Beta]", "->", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]], 
        FractionBox[
         RowBox[{"2", " ", "q1", " ", "q2"}], 
         SuperscriptBox["r", "3"]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         RowBox[{"m1", "+", "m2"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", 
           SuperscriptBox["\[Omega]2", "2"]}], "+", 
          RowBox[{"m2", " ", 
           SuperscriptBox["\[Omega]1", "2"]}]}], 
         RowBox[{"m1", "+", "m2"}]]}]}]}], ",", 
     RowBox[{"\[Gamma]", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]]}], 
       FractionBox[
        RowBox[{"3", " ", "q1", " ", "q2"}], 
        SuperscriptBox["r", "4"]]}]}], ",", 
     RowBox[{"\[Delta]", "->", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "m1", " ", "m2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            SuperscriptBox["m1", "2"]}], "+", 
           RowBox[{"3", "m1", " ", "m2"}], "+", 
           RowBox[{"2", 
            SuperscriptBox["m2", "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"m1", "+", "m2"}], ")"}], "4"]], 
       FractionBox[
        RowBox[{"q1", " ", "q2"}], 
        SuperscriptBox["r", "5"]]}]}], ",", 
     RowBox[{"H", "->", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"m1", "+", "m2"}], 
         RowBox[{"m1", " ", "m2"}]], 
        FractionBox[
         SuperscriptBox["HBAR", "2"], "2"]}]]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HHrule", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "->", "0.6099"}], ",", 
     RowBox[{"m2", "->", "0.6099"}], ",", 
     RowBox[{"q1", "->", "0.7080"}], ",", 
     RowBox[{"q2", "->", "0.7080"}], ",", 
     RowBox[{"\[Omega]1", "->", "0.4273"}], ",", 
     RowBox[{"\[Omega]2", "->", "0.4273"}], ",", 
     RowBox[{"HBAR", "->", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramRules", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "->", "1"}], ",", 
     RowBox[{"\[Tau]", "->", "0"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.865417597034564*^9, 3.865417685352819*^9}, {
  3.865418543969873*^9, 3.865418544077344*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"d6a6b671-3523-407c-a146-6b4d041e6817"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"v", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"A", " ", "x"}], " ", "+", 
    RowBox[{"\[Beta]", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"\[Gamma]", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{
     SuperscriptBox["\[Lambda]", "2"], " ", 
     SuperscriptBox["x", "4"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "[", "x_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"v", "[", "x", "]"}], "//.", "latexCouplings"}], "//.", 
      "physicalCouplings"}], "//.", "HHrule"}], "//.", "paramRules"}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.865410440070257*^9, 3.8654104555054197`*^9}, {
  3.865410573522439*^9, 3.865410593314836*^9}, {3.865417541064334*^9, 
  3.8654175634802628`*^9}, {3.865417731129198*^9, 3.8654177542204733`*^9}, {
  3.865417798061221*^9, 3.865417815145299*^9}, {3.865417895149723*^9, 
  3.865417902217391*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"e51c7797-fba4-4538-8f7b-701c3cc57de4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"V", "[", "x_", "]"}], "="}]], "Input",
 CellChangeTimes->{{3.865419452199812*^9, 
  3.865419455393229*^9}},ExpressionUUID->"e471f285-7179-45f3-adb6-\
4c2ee0f6ca08"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalP]", "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "\[Dagger]"], "-", "a"}], 
    RowBox[{
     SqrtBox["2"], "I"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalX]", "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "\[Dagger]"], "+", "a"}], 
    SqrtBox["2"]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.865414963589452*^9, 3.865415000377941*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"eb11aabe-b04a-4db3-89cc-d8da7faa54c0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"a___", "\[CenterDot]", 
       RowBox[{"(", 
        RowBox[{"b_", "+", "c_"}], ")"}], "\[CenterDot]", "d___"}], "->", 
      RowBox[{
       RowBox[{"a", "\[CenterDot]", "b", "\[CenterDot]", "d"}], "+", 
       RowBox[{"a", "\[CenterDot]", "c", "\[CenterDot]", "d"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"a___", "\[CenterDot]", 
        RowBox[{"(", 
         RowBox[{"b_", " ", "c_"}], ")"}], "\[CenterDot]", "d___"}], "/;", 
       RowBox[{"NumericQ", "[", "b", "]"}]}], "->", 
      RowBox[{"b", 
       RowBox[{"(", 
        RowBox[{"a", "\[CenterDot]", "c", "\[CenterDot]", "d"}], ")"}]}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"b___", "\[CenterDot]", "a", "\[CenterDot]", 
       TemplateBox[{"n_"},
        "Ket"]}], "->", 
      RowBox[{
       SqrtBox[
        RowBox[{"n", "-", "1"}]], 
       RowBox[{"b", "\[CenterDot]", 
        TemplateBox[{
          RowBox[{"n", "-", "1"}]},
         "Ket"]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"b___", "\[CenterDot]", 
       SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", 
       TemplateBox[{"n_"},
        "Ket"]}], "->", 
      RowBox[{
       SqrtBox["n"], 
       RowBox[{"b", "\[CenterDot]", 
        TemplateBox[{
          RowBox[{"n", "+", "1"}]},
         "Ket"]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CenterDot", "[", "a_", "]"}], "->", "a"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Note", " ", "that", " ", 
    TemplateBox[{"1"},
     "Ket"], " ", "is", " ", "the", " ", "vacuum", " ", "in", " ", "these", 
    " ", "conventions"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.865415142589609*^9, 3.865415149962151*^9}, {
  3.8654152020710897`*^9, 3.865415263852202*^9}, {3.865415369488689*^9, 
  3.865415448586157*^9}, {3.865415485161026*^9, 3.865415524992312*^9}, {
  3.865415648226223*^9, 3.865415693805203*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"fe7ddf65-2bf4-47ae-98ed-d00db64952f5"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"rules", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"before___", "\[CenterDot]", 
         RowBox[{"(", 
          RowBox[{"number_", " ", "operator_"}], ")"}], "\[CenterDot]", 
         "after___"}], "/;", 
        RowBox[{"NumericQ", "[", "number", "]"}]}], "->", 
       RowBox[{"number", 
        RowBox[{"(", 
         RowBox[{
         "before", "\[CenterDot]", "operator", "\[CenterDot]", "after"}], 
         ")"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"before___", "\[CenterDot]", 
        RowBox[{"(", 
         RowBox[{"op1_", "+", "op2_"}], ")"}], "\[CenterDot]", "after___"}], "->", 
       RowBox[{
        RowBox[{"before", "\[CenterDot]", "op1", "\[CenterDot]", "after"}], 
        "+", 
        RowBox[{
        "before", "\[CenterDot]", "op2", "\[CenterDot]", "after"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"before___", "\[CenterDot]", "a", "\[CenterDot]", 
        SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", "after___"}], "->", 
       RowBox[{
        RowBox[{"before", "\[CenterDot]", 
         SuperscriptBox["a", "\[Dagger]"], "\[CenterDot]", "a", 
         "\[CenterDot]", "after"}], "+", 
        RowBox[{"before", "\[CenterDot]", "after"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"CenterDot", "[", "a_", "]"}], "->", "a"}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8654169794655447`*^9, 
  3.865416983480701*^9}},ExpressionUUID->"e5d41e39-e148-4999-80f7-\
4f7d3f0e1b8f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{
     "\[DoubleStruckCapitalP]", "\[CenterDot]", "\[DoubleStruckCapitalP]", 
      "\[CenterDot]", 
      TemplateBox[{"n"},
       "Ket"]}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{
     "\[DoubleStruckCapitalX]", "\[CenterDot]", "\[DoubleStruckCapitalX]", 
      "\[CenterDot]", 
      TemplateBox[{"n"},
       "Ket"]}]}]}], "//.", "rules"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.8654150050255632`*^9, 3.865415016361511*^9}, {
  3.8654150493058043`*^9, 3.865415140061047*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"cfa71dbf-4ade-40fb-bb40-f2a78ee915d3"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", "n"}]}], ")"}], " ", 
  TemplateBox[{"n"},
   "Ket"]}]], "Output",
 CellChangeTimes->{
  3.865415075344646*^9, 3.865415120592423*^9, 3.865415277047514*^9, 
   3.8654153216185513`*^9, 3.865415393597237*^9, {3.865415504381933*^9, 
   3.865415540245624*^9}, 3.8654157039042892`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"9b1643ca-8756-4d22-acb2-96f5c1d3589f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{
     "\[DoubleStruckCapitalP]", "\[CenterDot]", "\[DoubleStruckCapitalP]", 
      "\[CenterDot]", 
      TemplateBox[{"n"},
       "Ket"]}]}], "-", 
    RowBox[{"20", 
     FractionBox["1", "2"], 
     RowBox[{
     "\[DoubleStruckCapitalX]", "\[CenterDot]", "\[DoubleStruckCapitalX]", 
      "\[CenterDot]", 
      TemplateBox[{"n"},
       "Ket"]}]}], "+", 
    RowBox[{"20", " ", 
     FractionBox["1", "24"], 
     RowBox[{
     "\[DoubleStruckCapitalX]", "\[CenterDot]", "\[DoubleStruckCapitalX]", 
      "\[CenterDot]", "\[DoubleStruckCapitalX]", "\[CenterDot]", 
      "\[DoubleStruckCapitalX]", "\[CenterDot]", 
      TemplateBox[{"n"},
       "Ket"]}]}]}], "//.", "rules"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.86541574031684*^9, 3.8654157608963842`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"6af5202c-f06d-4a78-b9c9-fde3a5bef9ac"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "24"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"5", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "4"}], "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "3"}], "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]], " ", 
     TemplateBox[{
       RowBox[{
         RowBox[{"-", "4"}], "+", "n"}]},
      "Ket"]}], "+", 
    RowBox[{"4", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "39"}], "+", 
       RowBox[{"5", " ", "n"}]}], ")"}], " ", 
     TemplateBox[{
       RowBox[{
         RowBox[{"-", "2"}], "+", "n"}]},
      "Ket"]}], "+", 
    RowBox[{"129", " ", 
     TemplateBox[{"n"},
      "Ket"]}], "-", 
    RowBox[{"258", " ", "n", " ", 
     TemplateBox[{"n"},
      "Ket"]}], "+", 
    RowBox[{"30", " ", 
     SuperscriptBox["n", "2"], " ", 
     TemplateBox[{"n"},
      "Ket"]}], "-", 
    RowBox[{"116", " ", 
     SqrtBox["n"], " ", 
     SqrtBox[
      RowBox[{"1", "+", "n"}]], " ", 
     TemplateBox[{
       RowBox[{"2", "+", "n"}]},
      "Ket"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox["n", 
      RowBox[{"3", "/", "2"}]], " ", 
     SqrtBox[
      RowBox[{"1", "+", "n"}]], " ", 
     TemplateBox[{
       RowBox[{"2", "+", "n"}]},
      "Ket"]}], "+", 
    RowBox[{"5", " ", 
     SqrtBox["n"], " ", 
     SqrtBox[
      RowBox[{"1", "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{"2", "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{"3", "+", "n"}]], " ", 
     TemplateBox[{
       RowBox[{"4", "+", "n"}]},
      "Ket"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8654157645935287`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"c8119adf-9fd6-45d9-b0aa-1fe1ddd4d060"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HonKet", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{
      "\[DoubleStruckCapitalP]", "\[CenterDot]", "\[DoubleStruckCapitalP]", 
       "\[CenterDot]", 
       TemplateBox[{"n"},
        "Ket"]}]}], "-", 
     RowBox[{"20", 
      FractionBox["1", "2"], 
      RowBox[{
      "\[DoubleStruckCapitalX]", "\[CenterDot]", "\[DoubleStruckCapitalX]", 
       "\[CenterDot]", 
       TemplateBox[{"n"},
        "Ket"]}]}], "+", 
     RowBox[{"20", " ", 
      FractionBox["1", "24"], 
      RowBox[{
      "\[DoubleStruckCapitalX]", "\[CenterDot]", "\[DoubleStruckCapitalX]", 
       "\[CenterDot]", "\[DoubleStruckCapitalX]", "\[CenterDot]", 
       "\[DoubleStruckCapitalX]", "\[CenterDot]", 
       TemplateBox[{"n"},
        "Ket"]}]}]}], "//.", "rules"}], "//", 
   RowBox[{
    RowBox[{"Collect", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Ket", "[", "_", "]"}], ",", " ", "Simplify"}], "]"}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.865415881533759*^9, 3.865415907981855*^9}, {
  3.8654159391866817`*^9, 3.8654159423543987`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"abe6128c-5442-4e6a-b991-cb5e3e346bb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["5", "24"], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "4"}], "+", "n"}]], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "3"}], "+", "n"}]], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}]], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]], " ", 
   TemplateBox[{
     RowBox[{
       RowBox[{"-", "4"}], "+", "n"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "2"}], "+", "n"}]], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "39"}], "+", 
     RowBox[{"5", " ", "n"}]}], ")"}], " ", 
   TemplateBox[{
     RowBox[{
       RowBox[{"-", "2"}], "+", "n"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   RowBox[{"(", 
    RowBox[{"43", "-", 
     RowBox[{"86", " ", "n"}], "+", 
     RowBox[{"10", " ", 
      SuperscriptBox["n", "2"]}]}], ")"}], " ", 
   TemplateBox[{"n"},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   SqrtBox["n"], " ", 
   SqrtBox[
    RowBox[{"1", "+", "n"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "29"}], "+", 
     RowBox[{"5", " ", "n"}]}], ")"}], " ", 
   TemplateBox[{
     RowBox[{"2", "+", "n"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["5", "24"], " ", 
   SqrtBox["n"], " ", 
   SqrtBox[
    RowBox[{"1", "+", "n"}]], " ", 
   SqrtBox[
    RowBox[{"2", "+", "n"}]], " ", 
   SqrtBox[
    RowBox[{"3", "+", "n"}]], " ", 
   TemplateBox[{
     RowBox[{"4", "+", "n"}]},
    "Ket"]}]}]], "Output",
 CellChangeTimes->{3.865415908624036*^9, 3.865415944191202*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"f26bc0a7-ef4b-43fd-a283-24e411c58bf3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"M", "=", "100"}], ";"}]], "Input",
 CellChangeTimes->{{3.865416003824716*^9, 3.86541600558232*^9}, {
  3.865416767800681*^9, 3.8654167680351458`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"c6af3471-75e4-426a-8b87-9c1ea45a299c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"options", "=", 
  RowBox[{"Cases", "[", 
   RowBox[{"HonKet", ",", 
    RowBox[{
     RowBox[{"Ket", "[", "a_", "]"}], "->", "a"}], ",", "\[Infinity]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.865415988563632*^9, 3.8654160761275387`*^9}, {
  3.865416156928769*^9, 3.8654162057755823`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"58ef98ab-5146-4984-8939-dc2141acf063"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "4"}], "+", "n"}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "n"}], ",", "n", ",", 
   RowBox[{"2", "+", "n"}], ",", 
   RowBox[{"4", "+", "n"}]}], "}"}]], "Output",
 CellChangeTimes->{3.865416191418167*^9, 3.8654162908531027`*^9, 
  3.865416770655322*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"a313f041-0cef-42b1-88bf-f6e12cc323b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrixRules", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n_", ",", "m_"}], "}"}], "/;", 
       RowBox[{"m", "==", "aa"}]}], "->", 
      RowBox[{"Coefficient", "[", 
       RowBox[{"HonKet", ",", 
        RowBox[{"Ket", "[", "a", "]"}]}], "]"}]}], "/.", 
     RowBox[{"aa", "->", "a"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "options"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.865416211556892*^9, 3.865416269008521*^9}, {
  3.8654163084224777`*^9, 3.865416317153226*^9}, {3.865416359475149*^9, 
  3.865416362897622*^9}, {3.865416488188857*^9, 3.865416489985839*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"d0256031-8efc-4400-974d-b9372462789c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_", ",", "m_"}], "}"}], "/;", 
     RowBox[{"m", "\[Equal]", 
      RowBox[{
       RowBox[{"-", "4"}], "+", "n"}]}]}], "\[Rule]", 
    RowBox[{
     FractionBox["5", "24"], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "4"}], "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "3"}], "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_", ",", "m_"}], "}"}], "/;", 
     RowBox[{"m", "\[Equal]", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}]}]}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "6"], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "2"}], "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "39"}], "+", 
       RowBox[{"5", " ", "n"}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_", ",", "m_"}], "}"}], "/;", 
     RowBox[{"m", "\[Equal]", "n"}]}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "8"], " ", 
     RowBox[{"(", 
      RowBox[{"43", "-", 
       RowBox[{"86", " ", "n"}], "+", 
       RowBox[{"10", " ", 
        SuperscriptBox["n", "2"]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_", ",", "m_"}], "}"}], "/;", 
     RowBox[{"m", "\[Equal]", 
      RowBox[{"2", "+", "n"}]}]}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "6"], " ", 
     SqrtBox["n"], " ", 
     SqrtBox[
      RowBox[{"1", "+", "n"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "29"}], "+", 
       RowBox[{"5", " ", "n"}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_", ",", "m_"}], "}"}], "/;", 
     RowBox[{"m", "\[Equal]", 
      RowBox[{"4", "+", "n"}]}]}], "\[Rule]", 
    RowBox[{
     FractionBox["5", "24"], " ", 
     SqrtBox["n"], " ", 
     SqrtBox[
      RowBox[{"1", "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{"2", "+", "n"}]], " ", 
     SqrtBox[
      RowBox[{"3", "+", "n"}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.865416269994155*^9, 3.865416291846383*^9}, {
   3.865416346958188*^9, 3.865416364958353*^9}, 3.865416520756105*^9, 
   3.865416772181673*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"dd351b2f-0066-4c32-ba4d-44e63770b6cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hmatrix", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"#", ",", "30"}], "]"}], "&"}], "@", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"matrixRules", ",", 
     RowBox[{"{", 
      RowBox[{"M", ",", "M"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8654163666942043`*^9, 3.8654163762405663`*^9}, {
  3.8654164088019648`*^9, 3.8654164116649323`*^9}, {3.865416529906847*^9, 
  3.8654165305458183`*^9}, {3.865416716293166*^9, 3.865416724562654*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"c55db844-d0c5-4a77-aa9a-b4831b65d532"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {16., {0., 16.}}], Appearance -> None, 
              BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True), 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJzt0msw1Xkcx3FUxK7EtKU6m8vGoVQqKkqfHRVpc4mSYzmh7LJ021xmc+1i
ijQ2tW0oSXQkEemCSuxFmulcOi5xOOdwzkHnqlK0bWZnZ/bBPvk//fd/8H/w
m/nN69H3M/O2idofGD1FT09v7n/v3797chO70JaLiytL61dPdGCk1Ea2rVIJ
2mn/v9c27zdvjRMiQiE2H8hRYOJOy7McJx0aTjlvaqgfwQtvTnXqeQ3aQ/ZO
7nqro9z9tH9a3xjFSX0yKUCiZTpDrZQjTXHIIt5Ih1xrXwPR9GEMyQuKNbfU
yBudU/RRrCPsjWq7aCfHE27kZ7wQCVBRsPVJ3D45bCzGZrCEWlTcUxztjlOA
wUzhBgtVsEi97xjVriPsjWq7aCfHvyyxNzp3XQBPA4+ILU0yXLmkLYw/qcWS
E0Zt1f0ymNkFrr//UYkNVf6Vp+t1hL1RbRft5HhlB3sy5KQAvcxcpmSjDMKy
5RJ5sBYurFZuBHsQ0TuZWnNnJQq2ixmZJTrC3qi2i3ZyvChgw+H2nQJsMjcR
Pf91EB/ixuqOzdBinqtjoUYjRe2bqeLdP7yE5lD0EbfTOsLeqLaLdnL896Sg
A7McBEjuCWUINAM4E1WyKKZNg1UZ1wIrLSW4uWfctLpqBK5fD3U3HNYR9ka1
XbST4xx3s64YYwGGiheezsocQDXvcmhtgQZPeQ0TSw/1oUVlmj76bhieq6Ks
9WN1hL1RbRft5PiHyMzHMSI+coo9lBf6pLj5s9M8mx0a2EwV2seqerA+7dul
i32GsXaZKNQsREfYG9V20U6O558tn/fjIz5CSjRJUYlSHA+em//WUYNo/W/6
Q450Y+zV+AL21SF8nx50Qu6tI+yNartoJ8flwznv7fP52LfNXvpFjQQmiVcL
RofV+LjyLGPSpRPMe/oB2dOG4D+fW565RkfYG9V20U6OT3ddsVmRxEdjrcEK
oVoMdlgpK6BZjah6U+Pg8Ocw6rEzCfZUoMY5dDTZTkfYG9V20U6ORxpXzfff
yofMxTfc72E/wgxDr3dlqPH3rNrInj8ECBbUGRlby6Gn5zaQV6cl7I1qu2gn
x4tL9Xa1ruBD2toz4mrUj9f7btS2sNSYOG/6+maiAFYHDZ+GGMiQXXHqtvla
LWFvVNtFOznuYLiFOWDMh1PZEz+RTIRjN0Z8hAw1LBnLG7PXCLCbGRee7DAI
k6FTFqMSDWFvVNtFOzm+rsOj2ULOQ+Hg9tkaNxESfaYX+bxXYVwayJuh5aPT
hZVhajWAy6x7neoDGsLeqLaLdnL8ZVOEe+MvPOT95dn4wLYXznfSU4ceqXBp
9Rpm/DU+AlV7n/9pJUVKjcScaagh7I1qu2gnx702JZ9PiOVByJG2ThzvQbk2
Zc7IJRV2zA1ovRLJR+SR2FteO8Tg+Fe2FV9WE/ZGtV20k+MHG+MnsxbwkOkq
qnr90wt0F/VumPmdCotkvldqrPgwbGHZe2X0IeWM7USQh5qwN6rtop0c3/am
nb21k4sFC8cf6yd2o6HXcU76MhVu+/FyFrfwIE/zM8t92AuP4tnlXhIVYW9U
20U7OV5eWFxuV82FdVWsb9rLLlh/zqgIsFDBlMeLrNjMgwO3KMVyZg/GykcF
SVkqwt6otot2crz53GdTg2O48L2vp7g72okHqU5CH7ESa5fvf7DyHRcOTbkC
T2U32jPjC6dsVhH2RrVdtJPj3oK8PQUbuchx3LUz/GAn2MwkPuc3JTjPEsTm
2VxcWBI9FBbdBU6ZaqT6HXFvVNtFOzkuNk995R7ERV9K6cVpFzvwVWLdybCj
SjTW5di6ZXFxNMaes86jA/b+JTJvFnFvVNtF+6d1tn5q2+O7XJyIv5uwXSJE
mfpwxTln4t6odj/t1PR/APBn2iU=
              "], {{0, 0}, {25, 25}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["488", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"100", ",", "100"}], "}"}], "SummaryItem"]}]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJzt0msw1Xkcx3FUxK7EtKU6m8vGoVQqKkqfHRVpc4mSYzmh7LJ021xmc+1i
ijQ2tW0oSXQkEemCSuxFmulcOi5xOOdwzkHnqlK0bWZnZ/bBPvk//fd/8H/w
m/nN69H3M/O2idofGD1FT09v7n/v3797chO70JaLiytL61dPdGCk1Ea2rVIJ
2mn/v9c27zdvjRMiQiE2H8hRYOJOy7McJx0aTjlvaqgfwQtvTnXqeQ3aQ/ZO
7nqro9z9tH9a3xjFSX0yKUCiZTpDrZQjTXHIIt5Ih1xrXwPR9GEMyQuKNbfU
yBudU/RRrCPsjWq7aCfHE27kZ7wQCVBRsPVJ3D45bCzGZrCEWlTcUxztjlOA
wUzhBgtVsEi97xjVriPsjWq7aCfHvyyxNzp3XQBPA4+ILU0yXLmkLYw/qcWS
E0Zt1f0ymNkFrr//UYkNVf6Vp+t1hL1RbRft5HhlB3sy5KQAvcxcpmSjDMKy
5RJ5sBYurFZuBHsQ0TuZWnNnJQq2ixmZJTrC3qi2i3ZyvChgw+H2nQJsMjcR
Pf91EB/ixuqOzdBinqtjoUYjRe2bqeLdP7yE5lD0EbfTOsLeqLaLdnL896Sg
A7McBEjuCWUINAM4E1WyKKZNg1UZ1wIrLSW4uWfctLpqBK5fD3U3HNYR9ka1
XbST4xx3s64YYwGGiheezsocQDXvcmhtgQZPeQ0TSw/1oUVlmj76bhieq6Ks
9WN1hL1RbRft5PiHyMzHMSI+coo9lBf6pLj5s9M8mx0a2EwV2seqerA+7dul
i32GsXaZKNQsREfYG9V20U6O558tn/fjIz5CSjRJUYlSHA+em//WUYNo/W/6
Q450Y+zV+AL21SF8nx50Qu6tI+yNartoJ8flwznv7fP52LfNXvpFjQQmiVcL
RofV+LjyLGPSpRPMe/oB2dOG4D+fW565RkfYG9V20U6OT3ddsVmRxEdjrcEK
oVoMdlgpK6BZjah6U+Pg8Ocw6rEzCfZUoMY5dDTZTkfYG9V20U6ORxpXzfff
yofMxTfc72E/wgxDr3dlqPH3rNrInj8ECBbUGRlby6Gn5zaQV6cl7I1qu2gn
x4tL9Xa1ruBD2toz4mrUj9f7btS2sNSYOG/6+maiAFYHDZ+GGMiQXXHqtvla
LWFvVNtFOznuYLiFOWDMh1PZEz+RTIRjN0Z8hAw1LBnLG7PXCLCbGRee7DAI
k6FTFqMSDWFvVNtFOzm+rsOj2ULOQ+Hg9tkaNxESfaYX+bxXYVwayJuh5aPT
hZVhajWAy6x7neoDGsLeqLaLdnL8ZVOEe+MvPOT95dn4wLYXznfSU4ceqXBp
9Rpm/DU+AlV7n/9pJUVKjcScaagh7I1qu2gnx702JZ9PiOVByJG2ThzvQbk2
Zc7IJRV2zA1ovRLJR+SR2FteO8Tg+Fe2FV9WE/ZGtV20k+MHG+MnsxbwkOkq
qnr90wt0F/VumPmdCotkvldqrPgwbGHZe2X0IeWM7USQh5qwN6rtop0c3/am
nb21k4sFC8cf6yd2o6HXcU76MhVu+/FyFrfwIE/zM8t92AuP4tnlXhIVYW9U
20U7OV5eWFxuV82FdVWsb9rLLlh/zqgIsFDBlMeLrNjMgwO3KMVyZg/GykcF
SVkqwt6otot2crz53GdTg2O48L2vp7g72okHqU5CH7ESa5fvf7DyHRcOTbkC
T2U32jPjC6dsVhH2RrVdtJPj3oK8PQUbuchx3LUz/GAn2MwkPuc3JTjPEsTm
2VxcWBI9FBbdBU6ZaqT6HXFvVNtFOzkuNk995R7ERV9K6cVpFzvwVWLdybCj
SjTW5di6ZXFxNMaes86jA/b+JTJvFnFvVNtF+6d1tn5q2+O7XJyIv5uwXSJE
mfpwxTln4t6odj/t1PR/APBn2iU=
              "], {{0, 0}, {25, 25}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["488", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"100", ",", "100"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.0488`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1.0206207261596575409155350311274547466524781169402792201\
802`30.", BaselinePosition -> Baseline, ContentPadding -> False, FrameMargins -> 
                    0, ImageSize -> {{1, 300}, Automatic}, StripOnInput -> 
                    True], LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "4.125`30."}], BaselinePosition -> Baseline, 
                    ContentPadding -> False, FrameMargins -> 0, 
                    ImageSize -> {{1, 300}, Automatic}, StripOnInput -> True],
                     LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    
                    RowBox[{
                    "-", "5.\
6568542494923801952067548968387923142786875015077922927068`30."}], 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, ImageSize -> {{1, 300}, Automatic}, 
                    StripOnInput -> True], LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "11.125`30."}], BaselinePosition -> Baseline,
                     ContentPadding -> False, FrameMargins -> 0, 
                    ImageSize -> {{1, 300}, Automatic}, StripOnInput -> True],
                     LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, DefaultBaseStyle -> "Column", 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[Automatic, {100, 100}, 0, {1, {CompressedData["
1:eJwlzy8vxAEAgOGf3XYz210gEAgnnEAgEAgEggtsCAQXzm4Ef0YgEAiEEwgn
nEAgnEAgEAgEAoFAYDOz3WaKolwxz+3e7fkAbyw1NzRbEQRBOigXIkwVUWqo
o4FGmmihjQ666KGPBIOMMEaSCaaYYYElVlhjg0222WGXfQ454oQzLrjihjse
eOKFNz4o8M0PvxT5K/2YqyRCNbXUEyNOM62000k3vfQzwDCjjJNikmnmWWSZ
VdbJsEWWHHsckOeYU8655Jpb7nnkmVfe+aTAF/+uljKN
     "], CompressedData["
1:eJwVyNWyqgAAhWFMQAwQu0XsDlAxUDBRVFCwsNje79c+j3HYM2tmffOn9V9Z
NwMA8M8EAMYAm8litltNNtBihuxW0GKCbZDZancgsAW0WR12J4S4QBvsgJxu
OwKDHhfkRh1OBMY8Li/qdLhdGIJ7vKjP7XThmN/jC3hRtwfD/UGfNxRAg34c
C/tC3kjAHw7i0VjI96d4MJqIRUKBZDwcDaZioUQkGU9Hw6kEEYllkul4lIwl
UkQma5AgE6lcOpNPZslcIUVk08V8hiwVckQ5U8xnK6VcgSxX/1QzWM7Xi9VG
rVSolOvVZrFVqtQazWq7Xq51WpVGk2pX63Sj06p121S9SfcMdql+u9lienSn
3e0PKJoZ9jpUfzDqMr3xkB4ZjWWG40lvwI760+GE4cYDfjRlOaPN5vyUHY25
xWTG8vPpcrGazLg1P50vVwK3mC35+Xqzmi2E7UZcrueL1U7Y7tdLcbMVDruV
uN9I6+1BFnbi5ijttyf5sFOO4l5SdwYl5bw/yofLST1elbOknuTL7Xy9K8eb
qp0uj7tyPava5fa8nx/X1/umXZ6f6/310J/a+/Zj4KPp7+/z8Xn9fJ/627i3
/v0PibVi1w==
     "]}, {
    1.0206207261596575409155350311274547466524781169402792201802`30., \
-4.125`30., \
-5.6568542494923801952067548968387923142786875015077922927068`30., \
-11.125`30., 
     2.2821773229381921394040407616700088914697695624915968926117`30., \
-7.7567175188133973109580662365686560745588336887461220733692`30., \
-5.6568542494923801952067548968387923142786875015077922927068`30., \
-8.0829037686547607031280829270274043790664245177817762642613`30., 
     3.952847075210474164998616930540898167149443924156521033572`30., \
-15.625`30., \
-7.7567175188133973109580662365686560745588336887461220733692`30., 
     6.03807364424559940571611006548740488464172203114957212029`30., \
-6.7082039324993690892275210061938287063218550788345771728127`30., \
-17.625`30., \
-3.6514837167011074230464652186720142263516312999865550281793`30., \
-8.0829037686547607031280829270274043790664245177817762642613`30., 
     1.0206207261596575409155350311274547466524781169402792201802`30., 
     8.5391256382996653193508655671008766589458605528790274412848`30., \
-17.125`30., 1.080123449734643371827661239347999442950867384509724424952`30., 
     2.2821773229381921394040407616700088914697695624915968926117`30., \
-6.7082039324993690892275210061938287063218550788345771728127`30., \
-14.125`30., 11.456439237389600016470117984320021222461141441919929756518`30.,
      14.7901994577490401064183207289040426210373760075784618722303`30., 
     7.4833147735478827711674974646330986035120396155574538926076`30., 
     3.952847075210474164998616930540898167149443924156521033572`30., \
-8.625`30., -3.6514837167011074230464652186720142263516312999865550281793`30.,
      6.03807364424559940571611006548740488464172203114957212029`30., 
     15.5563491861040455368185759663066788642677730801410759486953`30., 
     1.080123449734643371827661239347999442950867384509724424952`30., 
     18.54049621773915737177849360200178265245`30., -0.625`30., 
     25.29822128134703465599114835546174826976`30., 
     22.70737765573118749066899607288645274396`30., 
     7.4833147735478827711674974646330986035120396155574538926076`30., 
     8.5391256382996653193508655671008766589458605528790274412848`30., 
     9.875`30., 22.875`30., 
     15.5563491861040455368185759663066788642677730801410759486953`30., 
     36.70830968595530414470087297879781594664`30., 
     27.29087148968802474043985427348639510905`30., 
     11.456439237389600016470117984320021222461141441919929756518`30., 
     38.375`30., 25.29822128134703465599114835546174826976`30., 
     14.7901994577490401064183207289040426210373760075784618722303`30., 
     32.29099461666260495202725854635041210918`30., 
     49.78620960332958171870529939123072075791`30., 
     18.54049621773915737177849360200178265245`30., 
     64.53164598345011479375122891637787609775`30., 
     37.70775782249589021564595553074233128186`30., 
     36.70830968595530414470087297879781594664`30., 56.375`30., 
     49.78620960332958171870529939123072075791`30., 
     22.70737765573118749066899607288645274396`30., 
     43.54116825871043774482855782845008207873`30., 
     80.94442537939224879330183366897326983473`30., 76.875`30., 
     49.79123082096551935634330277275914386591`30., 
     99.02440776562783025374420507399344010812`30., 
     64.53164598345011479375122891637787609775`30., 
     27.29087148968802474043985427348639510905`30., 99.875`30., 
     80.94442537939224879330183366897326983473`30., 
     118.77148928369411781216413892666025473221`30., 
     32.29099461666260495202725854635041210918`30., 
     56.457948953181074624301249649227884884`30., 125.375`30., 
     140.185591271000458693927935103118618855`30., 153.375`30., 
     63.54132513569417211229929226969768907041`30., 
     99.02440776562783025374420507399344010812`30., 
     37.70775782249589021564595553074233128186`30., 
     43.54116825871043774482855782845008207873`30., 
     163.2666530556684131844762805712763261426`30., 183.875`30., 
     71.04136119191410876242204071741561715764`30., 
     118.77148928369411781216413892666025473221`30., 
     188.01462709055378173263086763435444886969`30., 
     78.95805848676878402364044275345832881804`30., 216.875`30., 
     140.185591271000458693927935103118618855`30., 
     49.79123082096551935634330277275914386591`30., 
     56.457948953181074624301249649227884884`30., 
     163.2666530556684131844762805712763261426`30., 252.375`30., 
     214.42947558579720595044509039779120658356`30., 
     87.2914180585163060545224995222332173126`30., 290.375`30., 
     188.01462709055378173263086763435444886969`30., 
     96.04144070833867563621314888275805805382`30., 
     242.51116812771049506956458210566489711406`30., 
     63.54132513569417211229929226969768907041`30., 
     272.25967996259257583042413395610169794888`30., 330.875`30., 
     214.42947558579720595044509039779120658356`30., 
     71.04136119191410876242204071741561715764`30., 
     105.20812706250406394979943892433035216994`30., 
     242.51116812771049506956458210566489711406`30., 
     303.67499073845379801393257343780281750843`30., 
     78.95805848676878402364044275345832881804`30., 
     114.79147761629925692788393707779993248787`30., 373.875`30., 
     272.25967996259257583042413395610169794888`30., 
     336.75708356816094349309718249098707702719`30., 419.375`30., 
     87.2914180585163060545224995222332173126`30., 
     124.79149276559947724851349282477341218393`30., 
     135.20817282989959849197079753014359798442`30., 467.375`30., 
     96.04144070833867563621314888275805805382`30., 
     371.5059443221153448932547513303935277815`30., 
     303.67499073845379801393257343780281750843`30., 
     105.20812706250406394979943892433035216994`30., 517.875`30., 
     146.04151806934903263327731115760053441198`30., 
     336.75708356816094349309718249098707702719`30., 
     407.9215610874227864022579287218225591651`30., 
     157.29152869751123376930408726661751765046`30., 
     446.00392374955626616558415771144232519082`30., 570.875`30., 
     371.5059443221153448932547513303935277815`30., 
     114.79147761629925692788393707779993248787`30., 
     168.95820489103214901024193365061460613848`30., 
     485.75302366531904069833300253516889983235`30., 
     407.9215610874227864022579287218225591651`30., 626.375`30., 
     124.79149276559947724851349282477341218393`30., 
     181.04154679704508828980557285939964834773`30., 684.375`30., 
     135.20817282989959849197079753014359798442`30., 
     527.16885340467526524773451448266397706049`30., 
     446.00392374955626616558415771144232519082`30., 
     570.25140654510153226130843261177368207663`30., 744.875`30., 
     193.54155453889826947168665519177015630544`30., 
     485.75302366531904069833300253516889983235`30., 
     146.04151806934903263327731115760053441198`30., 
     615.00067750640188488515311367543215546934`30., 807.875`30., 
     206.45822822062578186838904859476468559482`30., 
     157.29152869751123376930408726661751765046`30., 
     527.16885340467526524773451448266397706049`30., 
     219.79156793046755398846458997231924471171`30., 873.375`30., 
     661.41666141699212565354289370020866054921`30., 
     570.25140654510153226130843261177368207663`30., 
     168.95820489103214901024193365061460613848`30., 
     233.54157374366275060079427493521147290672`30., 
     181.04154679704508828980557285939964834773`30., 
     615.00067750640188488515311367543215546934`30., 941.375`30., 
     709.4993540048738714801631649619008571027`30., 
     759.24875150813825139138239039366884573236`30., 
     247.70824572468313373023646364077266354756`30., 
     661.41666141699212565354289370020866054921`30., 1011.875`30., 
     193.54155453889826947168665519177015630544`30., 1084.875`30., 
     810.66485060103598894090186591772918853512`30., 
     206.45822822062578186838904859476468559482`30., 
     709.4993540048738714801631649619008571027`30., 
     262.29158392903116555002280312739986697447`30., 
     759.24875150813825139138239039366884573236`30., 1160.375`30., 
     277.29158840469719520705435209874333429711`30., 
     219.79156793046755398846458997231924471171`30., 
     863.74764833254394221482993056799608906866`30., 1238.375`30., 
     918.49714207503117303895232102551212637483`30., 
     292.70825919334766868094534875362602102456`30., 
     233.54157374366275060079427493521147290672`30., 
     810.66485060103598894090186591772918853512`30., 1318.875`30., 
     247.70824572468313373023646364077266354756`30., 
     308.54159633129965814545667155259385442332`30., 
     974.91332948113905660248963947218033720521`30., 
     863.74764833254394221482993056799608906866`30., 
     918.49714207503117303895232102551212637483`30., 
     324.79159985032453627330662013970285503997`30., 
     1032.99620844738179835918438974732845599191`30., 1401.875`30., 
     262.29158392903116555002280312739986697447`30., 
     341.45826977831419920046951231239894670866`30., 
     277.29158840469719520705435209874333429711`30., 
     1092.74577708327627896492817775267814832338`30., 1487.375`30., 
     974.91332948113905660248963947218033720521`30., 
     358.54160613983606872361029031768641277994`30., 
     1154.16203368504545519507343052436669480099`30., 
     1032.99620844738179835918438974732845599191`30., 1575.375`30., 
     292.70825919334766868094534875362602102456`30., 
     1217.24497671312381281283996892529007008228`30., 
     376.04160895659760309235207347671153642436`30., 1665.875`30., 
     1092.74577708327627896492817775267814832338`30., 
     308.54159633129965814545667155259385442332`30., 
     1281.99460477283860785633507739528231284761`30., 
     393.95827824783679750292862459345549260086`30., 1758.875`30., 
     324.79159985032453627330662013970285503997`30., 
     1154.16203368504545519507343052436669480099`30., 1854.375`30., 
     341.45826977831419920046951231239894670866`30., 
     412.29161403065185313114380238113064055422`30., 
     1217.24497671312381281283996892529007008228`30., 
     1348.41091659775581928123755285418368395984`30., 
     431.04161632028061055874977336308341882657`30., 
     1416.49391103527162320387691119293619464716`30., 
     1281.99460477283860785633507739528231284761`30., 
     358.54160613983606872361029031768641277994`30., 1952.375`30., 
     1348.41091659775581928123755285418368395984`30., 
     1486.24358703410390863433778551128602469173`30., 2052.875`30., 
     450.20828513033831105863803091760263271946`30., 
     376.04160895659760309235207347671153642436`30., 
     469.79162047302064098431357701682268127241`30., 
     393.95827824783679750292862459345549260086`30., 
     1416.49391103527162320387691119293619464716`30., 2155.875`30., 
     1557.65994363339779631182543404061951235098`30., 
     1630.74297995320730022841401712327251096693`30., 
     1486.24358703410390863433778551128602469173`30., 
     489.79162235927773505714726417425289183705`30., 2261.375`30., 
     412.29161403065185313114380238113064055422`30., 
     1557.65994363339779631182543404061951235098`30., 
     510.20829079896379120148837678523851919562`30., 
     1705.49269518615450836002549760278232398302`30., 
     431.04161632028061055874977336308341882657`30., 2369.375`30., 
     2479.875`30., 531.04162580096612736505033494047410909213`30., 
     1781.90908859009976149012779250421957899779`30., 
     450.20828513033831105863803091760263271946`30., 
     1630.74297995320730022841401712327251096693`30., 
     552.29162737331684690496059112227395997042`30., 
     1705.49269518615450836002549760278232398302`30., 
     1859.99215948168268974442357306031813086955`30., 2592.875`30., 
     469.79162047302064098431357701682268127241`30., 
     573.95829552328974069986029845450092526413`30., 2708.375`30., 
     1939.74190723061573665673323226112548353791`30., 
     489.79162235927773505714726417425289183705`30., 
     1781.90908859009976149012779250421957899779`30., 
     2021.15833125462983853073597857826886973013`30., 
     596.0416302574846155743363703828340113199`30., 
     510.20829079896379120148837678523851919562`30., 2826.375`30., 
     1859.99215948168268974442357306031813086955`30., 
     2104.24143101498693022354415184083375716951`30., 2946.875`30., 
     618.54163158190087989517343091917360820297`30., 
     1939.74190723061573665673323226112548353791`30., 
     531.04162580096612736505033494047410909213`30., 
     552.29162737331684690496059112227395997042`30., 
     641.45829950200192261289464562134953020033`30., 
     2188.99120601248647410049122142625404451779`30., 3069.875`30., 
     2021.15833125462983853073597857826886973013`30., 
     573.95829552328974069986029845450092526413`30., 3195.375`30., 
     2275.40765578390370326531554716223456476895`30., 
     664.79163402277157918186747356708659073608`30., 
     2104.24143101498693022354415184083375716951`30., 
     2188.99120601248647410049122142625404451779`30., 
     2363.49077989880609279474880367656895972316`30., 
     688.54163514876377687109848631330722389127`30., 3323.375`30., 
     596.0416302574846155743363703828340113199`30., 
     618.54163158190087989517343091917360820297`30., 3453.875`30., 
     2453.24057795670201435324917770300045418333`30., 
     712.70830288414628515039056361010669042798`30., 
     2275.40765578390370326531554716223456476895`30., 3586.875`30., 
     2363.49077989880609279474880367656895972316`30., 
     737.2916372327393578446121209994213725961`30., 
     2544.65704958448182630884280601434392141779`30., 
     641.45829950200192261289464562134953020033`30., 
     2637.74019443411699574398565034330854156888`30., 
     664.79163402277157918186747356708659073608`30., 
     2453.24057795670201435324917770300045418333`30., 3722.375`30., 
     762.29163819804993756696757107572188393862`30., 
     2544.65704958448182630884280601434392141779`30., 3860.375`30., 
     2732.49001218058739799595923616347983282601`30., 
     787.70830578330199551878406551540089941417`30., 
     688.54163514876377687109848631330722389127`30., 
     2637.74019443411699574398565034330854156888`30., 
     2828.9065025200108228478999664233247250414`30., 4000.875`30., 
     712.70830288414628515039056361010669042798`30., 
     813.54163999146349779952697204913894705606`30., 
     2732.49001218058739799595923616347983282601`30., 
     2926.98966516795204074828738966669457171426`30., 
     737.2916372327393578446121209994213725961`30., 
     839.79164082527042024312645781502031386777`30., 4143.875`30., 
     762.29163819804993756696757107572188393862`30., 
     866.45830828724817531410206397300704607093`30., 
     2828.9065025200108228478999664233247250414`30., 
     3026.73949985789163553384842216331392701254`30., 4289.375`30., 
     3128.15600633983726511824593335786319888015`30., 
     787.70830578330199551878406551540089941417`30., 
     2926.98966516795204074828738966669457171426`30., 4437.375`30., 
     893.54164237973076498345849492694604512773`30., 
     921.04164310487793130236020873329326002286`30., 
     3231.23918437906212926807874598078918091205`30., 4587.875`30., 
     3026.73949985789163553384842216331392701254`30., 
     813.54163999146349779952697204913894705606`30., 
     839.79164082527042024312645781502031386777`30., 4740.875`30., 
     948.95831046469054040111767484375431729226`30., 
     3128.15600633983726511824593335786319888015`30., 
     3335.98903375495725464565291887625220912599`30., 
     866.45830828724817531410206397300704607093`30., 4896.375`30., 
     3442.40555425998579421482181741891419258579`30., 
     3231.23918437906212926807874598078918091205`30., 
     977.29164446102440487089124822537307975338`30., 
     3550.48874569872891652345052491460555824869`30., 
     1006.04164509560272311467125498553599597789`30., 
     893.54164237973076498345849492694604512773`30., 5054.375`30., 
     3335.98903375495725464565291887625220912599`30., 
     1035.2083123700272916003594663326575688918`30., 
     3442.40555425998579421482181741891419258579`30., 
     921.04164310487793130236020873329326002286`30., 5214.875`30., 
     3660.23860788701406029400322145547669815446`30., 
     3771.65514065111737649164368750195956784795`30., 
     1064.7916462857886264437901407968840200037`30., 
     948.95831046469054040111767484375431729226`30., 5377.875`30., 
     3550.48874569872891652345052491460555824869`30., 5543.375`30., 
     977.29164446102440487089124822537307975338`30., 
     3660.23860788701406029400322145547669815446`30., 
     3884.7383438270330950209915154303610737483`30., 
     1094.79164684427511391843390628960620061449`30., 5711.375`30., 
     1006.04164509560272311467125498553599597789`30., 
     3771.65514065111737649164368750195956784795`30., 
     3999.48821725980335460161979731340023613931`30., 
     1125.20831404678129493354041749656904226577`30., 
     4115.90476080290273764198411552737279854514`30., 
     1156.04164789451537590951033831056005119812`30., 
     3884.7383438270330950209915154303610737483`30., 5881.875`30., 
     1035.2083123700272916003594663326575688918`30., 
     1064.7916462857886264437901407968840200037`30., 
     3999.48821725980335460161979731340023613931`30., 
     1187.2916483886060475270515307957157886787`30., 6054.875`30., 
     4233.98797431767237024345772644022278234998`30., 
     1218.95831553010868329774869450409679279897`30., 
     4115.90476080290273764198411552737279854514`30., 
     1094.79164684427511391843390628960620061449`30., 
     4353.7378576727989920731549053389275035748`30., 6230.375`30., 
     6408.375`30., 4233.98797431767237024345772644022278234998`30., 
     1251.04164932001098159719473295909960040513`30., 
     4475.15441074383488138085381385098744964271`30., 
     1125.20831404678129493354041749656904226577`30., 6588.875`30., 
     4598.23763341275494516868161700029868434704`30., 
     4353.7378576727989920731549053389275035748`30., 
     1283.54164975923810754746461784443864866108`30., 
     1156.04164789451537590951033831056005119812`30., 
     4475.15441074383488138085381385098744964271`30., 
     4722.9875255675476605609450894810975517562`30., 
     1316.4583168486573847886956730818401887016`30., 
     1187.2916483886060475270515307957157886787`30., 6771.875`30., 
     4598.23763341275494516868161700029868434704`30., 
     1218.95831553010868329774869450409679279897`30., 
     1349.79165058908258161657086559838924950663`30., 
     4849.40408710183688689063758448434939495792`30., 6957.375`30., 
     1251.04164932001098159719473295909960040513`30., 
     1383.54165098127783107833935401734747060549`30., 
     4977.48731791453186420682058659582090009082`30., 7145.375`30., 
     4722.9875255675476605609450894810975517562`30., 
     1417.70831802596122032463310095330055656355`30., 
     5107.2372179095029773876278061790134569614`30., 
     1283.54164975923810754746461784443864866108`30., 
     4849.40408710183688689063758448434939495792`30., 7335.875`30., 
     1452.29165172380808073059993406784103142977`30., 
     1316.4583168486573847886956730818401887016`30., 
     5238.65378699528109978152081039410059005075`30., 7528.875`30., 
     4977.48731791453186420682058659582090009082`30., 
     5107.2372179095029773876278061790134569614`30., 
     5371.73702508477853973682556303719634857401`30., 
     1487.29165207545400696152096272466137644525`30., 
     1349.79165058908258161657086559838924950663`30., 7724.375`30., 
     5238.65378699528109978152081039410059005075`30., 
     1383.54165098127783107833935401734747060549`30., 
     1522.70831908149763020811280412741401044996`30., 7922.375`30., 
     5506.48693209502980051059373605975989736849`30., 
     5371.73702508477853973682556303719634857401`30., 
     1558.54165274250316820599876355995766489665`30., 8122.875`30., 
     5642.90350794695053148135328294983571699345`30., 
     1417.70831802596122032463310095330055656355`30., 8325.875`30., 
     5506.48693209502980051059373605975989736849`30., 
     1452.29165172380808073059993406784103142977`30., 
     5780.98675256511319860346744538755615652597`30., 
     1594.7916530590027723399381685636613041777`30., 8531.375`30., 
     5920.73666587753813662447301947656494796069`30., 
     1631.45832003149869007962392582706857055387`30., 
     5642.90350794695053148135328294983571699345`30., 
     1487.29165207545400696152096272466137644525`30., 
     6062.15324781549876648433082426351724202132`30., 
     5780.98675256511319860346744538755615652597`30., 
     1668.54165366046525916838638292946355560489`30., 
     1522.70831908149763020811280412741401044996`30., 8739.375`30., 
     1706.04165394635074836136496752810656060429`30., 
     6205.23649831333987005613545962815002967775`30., 
     1558.54165274250316820599876355995766489665`30., 8949.875`30., 
     5920.73666587753813662447301947656494796069`30., 
     1594.7916530590027723399381685636613041777`30., 
     6349.98641730830791231477891137700858786611`30., 
     6062.15324781549876648433082426351724202132`30., 9162.875`30., 
     1743.95832088957905806161958602835234313665`30., 9378.375`30., 
     1631.45832003149869007962392582706857055387`30., 
     6496.40300474039248931513939692816286324357`30., 
     6205.23649831333987005613545962815002967775`30., 
     1782.29165449055129291034263455364244519769`30., 
     1821.04165474964721723256155211175910961225`30., 
     6349.98641730830791231477891137700858786611`30., 9596.375`30., 
     1668.54165366046525916838638292946355560489`30., 
     6644.48626055217806006583314513834210486652`30., 
     1860.20832166722660320655792292132169977812`30., 
     1706.04165394635074836136496752810656060429`30., 
     6496.40300474039248931513939692816286324357`30., 
     6794.23618468870519241718330668433411723303`30., 9816.875`30., 
     1899.79165524363048069973165615556696776915`30., 10039.875`30., 
     6644.48626055217806006583314513834210486652`30., 
     6945.65277709734061825464362714411887882538`30., 
     1743.95832088957905806161958602835234313665`30., 
     1939.79165547918229688359263330783613366242`30., 
     1782.29165449055129291034263455364244519769`30., 10265.375`30., 
     6794.23618468870519241718330668433411723303`30., 
     7098.73603772765545231977547864713174771089`30., 
     1821.04165474964721723256155211175910961225`30., 
     7253.48596653131098250644739074240460324045`30., 10493.375`30., 
     1980.20832237418899299524875886295807499215`30., 
     6945.65277709734061825464362714411887882538`30., 
     1860.20832166722660320655792292132169977812`30., 10723.875`30., 
     7098.73603772765545231977547864713174771089`30., 
     7409.90256346195148806483710996907225169542`30., 
     7567.98582847510358629164418820399634372911`30., 
     1899.79165524363048069973165615556696776915`30., 10956.875`30., 
     7253.48596653131098250644739074240460324045`30., 
     7409.90256346195148806483710996907225169542`30., 
     1939.79165547918229688359263330783613366242`30., 11192.375`30., 
     1980.20832237418899299524875886295807499215`30., 
     7567.98582847510358629164418820399634372911`30., 11430.375`30.}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.865416376930394*^9, 3.865416412283412*^9}, 
   3.865416532897962*^9, 3.865416726638124*^9, 3.865416773593899*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"ec1b63dd-82d7-424e-94d1-b16c53a195e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "@", "Hmatrix"}]], "Input",
 CellChangeTimes->{{3.8654164041559267`*^9, 3.865416422035471*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"599f1882-849c-4f0a-9de0-14c54a022771"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt3XlUjuvfNvBkysw2J3YyFZGZBvtb5lkTtYlkSLs0aKBBhCgUEUmmDJva
ZU6mIlOISpQmzfN9X9cVNjKknv2s93n/PH/vOp/3Wu9vPe86rGV9WOtYy+q/
Yx2+93kPXOVqvraliorKmv/6/Z9//l+/3hOEEEII4f9vmg3UuXKtUqCQb+2i
7hbUUJOXr6cg5TLzF9+lTHGeJpKWd685B7VLyVy5VC/CbcP/8d8p8+1xaVZZ
wX/9/X//+vf//BBCCCGE/13NN9T0j1AKJE0rmlf4tYYWanQIWrc2j5lfoOK6
edyvIm2KNI7cN7+U9CeZnNxg5c7MN7iduO2XU097eqs2359QSKb+j2eOqh/9
b/+5IYQQQgj/b73lELrY46NAa7RbZJf0qqWIX8sfbSpk96jAL62NDH8INMX6
RM4ct1Jy1684Hmfkwcy7/Xkw4fe4ekp0O6jutbuQ1JQXWp0oNGbm/7t7F4QQ
Qgjh/2uzNfJLWjcIdOfl7PvFw2vpmY3jr/2H5zPz597t3ByYK5BFlG6Lx+Gl
pDnJeMR0TU9mfv2JkvdHt9XTql1PVNa9K6RXrbLOdtOdw8zz7l0QQgghhP8u
Wy8M0+qnIlJ1isG6I+a1tGbq6iSrVHaPmpIlTemSINAyY0n9Z2IpeTlbzTFU
9WLm66wDXYys6+mw9bGrh0e9I+tUlwDfBFNmnnfv4r3vghBCCCGUS0uzOOPT
rUQaemxQs619Lbkbe68f1qOAmS/OsC/NiRDIY/v+6lbZpXTleRfyTvoXPSo3
YKSJXj3Nruk+skXAO2pMqQ4d9NySmefdu3jvuyCEEEII5bIia0zvvzqJ1PQk
0aI8tJbK6n4uD7nM7lFOJmfOVngI1Cbsxru7X0ppZNujm3WPbWTmHdVzRsa0
qSf/sXoesa/eUYC76feW2dbMPO/exXvfBSGEEEIolw8Gazwf9ItIt3ONIz1P
19LHS6dW7Wpk96iZQ5/WjDUTaNXJTg/G9C0j7RYFc8h7EzPvornNdUOxRBMN
xB37NIuosiDuSb8cG2aed+/ive+CEEIIIZTLhe1HJxX2Ecl25eyhb+/VklOT
xomeboXMfPzpnPhHowTauftIuL1hGZ15lXX+ioU3M/+xLvDj8USJPJoW2F5x
LSIN/8ZNE+xXMvO8exfvfReEEEIIoVxWHBnhE/qrSKU7o/dovKul1BulLQwq
2D3KNz/94+GOAuWMsLBcuryM7AK3hgeM9GHmv28sTRy+X6LRW81ad7lXRFq1
x5K+2qxi5nn3Lt77LgghhBBCuTyZ3llFf6hIN2fPeTLrWy0p3yrC/l78jpn/
kJnT99x75T99S0zV8CmjXXnPrSJK2D1qx9PwJHUHiTySGrz+6lBM50YlXMld
uIaZ5927eO+7IIQQQgjl8lhcvmmxrkhOsVPfWvWqI3G14dypz9g96pdvp+2+
ZSgpcWHHNfuiyuieZenqQYm+zPz+wpMtnU0kmphofHW7dTEFm86wfG1oz8zz
7l28910QQgghhHL5c0yIk/84kYJjQpLnj6uj+hWvRw41KGLm85daDw+7qKR1
g2zq790tI48Tsc2d9/ox8xrXW4QM7CeR/3rdm0fOFVPxgkUXagc5MPO8exfv
fReEEEIIoVzerrdt16AvUmjJsBsmi+rI0MEhtkUcu0cd1vrm4RCipLdtihwu
vSujkgODR/y+YjMzP2Jh0uLJn0WaVXInqK6+mM4MfR2r3taRmefdu3jvuyCE
EEII5bJr4/YCFxKpbYW/iXJ1He1vE5++pVcxMx/zPmHToQNK+lKUrnWnSzkF
PAhO0LM7yMwnx2esvJop0sHOgpa3QQm9LEhf5lDlxMzz7l28910QQgghhHJp
3SLmRNNUkdJ36h5cuaGOsqU54jYbdo+akXRa68sJJXWa6ORfMqOcogem9D1y
5RQz/ypj8sWQv0Sy+34/eFpgCdk7Tk3OuufMzPPuXbz3XRBCCCGEcpmqsG9c
OFeka5mxqS1D6+hTWOvlswV2j0pprvX/fkFJbZf1uHdxQzlpWzsNP2fwJzNv
n/DdIG2nSNfPTLw9L72EXHP0MpaEuzLzvHsX730XhBBCCKFc3tb5/Ef2ApGG
rbJubx5VRyfUdi4JGFPCzJf4dfYenqCkiRe0Xnw7X04Oi0euP/M0jpnfsrxH
e0c7kR611F76rH0pSZ3mPfW76sbM8+5dvPddEEIIIYRy2X9Bfw/1xSK9OZ4z
JuNGHWWRVrRfCrtH9R796qhJipKySx3G5BeWk3fkre9nBl1l5tfV297ZMEmk
uCRrH5/xpbSv2vzmx6QNzDzv3sV73wUhhBBCKJeWqT32HrYWSX9goMPnh3Vk
FvtA31O1lJkPbj2qgl7+06POVr+f17WC5i/qufqpTQIz/2Z6y/jCTiLlvCn4
+Wx5KVXr9t7a8MSdmefdu3jvuyCEEEII5fJUgMcyablICxvy03Vy6ygv78Yv
qpPYPWpo5TDLIXlK6h50rJ359Arq8/tQ19/232TmHy5vKr5QKRDNuVSTuKuU
lKVHBux56cHM8+5dvPddEEIIIYRy6ZvXpsXU1SJ9f3o5fq6yjuw8tLSWO7F7
VM1TP6+LZUryNVmq1sLlP3tU2Pu2v95h5scYmFm8vSuQUuPNxGmXS+mias7h
v155MvO8exfvfReEEEIIoVz2zsjwC3MQ6Vt469bWzXWU5dvWYecpdo+66XRx
gp2opJTum9+MPF1Bj+d9njZ4ejIz79GcE7M+VKCeDceGrSgqpTf51cc3fPVi
5nn3Lt77LgghhBBCuYy1e/Ei31mkrjaFb826K0jnw5pK3zfsHpX+zLd/41cl
5ce8aRDfVFDHkM0n5oxJYeZrV+Wdsl0r0LSg1SbDWpeRSu7xRxcbNjLzvHsX
730XhBBCCKFcOoY3vu/vIVKPgWO0Jg9TUGSewZEpbcuY+fMPKnS3tBLoytaV
XiZtKimh5rnj8OQHzHzx7rF5CVMEuu61OWWfbhlVmnR5uOnTJmaed+/ive+C
EEIIIZTLivt6ar4bRRocUjJGMU5BwV+SZ03TZveogZNqV9d0EWhYV6352pMr
SX1P8e6EGY+Y+cWelWbrewm09mH1uUMWZRSg/ltkpuTNzPPuXbz3XRBCCCGE
cun4uvFOhL9I2/+0GZK2UEG9WplGD3dh9ygHteCHk/oJdDat9+Yzf1TSoXaJ
32vSHjPz0bOexe+tU9Khnp+H6wT806NiTJrSO7K/d5h37+K974IQQgghlMst
Rkc31waIpNGlg/biZQpa2fVxcto+do9qr70ta/hggd4b9Tj4JKySVngOPP+4
6Qkz3/+2TmzbR0p6OkC1wOl8GW2zqdthosr+3mHevYv3vgtCCCGEUC71QjPz
vweJNEgnuHPnjQp63m3WjvnZ7B5VPdNq6xw9gcr93DztH1TSGle3O3P9nzLz
6lJ5ddVxJU3ZtVKa/7KMZmxZUDb1M7tH8e5dvPddEEIIIYRy2Xpizoype0W6
cHhiK/ftCkrvHd8p6BO7h/haPLNcZCCQS8vmy1EfKil6s4em79dnzPzO1jr9
hocq6fiXNYJjYxmVGpbZ95q+l5nn3bt477sghBBCCOXSSWuq47owkUyWh2hX
HFbQ6neWbfsOK2fmUwZnmxnNEMhQ8/70VQOrSLvvkDxztzRmvpPoNWLJMSXl
/hlcvcagnNxWWkToFx9n5nn3Lt77LgghhBBCuexwuWJ10GGRAnVWpRrHKkh7
6MZJ3r+ze9T0/b4bu5oKNLXHlbHJplU01WVrWXblC2a+Ltrd5XScku4dT/r9
/LZySslynak75gIzz7t38d53QQghhBDK5ex3t8eeiRKp4sfNoj1JCqr+2uXk
ub3sHjXR12dekLVABwzPtXngVUXpquZDVNTSmfnwecc+b7+tJJOhF2yX3iun
V86TzcdduMTM8+5dvPddEEIIIYRyGfrX47c3T4n0KSfU5UGmgu5YaxmeTGb3
KMM9lvd1Vgvk4/Xp/NRzVVTwVpGV7ZXBzGfkjplMT5VUq+Hl5PS9nGIsIoYc
bXWdmefdu3jvuyCEEEII5XK+eivTZ+dEcrxd4V1ZrqCucy92XlvP7lEx0c+X
XncWaGMrj2ir11U0PKbPK/PSTGb+6IyJE99mKykhYKh//oQK6kPnIw/FJTLz
vHsX730XhBBCCKFcmgXPuPv+gkhmpgdnvZEU9PhQVYlL5wp2flde/8HeAhk3
DPi7ubmK7NsouiSffcXM39yqsA+pVNJw3dq2+30rKGxP9OiQSvb35fHuXbz3
XRBCCCGEcjmxVPNh/iWRvp/t8r1eTUl/fdL9fak5u0cFqGxT27xdII0FDScN
R1ZTVNielX8uzmLmz15JK8z7oCQjx5VDbiZUkGX3d2FbN91j5nn3Lt77Lggh
hBBCuUwNf5HbcFUkT6t7d2/2UFK235IjTW7sHiVVBZzduEeg3uoZozVNq+lj
lOXC8mJ2j9J81KejSrOS3HomzTaSKmjpjbcek1TY3/PCu3fx3ndBCCGEEMql
w9iuu9/eEkn3paHdxVFKKhy03z8wgd2jvJ8vKzp+SKCH9T/2bd9cTfF/O7/3
CH3NzI+6md3QoqNAaSN/bBgwrJLcZu9Rv3j/ITPPu3fx3ndBCCGEEMpl88jB
cxR3RQr/U9FzoYGSMptjtR+9ZveoST6Zv/11UiC/JPOZ3jHV9OqSkeFSgzfM
/IuQppPFfQSaeb3/6eW2lZT2MDhJ05f9PS+8exfvfReEEEIIoVwucz/1oDBF
pLui8bcf85UUkK427feWlcy8bmzh05MxAtWOy1rSIruaRl29O+pwFbtHJY/K
8y4YJpBLgOmcyuhKMnJudDvon8rM8+5dvPddEEIIIYRyGWGzqMuzJyKVLeq9
JMJWSe+sSsOTxrF7VGe1AG/fawKFfvRK6d9cTScDq9IG789m5jc/LYpYP16g
8aX6gUW5lWSZGNZOdRT7fXLevYv3vgtCCCGEUC73iePGXk4TaW6ms25/dyU5
XhjdT1zN7lGvfksynZIk0GM/2pGuU0PfFyV0aTcph5l/aWLmlm8skMbFNk/G
da6i1GrXE675z5l53r2L974LQgghhFAuJw5dMPxApkghrtM3hwUqyffJtzxF
OLtH2bZemH/mkUDvbZpHDJ1bQ2WxIR9MEtk9Kv7E2NYDFwg0rCaxQ820KvJr
OqpbuJX9Pjnv3sV73wUhhBBCKJeRbY81OGeLdHD8sRnvI5RknGSYfuMRu0f1
Tb+lMj5doAGHO51u9Kih6ZoHgzKXvmXmS588ehm0TKBSh00vyrZX0eKZ+hnT
Xdnvk/PuXbz3XRBCCCGEcjmoXpG4Klek8rS5b/qdUZLK0hH3H5Wye0g43VkU
/1agn+6GrvYnakjLQjv16k92jyqrDMgLXCfQWH+p/6KbVXRf95tFfAf2u5q8
exfvfReEEEIIoVyOep7drU+xSIG/PZ/udVdJcXbDf7+uVcXMf6w1S+1QKpDw
Y1fE6tQaeusz62LtyVxm3qMq7pSNh0AxTbM39lVWkcnPbYpgs1fMPO/exXvf
BSGEEEIol2Zq+/xUy0Q6MMHniU+qksaKHW4tI3aPqhzY0qJQFKjx4ayfz1Rr
6YxPN0vPkDxmPuLpdK0uWwWaJu7KNh5QTa9y42PuqLPfg+Ldu3jvuyCEEEII
5fKtUVnAxRqRCnp81YkvUVKr5sZ7VQHsHrXqbNuwBd8EWqH8NCd3fC19z00+
YmmWz8x33BiaWxoi0O5BOXGXl1bT2rm/uDmpsd+D4t27eO+7IIQQQgjl8nR+
y8OhCpEidsSc2K1QUtP1V3u0T7B7lNnVcidlG5FmX6xatdqtlp70cN6/27CA
mTftp5o1O1Kg9UJ+zwMh1bSwY7DOsZfsHsW7d/Hed0EIIYQQyuXZF6F28+pF
6hGmYuzZqKSv2bVPHr5g96gFj8xc3XqI9HazInt7XC1ZeW7V6z64kJkfcqZy
596zAm3QergzM7maikzOls7Zx34Pinfv4r3vghBCCCGUy/Eb5rds9UmkhYq8
ZfM6CzRB33fS8O/sHuI8yjLq3UCRzrioRE+orqUOfnWbPrR/x8zvaT/hS8wl
gaKehP5wlKpJXbn68KYF7PegePcu3vsuCCGEEEK5PPmSfG9+FakkasyHzpoC
9W0ILFmhXc3M99CvE/T0RGpcMvixn2YdOV456TD4PbtHbbX8e+Dp2wJV5xht
Wj2ghpraps0a3J79jgHv3sV73wUhhBBCKJd/lK5LXftTJNu49ir3xwgUMazd
vZVL2D3q/egSZbWhSCamZkHhS+rINfHvoz2zipj5Z452AbdSBSoZ2eh01qqG
6pMcW5oq2T2Kd+/ive+CEEIIIZRLp8uPazqrSrRt6JrgZdME2l7d5o1eILtH
+eyYEvZ+ukitdHL17njX0fe3aY73thcz8yWbfmjZZwnk0cf978W7amjkg35X
v59hv2PAu3fx3ndBCCGEEMpl/6ODfmS2ksgvpVfOo//8Hrxe16tMTrF71KHU
Q+ufLRJp5qIlHtdP19HJmx1XVlmVMPO77FtukwoFGuH2ImBtQg310Xe3GWzN
fseAd+/ive+CEEIIIZTLwSEaf5l1kKjLvsjWS+0F0gxzjZ5Qwu5R2X5XT+xd
KlLS6HPHV6TVkXu7dq3u9ixl5rcPvNstolag/V0mBCUpa6j9nJbd0sew3zHg
3bt477sghBBCCOXy9s/KdWqdJZpB82cccxPIMLiLZvk3dg9xun5wkMFakQym
Jcfd/VhHK2nNmFtb2D1qyZbzj6p+CHQxTk3UM66l2/rfqj75s98x4N27eO+7
IIQQQgjlcti2WQ+29pBo9vRMh/a7BfpjQMosN/0aZr5w7aSmN64i9Tp7IjpN
XUGpJZ0mK6rZPWpCjd/UoPYilTSvdR8RUEtLFzuePubDfseAd+/ive+CEEII
IZTLxyE+Orq9JVpoFnhscLhA1gcsx9+0YPeomelOczd6i9T5St9UR0MF3dit
V5JqWMbM/6HR4tOsfiLdP/bGzeV5Lam162X/4Cj7HQPevYv3vgtCCCGEUC49
unWfm9hPosgdZY3zzgl079WosMUB7B51/314RvV2kWba+u0qWqWgSEeLyFVn
/kWPmn2t7qSOSPppDS0Gq9VRy46vNezD2J+/4927eO+7IIQQQgjlcoB7GRlq
SrT0+P1c2xsCXS7dofUgnt2j+qT5XZgaKpJP/whd1T0KWhMbPXycWjkz/31x
VtSrSSLlrm2OnDizjuK2j8vaHcj+/B3v3sV73wUhhBBCKJeWiZXt7w6WSOvW
AN2VqQK5dbBUfstj96jGzIE5u4+IZKOx5lbeFQUN0FWLmOzM7lGnf465FzxL
JLM2i/4O2l5Hn3qln713g/35O969i/e+C0IIIYRQLu9Xa8RN0JHoWkPTt/m5
Ak04f0rR3KqWmX8yP9Aq6bRIo6qLdexyFWQwxKfAPYvdo17+feFIXwuRov8Y
NcXoUh2d83jcQf0o+/N3vHsX730XhBBCCKFc2nTaoxk3UqLHAStNhtYKpNV9
neab0eweZZfgMq8hVqSLYu4L3y8KCjvS876VVgUzv0onxMJlpUie18b3PF5a
R/Nf++ofWsS+d+Ldu3jvuyCEEEII5bLNwW9Bk0dLNHGYxoIXHwTK2VViUTeH
3aO2jJi+SSVBpAOvDqut01DS9uYVN34EsnuUqpXPiAdOIk0f072bfQcFDS/s
61d6j92jePcu3vsuCCGEEEK5NHRuuXfXRInaD4kxOtlOpAxDJ72yIHaP2hCT
2fApWaSfQ2uHt56qJIdQ98DsanaPSlnX9vkdX5HsRDJtnKagXzoM9Opqzr53
4t27eO+7IIQQQgjlsujXouPt9CVauGSdoUZ3kVbkFWUeiGb3qBmbOqdnPxXJ
5M7jsYvXKYmuTNAtn1XJzOe8dDqVuVOka0H9mwqdFbTRZfX0H/fYPYp37+K9
74IQQgghlMtO88zmLiCJfGwb+j8bLtK2Vmv7DC5m95C5u39+OZUl0qPGXzWt
QpTUcdme+MEx7B5lteE365iDIu1pq2Ww7qSCVJOmhtMU9v/T8e5dvPddEEII
IYRy+ZfX4TapJhKZjLvb5dfxIrmezh7i+oXdQy6tPeq1pFCkykzhY/urSkpy
Xtj6eNsqZr6sk/rIrSdEskluOmrzVEHvfbTfP7vA7lG8exfvfReEEEIIoVx6
nDPx05gpkaivM3rHdJHUVu0/021gHTOv6xG3tmeFSLlVnz4vylDSpAf7fyZb
sHvUntCIp41xIm2+ojNlQJOCalZsbD1xIntf4t27eO+7IIQQQgjl0tJ80BPn
uRI57FdPe2MpkvnEF4u3zWP3KG23Q6FnhH/61guv8HUflfTR8FabU1f/RY+y
q4s6nChS5rbWi3SGKslmU3P98pPsHsW7d/Hed0EIIYQQymXHcwaVtxdKdODe
/qKua0XaEbSb7nmxe9TlAI32/b6IZOEyvteYXgJNtnhek9CZ/T0sXzz/Mv34
UKTYyWr1JZZKavAZsrSkN3tf4t27eO+7IIQQQgjlskNqUJ6KhUSmrrsdDbxE
Wtb+pe2zU+weVRo1pXBLs0hTm/puidcXqDw+KLrZkd2jnAI8tRaki7R1SMU1
lc1K+iSYvf7Tn92jePcu3vsuCCGEEEK53CC1PzPVSqLhLmobTHeKlP36UOKp
5+we5XHrvUqGmkSH6zu8yLcRqGbKpdFbU9k9asGL+LdO+SIVNFS2So9VUq+5
/dKefGL3KN69i/e+C0IIIYRQLlsnHVh+/HeJQlZUG47dJ9L6Mf063Cll9xDT
n9+PDOkq0a6CR7MivQU6+FPTNrYz+93Luquae5yqRPpiVa03OFdJmy0T1W44
svcl3r2L974LQgghhFAuDdcnJCTaSqS6NUph8qdIFm0et03UUDDzs1Rv2c/r
K9HDPKcVOscEGmvU+8RBB3aPMh7/ymj+B5HezKgZ16aVQMM6DtrnUcLuUbx7
F+99F4QQQgihXFrlxqi3WSVR/ufgmMaLIuWb2z93HMfuURUX6nbbaElUOvLq
7+uTBVpbbHn1ygN2j4q+FNxhxA+R4v5IWWauI9D48REDNxmzexHv3sV73wUh
hBBCKJd3Hdvqj7OX6GGizuHHySJZZTh832jD7lFnx29v8fsIiWb+tNW3KxEo
rMn8WEt19l23s8PlpPQ2ErXzSOk2d/E/vWvm+fHZ19g9infv4r3vghBCCCGU
y3U6J3WXOUpUUGL1wztdpEVn2qwy3cnuUUMHbEg3Hi/RwlT9n21biHS+nevS
vRvYPepTcjdns18k0m6fEv0yQKDi1sH7VAazexHv3sV73wUhhBBCKJcrlc6f
/V0ksj/dq7BvkUif+s5WabjI7lHBZ1zbjzGUSBzxop76iWTZps+N5BvsHjXx
8mWNxP4SqendVyuIEyjS3VCvMZzdi3j3Lt77LgghhBBCuazXnnHllptEd7On
bt1VJdKxkvXHSx+xe4itWdqW+mkShW1s7TfXSCQfvw/9Lndg7z/bIpfU9hkm
UdnuiENmmQJdW/S5yOg9u0fx7l28910QQgghhHKZe27PoCxPiT49HG2u8lmk
dz/7xgwU2D1k+yu9WUfnSzTOeEFdm+UiLVygujhnJbtHTX7gFEFjJZqWduiS
5zeBPvea3zF3ObsX8e5dvPddEEIIIYRy6XW/0/pKb4nMrqWctG8lUSu1SIVe
DyUzv87PZ/WoxRJ57ehq4OUv0um4jBWjb7B71F87k6bNmiLRmsiDp7UGieS7
13ObcRq7F/HuXbz3XRBCCCGEcmk+I2v3x80SuUz8ueZ2d4lSA1TXdDBi96h0
1Y1vLi2XyFo4tP7wCZFipA2TUtTYvSW3avZ7vdkSzfy033nZfJGmX3SZ4jOB
3Yt49y7e+y4IIYQQQtkck7/5R4BEBtafz33Vkih8R0CPhNXsHhWffe36pDUS
vdv3IG1mokhL/OLPfp/N7i0dfyu+1ctMIq1da5c3OYvkQq5tG0L+xb7EuXfx
3ndBCCGEEMpl8qWvdho7JHJPPBLbcoREQz5tfXTKm92jCjKN0/atl8hlyPnk
tByRzmrndvsUxe4tl3LKVj9YJtGun3aF8yNESrnb0SzjM7sXce9dnPddEEII
IYRyecX5VfnPYIn0vP0OGplI9PzqrX7O19g96uvQS70SNkoUFHNo2sBGkdY5
hfvHN7F7S3K8xQc9B4nclu6smflEpElas9SbXdl53r2L974LQgghhFAuz0Wd
de+xV6IUrUl7NedIlPMw0ODvVHYP2bP0a1bZFonWmAn1av0kUmwzce2yiJ3P
9suIOu4u0WIxoHecIFLXb0EfPN+yexHv3sV73wUhhBBCKJdRFzTvqu2XaHLR
4evdrCXSnj3oxSuR3UPMSulH750SPVy/8v62sRKlz55frBHCzn+aar6yrZ9E
4xMtnXw6SjTHOPOtno58exfvfReEEEIIoVzeW9/uS48DEv2W8e50hq1ERmZb
ln9oITDzl1VPW2mEShQbsKZ3uqlEDhdi9OoK2L1lnLhR2SdIopVJG1V7GEgU
emmLZ8Yp+fYu3vsuCCGEEEK5/HNGR0XTIYneprk8iHSRKPrU97V/aLN71PgU
rSopQqLMaYHvFV4S3W/+uMjTkJ3XHZfr1SFcovmmke766yTqntZsbdSTnefd
u3jvuyCEEEII5fKCEJJQESnRjEs2tov8JWqoOnj10kJ2z9G6Pqrg+UmJLKzt
so/+04+aAydcig1m51Vri37p81SiszaBOyfZ1dO2Ie4v7p+rZ+Z59y7e+y4I
IYQQQrk8bXTXozRKooy4Oy+yAiW6P6JPz0mr2L1oyHKP7QnxEk30vy7NN6+n
mILFm8uPsXvRXY+ON2J7/dO3Bm4Z7f9TosEhZ875/cHO8+5dvPddEEIIIYRy
mVf6qnPecYn6qtemGYdIVLVV+T7Ei91bVi37dZmF3T896lb02KvD6kl3uclv
YdvZvSjrhW+kYblI64s/WhSUSJSlZycWW7HzvHsX730XhBBCCKFctr0y2/di
tEQzDJZaJEdJ9DE/YZjhMXYPsXW8tdhfT6Jgp5eJOzvU09NVC4693sDuRZPd
utTbXhZJ+vPo3+qPJLJMuWb/fCY7z7t38d53QQghhBD+u3y7fN/4UbMlWtM5
8ohv33pq+qxW1d+X3XM+lk7oGR4hUqBnjUmvGxIJAc8TPX9j53n3Lt77Lggh
hBDCf5fuGge+ePtKFPXrnS61E+rJIDbpnupeds9pPeDJo/RnIo2amnrWN0ui
7l/bDbdcxM7z7l28910QQgghhP9TdLjgWxXVKJJSPXfbQ0mirjZF6XdWsnsR
797Fe98FIYQQQvg/xWH+rQRluER3JfHPudPrqeB2R8P94exexLt38d53QQgh
hBD+T/c/AB+Rhjc=
   "], {{0, 0}, {100, 100}}, {0, 1}],
  BaseStyle->{FontFamily -> "Arial"},
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{99.5, 
       FormBox["1", TraditionalForm]}, {80.5, 
       FormBox["20", TraditionalForm]}, {60.5, 
       FormBox["40", TraditionalForm]}, {40.5, 
       FormBox["60", TraditionalForm]}, {20.5, 
       FormBox["80", TraditionalForm]}, {0.5, 
       FormBox["100", TraditionalForm]}}, {{99.5, 
       FormBox["1", TraditionalForm]}, {80.5, 
       FormBox["20", TraditionalForm]}, {60.5, 
       FormBox["40", TraditionalForm]}, {40.5, 
       FormBox["60", TraditionalForm]}, {20.5, 
       FormBox["80", TraditionalForm]}, {0.5, 
       FormBox["100", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {59.5, 
       FormBox["60", TraditionalForm]}, {79.5, 
       FormBox["80", TraditionalForm]}, {99.5, 
       FormBox["100", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {59.5, 
       FormBox["60", TraditionalForm]}, {79.5, 
       FormBox["80", TraditionalForm]}, {99.5, 
       FormBox["100", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.865416422429166*^9, 3.8654165348521233`*^9, 
  3.865416728902472*^9, 3.8654167748124943`*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"726e0aa1-e008-493d-b8ce-653584931ca4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Hmatrix", "//", "Eigenvalues"}], "//", "Sort"}], "//", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{"#", ",", "10"}], "]"}], "&"}]}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.865416537302923*^9, 3.8654165794578037`*^9}, {
  3.865416732245358*^9, 3.8654167354145937`*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"c100f58c-cc42-4f5a-86e2-354655ed58b0"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"-", "26.88071322001426526776194886569654189656`30."}]},
     {
      RowBox[{"-", "26.88071321918455130060864478113079538968`30."}]},
     {
      RowBox[{"-", "20.82519112557437738954141396115839966212`30."}]},
     {
      RowBox[{"-", "20.82519090386285260924416331642019161397`30."}]},
     {
      RowBox[{
      "-", "15.0763261586985867047363328695556712804089528585668665437324`30.\
"}]},
     {
      RowBox[{
      "-", "15.0763017649924014706645760806509241472578459840587411150244`30.\
"}]},
     {
      RowBox[{
      "-", "9.6962874714171005551370164418929508616269352744213894273538`30."}\
]},
     {
      RowBox[{
      "-", "9.6948339001932005935024576716993724361382484764493663403178`30."}\
]},
     {
      RowBox[{
      "-", "4.8201946418922119933240288149087286911488524621029574157881`30."}\
]},
     {
      RowBox[{
      "-", "4.7719644906598637953801468356572670033264636471993897193029`30."}\
]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.865416580260395*^9, 3.865416735750429*^9, 
  3.865416777322516*^9},
 CellLabel->
  "Out[122]//TableForm=",ExpressionUUID->"b851e3d3-204b-49b0-bac0-\
4b19f1f84be9"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Playground", "Section",
 CellChangeTimes->{{3.86541973342597*^9, 
  3.865419735554194*^9}},ExpressionUUID->"2591654c-4b92-40f2-98f3-\
ce4303f1246c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"CoefficientList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Alpha]", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "+", "\[Beta]"}], ")"}], "2"]}], "+", 
         RowBox[{"\[Gamma]", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "+", "\[Delta]"}], ")"}], "4"]}], "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", " ", "x"}], "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["x", "2"]}], "+", 
           RowBox[{"c", " ", 
            SuperscriptBox["x", "3"]}], "+", 
           RowBox[{"d", " ", 
            SuperscriptBox["x", "4"]}]}], ")"}]}], ",", "x"}], "]"}], "==", 
      "0"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]", ",", "\[Delta]"}], 
     "}"}]}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.865419749686811*^9, 3.865419758562173*^9}, {
  3.865420003075316*^9, 3.8654200782031813`*^9}},
 CellLabel->
  "In[251]:=",ExpressionUUID->"aeff558d-4ff8-40ec-ad31-8cafa4ed1c0b"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.865420021165236*^9, 3.8654200786832733`*^9},
 CellLabel->
  "Out[251]=",ExpressionUUID->"f149e582-3eca-4849-8b26-83abbc933d80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CoefficientList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Alpha]", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "+", "\[Beta]"}], ")"}], "2"]}], "+", 
    RowBox[{"\[Gamma]", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "+", "\[Delta]"}], ")"}], "4"]}], "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a", " ", "x"}], "+", 
      RowBox[{"b", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"c", " ", 
       SuperscriptBox["x", "3"]}], "+", 
      RowBox[{"d", " ", 
       SuperscriptBox["x", "4"]}]}], ")"}]}], ",", "x"}], "]"}]], "Input",
 CellLabel->
  "In[252]:=",ExpressionUUID->"5c5d8449-6592-4dee-921f-678f97adcbc0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Alpha]", " ", 
     SuperscriptBox["\[Beta]", "2"]}], "+", 
    RowBox[{"\[Gamma]", " ", 
     SuperscriptBox["\[Delta]", "4"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "a"}], "+", 
    RowBox[{"2", " ", "\[Alpha]", " ", "\[Beta]"}], "+", 
    RowBox[{"4", " ", "\[Gamma]", " ", 
     SuperscriptBox["\[Delta]", "3"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "b"}], "+", "\[Alpha]", "+", 
    RowBox[{"6", " ", "\[Gamma]", " ", 
     SuperscriptBox["\[Delta]", "2"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "c"}], "+", 
    RowBox[{"4", " ", "\[Gamma]", " ", "\[Delta]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "d"}], "+", "\[Gamma]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.865420101242659*^9},
 CellLabel->
  "Out[252]=",ExpressionUUID->"cb2a1fea-2f5a-4812-a283-3c31b88753f5"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1854, 1043},
WindowMargins->{{-1854, Automatic}, {0, Automatic}},
TaggingRules->Association["TryRealOnly" -> False],
Magnification:>1.45 Inherited,
FrontEndVersion->"12.3 for Linux x86 (64-bit) (July 9, 2021)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"311bef3e-5d55-4f9c-9dcb-8ee559cc70b5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 291, 4, 139, "Title",ExpressionUUID->"fe2360b0-62b6-4776-80a3-16c5f3914b5b"],
Cell[CellGroupData[{
Cell[896, 30, 235, 3, 68, "Code",ExpressionUUID->"2cf9f381-7be1-4d17-9079-360bae585fc9"],
Cell[1134, 35, 1176, 17, 34, "Print",ExpressionUUID->"2897ad32-24fa-4451-9ed6-2f56cb8fcb7d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2347, 57, 166, 3, 99, "Section",ExpressionUUID->"9f228cc1-5a8c-4d26-b93c-ccb01f4b74ac"],
Cell[2516, 62, 205, 3, 58, "Input",ExpressionUUID->"6618d7e1-083d-4ce5-bdf3-36c5ba5c7c5d"],
Cell[2724, 67, 2582, 65, 328, "Input",ExpressionUUID->"364e018c-7c51-42f9-aca4-2762d585e75e"],
Cell[5309, 134, 1946, 54, 90, "Input",ExpressionUUID->"e1b4a4bf-c59c-47e0-9ba5-cd7c0763476b"],
Cell[CellGroupData[{
Cell[7280, 192, 707, 18, 79, "Input",ExpressionUUID->"7196e22b-f255-462a-a290-4ee44035c83f"],
Cell[7990, 212, 4786, 125, 177, "Output",ExpressionUUID->"b2eb45b9-5433-42af-986d-22503962fecb"]
}, Open  ]],
Cell[12791, 340, 635, 17, 212, "Input",ExpressionUUID->"babb2478-5ae3-4efd-ac11-428289a02acc"],
Cell[CellGroupData[{
Cell[13451, 361, 977, 26, 79, "Input",ExpressionUUID->"e19f03b9-ca99-4701-b962-92489f16b2b9"],
Cell[14431, 389, 2317, 68, 88, "Output",ExpressionUUID->"a14c42da-1a3f-4251-ba02-d7b485e7f709"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[16797, 463, 270, 6, 77, "Section",ExpressionUUID->"06d2419f-fbb3-475c-be33-6fea5e17123c"],
Cell[CellGroupData[{
Cell[17092, 473, 412, 7, 49, "Subsection",ExpressionUUID->"4fb6a8ac-24b6-40b0-aa29-01e36afe4b6c"],
Cell[17507, 482, 193, 3, 47, "Text",ExpressionUUID->"af6e7ac7-8506-4f8b-978a-df0eb900375e"],
Cell[17703, 487, 1462, 32, 86, "Input",ExpressionUUID->"84e93e8d-6a83-4b8e-8587-8a32b94ff6d3"],
Cell[19168, 521, 618, 15, 112, "Text",ExpressionUUID->"1ddbe78d-48e3-4e46-9a06-2777ad0b30e4"],
Cell[19789, 538, 2295, 57, 105, "Input",ExpressionUUID->"d74e46a9-fda7-4591-8646-42e8c414633f"],
Cell[CellGroupData[{
Cell[22109, 599, 904, 27, 116, "Input",ExpressionUUID->"1de40967-077e-4c16-8cf0-3579c64ced88"],
Cell[23016, 628, 1730, 44, 90, "Output",ExpressionUUID->"fb0912a7-c9d2-401d-8a91-22b451992e79"],
Cell[24749, 674, 1169, 25, 84, "Output",ExpressionUUID->"baaaeb62-ab7c-4a3e-b552-8adf01fdfb09"],
Cell[25921, 701, 799, 13, 56, "Output",ExpressionUUID->"6edb00ea-1ab0-49eb-a003-241152284807"]
}, Open  ]],
Cell[26735, 717, 218, 5, 47, "Text",ExpressionUUID->"0958cbc1-8933-45d5-973f-60968a48490a"],
Cell[CellGroupData[{
Cell[26978, 726, 447, 12, 76, "Input",ExpressionUUID->"98d15196-f75a-4bc5-8886-1e7a98d79a02"],
Cell[27428, 740, 418, 11, 74, "Output",ExpressionUUID->"164f90da-6785-49e8-a000-424c4b537be2"]
}, Open  ]],
Cell[27861, 754, 928, 26, 78, "Input",ExpressionUUID->"38a8245a-412c-48d8-91d3-00ef68dc20ed"],
Cell[CellGroupData[{
Cell[28814, 784, 1306, 35, 116, "Input",ExpressionUUID->"ae35ea29-c65c-4a07-85f3-690b748e058e"],
Cell[30123, 821, 869, 15, 112, "Output",ExpressionUUID->"33041c6e-fc0a-4a20-bb60-3cb51e3e5cc3"],
Cell[30995, 838, 1327, 30, 147, "Output",ExpressionUUID->"30e68b07-c485-4362-ac4e-712b0fdce095"],
Cell[32325, 870, 1983, 52, 162, "Output",ExpressionUUID->"d556e031-1edc-4838-938d-ffc28c3794cc"]
}, Open  ]],
Cell[34323, 925, 269, 6, 93, "Text",ExpressionUUID->"79540f38-fbda-4966-a2f6-102b2e3ba4f1"],
Cell[34595, 933, 2788, 89, 1128, "Input",ExpressionUUID->"3cc96c75-42ec-4eaf-a407-f7b7b6281298"],
Cell[37386, 1024, 554, 17, 94, "Text",ExpressionUUID->"bb90b2f1-f02d-427e-be13-9bf8cb4a5d83"],
Cell[37943, 1043, 1765, 59, 172, "Input",ExpressionUUID->"8eda7c4e-f0c4-4baa-8ba8-117e62050539"],
Cell[39711, 1104, 258, 6, 157, "Text",ExpressionUUID->"b392c7c2-6fb5-4d34-86ee-3b44e01ecef0"],
Cell[39972, 1112, 1308, 39, 281, "Input",ExpressionUUID->"5c1f63e4-2c5a-4e2c-8283-1f0efb2a34f3"],
Cell[41283, 1153, 230, 5, 93, "Text",ExpressionUUID->"005a7ee8-eeee-4101-ae6e-7aa47dbefeac"],
Cell[41516, 1160, 1430, 36, 230, "Input",ExpressionUUID->"85e5043e-67e4-4f5a-8952-714bcda11643"],
Cell[42949, 1198, 276, 6, 93, "Text",ExpressionUUID->"dd5bf477-fccd-438e-9230-60962ef700d9"],
Cell[CellGroupData[{
Cell[43250, 1208, 492, 13, 112, "Input",ExpressionUUID->"ce1e471b-8455-4ab8-b805-57b7eef7f240"],
Cell[43745, 1223, 305, 6, 162, "Output",ExpressionUUID->"b7cfb2ba-02e2-4938-a940-b4ace841e389"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[44099, 1235, 320, 6, 47, "Subsection",ExpressionUUID->"9a018dee-75b4-427b-b19e-bfe63377c498"],
Cell[44422, 1243, 631, 13, 47, "Text",ExpressionUUID->"1bc7fad4-1ed3-4c4e-b071-f91444251558"],
Cell[45056, 1258, 1642, 35, 86, "Input",ExpressionUUID->"834b4028-bc20-4ff1-8341-cc2df7927880"],
Cell[46701, 1295, 323, 7, 47, "Text",ExpressionUUID->"34d5bb7d-55f5-4b3c-b5d3-f0f50f01e81b"],
Cell[CellGroupData[{
Cell[47049, 1306, 462, 12, 56, "Input",ExpressionUUID->"567ecf2c-0687-46cd-ae07-f3c4181be0be"],
Cell[47514, 1320, 2284, 64, 90, "Output",ExpressionUUID->"26ecd390-aba1-4087-8871-86790927e985"]
}, Open  ]],
Cell[49813, 1387, 486, 13, 80, "Text",ExpressionUUID->"63dd1d47-b10f-4817-bbca-f4d49fbc49b1"],
Cell[50302, 1402, 3756, 95, 214, "Input",ExpressionUUID->"8a4d73c9-dde8-4f0b-a719-4579030983aa"],
Cell[CellGroupData[{
Cell[54083, 1501, 866, 25, 116, "Input",ExpressionUUID->"4586e6fa-2dfc-4003-8e4c-40d67b2646a1"],
Cell[54952, 1528, 205, 4, 56, "Output",ExpressionUUID->"d8b73688-ffe3-4257-8139-97523ac944bd"],
Cell[55160, 1534, 424, 12, 76, "Output",ExpressionUUID->"8458653e-cf67-4695-9c3a-4ff61141e89d"],
Cell[55587, 1548, 854, 25, 83, "Output",ExpressionUUID->"cc4d8ca7-e128-452f-90ff-3a2fa73957de"]
}, Open  ]],
Cell[56456, 1576, 218, 5, 46, "Text",ExpressionUUID->"61814ecc-3337-46d1-b0c1-b0388c251e9d"],
Cell[CellGroupData[{
Cell[56699, 1585, 973, 26, 123, "Input",ExpressionUUID->"88ee5e8d-c2f4-4100-90c9-14832197358b"],
Cell[57675, 1613, 531, 12, 70, "Output",ExpressionUUID->"d46bd5ac-645a-41b9-8abe-693bd929602f"],
Cell[58209, 1627, 510, 11, 70, "Output",ExpressionUUID->"8b2183cb-9694-468c-9873-25aa150b1d06"]
}, Open  ]],
Cell[58734, 1641, 2041, 55, 131, "Input",ExpressionUUID->"1ff717bb-3ead-401d-9431-2256548e14fd"],
Cell[60778, 1698, 251, 6, 46, "Text",ExpressionUUID->"6925a1b0-36fc-428d-9b91-08317d5f25c9"],
Cell[CellGroupData[{
Cell[61054, 1708, 722, 18, 85, "Input",ExpressionUUID->"a7647c65-9d28-4012-b3f5-1ef7c7c8c30a"],
Cell[61779, 1728, 1776, 47, 85, "Output",ExpressionUUID->"e59923ea-665b-4967-a019-4c7f1a9523de"],
Cell[63558, 1777, 1774, 47, 85, "Output",ExpressionUUID->"96fba8ff-1be5-4e01-b5fd-b3afbacc8b9e"]
}, Open  ]],
Cell[65347, 1827, 202, 3, 46, "Text",ExpressionUUID->"553008ed-4b8a-4a26-a9f4-5fd1ff882c1b"],
Cell[CellGroupData[{
Cell[65574, 1834, 4348, 109, 153, "Input",ExpressionUUID->"b435c254-fe92-4ac4-a860-552b9d7b17be"],
Cell[69925, 1945, 463, 11, 74, "Output",ExpressionUUID->"e0c7f3b7-ff0c-4382-a35d-51332089bf27"],
Cell[70391, 1958, 462, 11, 74, "Output",ExpressionUUID->"d49743ee-0751-4224-9353-2d77a754e1e6"]
}, Open  ]],
Cell[70868, 1972, 235, 6, 46, "Text",ExpressionUUID->"512083d6-6f49-4183-a60c-a83d63d50bcb"],
Cell[71106, 1980, 6183, 175, 389, "Input",ExpressionUUID->"21747cb5-4694-4154-ae1c-065d305ffb4b"],
Cell[77292, 2157, 269, 6, 46, "Text",ExpressionUUID->"0be422b8-953a-4714-8e59-50c2806f5843"],
Cell[CellGroupData[{
Cell[77586, 2167, 1148, 33, 117, "Input",ExpressionUUID->"ee4a31bf-00e5-4ab1-9a32-6cf37aeee7c2"],
Cell[78737, 2202, 411, 9, 55, "Output",ExpressionUUID->"6ae6002f-97c7-41f8-b6f4-56d76c8efa51"],
Cell[79151, 2213, 873, 24, 74, "Output",ExpressionUUID->"2a98a92a-7d97-42f8-9413-dce644340cc7"],
Cell[80027, 2239, 1527, 46, 78, "Output",ExpressionUUID->"34b56f1e-fdfe-4f8c-a887-f894232bf752"]
}, Open  ]],
Cell[81569, 2288, 2935, 91, 563, "Input",ExpressionUUID->"1d133d24-d484-4bc0-8074-9d9bbae43357"],
Cell[CellGroupData[{
Cell[84529, 2383, 1151, 33, 117, "Input",ExpressionUUID->"f3860058-d08d-407b-80b4-e9a18708f963"],
Cell[85683, 2418, 437, 9, 55, "Output",ExpressionUUID->"87464f24-909f-47ed-9a32-28ea9c923610"],
Cell[86123, 2429, 897, 25, 74, "Output",ExpressionUUID->"3d4fb43b-7f2a-47fe-8167-624ad80edd2e"],
Cell[87023, 2456, 1570, 47, 78, "Output",ExpressionUUID->"9e05e9f8-6e7c-4197-9119-9065ff5dbb25"]
}, Open  ]],
Cell[88608, 2506, 3010, 94, 563, "Input",ExpressionUUID->"60c43622-b66c-465c-8a2e-093cbf906e87"],
Cell[91621, 2602, 699, 18, 46, "Text",ExpressionUUID->"de2ea44c-6544-48a8-b669-874f143b57fb"],
Cell[92323, 2622, 3445, 115, 85, "Input",ExpressionUUID->"6346966c-6e3c-45f3-a007-fb0bf911ab3d"],
Cell[95771, 2739, 795, 18, 85, "Text",ExpressionUUID->"f693829a-a506-416e-bc84-fff32fd406a4"],
Cell[96569, 2759, 2708, 82, 151, "Input",ExpressionUUID->"02a6420f-2b82-4d6a-beda-38f99a2fb1a1"],
Cell[CellGroupData[{
Cell[99302, 2845, 509, 13, 85, "Input",ExpressionUUID->"eee868dd-e760-42e6-bc7b-a9b35fc2bc72"],
Cell[99814, 2860, 702, 17, 74, "Output",ExpressionUUID->"ffa3261f-73f2-4437-b7b1-911ddb7425bd"],
Cell[100519, 2879, 677, 16, 74, "Output",ExpressionUUID->"532d4e83-8c7b-421c-89d3-ff85eb138501"]
}, Open  ]],
Cell[101211, 2898, 3076, 91, 254, "Input",ExpressionUUID->"51c73d4f-062d-4634-a0d6-6b2f89f77c3e"],
Cell[104290, 2991, 230, 5, 46, "Text",ExpressionUUID->"a329d138-6d7a-4ca7-bba3-03a632efb73c"],
Cell[104523, 2998, 2426, 63, 117, "Input",ExpressionUUID->"6be06e70-0b04-4d3a-8f6b-f76391bbb77c"],
Cell[106952, 3063, 276, 6, 46, "Text",ExpressionUUID->"aec30ee4-9875-4e5c-99d1-75349cc9cf91"],
Cell[CellGroupData[{
Cell[107253, 3073, 1113, 26, 55, "Input",ExpressionUUID->"e57bd8d8-3948-4718-93e1-0833c13a072c"],
Cell[108369, 3101, 791, 14, 55, "Output",ExpressionUUID->"c6b83e80-05ca-460f-89e4-aeb12f600b3e"]
}, Open  ]],
Cell[109175, 3118, 574, 12, 142, "Text",ExpressionUUID->"796f8069-b69e-4536-8ac4-cdfd1133154e"]
}, Closed]],
Cell[CellGroupData[{
Cell[109786, 3135, 294, 4, 47, "Subsection",ExpressionUUID->"dd6ce8dd-d52f-4919-baae-bfc80178df37"],
Cell[CellGroupData[{
Cell[110105, 3143, 213, 4, 47, "Subsubsection",ExpressionUUID->"dd7f872f-bbb2-4e62-b465-4b024100df6c"],
Cell[110321, 3149, 1006, 26, 124, "Text",ExpressionUUID->"c93deddb-90ec-4d53-a857-cf0cfc05d13f"],
Cell[111330, 3177, 631, 13, 82, "Text",ExpressionUUID->"a70d9391-164b-42ae-9926-1da565c18e49"],
Cell[111964, 3192, 1736, 38, 120, "Code",ExpressionUUID->"8ef4b5a2-b391-4465-bbc2-c3aa197c324a"],
Cell[113703, 3232, 6571, 194, 312, "Code",ExpressionUUID->"ff4d649d-72af-4424-8b4e-b48dd4d35a72"],
Cell[120277, 3428, 323, 7, 47, "Text",ExpressionUUID->"dc63463d-ffa1-43d3-b023-16b905d51db8"],
Cell[CellGroupData[{
Cell[120625, 3439, 458, 11, 58, "Input",ExpressionUUID->"3d2674f1-d9fd-463c-a000-28d3b38adaba"],
Cell[121086, 3452, 5843, 151, 174, "Output",ExpressionUUID->"f788a805-7b0c-4c55-94ef-7362eef0bddb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126966, 3608, 1549, 43, 115, "Input",ExpressionUUID->"5577d6e0-3446-460c-a2c7-d971ae9673d0"],
Cell[128518, 3653, 227, 4, 58, "Output",ExpressionUUID->"4aaf2634-c680-4ada-8cac-e0022b45d964"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128782, 3662, 1758, 49, 156, "Input",ExpressionUUID->"39cc0d46-afda-46a3-87e4-313ad7f46403"],
Cell[130543, 3713, 732, 19, 83, "Output",ExpressionUUID->"0227efbb-7679-4aa3-9a4e-74b40b57ddb0"],
Cell[131278, 3734, 716, 18, 83, "Output",ExpressionUUID->"c93e2b14-67a9-49be-85d2-3a602da479e8"]
}, Open  ]],
Cell[132009, 3755, 486, 13, 79, "Text",ExpressionUUID->"12fd6c21-5c33-431e-89d0-c632747007a7"],
Cell[132498, 3770, 5307, 133, 248, "Input",ExpressionUUID->"54705305-6d2c-4dee-bdb1-11d879e4708f"],
Cell[CellGroupData[{
Cell[137830, 3907, 1486, 42, 117, "Input",ExpressionUUID->"f42abe4c-6d1b-4840-8e4e-77f57ec5955c"],
Cell[139319, 3951, 350, 5, 58, "Output",ExpressionUUID->"30740fa0-8e4e-4391-8706-5f33d5225da6"],
Cell[139672, 3958, 822, 22, 87, "Output",ExpressionUUID->"fa88bba5-26b5-4b50-8d68-a0560cfccfe5"],
Cell[140497, 3982, 1496, 37, 85, "Output",ExpressionUUID->"7a9d2884-78fc-4e91-9d00-0589c2cf2a3b"]
}, Open  ]],
Cell[142008, 4022, 218, 5, 47, "Text",ExpressionUUID->"1797eaaa-2a96-4258-8f16-b0aaeadc709f"],
Cell[CellGroupData[{
Cell[142251, 4031, 892, 24, 125, "Input",ExpressionUUID->"0ba523e6-8de9-4e5a-8c93-e58531fdfa9d"],
Cell[143146, 4057, 556, 12, 73, "Output",ExpressionUUID->"62c91768-4e1f-4eee-89f5-e29d587b4f46"],
Cell[143705, 4071, 533, 11, 73, "Output",ExpressionUUID->"6648de88-982d-4005-8690-5473040f5008"]
}, Open  ]],
Cell[144253, 4085, 1991, 54, 131, "Input",ExpressionUUID->"e00713bd-4f4d-44c7-be2c-6e62e00d44a1"],
Cell[146247, 4141, 251, 6, 47, "Text",ExpressionUUID->"c193f374-e684-46e4-85ec-9b491781295f"],
Cell[CellGroupData[{
Cell[146523, 4151, 718, 17, 88, "Input",ExpressionUUID->"030c1b12-13b3-4947-9a36-98a6a339850d"],
Cell[147244, 4170, 3533, 98, 116, "Output",ExpressionUUID->"1727f977-8c3b-4a83-b149-b7c1e809f3f2"],
Cell[150780, 4270, 3700, 104, 116, "Output",ExpressionUUID->"922ec6a5-2259-4f9c-8562-7fb067a391f2"]
}, Open  ]],
Cell[154495, 4377, 202, 3, 47, "Text",ExpressionUUID->"8171d9ac-34d9-4484-bb7a-05482ef52eaf"],
Cell[CellGroupData[{
Cell[154722, 4384, 8551, 211, 314, "Input",ExpressionUUID->"bc8bd5a8-1838-433f-b10b-ccc9781582d8"],
Cell[163276, 4597, 806, 19, 83, "Output",ExpressionUUID->"804b4a0b-0521-4674-b789-442b723415cb"],
Cell[164085, 4618, 777, 18, 83, "Output",ExpressionUUID->"99651457-a5ef-41ed-846e-b94044fbf406"]
}, Open  ]],
Cell[164877, 4639, 259, 6, 47, "Text",ExpressionUUID->"ce5cdc2c-1ae1-42ee-b05e-001c5ccbb4bf"],
Cell[CellGroupData[{
Cell[165161, 4649, 735, 19, 88, "Input",ExpressionUUID->"a2c6bcce-1e88-4487-a9df-e7c987a320eb"],
Cell[165899, 4670, 406, 8, 76, "Output",ExpressionUUID->"e582dd3a-ecda-4740-b916-ed1c599824ea"],
Cell[166308, 4680, 408, 8, 76, "Output",ExpressionUUID->"1bbe72e8-2c27-4da9-9296-351c0e3c04ff"]
}, Open  ]],
Cell[166731, 4691, 235, 6, 47, "Text",ExpressionUUID->"ceba5f3e-a66d-4040-88bf-51c4ea0f6de5"],
Cell[166969, 4699, 9383, 252, 455, "Code",ExpressionUUID->"33266b00-1840-4e26-943c-a220052c1b66"]
}, Closed]],
Cell[CellGroupData[{
Cell[176389, 4956, 167, 3, 45, "Subsubsection",ExpressionUUID->"e9687498-4e52-40c3-8f96-b01c1467a36c"],
Cell[176559, 4961, 269, 6, 47, "Text",ExpressionUUID->"4c640880-6459-4024-b91c-680836bbf068"],
Cell[CellGroupData[{
Cell[176853, 4971, 1144, 32, 117, "Input",ExpressionUUID->"8c936833-1c05-4ed1-9e55-d66306293c7f"],
Cell[178000, 5005, 407, 8, 58, "Output",ExpressionUUID->"3f70b2b9-ea2c-4dde-a5e5-5e7db2d8e4f4"],
Cell[178410, 5015, 2808, 76, 139, "Output",ExpressionUUID->"d21a7259-80ce-4539-aeb8-191840bde25b"],
Cell[181221, 5093, 4617, 122, 170, "Output",ExpressionUUID->"6e9f1865-9d2c-4f9f-9734-58e633c97e50"]
}, Open  ]],
Cell[185853, 5218, 7938, 218, 537, "Code",ExpressionUUID->"8e4de106-f69b-4013-9ec7-508b64e01070"],
Cell[CellGroupData[{
Cell[193816, 5440, 859, 22, 247, "Input",ExpressionUUID->"a62b3c59-2e96-4f2b-95b3-51cea4a7b7cc"],
Cell[194678, 5464, 822, 22, 85, "Output",ExpressionUUID->"cde43abd-8032-4cf6-a234-a48014f55260"],
Cell[195503, 5488, 883, 24, 85, "Output",ExpressionUUID->"e72b2ced-ead7-438b-a22a-37f0faac06bb"],
Cell[196389, 5514, 972, 27, 85, "Output",ExpressionUUID->"3d89f7d7-a359-472d-bb4c-1599c76dba51"],
Cell[197364, 5543, 647, 16, 90, "Output",ExpressionUUID->"779bcff1-7993-4afb-8615-bb8d9d2c96a1"],
Cell[198014, 5561, 2351, 66, 80, "Output",ExpressionUUID->"e5e5baf3-7b98-4c06-a4eb-0b900a84e5a1"],
Cell[200368, 5629, 1363, 35, 90, "Output",ExpressionUUID->"e955d5f8-e2d5-4a22-bba7-f3411f366383"],
Cell[201734, 5666, 1074, 28, 90, "Output",ExpressionUUID->"1dc4123d-4b27-4c8a-9c8d-bb5d4085bccd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202845, 5699, 1151, 33, 122, "Input",ExpressionUUID->"a8ba9d02-a284-4225-8897-8252a381dffe"],
Cell[203999, 5734, 411, 9, 56, "Output",ExpressionUUID->"7ac3630c-de46-4eae-ae9a-278edb748dba"],
Cell[204413, 5745, 2937, 85, 84, "Output",ExpressionUUID->"a37f1060-3fb8-4b80-926f-1170f0d4900a"],
Cell[207353, 5832, 4752, 134, 153, "Output",ExpressionUUID->"a06afa03-843d-40fb-ad9d-a38d07d3ee10"]
}, Open  ]],
Cell[212120, 5969, 8298, 232, 534, "Code",ExpressionUUID->"bba9a1c4-1d18-4a26-8ab3-9e2229071852"],
Cell[220421, 6203, 699, 18, 49, "Text",ExpressionUUID->"60006717-d4f0-49fd-9749-d28b32186661"],
Cell[221123, 6223, 3440, 114, 94, "Code",ExpressionUUID->"fbf7c6cd-954c-4a1e-b761-d9403fc7d7ae"],
Cell[224566, 6339, 795, 18, 121, "Text",ExpressionUUID->"11cc14b3-1299-4c1d-aeb7-00492ad7f768"],
Cell[225364, 6359, 4012, 120, 167, "Input",ExpressionUUID->"7cd8a1e6-a867-45c1-8c9c-b6914c1b1b70"],
Cell[CellGroupData[{
Cell[229401, 6483, 541, 14, 89, "Input",ExpressionUUID->"d1664fba-5159-4fbb-b119-d7acbcf15af0"],
Cell[229945, 6499, 672, 15, 78, "Output",ExpressionUUID->"b30999df-d06f-44df-a4fb-95610785319e"],
Cell[230620, 6516, 647, 14, 78, "Output",ExpressionUUID->"42f0e254-8815-46b8-8648-71079399d491"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231304, 6535, 386, 11, 89, "Input",ExpressionUUID->"f370c1c6-3320-4a08-b7c7-dcfe4553ed4f"],
Cell[231693, 6548, 944, 26, 89, "Output",ExpressionUUID->"0b5f9636-c4a0-4e2b-b758-f6e227b10e97"],
Cell[232640, 6576, 978, 28, 89, "Output",ExpressionUUID->"c19e0f7a-6a8a-4e04-8f7b-bcd70ec076f4"]
}, Open  ]],
Cell[233633, 6607, 4304, 121, 281, "Code",ExpressionUUID->"bca1ef3b-66a9-41d9-8196-5aab1bd979ab"]
}, Closed]],
Cell[CellGroupData[{
Cell[237974, 6733, 169, 3, 45, "Subsubsection",ExpressionUUID->"6c03e5ae-951f-4455-8880-6529b8f93feb"],
Cell[238146, 6738, 230, 5, 47, "Text",ExpressionUUID->"ffcadf0a-4dbf-4025-814e-8971b9ff2228"],
Cell[238379, 6745, 2628, 67, 125, "Code",ExpressionUUID->"800309c8-c87d-4c44-b6bf-42d5f0f86b32"],
Cell[241010, 6814, 509, 9, 79, "Text",ExpressionUUID->"f087c32a-614f-4602-b796-8535b1c16195"],
Cell[CellGroupData[{
Cell[241544, 6827, 1804, 36, 58, "Input",ExpressionUUID->"5e86adfd-ce6d-4ad4-bda0-153c6bc22cd5"],
Cell[243351, 6865, 1312, 22, 58, "Output",ExpressionUUID->"321b80a3-66ca-44eb-abbd-cfb74336156a"]
}, Open  ]],
Cell[244678, 6890, 837, 14, 142, "Text",ExpressionUUID->"98d4ae08-619f-4e2c-8407-286657de6f13"],
Cell[CellGroupData[{
Cell[245540, 6908, 1488, 43, 175, "Input",ExpressionUUID->"ca4c6747-0808-459a-999a-137a50e43e28"],
Cell[247031, 6953, 1938, 43, 88, "Output",ExpressionUUID->"5166facb-d7c1-4de8-b94a-35f846271ac8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[249018, 7002, 237, 4, 45, "Subsubsection",ExpressionUUID->"638d987a-5b5c-4123-9625-2b7f7085a3ef"],
Cell[249258, 7008, 2005, 56, 173, "Input",ExpressionUUID->"9c7623ef-a6fb-48c3-8c40-c7b35078f494"],
Cell[251266, 7066, 370, 9, 86, "Input",ExpressionUUID->"5ad06055-8ea9-46ea-8ead-fc915e00bbf9"],
Cell[251639, 7077, 386, 10, 56, "Input",ExpressionUUID->"72edcd1b-ae1e-4897-9224-23c9b2be9fed"],
Cell[252028, 7089, 281, 6, 47, "Text",ExpressionUUID->"fb11cd44-ec9d-47bf-addf-33d11671cacb"],
Cell[252312, 7097, 347, 7, 56, "Input",ExpressionUUID->"4bb8c281-cd9f-4a0c-900a-62049ef38e1f"],
Cell[CellGroupData[{
Cell[252684, 7108, 208, 3, 56, "Input",ExpressionUUID->"e321b3c9-2ca6-46ad-85ba-6c617dd21e0d"],
Cell[252895, 7113, 175, 2, 56, "Output",ExpressionUUID->"80738758-8b73-4024-a9e3-9d3fc368f448"]
}, Open  ]],
Cell[253085, 7118, 383, 10, 83, "Input",ExpressionUUID->"65d49684-88aa-401c-a74e-db3bc3fcfb4e"],
Cell[253471, 7130, 175, 3, 47, "Text",ExpressionUUID->"fb9c66e6-5c00-48f5-8ed5-2326f350e161"],
Cell[253649, 7135, 284, 6, 56, "Input",ExpressionUUID->"471b429a-0e66-4009-90f2-f5b1880ee288"],
Cell[253936, 7143, 220, 5, 47, "Text",ExpressionUUID->"99e731d5-356a-4818-854a-9a95ceace031"],
Cell[254159, 7150, 337, 6, 56, "Input",ExpressionUUID->"3add8282-3571-43d2-9b5a-219513b9ef94"],
Cell[254499, 7158, 281, 6, 47, "Text",ExpressionUUID->"356dca39-f246-43f3-b2e9-6f3b4d44abe9"],
Cell[254783, 7166, 257, 5, 56, "Input",ExpressionUUID->"546d84d5-d6da-45e8-a722-6833686a9cd6"],
Cell[255043, 7173, 257, 5, 56, "Input",ExpressionUUID->"9b8245d4-c711-4464-8e79-d462ef52ff86"],
Cell[255303, 7180, 642, 11, 56, "Input",ExpressionUUID->"02fb20e3-5dd4-4278-b4a7-b45b0c90a918"],
Cell[255948, 7193, 294, 5, 56, "Input",ExpressionUUID->"d48572de-a28a-4636-8b6a-b738428d075b"],
Cell[CellGroupData[{
Cell[256267, 7202, 1114, 24, 116, "Input",ExpressionUUID->"195ecbb2-57bd-4edf-8b9b-b4d2e73f2b3b"],
Cell[257384, 7228, 303, 4, 56, "Output",ExpressionUUID->"c04ccea7-3f71-49a6-a362-3c7941fe50f6"],
Cell[257690, 7234, 303, 4, 56, "Output",ExpressionUUID->"a5e731a1-238c-4e33-8e94-e313f1588c04"]
}, Open  ]],
Cell[258008, 7241, 214, 5, 47, "Text",ExpressionUUID->"edaf6acb-d476-442f-b34b-358bfe859af0"],
Cell[258225, 7248, 541, 14, 56, "Input",ExpressionUUID->"f63b7536-f49c-4c30-8c63-550f04584996"],
Cell[CellGroupData[{
Cell[258791, 7266, 269, 6, 56, "Input",ExpressionUUID->"61dfab4c-78aa-433c-ad72-6684c6b030e3"],
Cell[259063, 7274, 1885, 44, 86, "Output",ExpressionUUID->"c14c9886-7ad1-4a7e-9bdc-d42c3eb8f12d"]
}, Open  ]],
Cell[260963, 7321, 332, 7, 47, "Text",ExpressionUUID->"d767ac92-e93c-406c-9a2c-62ac80e515c9"],
Cell[261298, 7330, 611, 15, 86, "Input",ExpressionUUID->"43aa1519-f34d-48cc-9d72-22c5877a1922"],
Cell[261912, 7347, 368, 9, 56, "Input",ExpressionUUID->"07c81278-c985-4523-b452-512ab15fa331"],
Cell[CellGroupData[{
Cell[262305, 7360, 506, 12, 56, "Input",ExpressionUUID->"2c142d1d-ec34-4d12-ba4a-0b01ba311e23"],
Cell[262814, 7374, 834, 16, 109, "Message",ExpressionUUID->"c6eeacd8-d049-46cf-981b-20597174c4f6"],
Cell[263651, 7392, 837, 16, 109, "Message",ExpressionUUID->"f8690fa7-537d-4ff3-bae1-0451e5008a6c"],
Cell[264491, 7410, 833, 16, 109, "Message",ExpressionUUID->"8ab58e75-e40a-404e-bcb9-a9a7909c9168"],
Cell[265327, 7428, 529, 11, 41, "Message",ExpressionUUID->"e4b7583d-85ab-4ab9-80c6-c0be6961d5c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265893, 7444, 183, 3, 56, "Input",ExpressionUUID->"1061cdfd-2d99-4209-ac4d-1d3d9b616135"],
Cell[266079, 7449, 1874, 42, 116, "Output",ExpressionUUID->"5a185a69-cb17-4654-a8da-27e9bcaaf2e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267990, 7496, 268, 6, 56, "Input",ExpressionUUID->"19a6c94a-6336-4a95-b026-f489c57e8e04"],
Cell[268261, 7504, 2013, 47, 86, "Output",ExpressionUUID->"0dee98f9-15aa-424a-a247-53c215b87f09"]
}, Open  ]],
Cell[270289, 7554, 541, 14, 56, "Input",ExpressionUUID->"1e2c9859-1d37-4ff0-a03d-70319185d045"],
Cell[CellGroupData[{
Cell[270855, 7572, 269, 6, 56, "Input",ExpressionUUID->"1eb9a044-da0a-4ba5-8a05-bf3e78731a8c"],
Cell[271127, 7580, 1885, 44, 86, "Output",ExpressionUUID->"5b20a9d9-35b2-47a6-a4e4-5636282938e3"]
}, Open  ]],
Cell[273027, 7627, 543, 12, 86, "Input",ExpressionUUID->"d0d08e64-81ea-428d-bc88-c84720276933"],
Cell[CellGroupData[{
Cell[273595, 7643, 280, 5, 86, "Input",ExpressionUUID->"f3df003c-a044-4a76-a780-92dd0dc42af1"],
Cell[273878, 7650, 204, 4, 56, "Output",ExpressionUUID->"c9c1ec57-b391-4f8b-abb4-7634b9d59564"],
Cell[274085, 7656, 204, 4, 56, "Output",ExpressionUUID->"fdab0f9f-772b-46c8-88ce-b24f718465c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274326, 7665, 7956, 210, 637, "Input",ExpressionUUID->"6cf5b05e-99c0-400c-a8c6-1a143762afb0"],
Cell[282285, 7877, 294, 4, 56, "Output",ExpressionUUID->"c64310d9-db25-4a89-8d8c-475ceb441d8b"],
Cell[282582, 7883, 294, 4, 56, "Output",ExpressionUUID->"c0cd9033-cf4e-4a52-8556-ed9e267d3ec8"],
Cell[282879, 7889, 294, 4, 56, "Output",ExpressionUUID->"9b04dc9d-ea9c-4924-94d5-f96892946074"],
Cell[283176, 7895, 296, 4, 56, "Output",ExpressionUUID->"7e0b57fb-ee9b-4c5b-a034-40294e80efcf"],
Cell[283475, 7901, 296, 4, 56, "Output",ExpressionUUID->"e5b2a3e4-d1e0-4fc0-8a69-014abfe99b91"],
Cell[283774, 7907, 294, 4, 56, "Output",ExpressionUUID->"3b162f10-3b95-42b8-9a72-06cd989440a1"],
Cell[284071, 7913, 296, 4, 56, "Output",ExpressionUUID->"4f5e3491-a967-4862-9b3a-18c8378202ec"],
Cell[284370, 7919, 294, 4, 56, "Output",ExpressionUUID->"1cf75c91-35ec-4783-9ec9-3c93b8e0f3c4"],
Cell[284667, 7925, 294, 4, 56, "Output",ExpressionUUID->"17d78ca3-2ca1-4e15-b4d2-f31cd7e0ac67"],
Cell[284964, 7931, 294, 4, 56, "Output",ExpressionUUID->"d76c7546-1342-4398-b696-7a782fc0a91b"],
Cell[285261, 7937, 295, 4, 56, "Output",ExpressionUUID->"ec2e64ad-8343-461e-809c-d853b36530c8"],
Cell[285559, 7943, 295, 4, 56, "Output",ExpressionUUID->"2d0b4a29-c2e7-4425-a224-c07a3f323a79"],
Cell[285857, 7949, 297, 4, 56, "Output",ExpressionUUID->"33b4d714-1c82-4703-a3ac-d8c1ccdfa9cb"],
Cell[286157, 7955, 297, 4, 56, "Output",ExpressionUUID->"1e046030-59d9-44ca-ac12-12f1c80d878c"],
Cell[286457, 7961, 295, 4, 56, "Output",ExpressionUUID->"3a0779a6-929d-41b0-a4bd-c010ced5f400"],
Cell[286755, 7967, 297, 4, 56, "Output",ExpressionUUID->"4ce3593b-b7ca-4a77-b607-fe4d93fb275b"],
Cell[287055, 7973, 297, 4, 56, "Output",ExpressionUUID->"02717dca-20ed-40d2-a5f2-e8f3d11a8088"],
Cell[287355, 7979, 295, 4, 56, "Output",ExpressionUUID->"a378f1ce-8abd-40fc-8b9d-e0a95449a1cd"],
Cell[287653, 7985, 295, 4, 56, "Output",ExpressionUUID->"b4feadd2-c10f-49ab-a721-d8fb5b4cd812"],
Cell[287951, 7991, 295, 4, 56, "Output",ExpressionUUID->"36220416-6014-4b30-83c2-ee70dc6992a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288283, 8000, 4058, 107, 347, "Input",ExpressionUUID->"8d53aed8-d919-4664-9528-56e9615d57ef"],
Cell[292344, 8109, 304, 5, 58, "Output",ExpressionUUID->"c0a5f361-ea9a-4fe0-a258-9e3276dfb157"],
Cell[292651, 8116, 302, 5, 58, "Output",ExpressionUUID->"29ba2311-8da5-40b6-9c3b-334798074af8"],
Cell[292956, 8123, 302, 5, 58, "Output",ExpressionUUID->"8187fd45-3abc-4437-923b-bf523d5c87c5"],
Cell[293261, 8130, 304, 5, 58, "Output",ExpressionUUID->"941f1cff-50a4-4063-91de-337789ff98ae"],
Cell[293568, 8137, 301, 5, 58, "Output",ExpressionUUID->"9cd718a1-78ad-4e3d-bdb7-c87236e1d0d3"],
Cell[293872, 8144, 302, 5, 58, "Output",ExpressionUUID->"e01a4939-39c3-4dae-bb7e-4e55791ddd8b"],
Cell[294177, 8151, 304, 5, 58, "Output",ExpressionUUID->"a2685032-d489-49c5-8ea6-90984f1eac71"],
Cell[294484, 8158, 302, 5, 58, "Output",ExpressionUUID->"6c3b481a-39a4-47d6-ba3f-1498d17871c0"],
Cell[294789, 8165, 302, 5, 58, "Output",ExpressionUUID->"5c0d180a-f4b9-48c0-b27c-5fc15574be0b"],
Cell[295094, 8172, 302, 5, 58, "Output",ExpressionUUID->"0f204fd6-4e35-44b8-b719-81ba32f34844"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[295445, 8183, 173, 3, 45, "Subsubsection",ExpressionUUID->"7d8bc839-ff56-4e3e-b8ce-44880c097ea1"],
Cell[295621, 8188, 6003, 186, 307, "Input",ExpressionUUID->"c85a6744-c15b-4a54-8442-1bb8bb18c4a3"],
Cell[301627, 8376, 508, 13, 86, "Input",ExpressionUUID->"0a840572-3e50-40f9-981e-4a535247fd97"],
Cell[302138, 8391, 883, 22, 56, "Input",ExpressionUUID->"7d376c22-1934-4f3c-9759-0bccb31dfcbe"],
Cell[303024, 8415, 393, 10, 56, "Input",ExpressionUUID->"3d53ea0d-7777-4ba5-9f57-ce31fe4db344"],
Cell[CellGroupData[{
Cell[303442, 8429, 266, 6, 56, "Input",ExpressionUUID->"c0844726-bbdc-4f31-a45e-7227c119720a"],
Cell[303711, 8437, 2219, 51, 86, "Output",ExpressionUUID->"c1a1996d-7e4d-447f-bfd3-30d91a555436"]
}, Open  ]],
Cell[305945, 8491, 617, 19, 86, "Input",ExpressionUUID->"6a555a0c-0a08-4eb9-ad06-757abde4adbd"],
Cell[306565, 8512, 888, 26, 86, "Input",ExpressionUUID->"766bb855-112e-44b7-8222-fdd810d97c80"],
Cell[307456, 8540, 669, 20, 56, "Input",ExpressionUUID->"f97459a9-ca5d-4269-abf1-679f38a1498b"],
Cell[CellGroupData[{
Cell[308150, 8564, 3642, 91, 406, "Input",ExpressionUUID->"b832d30d-a2b7-45af-a445-5fc4f7fcc8b8"],
Cell[311795, 8657, 31714, 595, 847, "Output",ExpressionUUID->"21157811-51a7-47c4-932f-b6d5d588e977"]
}, Open  ]],
Cell[343524, 9255, 469, 13, 145, "Input",ExpressionUUID->"ce160c10-a63c-412f-9430-35f14f47157a"],
Cell[343996, 9270, 1138, 28, 56, "Input",ExpressionUUID->"fd924231-b75c-4540-b76c-4a53f850e5dc"],
Cell[CellGroupData[{
Cell[345159, 9302, 269, 6, 56, "Input",ExpressionUUID->"f2b499fc-8048-4565-a8f0-bfb4687756b5"],
Cell[345431, 9310, 221, 5, 56, "Output",ExpressionUUID->"d879c031-3751-4a5f-96ad-dd43d8b2cfcd"]
}, Open  ]],
Cell[345667, 9318, 1705, 46, 118, "Input",ExpressionUUID->"c0f8cf19-3f71-48c3-b6df-818ec63cf6e7"],
Cell[CellGroupData[{
Cell[347397, 9368, 1352, 35, 86, "Input",ExpressionUUID->"d35e4030-b331-4367-ac7f-3798990cb4cf"],
Cell[348752, 9405, 270874, 4428, 433, "Output",ExpressionUUID->"0b25abd4-2d07-4dcc-bae3-2958093715e4"]
}, Open  ]],
Cell[619641, 13836, 1427, 36, 86, "Input",ExpressionUUID->"1977914a-64ba-4614-85ba-3770e73641c1"],
Cell[CellGroupData[{
Cell[621093, 13876, 748, 16, 56, "Input",ExpressionUUID->"8ab1d283-1c45-4b0a-9aa2-3a9dc92898c2"],
Cell[621844, 13894, 280117, 4641, 563, "Output",ExpressionUUID->"68b56c3a-3e22-42f9-9777-ecbda9d78951"]
}, Open  ]],
Cell[CellGroupData[{
Cell[901998, 18540, 5548, 125, 544, "Input",ExpressionUUID->"e7eace6d-5693-4dc0-917b-03fa9ad504c1"],
Cell[907549, 18667, 55111, 918, 572, "Output",ExpressionUUID->"a0a047ce-5395-4b5f-bb6b-dd2097d3dfdf"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[962721, 19592, 394, 8, 47, "Subsection",ExpressionUUID->"5d8f18f6-cbb9-42da-8b94-ca28dd81eefe"],
Cell[CellGroupData[{
Cell[963140, 19604, 213, 4, 47, "Subsubsection",ExpressionUUID->"76e45dcf-6dab-4005-872e-fe05bf6b29fa"],
Cell[963356, 19610, 1006, 26, 124, "Text",ExpressionUUID->"c4f60cd2-e612-4426-9287-d1637a9abfbb"],
Cell[964365, 19638, 631, 13, 82, "Text",ExpressionUUID->"86e0a609-e888-4532-b631-0ad7f3b17281"],
Cell[964999, 19653, 1736, 38, 120, "Code",ExpressionUUID->"8716592a-4808-4f62-a364-cb113877122b"],
Cell[966738, 19693, 6571, 194, 312, "Code",ExpressionUUID->"22b6f66b-9283-41f4-b9fa-dc18c8c83244"],
Cell[973312, 19889, 323, 7, 47, "Text",ExpressionUUID->"34f0458a-8332-4c64-b4d7-da29ea59b482"],
Cell[CellGroupData[{
Cell[973660, 19900, 458, 11, 58, "Input",ExpressionUUID->"14c571b9-5a30-4c13-8ab6-99f80e44b233"],
Cell[974121, 19913, 5843, 151, 174, "Output",ExpressionUUID->"b810cdec-689a-4665-867c-c221eda17292"]
}, Open  ]],
Cell[CellGroupData[{
Cell[980001, 20069, 1549, 43, 115, "Input",ExpressionUUID->"ce0ec7a3-93ca-446e-8fcf-829b7add4d56"],
Cell[981553, 20114, 227, 4, 58, "Output",ExpressionUUID->"b7f987d4-aaf2-4635-9321-6984d208522a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[981817, 20123, 1758, 49, 156, "Input",ExpressionUUID->"8b41d6dc-e8ea-42b7-b6d6-d52d0da30a84"],
Cell[983578, 20174, 732, 19, 83, "Output",ExpressionUUID->"266b7a72-023e-4e01-8292-1167b49bd439"],
Cell[984313, 20195, 716, 18, 83, "Output",ExpressionUUID->"c5901c06-e4ba-4bd9-9645-59f7829af344"]
}, Open  ]],
Cell[985044, 20216, 486, 13, 79, "Text",ExpressionUUID->"7cc8ac70-05cb-4458-b8ed-528c02599576"],
Cell[985533, 20231, 5307, 133, 248, "Input",ExpressionUUID->"0631a375-e03a-4cef-8055-2c4ec9836ace"],
Cell[CellGroupData[{
Cell[990865, 20368, 1486, 42, 117, "Input",ExpressionUUID->"ca45fe7d-f694-4058-952b-4ce6bba188f5"],
Cell[992354, 20412, 350, 5, 58, "Output",ExpressionUUID->"573e0228-e412-4a04-964f-f971ee46a052"],
Cell[992707, 20419, 822, 22, 87, "Output",ExpressionUUID->"85ca19df-3eea-4866-b9bf-9080f3acbce7"],
Cell[993532, 20443, 1496, 37, 85, "Output",ExpressionUUID->"cc0db7ea-4bce-4676-9411-635bf9a0210f"]
}, Open  ]],
Cell[995043, 20483, 218, 5, 47, "Text",ExpressionUUID->"273e22f1-51fa-423d-9062-c458647ed927"],
Cell[CellGroupData[{
Cell[995286, 20492, 892, 24, 125, "Input",ExpressionUUID->"ecbc9680-5b04-401e-89bd-ba968397c10a"],
Cell[996181, 20518, 556, 12, 73, "Output",ExpressionUUID->"0ae24ab5-39f9-4f92-9a06-336808020e2b"],
Cell[996740, 20532, 533, 11, 73, "Output",ExpressionUUID->"c6d0bd37-0f49-4096-92e4-73d8d236ac9a"]
}, Open  ]],
Cell[997288, 20546, 1991, 54, 131, "Input",ExpressionUUID->"73f78e8b-4871-4dc0-bdf9-b92902b4b274"],
Cell[999282, 20602, 251, 6, 47, "Text",ExpressionUUID->"d5895c6a-696f-4098-9fd7-9be6c7b5d4e6"],
Cell[CellGroupData[{
Cell[999558, 20612, 718, 17, 88, "Input",ExpressionUUID->"c3426dae-2d24-40b1-9ff1-5c8e53f26068"],
Cell[1000279, 20631, 3533, 98, 116, "Output",ExpressionUUID->"f6c50f27-07d4-4abe-be00-115c58a0689e"],
Cell[1003815, 20731, 3689, 103, 116, "Output",ExpressionUUID->"bd0b5b1f-1741-4a0f-a230-794339884bf7"]
}, Open  ]],
Cell[1007519, 20837, 202, 3, 47, "Text",ExpressionUUID->"ede75923-0c49-40b1-aaef-c0e264c3544d"],
Cell[CellGroupData[{
Cell[1007746, 20844, 8551, 211, 314, "Input",ExpressionUUID->"66c85af3-c782-4565-aa1d-47f8ea720185"],
Cell[1016300, 21057, 806, 19, 83, "Output",ExpressionUUID->"372117e6-db7d-498a-a612-c9c20d75765a"],
Cell[1017109, 21078, 777, 18, 83, "Output",ExpressionUUID->"1c5e8143-ced5-4ff3-98d0-02879b1fe8e8"]
}, Open  ]],
Cell[1017901, 21099, 259, 6, 47, "Text",ExpressionUUID->"9db713be-bbb1-4940-8772-4456eb25b883"],
Cell[CellGroupData[{
Cell[1018185, 21109, 735, 19, 88, "Input",ExpressionUUID->"bc235086-12fc-4994-a998-5a0b524cf5fe"],
Cell[1018923, 21130, 406, 8, 76, "Output",ExpressionUUID->"366ebf0f-0adf-4f47-aed3-cc9cf84bf063"],
Cell[1019332, 21140, 408, 8, 76, "Output",ExpressionUUID->"725612f0-568a-46dd-9738-44ebda10bf01"]
}, Open  ]],
Cell[1019755, 21151, 235, 6, 47, "Text",ExpressionUUID->"bf164106-5181-489b-9c99-b14bfb20f685"],
Cell[1019993, 21159, 9383, 252, 455, "Code",ExpressionUUID->"b2adbbb0-0081-4326-9d08-72a59d316472"]
}, Closed]],
Cell[CellGroupData[{
Cell[1029413, 21416, 167, 3, 45, "Subsubsection",ExpressionUUID->"58821a6b-968e-4781-81b3-846d307176d6"],
Cell[1029583, 21421, 269, 6, 47, "Text",ExpressionUUID->"504815e2-d235-4f65-ba16-20e1acb79d3a"],
Cell[CellGroupData[{
Cell[1029877, 21431, 1144, 32, 117, "Input",ExpressionUUID->"52329dfb-11eb-409f-be56-79ad72318368"],
Cell[1031024, 21465, 407, 8, 58, "Output",ExpressionUUID->"8c99a041-e8fd-4f85-8dcb-748e065783f8"],
Cell[1031434, 21475, 2808, 76, 139, "Output",ExpressionUUID->"42dbfc74-4e1f-4bbc-8a1f-294a8a288b61"],
Cell[1034245, 21553, 4611, 121, 170, "Output",ExpressionUUID->"2470c4a2-4209-4796-842e-73ba42787d5e"]
}, Open  ]],
Cell[1038871, 21677, 7938, 218, 537, "Code",ExpressionUUID->"e91ecacc-44ca-422e-8409-6213c577956c"],
Cell[CellGroupData[{
Cell[1046834, 21899, 859, 22, 233, "Input",ExpressionUUID->"0c7035e9-332b-47fb-8095-2b0bc7ef2f12"],
Cell[1047696, 21923, 822, 22, 83, "Output",ExpressionUUID->"c1d1cd34-87c7-45e2-b82a-247bc353946c"],
Cell[1048521, 21947, 883, 24, 83, "Output",ExpressionUUID->"f03d713a-06ff-417f-9523-7580422769fa"],
Cell[1049407, 21973, 972, 27, 83, "Output",ExpressionUUID->"1612d864-e0a4-4b51-9d42-c33a761c8d0d"],
Cell[1050382, 22002, 647, 16, 86, "Output",ExpressionUUID->"da882435-2612-4f8d-8622-107b4d157d83"],
Cell[1051032, 22020, 2351, 66, 113, "Output",ExpressionUUID->"147d6ff8-9e8f-47e6-9a7e-37c495086eda"],
Cell[1053386, 22088, 1363, 35, 86, "Output",ExpressionUUID->"fd1983ff-6520-4ede-9c91-71fd1abafa21"],
Cell[1054752, 22125, 1074, 28, 86, "Output",ExpressionUUID->"e6d4e8f2-3d5a-414f-9919-88dccc8ea074"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1055863, 22158, 1151, 33, 117, "Input",ExpressionUUID->"8513fb4e-bfaf-4464-9e44-6be2e1c3dc01"],
Cell[1057017, 22193, 411, 9, 58, "Output",ExpressionUUID->"70ebd94b-0951-4c14-8119-0ca2238bad73"],
Cell[1057431, 22204, 2916, 82, 139, "Output",ExpressionUUID->"29cd83c6-cc66-4611-992e-4136837a7c8b"],
Cell[1060350, 22288, 4813, 130, 170, "Output",ExpressionUUID->"defa58c7-ce57-4398-86f6-0d93167f42df"]
}, Open  ]],
Cell[1065178, 22421, 8298, 232, 537, "Code",ExpressionUUID->"40ee0742-061b-4caf-a5e5-1618cdcb71eb"],
Cell[1073479, 22655, 699, 18, 52, "Text",ExpressionUUID->"8530c2b5-0b31-4c3d-9248-24fc062cd236"],
Cell[1074181, 22675, 3440, 114, 97, "Code",ExpressionUUID->"e813d606-ac25-4754-b425-520c9291316a"],
Cell[1077624, 22791, 795, 18, 85, "Text",ExpressionUUID->"23a8d7fa-344f-4d24-9ce5-9a183f1f4740"],
Cell[1078422, 22811, 4012, 120, 170, "Input",ExpressionUUID->"3e39cc86-01e5-41ad-96af-e61c54275e68"],
Cell[CellGroupData[{
Cell[1082459, 22935, 541, 14, 88, "Input",ExpressionUUID->"54b4cf9e-447e-40e9-8b05-9eb9991a0806"],
Cell[1083003, 22951, 672, 15, 76, "Output",ExpressionUUID->"dd182506-37b7-4d12-b698-be4ecd93af2b"],
Cell[1083678, 22968, 647, 14, 76, "Output",ExpressionUUID->"dc700082-c425-4081-a392-aabf1c9c309e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1084362, 22987, 386, 11, 88, "Input",ExpressionUUID->"63280f58-8812-48a3-bb21-8a1677d3cc56"],
Cell[1084751, 23000, 944, 26, 85, "Output",ExpressionUUID->"43e55992-1a9c-4d1f-a9c0-244f08ad93aa"],
Cell[1085698, 23028, 978, 28, 85, "Output",ExpressionUUID->"d4d86003-1648-4636-889a-312a9f6886f6"]
}, Open  ]],
Cell[1086691, 23059, 4304, 121, 279, "Code",ExpressionUUID->"6610b9dd-b003-4f98-80b4-11b7bfa9228d"]
}, Closed]],
Cell[CellGroupData[{
Cell[1091032, 23185, 169, 3, 45, "Subsubsection",ExpressionUUID->"b133e440-d45a-4d8d-bfc4-7e9e62229c82"],
Cell[1091204, 23190, 230, 5, 47, "Text",ExpressionUUID->"0857bb21-f510-47d4-94e6-4866c95d7840"],
Cell[1091437, 23197, 2652, 68, 125, "Code",ExpressionUUID->"19af6b72-96c4-4d5a-bcaa-87d57d7db5dc"],
Cell[1094092, 23267, 509, 9, 79, "Text",ExpressionUUID->"56ca6554-5f0e-4357-8670-8c07329f12b6"],
Cell[CellGroupData[{
Cell[1094626, 23280, 1804, 36, 58, "Input",ExpressionUUID->"0d46d52a-75da-4a09-8805-6c18ea7f5ae4"],
Cell[1096433, 23318, 1312, 22, 58, "Output",ExpressionUUID->"1d8e6b72-5616-4f28-9999-20e1179556ec"]
}, Open  ]],
Cell[1097760, 23343, 837, 14, 142, "Text",ExpressionUUID->"13ec2ba5-f196-4e1b-bcf0-f98caff32f4e"],
Cell[CellGroupData[{
Cell[1098622, 23361, 1488, 43, 175, "Input",ExpressionUUID->"824f27f2-9a0d-486a-bf78-a6a08910f6fc"],
Cell[1100113, 23406, 1938, 43, 88, "Output",ExpressionUUID->"3e3728ca-9041-49b1-82e3-9de5ac8f203f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1102100, 23455, 237, 4, 45, "Subsubsection",ExpressionUUID->"05ca1112-a18a-451d-ac3a-44d21e64189e"],
Cell[1102340, 23461, 2005, 56, 204, "Input",ExpressionUUID->"ea7b627e-f0fa-4023-bbe8-4fcb47ba7469"],
Cell[1104348, 23519, 370, 9, 88, "Input",ExpressionUUID->"cce4d38a-3d93-472f-b424-44790ddfeacb"],
Cell[1104721, 23530, 386, 10, 58, "Input",ExpressionUUID->"1d73198c-88c4-42a3-acd2-d61f7c72725d"],
Cell[1105110, 23542, 281, 6, 47, "Text",ExpressionUUID->"b3561cdf-e1f7-4d0c-a6ab-d3bf9f2c3482"],
Cell[1105394, 23550, 347, 7, 58, "Input",ExpressionUUID->"7035df7f-87fc-4a63-9cdf-5bacd4bf6ebe"],
Cell[CellGroupData[{
Cell[1105766, 23561, 208, 3, 58, "Input",ExpressionUUID->"88bf156b-5c9a-4c1c-a54b-c63cad4574b5"],
Cell[1105977, 23566, 175, 2, 58, "Output",ExpressionUUID->"f1943563-42db-457d-8ab2-2cd5d3f24ac2"]
}, Open  ]],
Cell[1106167, 23571, 383, 10, 83, "Input",ExpressionUUID->"20e42d28-fd2e-49f1-b6e6-94c44ea88c40"],
Cell[1106553, 23583, 175, 3, 47, "Text",ExpressionUUID->"626eb5a6-876b-4794-9b41-843cc36d7883"],
Cell[1106731, 23588, 284, 6, 58, "Input",ExpressionUUID->"6a8d5f0d-034e-439c-a9b6-17610af72ae3"],
Cell[1107018, 23596, 220, 5, 47, "Text",ExpressionUUID->"ecc9ce45-22c5-4ea6-bfa3-3790d99e1223"],
Cell[1107241, 23603, 337, 6, 58, "Input",ExpressionUUID->"d5e83bcb-0b95-409c-a276-0012a6d26e10"],
Cell[1107581, 23611, 281, 6, 47, "Text",ExpressionUUID->"3a2db931-aca7-4a0d-be56-2b47fb73e376"],
Cell[1107865, 23619, 257, 5, 58, "Input",ExpressionUUID->"d3fc73eb-28bf-4618-b574-42997c610290"],
Cell[1108125, 23626, 257, 5, 58, "Input",ExpressionUUID->"ba937acf-7763-4ea9-bd11-acf107e46312"],
Cell[1108385, 23633, 692, 12, 58, "Input",ExpressionUUID->"1765eada-93f2-4adb-adad-ca0c3fe1b0c3"],
Cell[1109080, 23647, 326, 7, 58, "Input",ExpressionUUID->"18a245f1-fdd9-45cb-9d62-42f26fa6d0e2"],
Cell[CellGroupData[{
Cell[1109431, 23658, 1154, 26, 117, "Input",ExpressionUUID->"1682c1a9-e65a-4150-96ab-e4ec27ef5153"],
Cell[1110588, 23686, 303, 4, 58, "Output",ExpressionUUID->"e55c704b-7f35-40f8-ab20-6ab0983b248e"],
Cell[1110894, 23692, 303, 4, 58, "Output",ExpressionUUID->"8e388d32-61ac-4c6c-b2c2-36deaa8480ba"]
}, Open  ]],
Cell[1111212, 23699, 214, 5, 47, "Text",ExpressionUUID->"89a9d3de-408a-4f5a-8d94-1e675616178b"],
Cell[1111429, 23706, 541, 14, 58, "Input",ExpressionUUID->"60f7287c-f81d-4222-8c2a-e6ca15d39cdc"],
Cell[CellGroupData[{
Cell[1111995, 23724, 269, 6, 58, "Input",ExpressionUUID->"11f18c39-1403-4fff-85f2-58a007b317f2"],
Cell[1112267, 23732, 1885, 44, 117, "Output",ExpressionUUID->"aeb1ff54-41a0-41f2-aec4-663edd22d675"]
}, Open  ]],
Cell[1114167, 23779, 332, 7, 47, "Text",ExpressionUUID->"2ed99a13-5349-4252-982e-0f0e93a2789d"],
Cell[1114502, 23788, 611, 15, 88, "Input",ExpressionUUID->"6c8f1141-d4b9-49db-b7b2-c663c7cdd1f8"],
Cell[1115116, 23805, 368, 9, 58, "Input",ExpressionUUID->"9a4f90c8-6eea-41c8-a98c-8cb61760196e"],
Cell[CellGroupData[{
Cell[1115509, 23818, 506, 12, 58, "Input",ExpressionUUID->"bc8c0990-f38e-4e5b-881e-ee8dfd56eda5"],
Cell[1116018, 23832, 834, 16, 131, "Message",ExpressionUUID->"f9dc4bf2-8118-4832-93cb-cd0386298dc3"],
Cell[1116855, 23850, 837, 16, 131, "Message",ExpressionUUID->"6aa2d518-5a86-485e-8434-0f75fb2c43c7"],
Cell[1117695, 23868, 833, 16, 131, "Message",ExpressionUUID->"86ecfc99-2c78-4136-a3a8-472a2d677322"],
Cell[1118531, 23886, 529, 11, 41, "Message",ExpressionUUID->"0ab1d1cb-36d9-47e8-8bb8-30810812c48d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1119097, 23902, 183, 3, 56, "Input",ExpressionUUID->"8bbef9ba-5ba9-44d4-9217-1c2025723a74"],
Cell[1119283, 23907, 1874, 42, 116, "Output",ExpressionUUID->"3a7c4699-ed27-40ef-a766-765161dceca4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1121194, 23954, 268, 6, 56, "Input",ExpressionUUID->"c189c6e9-bd2c-426f-91b7-77c62bb7c5c9"],
Cell[1121465, 23962, 2013, 47, 86, "Output",ExpressionUUID->"45061856-5f18-4425-a7c0-ff64164139ab"]
}, Open  ]],
Cell[1123493, 24012, 541, 14, 56, "Input",ExpressionUUID->"5f080140-20bd-4f01-a3a9-a4dba665da9d"],
Cell[CellGroupData[{
Cell[1124059, 24030, 269, 6, 56, "Input",ExpressionUUID->"c3c33a2f-c13c-47fd-84f9-c1d1d6f7fe90"],
Cell[1124331, 24038, 1885, 44, 86, "Output",ExpressionUUID->"6f39c24a-4288-4e63-887e-51357e43aca1"]
}, Open  ]],
Cell[1126231, 24085, 543, 12, 86, "Input",ExpressionUUID->"7a1250a4-97e8-4386-a15f-3d7c49865961"],
Cell[CellGroupData[{
Cell[1126799, 24101, 280, 5, 86, "Input",ExpressionUUID->"3e44edec-71c9-4c48-9801-9c0e6527fcbd"],
Cell[1127082, 24108, 204, 4, 56, "Output",ExpressionUUID->"59d38ee7-accc-4a62-be8b-ad3ae3128a27"],
Cell[1127289, 24114, 204, 4, 56, "Output",ExpressionUUID->"ef5b1d05-2142-4223-a0d9-df7b98012317"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1127530, 24123, 7956, 210, 637, "Input",ExpressionUUID->"5a77f658-6d71-4632-8bc8-a426a57d6e70"],
Cell[1135489, 24335, 294, 4, 56, "Output",ExpressionUUID->"6a55fca0-08a0-495f-a0ff-8674e1bbbada"],
Cell[1135786, 24341, 294, 4, 56, "Output",ExpressionUUID->"33887616-de83-40ba-bffa-ccb0eddda092"],
Cell[1136083, 24347, 294, 4, 56, "Output",ExpressionUUID->"a5a7f728-6168-4540-8219-cc7384ed07a5"],
Cell[1136380, 24353, 296, 4, 56, "Output",ExpressionUUID->"d94b213b-e3fb-451f-b168-71ce67e938cf"],
Cell[1136679, 24359, 296, 4, 56, "Output",ExpressionUUID->"075b3752-5f02-49b0-9f7b-31564bc30d57"],
Cell[1136978, 24365, 294, 4, 56, "Output",ExpressionUUID->"026d9a07-fc11-447e-97e5-91b8a2562290"],
Cell[1137275, 24371, 296, 4, 56, "Output",ExpressionUUID->"7c8ae483-aa5f-44e9-a439-fff3fa8c3305"],
Cell[1137574, 24377, 294, 4, 56, "Output",ExpressionUUID->"06344004-6656-460f-b245-7865b6cf25c8"],
Cell[1137871, 24383, 294, 4, 56, "Output",ExpressionUUID->"44645c9a-0d6c-4344-9b30-387b818249d2"],
Cell[1138168, 24389, 294, 4, 56, "Output",ExpressionUUID->"1ba3969b-9d1f-4d43-90fe-72259df30921"],
Cell[1138465, 24395, 295, 4, 56, "Output",ExpressionUUID->"2935d503-ccee-47e0-8137-a93e69a387db"],
Cell[1138763, 24401, 295, 4, 56, "Output",ExpressionUUID->"30f58e48-f7e9-4cf9-b629-4bb81381c21b"],
Cell[1139061, 24407, 297, 4, 56, "Output",ExpressionUUID->"1afa6e3b-e7ef-4265-a56f-23a07f75ce8f"],
Cell[1139361, 24413, 297, 4, 56, "Output",ExpressionUUID->"b05f0200-0cb5-43a8-8687-5be559bece9a"],
Cell[1139661, 24419, 295, 4, 56, "Output",ExpressionUUID->"5e3ac3c0-716e-44e4-912d-7ebb7e6f9552"],
Cell[1139959, 24425, 297, 4, 56, "Output",ExpressionUUID->"bdfafb1d-3a03-49bb-aa00-a6da07f23fa1"],
Cell[1140259, 24431, 297, 4, 56, "Output",ExpressionUUID->"aa3adf3f-3033-4560-a208-c0f4f3dce636"],
Cell[1140559, 24437, 295, 4, 56, "Output",ExpressionUUID->"d1844e84-5050-42ed-8329-49fe63fa2f99"],
Cell[1140857, 24443, 295, 4, 56, "Output",ExpressionUUID->"ec7f69a0-4270-4222-b957-01d526521564"],
Cell[1141155, 24449, 295, 4, 56, "Output",ExpressionUUID->"fcea5427-8ded-410b-a503-f7f572439596"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1141487, 24458, 4058, 107, 347, "Input",ExpressionUUID->"006d20aa-36d1-4fd8-879d-2eb5d08624fb"],
Cell[1145548, 24567, 304, 5, 58, "Output",ExpressionUUID->"6d860b65-4f34-451a-a5cd-5aa4066bf9c4"],
Cell[1145855, 24574, 302, 5, 58, "Output",ExpressionUUID->"c614ee16-e34c-4943-b45c-0d8dbc624f58"],
Cell[1146160, 24581, 302, 5, 58, "Output",ExpressionUUID->"40ce4bcc-1b4e-44fe-999c-0f09231228b7"],
Cell[1146465, 24588, 304, 5, 58, "Output",ExpressionUUID->"9e56d4b8-8c0c-432f-899f-c65b45d1d9bb"],
Cell[1146772, 24595, 301, 5, 58, "Output",ExpressionUUID->"b63c4a27-f75f-4c3d-bfb2-8d1ceb38e3be"],
Cell[1147076, 24602, 302, 5, 58, "Output",ExpressionUUID->"4e509a9f-98e9-4663-b886-720f4824e17d"],
Cell[1147381, 24609, 304, 5, 58, "Output",ExpressionUUID->"85791f80-21f3-4b91-9378-f52a45d35ae6"],
Cell[1147688, 24616, 302, 5, 58, "Output",ExpressionUUID->"8619841b-8935-4ccd-acde-fc259bb1f97a"],
Cell[1147993, 24623, 302, 5, 58, "Output",ExpressionUUID->"d4da6ddc-5025-48d1-8494-a3792a391be5"],
Cell[1148298, 24630, 302, 5, 58, "Output",ExpressionUUID->"21903c38-c752-46b3-94d1-bd42c9a3b140"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1148649, 24641, 173, 3, 45, "Subsubsection",ExpressionUUID->"65417e59-df0e-4141-b4c1-4991b567cb40"],
Cell[1148825, 24646, 6003, 186, 307, "Input",ExpressionUUID->"5227cacf-359f-4d4d-9799-e5ce19fea6cc"],
Cell[1154831, 24834, 508, 13, 86, "Input",ExpressionUUID->"aeefee44-e715-4cde-b3a4-d193a609d9d8"],
Cell[1155342, 24849, 883, 22, 56, "Input",ExpressionUUID->"900f808d-d171-483b-8cf5-68cf2fd92b53"],
Cell[1156228, 24873, 393, 10, 56, "Input",ExpressionUUID->"b2580e84-c204-429a-b20b-4b528f7810b5"],
Cell[CellGroupData[{
Cell[1156646, 24887, 266, 6, 56, "Input",ExpressionUUID->"bac1c2fb-ca27-4fee-936d-f6aee639913e"],
Cell[1156915, 24895, 2219, 51, 86, "Output",ExpressionUUID->"e7d3195a-906e-490b-94ac-c4549885b27a"]
}, Open  ]],
Cell[1159149, 24949, 617, 19, 86, "Input",ExpressionUUID->"cc682451-5a88-4dbc-bdda-0b5e2407d2a8"],
Cell[1159769, 24970, 888, 26, 86, "Input",ExpressionUUID->"e187eca8-d981-46a8-9b75-66a84a9c6655"],
Cell[1160660, 24998, 669, 20, 56, "Input",ExpressionUUID->"2756292c-3f4a-4ed1-bb03-aff04ba70484"],
Cell[CellGroupData[{
Cell[1161354, 25022, 3642, 91, 406, "Input",ExpressionUUID->"f6945032-efbd-4fb9-8e29-c7c8366aba15"],
Cell[1164999, 25115, 31714, 595, 847, "Output",ExpressionUUID->"2a42cfc0-d7e4-495a-b657-63f683a3d18e"]
}, Open  ]],
Cell[1196728, 25713, 469, 13, 145, "Input",ExpressionUUID->"8bdb3f4e-c98c-484d-827a-d89bc33f1b06"],
Cell[1197200, 25728, 1138, 28, 56, "Input",ExpressionUUID->"720aa313-1542-4a0c-9c46-aea84638bb76"],
Cell[CellGroupData[{
Cell[1198363, 25760, 269, 6, 56, "Input",ExpressionUUID->"d1e01704-8953-43d1-8d01-34eefc588458"],
Cell[1198635, 25768, 221, 5, 56, "Output",ExpressionUUID->"58d23423-c45a-4cba-9e70-2291f9c57be0"]
}, Open  ]],
Cell[1198871, 25776, 1705, 46, 118, "Input",ExpressionUUID->"3e92b3fd-b6d8-473f-8d00-a1c76c6108a7"],
Cell[CellGroupData[{
Cell[1200601, 25826, 1352, 35, 86, "Input",ExpressionUUID->"a2d51122-7349-4cc0-becc-b421fa1d885f"],
Cell[1201956, 25863, 270850, 4426, 433, "Output",ExpressionUUID->"d91477da-d9b2-4be2-8d6e-66fd99ce41fd"]
}, Open  ]],
Cell[1472821, 30292, 1427, 36, 86, "Input",ExpressionUUID->"d6a74aa0-c9f7-4611-b13c-69faade65e0f"],
Cell[CellGroupData[{
Cell[1474273, 30332, 748, 16, 56, "Input",ExpressionUUID->"73098d3f-a4cb-4f38-99c7-c373209a4337"],
Cell[1475024, 30350, 280117, 4641, 563, "Output",ExpressionUUID->"6afce6fb-ec43-482f-8e48-cd6abc07c994"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1755178, 34996, 5541, 124, 544, "Input",ExpressionUUID->"f3497252-f5c7-4793-ae44-cb210ecb51a3"],
Cell[1760722, 35122, 55103, 917, 572, "Output",ExpressionUUID->"ee415255-aa74-4b1e-9c7b-2c1a9227dbf4"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1815898, 36047, 237, 4, 77, "Section",ExpressionUUID->"0d8e2725-d596-4955-b6df-df280e816d7e"],
Cell[CellGroupData[{
Cell[1816160, 36055, 343, 7, 47, "Subsubsection",ExpressionUUID->"5f04b166-d618-4eb0-b626-9196ee906f20"],
Cell[1816506, 36064, 767, 22, 94, "Text",ExpressionUUID->"a05c4bad-f1e1-4d53-a204-242aecc815b0"],
Cell[1817276, 36088, 631, 13, 47, "Text",ExpressionUUID->"ccfd75c1-bac7-4460-b864-31d731cd579e"],
Cell[1817910, 36103, 1766, 39, 143, "Input",ExpressionUUID->"538c78a1-38b2-427d-aa4a-ae454611eb8b"],
Cell[1819679, 36144, 323, 7, 47, "Text",ExpressionUUID->"e6af5e0c-19fa-4f99-8e22-4a0c2d44d236"],
Cell[CellGroupData[{
Cell[1820027, 36155, 462, 12, 56, "Input",ExpressionUUID->"ce421ec2-65f3-49b7-8de7-4164cda7720b"],
Cell[1820492, 36169, 5939, 179, 204, "Output",ExpressionUUID->"2de11543-5639-4935-b791-023d65729712"]
}, Open  ]],
Cell[1826446, 36351, 486, 13, 80, "Text",ExpressionUUID->"f925fb2f-524b-46e8-a0c4-e65a6381bb12"],
Cell[1826935, 36366, 2630, 54, 90, "Input",ExpressionUUID->"9eb743f7-7780-4267-a4a1-8d40fc6666f0"],
Cell[CellGroupData[{
Cell[1829590, 36424, 1002, 27, 116, "Input",ExpressionUUID->"2d046eeb-ba99-4006-bf06-ccb916bbb78d"],
Cell[1830595, 36453, 449, 7, 56, "Output",ExpressionUUID->"9f2a0917-e8fb-494f-a45d-73c757b965ac"],
Cell[1831047, 36462, 937, 23, 86, "Output",ExpressionUUID->"ae7cfeb0-c44c-435c-ad03-b5830bc3e376"],
Cell[1831987, 36487, 5473, 146, 117, "Output",ExpressionUUID->"7a3c3f63-d73e-4792-b70c-a8d20794d98e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1837497, 36638, 5339, 142, 155, "Input",ExpressionUUID->"4919bca8-7752-46f6-a850-28f6fc55da90"],
Cell[1842839, 36782, 2183, 62, 60, "Output",ExpressionUUID->"2d4da2e3-fdfd-4e13-a261-0a3e3d6ed1fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1845059, 36849, 699, 19, 60, "Input",ExpressionUUID->"82dfd22f-91cb-41e4-af72-0bf15a76305d"],
Cell[1845761, 36870, 285, 7, 56, "Output",ExpressionUUID->"4c3393d9-b442-466c-b36e-75092acbaf81"]
}, Open  ]],
Cell[1846061, 36880, 218, 5, 47, "Text",ExpressionUUID->"744699d3-d1e7-42c1-a532-b2883a3b4eb1"],
Cell[CellGroupData[{
Cell[1846304, 36889, 896, 25, 124, "Input",ExpressionUUID->"2aabac85-db95-4187-89d6-05891a8310df"],
Cell[1847203, 36916, 540, 13, 74, "Output",ExpressionUUID->"2ad77721-f26b-4702-b9f6-252832b86fac"],
Cell[1847746, 36931, 515, 12, 74, "Output",ExpressionUUID->"1a58fef0-a5e8-49f9-b1ce-ab67f7870dd9"]
}, Open  ]],
Cell[1848276, 36946, 1310, 31, 79, "Input",ExpressionUUID->"876b1b7a-f665-4395-909d-803f6c7e4b10"],
Cell[1849589, 36979, 251, 6, 47, "Text",ExpressionUUID->"8671f292-4014-4f59-b055-e10385784279"],
Cell[CellGroupData[{
Cell[1849865, 36989, 1091, 29, 116, "Input",ExpressionUUID->"033c89cb-f932-46e2-abff-dae73ebe8c3b"],
Cell[1850959, 37020, 4056, 114, 93, "Output",ExpressionUUID->"b0320cde-e1cf-4962-b7b9-52219cd1e48c"],
Cell[1855018, 37136, 2184, 61, 107, "Output",ExpressionUUID->"15407a70-6e0d-4160-a510-347f2c33e184"],
Cell[1857205, 37199, 656, 13, 56, "Output",ExpressionUUID->"f39fdfac-a661-4b19-98bc-02fa69994e9f"]
}, Open  ]],
Cell[1857876, 37215, 202, 3, 47, "Text",ExpressionUUID->"b24f096d-61b1-4c75-a038-7112e1c3fd04"],
Cell[CellGroupData[{
Cell[1858103, 37222, 3332, 81, 98, "Input",ExpressionUUID->"7927f046-4d09-4122-ac75-e8ac2cedfcb2"],
Cell[1861438, 37305, 823, 24, 107, "Output",ExpressionUUID->"b76e678f-a618-47c1-9d7b-a859d26d2215"]
}, Open  ]],
Cell[1862276, 37332, 235, 6, 47, "Text",ExpressionUUID->"d482a27f-8f55-474c-9eed-f0f7df2dd7f6"],
Cell[1862514, 37340, 5816, 161, 358, "Input",ExpressionUUID->"006ecdcd-d13d-4664-af5d-9f2bf60a65ca"],
Cell[1868333, 37503, 269, 6, 47, "Text",ExpressionUUID->"4378e718-5fa7-44a3-923b-b4427a176db8"],
Cell[CellGroupData[{
Cell[1868627, 37513, 1148, 33, 116, "Input",ExpressionUUID->"4e42acb4-83b0-4c48-ae4d-0b7bdebd263f"],
Cell[1869778, 37548, 387, 9, 56, "Output",ExpressionUUID->"9c6d51c4-a411-410b-8588-94fefd211e73"],
Cell[1870168, 37559, 2915, 43, 69, "Message",ExpressionUUID->"3b4cefc0-2312-41c9-a198-09e5136aa7af"],
Cell[1873086, 37604, 3152, 104, 107, "Output",ExpressionUUID->"e857fd52-b352-42a5-bf3d-a833236e390d"],
Cell[1876241, 37710, 5018, 154, 195, "Output",ExpressionUUID->"6e511d4e-d327-475a-870b-3e5d52c13fe5"]
}, Open  ]],
Cell[1881274, 37867, 7917, 218, 610, "Input",ExpressionUUID->"7a3c3ce1-e79b-4a2f-bb9b-2f7f38211c4d"],
Cell[CellGroupData[{
Cell[1889216, 38089, 1151, 33, 116, "Input",ExpressionUUID->"05c08959-3e82-4f5b-963a-a0b8d880861b"],
Cell[1890370, 38124, 389, 9, 56, "Output",ExpressionUUID->"0b9c22e1-6e50-4f25-97dc-2567c2896809"],
Cell[1890762, 38135, 2915, 85, 85, "Output",ExpressionUUID->"1635626f-bedc-4009-8ea2-8cce032b33d4"],
Cell[1893680, 38222, 4805, 132, 142, "Output",ExpressionUUID->"ba5242d8-8adb-4011-b0af-9ab20a871547"]
}, Open  ]],
Cell[1898500, 38357, 8308, 236, 610, "Input",ExpressionUUID->"4e09a1ba-6dae-4d5a-a830-866e964c0cb8"],
Cell[1906811, 38595, 699, 18, 52, "Text",ExpressionUUID->"2c445f2c-479c-476b-831c-d9abe72381eb"],
Cell[1907513, 38615, 3445, 115, 86, "Input",ExpressionUUID->"7f890f63-1d8e-498f-8a62-22a495462599"],
Cell[1910961, 38732, 795, 18, 86, "Text",ExpressionUUID->"db867459-695c-4c29-8dde-885be7c32dd6"],
Cell[1911759, 38752, 4012, 120, 161, "Input",ExpressionUUID->"143c6dc9-d9de-4bae-ae3a-de2e07f1f621"],
Cell[CellGroupData[{
Cell[1915796, 38876, 545, 15, 86, "Input",ExpressionUUID->"0e378861-682c-4fbd-bb39-e1ec7a55e903"],
Cell[1916344, 38893, 630, 16, 78, "Output",ExpressionUUID->"406df5ac-2de8-495c-ad14-01a281b75b7a"],
Cell[1916977, 38911, 607, 15, 78, "Output",ExpressionUUID->"cb004738-d450-4654-9f78-51f956191e5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1917621, 38931, 386, 11, 86, "Input",ExpressionUUID->"44b3a7e1-1600-4274-beb0-d117bb22dc24"],
Cell[1918010, 38944, 917, 25, 88, "Output",ExpressionUUID->"c2d00c03-e567-4970-84f0-96f7f82050cd"],
Cell[1918930, 38971, 953, 27, 88, "Output",ExpressionUUID->"1063ebf8-d867-4feb-81e5-c9f0901f570c"]
}, Open  ]],
Cell[1919898, 39001, 4309, 122, 276, "Input",ExpressionUUID->"c8edbfc1-1116-4580-ac63-3191194bca8f"],
Cell[1924210, 39125, 230, 5, 47, "Text",ExpressionUUID->"a9f6db18-bbb2-4f0d-a9c7-535f83784f64"],
Cell[1924443, 39132, 2426, 63, 116, "Input",ExpressionUUID->"35a3e64e-4f55-49b1-8845-b704e4c21d66"],
Cell[1926872, 39197, 249, 4, 47, "Text",ExpressionUUID->"bd578c7f-4e42-4fe4-93ff-abcbd5a4b793"],
Cell[CellGroupData[{
Cell[1927146, 39205, 1286, 29, 56, "Input",ExpressionUUID->"428f7fa5-6680-429f-8578-cb7df7398016"],
Cell[1928435, 39236, 815, 15, 56, "Output",ExpressionUUID->"9f8f45b5-f5f3-4df2-b2c5-077d628421b3"]
}, Open  ]],
Cell[1929265, 39254, 155, 3, 47, "Text",ExpressionUUID->"73c265c7-aa0d-4caa-b50a-cd53a381bd00"],
Cell[CellGroupData[{
Cell[1929445, 39261, 1288, 29, 56, "Input",ExpressionUUID->"0b1e0bbe-f251-41a1-ac7b-cf00280f5f55"],
Cell[1930736, 39292, 815, 15, 56, "Output",ExpressionUUID->"d3340de5-343b-40d3-a81a-51ee041b8c3f"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1931612, 39314, 309, 5, 77, "Section",ExpressionUUID->"595710cc-3d11-41af-ac2b-40d1c3a6e67f"],
Cell[CellGroupData[{
Cell[1931946, 39323, 222, 4, 49, "Subsection",ExpressionUUID->"403a8e5a-4ca9-4d8e-a0e4-e846aa3d9123"],
Cell[1932171, 39329, 497, 14, 89, "Input",ExpressionUUID->"d3934fba-b5f1-4529-b180-92cb47c804d6"],
Cell[1932671, 39345, 395, 10, 56, "Input",ExpressionUUID->"e5e7d4e0-05b8-4c21-9b89-3b947b78fc0f"],
Cell[1933069, 39357, 385, 9, 138, "Input",ExpressionUUID->"e496bd59-6dbd-4fbc-ab8f-8ac52234b583"],
Cell[CellGroupData[{
Cell[1933479, 39370, 1267, 37, 84, "Input",ExpressionUUID->"146df3ca-4d43-473b-b4de-052b647eddc2"],
Cell[1934749, 39409, 26862, 470, 99, "Output",ExpressionUUID->"0e9f0a0b-0ef7-4950-ba32-4235a1eb3ed0"]
}, Open  ]],
Cell[1961626, 39882, 249, 4, 56, "Input",ExpressionUUID->"b3d4f08e-83e3-4ab9-9786-819c7c764fa5"],
Cell[CellGroupData[{
Cell[1961900, 39890, 203, 3, 56, "Input",ExpressionUUID->"0cc3aa39-babd-47f0-8efb-bd10071be00b"],
Cell[1962106, 39895, 5339, 94, 547, "Output",ExpressionUUID->"06a35b70-f6c3-460a-bc4c-039df8c5a5ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1967482, 39994, 195, 3, 90, "Input",ExpressionUUID->"76c329db-f2fc-4a65-a639-2faf7668b4d1"],
Cell[1967680, 39999, 21339, 426, 480, "Output",ExpressionUUID->"0746842f-bd0d-44eb-9576-0e0fb6cc8975"]
}, Open  ]],
Cell[1989034, 40428, 236, 5, 90, "Input",ExpressionUUID->"6ff8a7a2-17c7-4fcf-97fe-f99ac7fda90b"],
Cell[CellGroupData[{
Cell[1989295, 40437, 373, 10, 90, "Input",ExpressionUUID->"a6974c51-32db-40ac-9ef1-21d6b85569eb"],
Cell[1989671, 40449, 1965, 46, 453, "Output",ExpressionUUID->"deb15908-d167-43de-bb34-566508e1d9f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1991673, 40500, 204, 3, 90, "Input",ExpressionUUID->"8f72bd82-041b-4a66-800a-c0849dd7a2d0"],
Cell[1991880, 40505, 696, 14, 96, "Message",ExpressionUUID->"16d65af2-931b-4036-8780-955e2106b706"],
Cell[1992579, 40521, 9948, 249, 254, "Output",ExpressionUUID->"a63563f1-793b-4902-8a1c-18ab1099276d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2002564, 40775, 234, 4, 90, "Input",ExpressionUUID->"11853a59-d1dc-43f6-b45c-aef4ecc13ba4"],
Cell[2002801, 40781, 9925, 249, 254, "Output",ExpressionUUID->"3fc5f5ee-ecfc-45bb-9137-85e630661f1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2012763, 41035, 475, 12, 90, "Input",ExpressionUUID->"24f362c1-d071-419c-9d81-4c198b1c6a91"],
Cell[2013241, 41049, 915, 24, 90, "Output",ExpressionUUID->"29e9faab-2f84-45f7-bd86-8e9a7a92e568"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2014193, 41078, 293, 6, 90, "Input",ExpressionUUID->"f2f687d0-6dc5-481e-8307-156eb0ad8ff0"],
Cell[2014489, 41086, 720, 14, 96, "Message",ExpressionUUID->"e6e95fea-5acf-49ff-9355-51a7abf5bbe3"],
Cell[2015212, 41102, 5387, 105, 522, "Output",ExpressionUUID->"615fef30-1c80-40bf-8c13-d31916fbc5ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2020636, 41212, 519, 14, 90, "Input",ExpressionUUID->"8c752b01-e5d1-4518-aff0-0968faea1cb7"],
Cell[2021158, 41228, 1251, 35, 151, "Output",ExpressionUUID->"b3352c91-67ae-4843-810a-8f57c775f265"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2022446, 41268, 652, 18, 90, "Input",ExpressionUUID->"430752d7-cd82-453e-aca5-30511ff0a1b7"],
Cell[2023101, 41288, 1273, 35, 151, "Output",ExpressionUUID->"af656295-8750-433e-9f81-dac432cbb33a"]
}, Open  ]],
Cell[2024389, 41326, 600, 17, 90, "Input",ExpressionUUID->"37bf3c39-675f-4a09-ba90-a15416969ae3"],
Cell[CellGroupData[{
Cell[2025014, 41347, 225, 4, 90, "Input",ExpressionUUID->"f5b9be00-da19-41d6-947b-cbc000f4b409"],
Cell[2025242, 41353, 659, 14, 90, "Output",ExpressionUUID->"3654fb88-7976-4822-bb42-5cd0f2696612"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2025938, 41372, 257, 5, 90, "Input",ExpressionUUID->"72108f34-ac17-4ad9-88ca-71d2ae34d3bc"],
Cell[2026198, 41379, 1628, 43, 526, "Output",ExpressionUUID->"b0d5b3b8-0538-4c74-8f29-e62f3e9e6eee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2027863, 41427, 380, 8, 90, "Input",ExpressionUUID->"d02931d3-10ab-4072-b70c-c11133a73bc9"],
Cell[2028246, 41437, 5647, 110, 545, "Output",ExpressionUUID->"ec14b647-e226-4ebf-9f23-c2861ca8602f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2033930, 41552, 280, 6, 90, "Input",ExpressionUUID->"88e9d9e2-3ba7-430b-91f6-208fd45df5fc"],
Cell[2034213, 41560, 167, 2, 90, "Output",ExpressionUUID->"f60cd86b-052f-4702-96ca-6dd2cb334a60"]
}, Open  ]],
Cell[2034395, 41565, 1217, 35, 136, "Input",ExpressionUUID->"ebfdaadd-5a6a-4fb9-b4ec-879667febd92"],
Cell[CellGroupData[{
Cell[2035637, 41604, 330, 6, 90, "Input",ExpressionUUID->"7df8d0c8-a731-4633-bc62-49df85208f14"],
Cell[2035970, 41612, 54463, 936, 541, "Output",ExpressionUUID->"af61346c-a552-4274-8f09-332158c95d10"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2090482, 42554, 222, 4, 47, "Subsection",ExpressionUUID->"52eeacdd-c05b-4680-a387-380e122bcba6"],
Cell[2090707, 42560, 3230, 100, 269, "Input",ExpressionUUID->"ced0f5ab-f71b-49e7-acfe-9eeac32023d4"],
Cell[2093940, 42662, 1074, 29, 88, "Input",ExpressionUUID->"4b4e8b6b-cf49-4819-b9ce-2e8d9a2f0f33"],
Cell[CellGroupData[{
Cell[2095039, 42695, 470, 12, 58, "Input",ExpressionUUID->"ea1224fa-2077-40d0-9648-5875e75eccbd"],
Cell[2095512, 42709, 14575, 259, 363, "Output",ExpressionUUID->"f752c275-6750-47a5-8dc1-1bb77f98a9df"]
}, Open  ]],
Cell[2110102, 42971, 488, 12, 139, "Input",ExpressionUUID->"177a731d-1a8c-455a-8739-2936a27dc784"],
Cell[CellGroupData[{
Cell[2110615, 42987, 1897, 56, 103, "Input",ExpressionUUID->"579b719a-ea96-4776-b7fe-fbbfc4885bff"],
Cell[2112515, 43045, 42440, 742, 100, "Output",ExpressionUUID->"11bc7ea1-5801-4465-a4f3-ff422a942d22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2154992, 43792, 207, 4, 58, "Input",ExpressionUUID->"dc2400af-2854-4428-800e-a619a1b45c84"],
Cell[2155202, 43798, 6660, 117, 530, "Output",ExpressionUUID->"ae920bc8-e238-4943-a4e5-b3af885ef3fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2161899, 43920, 195, 3, 58, "Input",ExpressionUUID->"447f47d5-b808-4537-8d5c-2f53f81f8bbf"],
Cell[2162097, 43925, 21339, 426, 315, "Output",ExpressionUUID->"1a4ba5f2-420c-436c-8362-55487dd89ef7"]
}, Open  ]],
Cell[2183451, 44354, 240, 6, 58, "Input",ExpressionUUID->"30521130-5756-4c9c-9c27-c84af8b9d604"],
Cell[CellGroupData[{
Cell[2183716, 44364, 377, 11, 58, "Input",ExpressionUUID->"39f7b520-93d5-4c3c-bd46-fa3877882c21"],
Cell[2184096, 44377, 2373, 51, 299, "Output",ExpressionUUID->"40d644f3-5c16-4cd9-a3c2-48628f5d8b05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2186506, 44433, 238, 5, 58, "Input",ExpressionUUID->"a21240a6-cf07-4508-8c0c-2fa29ccdf33b"],
Cell[2186747, 44440, 9668, 245, 169, "Output",ExpressionUUID->"cc7b48ab-55d7-4d0a-94de-b30c4f48fc6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2196452, 44690, 297, 7, 58, "Input",ExpressionUUID->"cdf95512-28fc-4049-8043-4e8db7070fb5"],
Cell[2196752, 44699, 845, 16, 64, "Message",ExpressionUUID->"8fde141c-f7bf-4654-ac4d-f5c1f90eb117"],
Cell[2197600, 44717, 27669, 472, 344, "Output",ExpressionUUID->"89712480-a16b-4f38-9943-abfc9e4c38d6"]
}, Open  ]],
Cell[2225284, 45192, 604, 18, 58, "Input",ExpressionUUID->"f0ddacd2-2094-417e-8b28-d7b40b2b90e3"],
Cell[CellGroupData[{
Cell[2225913, 45214, 229, 5, 58, "Input",ExpressionUUID->"553a5d4a-37dc-439e-b171-14f424c2adc3"],
Cell[2226145, 45221, 602, 11, 58, "Output",ExpressionUUID->"5cc1b8ae-1afa-4915-b0cd-d3348afd5c97"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2226784, 45237, 261, 6, 58, "Input",ExpressionUUID->"7e22e44f-1378-485d-9e0b-2c8d609d31c4"],
Cell[2227048, 45245, 1620, 44, 373, "Output",ExpressionUUID->"8d4f3014-93ae-47ed-96f2-8b42410c6b48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2228705, 45294, 384, 9, 58, "Input",ExpressionUUID->"6bb12f4e-4395-46eb-84f8-678da8b221bd"],
Cell[2229092, 45305, 30390, 517, 356, "Output",ExpressionUUID->"edb30051-48c0-4146-ba06-1a8d8b99728b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2259519, 45827, 284, 7, 58, "Input",ExpressionUUID->"6ab1d2c3-1541-42fd-af39-9b2a4ea5db6a"],
Cell[2259806, 45836, 262, 4, 58, "Output",ExpressionUUID->"52c395e7-2a36-4046-983c-20ab9a9b376d"]
}, Open  ]],
Cell[2260083, 45843, 1221, 36, 88, "Input",ExpressionUUID->"e996734b-2e08-46fa-8bd1-dae6f0bf06c1"],
Cell[CellGroupData[{
Cell[2261329, 45883, 391, 8, 58, "Input",ExpressionUUID->"f4779e6b-3bd8-425e-8f5c-571dc6ad7a31"],
Cell[2261723, 45893, 187328, 3118, 364, "Output",ExpressionUUID->"bd451973-634b-4441-bca6-7db302197ca2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2449100, 49017, 222, 4, 47, "Subsection",ExpressionUUID->"e5fce193-fde5-4b64-be34-c36433a44a07"],
Cell[2449325, 49023, 3230, 100, 269, "Input",ExpressionUUID->"f76e813d-47cc-4fc7-9abc-e06f2a09df85"],
Cell[2452558, 49125, 1074, 29, 88, "Input",ExpressionUUID->"f2d8931a-c13e-425c-924a-0ce89fad4f1f"],
Cell[CellGroupData[{
Cell[2453657, 49158, 470, 12, 58, "Input",ExpressionUUID->"0446173c-da5b-4397-b0c9-522eaf408c5f"],
Cell[2454130, 49172, 14575, 259, 363, "Output",ExpressionUUID->"e48a150a-1265-4be6-a4ac-ecdc09a7a134"]
}, Open  ]],
Cell[2468720, 49434, 488, 12, 139, "Input",ExpressionUUID->"2de665f3-b97c-4689-8afa-2c704b9657c3"],
Cell[CellGroupData[{
Cell[2469233, 49450, 1897, 56, 103, "Input",ExpressionUUID->"f754b0ab-b3bd-47ff-bfc8-ae4efba555a7"],
Cell[2471133, 49508, 42440, 742, 100, "Output",ExpressionUUID->"d0aec672-24c8-4660-a46e-d8eaff7a1286"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2513610, 50255, 207, 4, 58, "Input",ExpressionUUID->"0e6cb240-f18a-40c8-a244-20b32470d03d"],
Cell[2513820, 50261, 6660, 117, 530, "Output",ExpressionUUID->"b1bfef2c-d9cc-4241-8401-9e4ed6bc20a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2520517, 50383, 195, 3, 58, "Input",ExpressionUUID->"1c94de40-ff71-4fba-b695-b544b249907a"],
Cell[2520715, 50388, 21339, 426, 315, "Output",ExpressionUUID->"cb0fc2b4-83fe-40d4-9cbc-deb2fb3b7b0e"]
}, Open  ]],
Cell[2542069, 50817, 240, 6, 58, "Input",ExpressionUUID->"16699bd4-544c-4d28-84af-b359c2e39edd"],
Cell[CellGroupData[{
Cell[2542334, 50827, 377, 11, 58, "Input",ExpressionUUID->"d78543a5-1ed9-4cd9-9993-30e53680d366"],
Cell[2542714, 50840, 2373, 51, 299, "Output",ExpressionUUID->"facbaf42-94c6-48bd-852c-0971f48ac896"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2545124, 50896, 238, 5, 58, "Input",ExpressionUUID->"2832556c-2fbb-492a-8785-324ecd34f4d7"],
Cell[2545365, 50903, 9668, 245, 169, "Output",ExpressionUUID->"441ecbf9-4a18-4b50-bf9e-587cf69673ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2555070, 51153, 297, 7, 58, "Input",ExpressionUUID->"4baa605d-f99e-416c-a689-ae19e669f67b"],
Cell[2555370, 51162, 845, 16, 64, "Message",ExpressionUUID->"59452195-a6ba-41b6-84c5-c8ec14029810"],
Cell[2556218, 51180, 27669, 472, 344, "Output",ExpressionUUID->"d95ebae8-e4a9-4f51-95ec-6a5b20d5826e"]
}, Open  ]],
Cell[2583902, 51655, 604, 18, 84, "Input",ExpressionUUID->"5a9e7e78-4b85-42bd-98bb-5639449c71de"],
Cell[CellGroupData[{
Cell[2584531, 51677, 229, 5, 84, "Input",ExpressionUUID->"857e77c9-b160-42b6-a6d6-539ab92a7c02"],
Cell[2584763, 51684, 602, 11, 84, "Output",ExpressionUUID->"0f140217-fcd5-45c7-ad17-bb3745d1ed51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2585402, 51700, 261, 6, 84, "Input",ExpressionUUID->"1eadbab3-151d-420f-8c81-2b22236694d4"],
Cell[2585666, 51708, 1620, 44, 540, "Output",ExpressionUUID->"8307f907-0c70-42c0-9b8e-a9b29736318e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2587323, 51757, 384, 9, 84, "Input",ExpressionUUID->"bb0f3bed-c7c0-492b-8c23-067e06ebd006"],
Cell[2587710, 51768, 30390, 517, 516, "Output",ExpressionUUID->"b1ff8644-376f-45a2-949b-8ceae3952852"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2618137, 52290, 284, 7, 84, "Input",ExpressionUUID->"683a30d4-43ff-4db3-9da6-81adc323b98c"],
Cell[2618424, 52299, 262, 4, 84, "Output",ExpressionUUID->"b07688be-580a-48d9-be60-baa54b01110d"]
}, Open  ]],
Cell[2618701, 52306, 1221, 36, 127, "Input",ExpressionUUID->"522cb076-9b63-4aef-a9da-93edfb208a87"],
Cell[CellGroupData[{
Cell[2619947, 52346, 391, 8, 84, "Input",ExpressionUUID->"859cfcd6-fa4d-4f2a-8ecd-4c4c5cb3f1cb"],
Cell[2620341, 52356, 187328, 3118, 527, "Output",ExpressionUUID->"3c9d05af-829e-4814-9c24-bd04146b8572"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2807718, 55480, 268, 4, 47, "Subsection",ExpressionUUID->"554c849c-92b6-4cd3-974e-8e1cbd7735d8"],
Cell[2807989, 55486, 851, 23, 58, "Input",ExpressionUUID->"7e30196d-8de5-4630-a150-fe0eafdf1d00"],
Cell[2808843, 55511, 3230, 100, 269, "Input",ExpressionUUID->"7cbc7ba7-a01e-424d-915c-bb24224058bd"],
Cell[2812076, 55613, 1074, 29, 88, "Input",ExpressionUUID->"aa863cb1-01e5-467c-a0e7-36bd96341027"],
Cell[CellGroupData[{
Cell[2813175, 55646, 470, 12, 58, "Input",ExpressionUUID->"05e097b7-8611-4f30-a6f4-88577cbc0d96"],
Cell[2813648, 55660, 14575, 259, 363, "Output",ExpressionUUID->"8f43ab02-fd4d-4797-9d28-4d755538ee4e"]
}, Open  ]],
Cell[2828238, 55922, 488, 12, 139, "Input",ExpressionUUID->"d372ceb7-3e07-4954-ac54-86fcd65bc8bc"],
Cell[CellGroupData[{
Cell[2828751, 55938, 1897, 56, 103, "Input",ExpressionUUID->"808b73b4-363a-44ff-9858-4496fb6beb10"],
Cell[2830651, 55996, 42440, 742, 100, "Output",ExpressionUUID->"7d1c9049-d64d-4f19-bb64-c3a6f90404b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2873128, 56743, 207, 4, 58, "Input",ExpressionUUID->"62e022b6-f156-4e06-8c74-9f1c34a29407"],
Cell[2873338, 56749, 6660, 117, 530, "Output",ExpressionUUID->"a45fc6ac-0067-4f72-9753-9c6b91d81fd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2880035, 56871, 195, 3, 58, "Input",ExpressionUUID->"3b599a30-d276-4bfd-99f5-551fc3a3d702"],
Cell[2880233, 56876, 21339, 426, 315, "Output",ExpressionUUID->"14aefb17-e996-4565-b863-3b8da7cc42ee"]
}, Open  ]],
Cell[2901587, 57305, 240, 6, 58, "Input",ExpressionUUID->"6f395e3b-f0f1-4c54-b0b8-bc173fd1c21f"],
Cell[CellGroupData[{
Cell[2901852, 57315, 377, 11, 58, "Input",ExpressionUUID->"fadd9851-f876-4839-bba3-0ee22b33bc19"],
Cell[2902232, 57328, 2373, 51, 299, "Output",ExpressionUUID->"1e44a351-bdcf-402c-b00e-8a70442d3baf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2904642, 57384, 238, 5, 58, "Input",ExpressionUUID->"f049c82b-5639-43f8-8e03-faa3d3c3f9ca"],
Cell[2904883, 57391, 9668, 245, 169, "Output",ExpressionUUID->"cd41ca96-a581-49f0-81ee-ed268a4f3ae7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2914588, 57641, 297, 7, 58, "Input",ExpressionUUID->"a49705c9-c800-495f-97bb-1f9c1b375367"],
Cell[2914888, 57650, 845, 16, 64, "Message",ExpressionUUID->"2d0d586e-2107-4cb9-a436-3b73f77bced4"],
Cell[2915736, 57668, 27669, 472, 344, "Output",ExpressionUUID->"18e86ab7-2e8f-4219-b9a2-ce9edb8d75d2"]
}, Open  ]],
Cell[2943420, 58143, 604, 18, 84, "Input",ExpressionUUID->"866024dc-b927-424f-ba68-518ebcc1ee75"],
Cell[CellGroupData[{
Cell[2944049, 58165, 229, 5, 84, "Input",ExpressionUUID->"d57233d2-5522-479c-a703-6950f73c4614"],
Cell[2944281, 58172, 602, 11, 84, "Output",ExpressionUUID->"920fd05e-4c32-421e-a44e-1ea028ee1ac4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2944920, 58188, 261, 6, 84, "Input",ExpressionUUID->"5a280b2e-33ae-48f5-88a0-e6b58007c886"],
Cell[2945184, 58196, 1620, 44, 540, "Output",ExpressionUUID->"6c315c37-cda9-4e72-8e0d-ef6d79a74673"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2946841, 58245, 384, 9, 84, "Input",ExpressionUUID->"6c6231ad-094d-4693-bd8c-3b8a34554835"],
Cell[2947228, 58256, 30390, 517, 516, "Output",ExpressionUUID->"9cfbed10-ceb7-4204-a258-0e340d9e185b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2977655, 58778, 284, 7, 84, "Input",ExpressionUUID->"259d1457-270f-491d-a551-3da9a61748cf"],
Cell[2977942, 58787, 262, 4, 84, "Output",ExpressionUUID->"a35b119f-ffa3-43ea-9e15-16b124cf5705"]
}, Open  ]],
Cell[2978219, 58794, 1221, 36, 127, "Input",ExpressionUUID->"81cb8c32-105c-41f2-9a64-7419778b3e24"],
Cell[CellGroupData[{
Cell[2979465, 58834, 391, 8, 84, "Input",ExpressionUUID->"95a92952-f570-4ab7-aabf-d8ef097142dc"],
Cell[2979859, 58844, 187328, 3118, 527, "Output",ExpressionUUID->"6c525e23-68d4-4f3c-936e-5e5dc543fc92"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3167236, 61968, 229, 4, 47, "Subsection",ExpressionUUID->"a92b9256-56cf-4ac5-bf02-535f3f7c263f"],
Cell[CellGroupData[{
Cell[3167490, 61976, 264, 6, 58, "Input",ExpressionUUID->"7c255619-1473-4c1a-b807-5322b7741df0"],
Cell[3167757, 61984, 321, 10, 78, "Output",ExpressionUUID->"a6b0df3f-1b23-4457-a121-60f61993efd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3168115, 61999, 239, 4, 58, "Input",ExpressionUUID->"71ce49ec-4eae-4cf6-90d6-995bff3c38f1"],
Cell[3168357, 62005, 344, 11, 78, "Output",ExpressionUUID->"d8a4a7e6-69b9-4979-9cc4-8a6ecbbbe012"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3168738, 62021, 198, 3, 58, "Input",ExpressionUUID->"5aa73839-6b4a-41dc-b0a9-3538e83af073"],
Cell[3168939, 62026, 12078, 289, 145, "Output",ExpressionUUID->"d4451c26-455f-4b8a-a445-7d041c651cae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3181054, 62320, 198, 3, 58, "Input",ExpressionUUID->"ee48fdcb-16e3-4ce7-8358-0f5d94405611"],
Cell[3181255, 62325, 12582, 297, 179, "Output",ExpressionUUID->"2968f83a-d6ef-43c8-9983-26bd663ed3ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3193874, 62627, 239, 4, 58, "Input",ExpressionUUID->"98d46f22-c572-4047-931a-c5ff8a5c4efa"],
Cell[3194116, 62633, 346, 11, 78, "Output",ExpressionUUID->"68bb7114-dd86-4bdb-a059-e81590fde21e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3194499, 62649, 636, 20, 92, "Input",ExpressionUUID->"bb09ab51-8969-4839-8eec-ea973052a95f"],
Cell[3195138, 62671, 25027, 680, 328, "Output",ExpressionUUID->"dadc56d4-b2f9-442d-b8eb-c5467e726d1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3220202, 63356, 634, 20, 92, "Input",ExpressionUUID->"ddbf4e4d-8437-4984-9c6f-45bec73a557e"],
Cell[3220839, 63378, 727, 23, 88, "Output",ExpressionUUID->"899131fb-d90d-4a59-8d1a-3675f081a6e1"]
}, Open  ]],
Cell[3221581, 63404, 210, 3, 58, "Input",ExpressionUUID->"367e6b11-a279-4db0-8c3f-de5c6a43064d"],
Cell[CellGroupData[{
Cell[3221816, 63411, 201, 3, 58, "Input",ExpressionUUID->"80afbfb9-a609-48c4-8613-85c5a650ad0f"],
Cell[3222020, 63416, 201, 4, 63, "Output",ExpressionUUID->"6209efbe-e6d9-4bd1-9411-15821a5d271f"]
}, Open  ]],
Cell[3222236, 63423, 246, 7, 63, "Input",ExpressionUUID->"1d41918a-bd52-426f-ab98-3ea5482e7408"],
Cell[3222485, 63432, 539, 15, 161, "Input",ExpressionUUID->"fc1948db-70f2-4399-aca0-9f52aca38bb0"],
Cell[3223027, 63449, 2201, 58, 299, "Input",ExpressionUUID->"ee5731cd-92d4-45e6-b93a-821b10c52aef"],
Cell[3225231, 63509, 1706, 43, 270, "Input",ExpressionUUID->"26baed4f-4c6d-4e8c-a886-7339e1f263cc"],
Cell[CellGroupData[{
Cell[3226962, 63556, 698, 20, 79, "Input",ExpressionUUID->"f9dc05d7-0c13-43b1-bbd4-2a1f8c3b8b6b"],
Cell[3227663, 63578, 493, 13, 76, "Output",ExpressionUUID->"422f0875-89e7-429f-b6f5-7b4b8c85e44b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3228193, 63596, 962, 27, 79, "Input",ExpressionUUID->"55d4036e-aee0-43d7-8f3a-6d886c5af17d"],
Cell[3229158, 63625, 1958, 74, 111, "Output",ExpressionUUID->"5de732cc-f115-4516-868f-a8a49c8f39d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3231153, 63704, 1201, 34, 79, "Input",ExpressionUUID->"1f57ccd7-8e56-4ceb-873e-ea8a57a025e3"],
Cell[3232357, 63740, 1768, 70, 126, "Output",ExpressionUUID->"233831be-a986-402e-a437-bc6cb1b55608"]
}, Open  ]],
Cell[3234140, 63813, 268, 6, 58, "Input",ExpressionUUID->"dc54d0e4-e2b5-4436-86be-8c50558c7cfe"],
Cell[CellGroupData[{
Cell[3234433, 63823, 402, 10, 58, "Input",ExpressionUUID->"2e9d18d3-0914-4520-8d92-d55180c72501"],
Cell[3234838, 63835, 413, 12, 58, "Output",ExpressionUUID->"dd58b036-2afb-495b-b86d-4d2dbae55c82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3235288, 63852, 776, 20, 58, "Input",ExpressionUUID->"1ed3a581-d23d-4b6f-9437-1cbf5d88c717"],
Cell[3236067, 63874, 2521, 89, 126, "Output",ExpressionUUID->"cddbb664-1129-4d62-b5c3-ba464b81f828"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3238625, 63968, 584, 14, 58, "Input",ExpressionUUID->"816d1884-1efe-42be-83de-cd436ad49e5a"],
Cell[3239212, 63984, 37695, 684, 100, "Output",ExpressionUUID->"9336fd1d-e67c-4eee-a542-43b50956c963"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3276944, 64673, 215, 4, 58, "Input",ExpressionUUID->"bc84b468-afce-46e0-a397-a300397f8c84"],
Cell[3277162, 64679, 13675, 237, 546, "Output",ExpressionUUID->"f731224d-89c3-4f2b-82f4-9ec0f00023b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3290874, 64921, 433, 11, 58, "Input",ExpressionUUID->"dc7577db-8a67-46ed-83e3-14be0829c81a"],
Cell[3291310, 64934, 1566, 51, 299, "Output",ExpressionUUID->"86cc3850-a753-476b-9771-46a6f1172ed9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3292925, 64991, 231, 4, 47, "Subsection",ExpressionUUID->"8847525a-e376-436a-a283-514cfd31d65b"],
Cell[3293159, 64997, 3230, 100, 269, "Input",ExpressionUUID->"d6a6b671-3523-407c-a146-6b4d041e6817"],
Cell[3296392, 65099, 1074, 29, 88, "Input",ExpressionUUID->"e51c7797-fba4-4538-8f7b-701c3cc57de4"],
Cell[3297469, 65130, 199, 5, 58, "Input",ExpressionUUID->"e471f285-7179-45f3-adb6-4c2ee0f6ca08"],
Cell[3297671, 65137, 539, 15, 161, "Input",ExpressionUUID->"eb11aabe-b04a-4db3-89cc-d8da7faa54c0"],
Cell[3298213, 65154, 2201, 58, 299, "Input",ExpressionUUID->"fe7ddf65-2bf4-47ae-98ed-d00db64952f5"],
Cell[3300417, 65214, 1706, 43, 270, "Input",ExpressionUUID->"e5d41e39-e148-4999-80f7-4f7d3f0e1b8f"],
Cell[CellGroupData[{
Cell[3302148, 65261, 698, 20, 79, "Input",ExpressionUUID->"cfa71dbf-4ade-40fb-bb40-f2a78ee915d3"],
Cell[3302849, 65283, 493, 13, 76, "Output",ExpressionUUID->"9b1643ca-8756-4d22-acb2-96f5c1d3589f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3303379, 65301, 962, 27, 79, "Input",ExpressionUUID->"6af5202c-f06d-4a78-b9c9-fde3a5bef9ac"],
Cell[3304344, 65330, 1958, 74, 111, "Output",ExpressionUUID->"c8119adf-9fd6-45d9-b0aa-1fe1ddd4d060"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3306339, 65409, 1201, 34, 79, "Input",ExpressionUUID->"abe6128c-5442-4e6a-b991-cb5e3e346bb4"],
Cell[3307543, 65445, 1768, 70, 126, "Output",ExpressionUUID->"f26bc0a7-ef4b-43fd-a283-24e411c58bf3"]
}, Open  ]],
Cell[3309326, 65518, 268, 6, 58, "Input",ExpressionUUID->"c6af3471-75e4-426a-8b87-9c1ea45a299c"],
Cell[CellGroupData[{
Cell[3309619, 65528, 402, 10, 58, "Input",ExpressionUUID->"58ef98ab-5146-4984-8939-dc2141acf063"],
Cell[3310024, 65540, 413, 12, 58, "Output",ExpressionUUID->"a313f041-0cef-42b1-88bf-f6e12cc323b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3310474, 65557, 776, 20, 58, "Input",ExpressionUUID->"d0256031-8efc-4400-974d-b9372462789c"],
Cell[3311253, 65579, 2521, 89, 126, "Output",ExpressionUUID->"dd351b2f-0066-4c32-ba4d-44e63770b6cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3313811, 65673, 584, 14, 58, "Input",ExpressionUUID->"c55db844-d0c5-4a77-aa9a-b4831b65d532"],
Cell[3314398, 65689, 37695, 684, 100, "Output",ExpressionUUID->"ec1b63dd-82d7-424e-94d1-b16c53a195e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3352130, 66378, 215, 4, 58, "Input",ExpressionUUID->"599f1882-849c-4f0a-9de0-14c54a022771"],
Cell[3352348, 66384, 13675, 237, 546, "Output",ExpressionUUID->"726e0aa1-e008-493d-b8ce-653584931ca4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3366060, 66626, 433, 11, 58, "Input",ExpressionUUID->"c100f58c-cc42-4f5a-86e2-354655ed58b0"],
Cell[3366496, 66639, 1566, 51, 299, "Output",ExpressionUUID->"b851e3d3-204b-49b0-bac0-4b19f1f84be9"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[3368123, 66697, 154, 3, 77, "Section",ExpressionUUID->"2591654c-4b92-40f2-98f3-ce4303f1246c"],
Cell[CellGroupData[{
Cell[3368302, 66704, 1181, 33, 62, "Input",ExpressionUUID->"aeff558d-4ff8-40ec-ad31-8cafa4ed1c0b"],
Cell[3369486, 66739, 194, 4, 58, "Output",ExpressionUUID->"f149e582-3eca-4849-8b26-83abbc933d80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3369717, 66748, 705, 22, 62, "Input",ExpressionUUID->"5c5d8449-6592-4dee-921f-678f97adcbc0"],
Cell[3370425, 66772, 842, 24, 62, "Output",ExpressionUUID->"cb2a1fea-2f5a-4812-a283-3c31b88753f5"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

