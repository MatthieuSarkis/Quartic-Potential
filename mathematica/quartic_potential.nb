(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1088712,      22687]
NotebookOptionsPosition[   1054197,      22205]
NotebookOutlinePosition[   1054739,      22224]
CellTagsIndexPosition[   1054696,      22221]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Quadratic potential for Quantum Drude Oscillators", "Title",
 CellChangeTimes->{{3.863748632532035*^9, 3.863748643888073*^9}, {
  3.8637692125760307`*^9, 3.863769217471353*^9}, {3.863884088336817*^9, 
  3.8638841058722982`*^9}},ExpressionUUID->"fe2360b0-62b6-4776-80a3-\
16c5f3914b5b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", "\"\<Running automatic cells!\>\"", "]"}]], "Code",
 CellChangeTimes->{{3.8645293680251083`*^9, 3.864529384570129*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"2cf9f381-7be1-4d17-9079-360bae585fc9"],

Cell[BoxData["\<\"Running automatic cells!\"\>"], "Print",
 CellChangeTimes->{{3.864529389316641*^9, 3.8645294000315027`*^9}, 
   3.864531886881159*^9, {3.8646128828503017`*^9, 3.864612882995989*^9}, {
   3.864704015033862*^9, 3.864704015269785*^9}, {3.864815020248878*^9, 
   3.864815020496274*^9}, {3.864877193102209*^9, 3.8648771933073883`*^9}, {
   3.8649643361990843`*^9, 3.864964336409341*^9}, 3.8649645770215483`*^9, {
   3.864967074203937*^9, 3.864967074397295*^9}, {3.864968203293312*^9, 
   3.864968203435671*^9}, {3.8649820785934563`*^9, 3.864982078785571*^9}, 
   3.864992424750996*^9, 3.864992482183079*^9, 3.864998521427479*^9, 
   3.864998578817552*^9, 3.865006651104135*^9, 3.86500670963759*^9, 
   3.865011218260708*^9, 3.865011277092289*^9, 3.8650482351177177`*^9, 
   3.8650483011132097`*^9, 3.865049587331525*^9, 3.865058743247319*^9, 
   3.865058804484337*^9, 3.8650685527089167`*^9, 3.865068616790579*^9},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"261962aa-40c0-4edc-bb47-2e47c12195b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Quartic Schrodinger equation and triconfluent Heun function (ONGOING)\
\>", "Section",
 CellChangeTimes->{{3.863855691713881*^9, 3.863855719776444*^9}, {
  3.86388412237913*^9, 
  3.863884125383718*^9}},ExpressionUUID->"06d2419f-fbb3-475c-be33-\
6fea5e17123c"],

Cell[CellGroupData[{

Cell["\<\
Spectrum (reproduce Heuuuun Lay paper, symmetric case) (SUCCESS)\
\>", "Subsection",
 CellChangeTimes->{{3.86420854117025*^9, 3.864208555698213*^9}, {
  3.864268776603902*^9, 3.8642687791006308`*^9}, {3.864274514564568*^9, 
  3.864274528882434*^9}, {3.864274698548256*^9, 3.864274702148451*^9}, {
  3.8643139891668453`*^9, 
  3.8643139937385*^9}},ExpressionUUID->"4fb6a8ac-24b6-40b0-aa29-01e36afe4b6c"],

Cell["We define the potential and the Schrodinger equation", "Text",
 CellChangeTimes->{{3.864274820517263*^9, 
  3.86427483221453*^9}},ExpressionUUID->"af6e7ac7-8506-4f8b-978a-\
df0eb900375e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"A", " ", "z"}], " ", "+", 
   SuperscriptBox["z", "2"], "+", 
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", 
    SuperscriptBox["z", "4"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq", "[", "\[Psi]_", "]"}], ":=", 
   RowBox[{"z", "\[Function]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "''"}], "[", "z", "]"}], "-", 
     RowBox[{
      RowBox[{"V", "[", "z", "]"}], 
      RowBox[{"\[Psi]", "[", "z", "]"}]}], "+", 
     RowBox[{"\[Epsilon]", " ", 
      RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.864035526701899*^9, 3.864035567764186*^9}, {
   3.86403565956774*^9, 3.864035667256592*^9}, {3.864115016484351*^9, 
   3.864115017418898*^9}, {3.8641152422780733`*^9, 3.864115267812194*^9}, {
   3.864115649334899*^9, 3.864115655364806*^9}, 3.864115695927232*^9, 
   3.864116018567485*^9, 3.864117086684123*^9, {3.8641181148079357`*^9, 
   3.864118115933967*^9}, {3.864118242001134*^9, 3.86411825792118*^9}, 
   3.8641990306553793`*^9, 3.8642010609833183`*^9, 3.86420237395303*^9, {
   3.864205586724691*^9, 3.864205587664859*^9}, 3.8642078236374598`*^9, {
   3.864208608819233*^9, 3.864208610930963*^9}, {3.864269777597616*^9, 
   3.864269777795177*^9}, {3.8642708672924137`*^9, 3.8642708773561974`*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"84e93e8d-6a83-4b8e-8587-8a32b94ff6d3"],

Cell[TextData[{
 "We perfoms two change of the active variable \[Psi]:\n- the exponential of \
cubic polynomial brings us to a standard triconfluent form\n- the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "+", "1"}], ")"}], 
    RowBox[{"some", " ", "power"}]], TraditionalForm]],ExpressionUUID->
  "1fe462ea-593b-43e5-ae1b-9e9f8bcb1459"],
 "allows to get nice polynomial coeffients in the ODE eventually, hence nice \
difference equations"
}], "Text",
 CellChangeTimes->{{3.864274840389675*^9, 
  3.864274940086256*^9}},ExpressionUUID->"1ddbe78d-48e3-4e46-9a06-\
2777ad0b30e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eq2", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["z", 
           RowBox[{"2", " ", "\[Lambda]"}]]}], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["z", "3"], " ", "\[Lambda]"}], "3"]}]], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"z", "+", "1"}], ")"}], 
        RowBox[{
         FractionBox[
          RowBox[{"-", "A"}], 
          RowBox[{"2", "\[Lambda]"}]], "-", "1"}]]}]], 
     RowBox[{
      RowBox[{"eq", "[", 
       RowBox[{"z", "\[Function]", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["z", 
             RowBox[{"2", " ", "\[Lambda]"}]]}], "-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["z", "3"], " ", "\[Lambda]"}], "3"]}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"z", "+", "1"}], ")"}], 
          RowBox[{
           FractionBox[
            RowBox[{"-", "A"}], 
            RowBox[{"2", "\[Lambda]"}]], "-", "1"}]], 
         RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", "]"}]}], "//", 
    "FullSimplify"}]}]}]], "Input",
 CellChangeTimes->{{3.864118163342272*^9, 3.864118163421801*^9}, {
   3.8641182338242292`*^9, 3.8641182794537277`*^9}, {3.864118309938342*^9, 
   3.8641183532169247`*^9}, {3.864118384770278*^9, 3.864118397361452*^9}, {
   3.86419901804711*^9, 3.864199020958868*^9}, 3.864199267933145*^9, {
   3.864199361245159*^9, 3.864199363388564*^9}, 3.864201067883738*^9, {
   3.8642023845592937`*^9, 3.8642023977426434`*^9}, {3.864202740227565*^9, 
   3.864202750578661*^9}, {3.864203210996903*^9, 3.864203221267009*^9}, {
   3.864203261029221*^9, 3.864203279172521*^9}, {3.864204269612*^9, 
   3.864204278153284*^9}, {3.864204353340111*^9, 3.864204375658196*^9}, {
   3.8642046023818207`*^9, 3.864204606220006*^9}, {3.86420559214673*^9, 
   3.864205635889922*^9}, 3.8642069206506863`*^9, 3.8642069619650087`*^9, {
   3.864269780717699*^9, 3.864269784781036*^9}},
 CellLabel->
  "In[266]:=",ExpressionUUID->"d74e46a9-fda7-4591-8646-42e8c414633f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq2", "[", "w", "]"}], "[", "z", "]"}], ",", 
    RowBox[{"w", "[", "z", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq2", "[", "w", "]"}], "[", "z", "]"}], ",", 
    RowBox[{
     RowBox[{"w", "'"}], "[", "z", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq2", "[", "w", "]"}], "[", "z", "]"}], ",", 
    RowBox[{
     RowBox[{"w", "''"}], "[", "z", "]"}]}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864199394588778*^9, 3.8641993997877407`*^9}, {
  3.864203286467333*^9, 3.864203317764724*^9}},
 CellLabel->
  "In[267]:=",ExpressionUUID->"1de40967-077e-4c16-8cf0-3579c64ced88"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "A", "+", "z"}], ")"}], "2"], "+", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"3", " ", "A"}], "+", 
      RowBox[{"2", " ", "z"}]}], ")"}], " ", "\[Lambda]"}], "+", 
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{"2", "-", 
      RowBox[{"A", " ", "z", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "z"}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "z"}], ")"}], "2"], " ", "\[Epsilon]"}]}], ")"}], 
    " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "-", 
   RowBox[{"8", " ", "z", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "z"}], ")"}], " ", 
    SuperscriptBox["\[Lambda]", "3"]}]}], 
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "z"}], ")"}], "2"], " ", 
   SuperscriptBox["\[Lambda]", "2"]}]]], "Output",
 CellChangeTimes->{
  3.864199400217688*^9, 3.864200569099619*^9, 3.864201070856123*^9, 
   3.8642024092467127`*^9, 3.86420268648132*^9, 3.864202755343679*^9, 
   3.8642032252399473`*^9, {3.864203283160215*^9, 3.864203318304611*^9}, 
   3.864204287776752*^9, {3.864204361417345*^9, 3.864204378559536*^9}, 
   3.864204608238007*^9, 3.864205602578372*^9, 3.864205641680298*^9, 
   3.86420613475618*^9, 3.8642067315017776`*^9, 3.864206877340289*^9, {
   3.864206952827579*^9, 3.864206974927493*^9}, 3.864208619279738*^9, 
   3.864233324222658*^9, 3.8642687879208183`*^9, 3.86426979078118*^9, 
   3.864270883570698*^9, 3.8642709411447287`*^9, 3.864274666836255*^9, 
   3.8643151129220343`*^9},
 CellLabel->
  "Out[267]=",ExpressionUUID->"fb0912a7-c9d2-401d-8a91-22b451992e79"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"1", "+", "A", "+", "z", "+", 
    RowBox[{"2", " ", "\[Lambda]"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["z", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "z"}], ")"}], " ", 
     SuperscriptBox["\[Lambda]", "2"]}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "z"}], ")"}], " ", "\[Lambda]"}]]}]], "Output",
 CellChangeTimes->{
  3.864199400217688*^9, 3.864200569099619*^9, 3.864201070856123*^9, 
   3.8642024092467127`*^9, 3.86420268648132*^9, 3.864202755343679*^9, 
   3.8642032252399473`*^9, {3.864203283160215*^9, 3.864203318304611*^9}, 
   3.864204287776752*^9, {3.864204361417345*^9, 3.864204378559536*^9}, 
   3.864204608238007*^9, 3.864205602578372*^9, 3.864205641680298*^9, 
   3.86420613475618*^9, 3.8642067315017776`*^9, 3.864206877340289*^9, {
   3.864206952827579*^9, 3.864206974927493*^9}, 3.864208619279738*^9, 
   3.864233324222658*^9, 3.8642687879208183`*^9, 3.86426979078118*^9, 
   3.864270883570698*^9, 3.8642709411447287`*^9, 3.864274666836255*^9, 
   3.8643151129521027`*^9},
 CellLabel->
  "Out[268]=",ExpressionUUID->"baaaeb62-ab7c-4a3e-b552-8adf01fdfb09"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.864199400217688*^9, 3.864200569099619*^9, 3.864201070856123*^9, 
   3.8642024092467127`*^9, 3.86420268648132*^9, 3.864202755343679*^9, 
   3.8642032252399473`*^9, {3.864203283160215*^9, 3.864203318304611*^9}, 
   3.864204287776752*^9, {3.864204361417345*^9, 3.864204378559536*^9}, 
   3.864204608238007*^9, 3.864205602578372*^9, 3.864205641680298*^9, 
   3.86420613475618*^9, 3.8642067315017776`*^9, 3.864206877340289*^9, {
   3.864206952827579*^9, 3.864206974927493*^9}, 3.864208619279738*^9, 
   3.864233324222658*^9, 3.8642687879208183`*^9, 3.86426979078118*^9, 
   3.864270883570698*^9, 3.8642709411447287`*^9, 3.864274666836255*^9, 
   3.864315112965383*^9},
 CellLabel->
  "Out[269]=",ExpressionUUID->"6edb00ea-1ab0-49eb-a003-241152284807"]
}, Open  ]],

Cell["\<\
We perform a change of passive variable to move to the [0,1] segment\
\>", "Text",
 CellChangeTimes->{{3.864274950694655*^9, 
  3.864274983848119*^9}},ExpressionUUID->"0958cbc1-8933-45d5-973f-\
60968a48490a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "==", 
      FractionBox["z", 
       RowBox[{"z", "+", "1"}]]}], "}"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.864202530337821*^9, 3.8642025455519876`*^9}, {
  3.864203679909642*^9, 3.864203695046502*^9}},
 CellLabel->
  "In[270]:=",ExpressionUUID->"98d15196-f75a-4bc5-8886-1e7a98d79a02"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["x", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.864203689655448*^9, 3.864203695378886*^9}, 
   3.864269792992223*^9, 3.8642746682788057`*^9, 3.864315114649518*^9},
 CellLabel->
  "Out[270]=",ExpressionUUID->"164f90da-6785-49e8-a000-424c4b537be2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"eq3", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox["#1", 
            RowBox[{"#1", "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{"1", "-", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}]], "Input",
 CellChangeTimes->{{3.864203669237536*^9, 3.864203704773901*^9}, {
   3.86420374226264*^9, 3.864203743862155*^9}, 3.864206662091394*^9, 
   3.864206908747628*^9, {3.864206958892559*^9, 3.864206981146277*^9}},
 CellLabel->
  "In[271]:=",ExpressionUUID->"38a8245a-412c-48d8-91d3-00ef68dc20ed"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "''"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "'"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{"w", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.8642037726793327`*^9, 3.8642037733193197`*^9}, 
   3.864203841368194*^9, {3.864203871495387*^9, 3.86420387333617*^9}, {
   3.864233302991518*^9, 3.864233341187462*^9}, {3.864234200547615*^9, 
   3.864234220187737*^9}, {3.864234307141831*^9, 3.864234318258086*^9}},
 CellLabel->
  "In[272]:=",ExpressionUUID->"ae35ea29-c65c-4a07-85f3-690b748e058e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "4"}], ",", "6", ",", 
   RowBox[{"-", "4"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.864203769203957*^9, 3.864203773723669*^9}, 
   3.8642038839002237`*^9, 3.86420429734442*^9, {3.8642043658496733`*^9, 
   3.8642043812811317`*^9}, 3.864204611122548*^9, 3.864205610176165*^9, 
   3.864205646503018*^9, 3.864206139995728*^9, 3.8642066656742573`*^9, 
   3.864206735208364*^9, 3.864206882136869*^9, {3.8642069563148212`*^9, 
   3.8642069832787457`*^9}, 3.864208626856995*^9, {3.86423332972937*^9, 
   3.864233341917458*^9}, 3.864234220866138*^9, 3.864234318747604*^9, 
   3.8642688059221992`*^9, 3.864269801862112*^9, 3.864270891440317*^9, 
   3.864270946613575*^9, 3.86427467203085*^9, 3.8643151181712313`*^9},
 CellLabel->
  "Out[272]=",ExpressionUUID->"33041c6e-fc0a-4a20-bb60-3cb51e3e5cc3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", "A", "+", 
      RowBox[{"4", " ", "\[Lambda]"}]}], "\[Lambda]"]}], ",", 
   RowBox[{"12", "+", 
    FractionBox[
     RowBox[{"2", "+", 
      RowBox[{"3", " ", "A"}]}], "\[Lambda]"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"3", " ", "A"}], "+", 
      RowBox[{"2", " ", "\[Lambda]", " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", "\[Lambda]"}], ")"}]}]}], "\[Lambda]"]}], ",", 
   RowBox[{"4", "+", 
    FractionBox["A", "\[Lambda]"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864203769203957*^9, 3.864203773723669*^9}, 
   3.8642038839002237`*^9, 3.86420429734442*^9, {3.8642043658496733`*^9, 
   3.8642043812811317`*^9}, 3.864204611122548*^9, 3.864205610176165*^9, 
   3.864205646503018*^9, 3.864206139995728*^9, 3.8642066656742573`*^9, 
   3.864206735208364*^9, 3.864206882136869*^9, {3.8642069563148212`*^9, 
   3.8642069832787457`*^9}, 3.864208626856995*^9, {3.86423332972937*^9, 
   3.864233341917458*^9}, 3.864234220866138*^9, 3.864234318747604*^9, 
   3.8642688059221992`*^9, 3.864269801862112*^9, 3.864270891440317*^9, 
   3.864270946613575*^9, 3.86427467203085*^9, 3.864315118196876*^9},
 CellLabel->
  "Out[273]=",ExpressionUUID->"30e68b07-c485-4362-ac4e-712b0fdce095"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "+", 
     SuperscriptBox["A", "2"], "+", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"6", " ", "\[Lambda]"}]}], ")"}]}], "+", 
     RowBox[{"4", " ", "\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]"}], ")"}], " ", "\[Lambda]"}]}], 
       ")"}]}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", "+", 
        RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "A", "+", 
        RowBox[{"2", " ", "\[Lambda]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Lambda]"}], ")"}]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "+", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"A", "+", 
       RowBox[{"4", " ", "\[Lambda]"}]}], ")"}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.864203769203957*^9, 3.864203773723669*^9}, 
   3.8642038839002237`*^9, 3.86420429734442*^9, {3.8642043658496733`*^9, 
   3.8642043812811317`*^9}, 3.864204611122548*^9, 3.864205610176165*^9, 
   3.864205646503018*^9, 3.864206139995728*^9, 3.8642066656742573`*^9, 
   3.864206735208364*^9, 3.864206882136869*^9, {3.8642069563148212`*^9, 
   3.8642069832787457`*^9}, 3.864208626856995*^9, {3.86423332972937*^9, 
   3.864233341917458*^9}, 3.864234220866138*^9, 3.864234318747604*^9, 
   3.8642688059221992`*^9, 3.864269801862112*^9, 3.864270891440317*^9, 
   3.864270946613575*^9, 3.86427467203085*^9, 3.864315118224463*^9},
 CellLabel->
  "Out[274]=",ExpressionUUID->"d556e031-1edc-4838-938d-ffc28c3794cc"]
}, Open  ]],

Cell["\<\
The coefficients of the ODE are simple polynomials now. Let us extract and \
name the coefficients of those polynomials\
\>", "Text",
 CellChangeTimes->{{3.864274994666313*^9, 
  3.864275028944138*^9}},ExpressionUUID->"79540f38-fbda-4966-a2f6-\
102b2e3ba4f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", "A", "+", 
      RowBox[{"4", " ", "\[Lambda]"}]}], "\[Lambda]"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"12", "+", 
    FractionBox[
     RowBox[{"2", "+", 
      RowBox[{"3", " ", "A"}]}], "\[Lambda]"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"3", " ", "A"}], "+", 
      RowBox[{"2", " ", "\[Lambda]", " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", "\[Lambda]"}], ")"}]}]}], "\[Lambda]"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", 
   RowBox[{"4", "+", 
    FractionBox["A", "\[Lambda]"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", 
   FractionBox[
    RowBox[{"1", "+", 
     SuperscriptBox["A", "2"], "+", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"6", " ", "\[Lambda]"}]}], ")"}]}], "+", 
     RowBox[{"4", " ", "\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]"}], ")"}], " ", "\[Lambda]"}]}], 
       ")"}]}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", "+", 
        RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "A", "+", 
        RowBox[{"2", " ", "\[Lambda]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Lambda]"}], ")"}]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}]}], ";", 
  RowBox[{"l", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "+", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"A", "+", 
       RowBox[{"4", " ", "\[Lambda]"}]}], ")"}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8642697470308247`*^9, 3.8642697719328527`*^9}, {
   3.8642698050613003`*^9, 3.864269809694182*^9}, {3.864269920748795*^9, 
   3.864269997090382*^9}, 3.864270965722127*^9},
 CellLabel->
  "In[275]:=",ExpressionUUID->"3cc96c75-42ec-4eaf-a407-f7b7b6281298"],

Cell[TextData[{
 "Ansatz for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"w", 
     RowBox[{"(", "x", ")"}]}], "=", 
    RowBox[{"\[Sum]", 
     RowBox[{
      SubscriptBox["\[Alpha]", "n"], 
      SuperscriptBox["x", "n"]}]}]}], TraditionalForm]],ExpressionUUID->
  "2364c818-b65c-475d-9421-66c667f1dd82"],
 ", we get the following difference equations"
}], "Text",
 CellChangeTimes->{{3.8642750419140577`*^9, 3.864275053063743*^9}, {
  3.864275110366568*^9, 
  3.8642751370634737`*^9}},ExpressionUUID->"bb90b2f1-f02d-427e-be13-\
9bf8cb4a5d83"],

Cell[BoxData[
 RowBox[{
  RowBox[{"diffEq", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"n", "+", "2"}], ")"}], "a", " ", 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "+", "2"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "b"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "f"}]}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "+", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "n", " ", "c"}], "+", 
      RowBox[{"n", " ", "g"}], "+", "j"}], ")"}], 
    SubscriptBox["\[Alpha]", "n"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "d"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "h"}], "+", "k"}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "-", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "3"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "e"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "i"}], "+", "l"}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "-", "2"}]]}]}]}]], "Input",
 CellChangeTimes->{{3.864270018911315*^9, 3.8642702462416697`*^9}, {
  3.8642705156994133`*^9, 3.8642705159562902`*^9}},
 CellLabel->
  "In[286]:=",ExpressionUUID->"8eda7c4e-f0c4-4baa-8ba8-117e62050539"],

Cell["\<\
The initial condition C0, C1 are fixed according to the paper of Lay.
We also gather the two first equations\
\>", "Text",
 CellChangeTimes->{{3.864275145180252*^9, 
  3.864275191066702*^9}},ExpressionUUID->"b392c7c2-6fb5-4d34-86ee-\
3b44e01ecef0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"C0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"C1", "=", 
   RowBox[{"1", "+", 
    FractionBox["1", 
     RowBox[{"2", "\[Lambda]"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialEq", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Alpha]", "0"], "-", "C0"}], ",", 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], "-", "C1"}], ",", 
     RowBox[{
      RowBox[{"2", "a", " ", 
       SubscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"f", " ", 
       SubscriptBox["\[Alpha]", "1"]}], "+", 
      RowBox[{"j", " ", 
       SubscriptBox["\[Alpha]", "0"]}]}], ",", 
     RowBox[{
      RowBox[{"6", "a", " ", 
       SubscriptBox["\[Alpha]", "3"]}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"b", "+", "f"}], ")"}], 
       SubscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"g", "+", "j"}], ")"}], 
       SubscriptBox["\[Alpha]", "1"]}], "+", 
      RowBox[{"k", " ", 
       SubscriptBox["\[Alpha]", "0"]}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.864270380769575*^9, 3.864270544385949*^9}, {
  3.864270681732925*^9, 3.8642707092690983`*^9}},
 CellLabel->
  "In[287]:=",ExpressionUUID->"5c1f63e4-2c5a-4e2c-8283-1f0efb2a34f3"],

Cell["\<\
We solve for the coefficients of the series expansion for a large value of n\
\>", "Text",
 CellChangeTimes->{{3.8642751963474607`*^9, 
  3.8642752191768208`*^9}},ExpressionUUID->"005a7ee8-eeee-4101-ae6e-\
7aa47dbefeac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nmax", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]large", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"initialEq", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"diffEq", "[", "n", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "2", ",", 
              RowBox[{"Nmax", "-", "2"}]}], "}"}]}], "]"}]}], "]"}], "==", 
        "0"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["\[Alpha]", "m"], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"Nmax", "+", "1"}], ",", "2"}], "]"}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.8642703216466703`*^9, 3.864270374397962*^9}, {
  3.8642705513296633`*^9, 3.8642705574736023`*^9}, {3.8642706051077547`*^9, 
  3.864270674659809*^9}, {3.864270719493314*^9, 3.864270843494506*^9}, {
  3.864270983647256*^9, 3.864270983916497*^9}, {3.864271384077087*^9, 
  3.864271391467572*^9}, {3.864271456796391*^9, 3.864271566285283*^9}, {
  3.864272670480879*^9, 3.8642726706307497`*^9}, {3.864315134419746*^9, 
  3.86431516409398*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"85e5043e-67e4-4f5a-8952-714bcda11643"],

Cell["\<\
The zeros of that large coefficient as a function of the energy parameter \
\[Epsilon] correspond to the spectum of the model.\
\>", "Text",
 CellChangeTimes->{{3.864275243849395*^9, 
  3.864275278617496*^9}},ExpressionUUID->"dd5bf477-fccd-438e-9230-\
60962ef700d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{"\[Alpha]large", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"A", "->", "0"}], ",", 
      RowBox[{"\[Lambda]", "->", "1"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.864272516042613*^9, 3.864272581235248*^9}, {
  3.864272630956184*^9, 3.864272652997024*^9}},
 CellLabel->
  "In[298]:=",ExpressionUUID->"ce1e471b-8455-4ab8-b805-57b7eef7f240"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Epsilon]", "\[Rule]", "1.3923542649859058`"}], "}"}]], "Output",
 CellChangeTimes->{{3.864272582474341*^9, 3.864272653692486*^9}, 
   3.8642727233006563`*^9, 3.864315179215034*^9},
 CellLabel->
  "Out[298]=",ExpressionUUID->"b7cfb2ba-02e2-4938-a940-b4ace841e389"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Spectrum (reproduce Heuuuun Lay paper, asymmetric case) (SUCCESS)\
\>", "Subsection",
 CellChangeTimes->{{3.864274692548676*^9, 3.864274722704041*^9}, {
  3.864314024517017*^9, 3.8643140265519753`*^9}, {3.8643174618391237`*^9, 
  3.864317462881097*^9}},ExpressionUUID->"9a018dee-75b4-427b-b19e-\
bfe63377c498"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GENERIC", " ", "COMMENT", " ", "ABOUT", " ", "THIS", " ", 
   RowBox[{"SECTION", ":", " ", 
    RowBox[{
    "contrary", " ", "to", " ", "the", " ", "case", " ", "of", " ", "an", " ",
      "even", " ", "potential"}]}]}], ",", " ", 
  RowBox[{
  "one", " ", "here", " ", "has", " ", "to", " ", "keep", " ", "track", " ", 
   "of", " ", "both", " ", "the", " ", "positive", " ", "x", " ", "and", " ", 
   "the", " ", "negative", " ", "x", " ", "solutions"}]}]], "Text",
 CellChangeTimes->{{3.8643119982628927`*^9, 
  3.864312056801162*^9}},ExpressionUUID->"1bc7fad4-1ed3-4c4e-b071-\
f91444251558"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"A", " ", "z"}], " ", "+", 
   SuperscriptBox["z", "2"], "+", 
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", 
    SuperscriptBox["z", "4"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq", "[", "\[Psi]_", "]"}], ":=", 
   RowBox[{"z", "\[Function]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "''"}], "[", "z", "]"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Epsilon]", "-", 
        RowBox[{"V", "[", "z", "]"}]}], ")"}], 
      RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.864035526701899*^9, 3.864035567764186*^9}, {
   3.86403565956774*^9, 3.864035667256592*^9}, {3.864115016484351*^9, 
   3.864115017418898*^9}, {3.8641152422780733`*^9, 3.864115267812194*^9}, {
   3.864115649334899*^9, 3.864115655364806*^9}, 3.864115695927232*^9, 
   3.864116018567485*^9, 3.864117086684123*^9, {3.8641181148079357`*^9, 
   3.864118115933967*^9}, {3.864118242001134*^9, 3.86411825792118*^9}, 
   3.8641990306553793`*^9, 3.8642010609833183`*^9, 3.86420237395303*^9, {
   3.864205586724691*^9, 3.864205587664859*^9}, 3.8642078236374598`*^9, {
   3.864208608819233*^9, 3.864208610930963*^9}, {3.864269777597616*^9, 
   3.864269777795177*^9}, {3.8642708672924137`*^9, 3.8642708773561974`*^9}, {
   3.8642754046018677`*^9, 3.864275412761997*^9}, {3.8642866904537773`*^9, 
   3.8642867029554768`*^9}, {3.864286770795536*^9, 3.864286800475404*^9}, {
   3.864314038337064*^9, 3.86431405733097*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"834b4028-bc20-4ff1-8341-cc2df7927880"],

Cell["\<\
Now we need to find the correct change of variable for the active variable \
\[Psi], for this, let us get inspiration from the analytical solution \
provided by Mathematica:\
\>", "Text",
 CellChangeTimes->{{3.864275423626759*^9, 
  3.864275481754038*^9}},ExpressionUUID->"34d5bb7d-55f5-4b3c-b5d3-\
f0f50f01e81b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"eq", "[", "\[Psi]", "]"}], "[", "z", "]"}], "==", "0"}], ",", 
    RowBox[{"\[Psi]", "[", "z", "]"}], ",", "z"}], "]"}], "//", 
  "PowerExpand"}]], "Input",
 CellChangeTimes->{{3.8642754848765173`*^9, 3.8642755082360373`*^9}, {
  3.864275949123186*^9, 3.864275950754225*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"567ecf2c-0687-46cd-ae07-f3c4181be0be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Psi]", "[", "z", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["z", "2"], " ", 
             SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
         RowBox[{"6", " ", "\[Lambda]"}]]}]], " ", 
      TemplateBox[{"2"},
       "C"], " ", 
      RowBox[{"HeunT", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Epsilon]"}], "-", 
         FractionBox["1", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
        RowBox[{
         RowBox[{"-", "A"}], "-", 
         RowBox[{"2", " ", "\[Lambda]"}]}], ",", 
        RowBox[{"-", 
         FractionBox["1", "\[Lambda]"]}], ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Lambda]"}], ",", "z"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"z", " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["z", "2"], " ", 
            SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
        RowBox[{"6", " ", "\[Lambda]"}]]], " ", 
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"HeunT", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Epsilon]"}], "-", 
         FractionBox["1", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
        RowBox[{
         RowBox[{"-", "A"}], "+", 
         RowBox[{"2", " ", "\[Lambda]"}]}], ",", 
        FractionBox["1", "\[Lambda]"], ",", "0", ",", 
        RowBox[{"2", " ", "\[Lambda]"}], ",", "z"}], "]"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.864275505072137*^9, 3.864275520794508*^9}, 
   3.8642759513363037`*^9, 3.8642868069716597`*^9, 3.864312218853105*^9, 
   3.86431406782215*^9, 3.864315062348353*^9, 3.864315192697967*^9, 
   3.864315893214758*^9, 3.864356928796708*^9, 3.86435750678784*^9, 
   3.864357809844928*^9, 3.864359481537784*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"26ecd390-aba1-4087-8871-86790927e985"]
}, Open  ]],

Cell[TextData[{
 "So now we have the exponential change of variable.\nRemains the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "+", "1"}], ")"}], 
    RowBox[{"some", " ", "power"}]], TraditionalForm]],ExpressionUUID->
  "85bbd925-48c4-413a-9e2d-441f11e6a7ec"],
 " to fix. Let us call the generic power \[Mu]"
}], "Text",
 CellChangeTimes->{{3.864275595259122*^9, 
  3.864275672684463*^9}},ExpressionUUID->"63dd1d47-b10f-4817-bbca-\
f4d49fbc49b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq2Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["z", "2"], " ", 
             SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
         RowBox[{"6", " ", "\[Lambda]"}]]}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "+", "1"}], ")"}], "\[Mu]"]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"z", " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["z", "2"], " ", 
               SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
           RowBox[{"6", " ", "\[Lambda]"}]]}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"z", "+", "1"}], ")"}], "\[Mu]"], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"z", " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["z", "2"], " ", 
            SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
        RowBox[{"6", " ", "\[Lambda]"}]]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "z"}], "+", "1"}], ")"}], "\[Mu]"]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"z", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["z", "2"], " ", 
              SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
          RowBox[{"6", " ", "\[Lambda]"}]]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "z"}], "+", "1"}], ")"}], "\[Mu]"], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.864118163342272*^9, 3.864118163421801*^9}, {
   3.8641182338242292`*^9, 3.8641182794537277`*^9}, {3.864118309938342*^9, 
   3.8641183532169247`*^9}, {3.864118384770278*^9, 3.864118397361452*^9}, {
   3.86419901804711*^9, 3.864199020958868*^9}, 3.864199267933145*^9, {
   3.864199361245159*^9, 3.864199363388564*^9}, 3.864201067883738*^9, {
   3.8642023845592937`*^9, 3.8642023977426434`*^9}, {3.864202740227565*^9, 
   3.864202750578661*^9}, {3.864203210996903*^9, 3.864203221267009*^9}, {
   3.864203261029221*^9, 3.864203279172521*^9}, {3.864204269612*^9, 
   3.864204278153284*^9}, {3.864204353340111*^9, 3.864204375658196*^9}, {
   3.8642046023818207`*^9, 3.864204606220006*^9}, {3.86420559214673*^9, 
   3.864205635889922*^9}, 3.8642069206506863`*^9, 3.8642069619650087`*^9, {
   3.864269780717699*^9, 3.864269784781036*^9}, {3.8642756794382143`*^9, 
   3.8642757264933233`*^9}, {3.8642759668761806`*^9, 3.86427598791363*^9}, {
   3.864286840898326*^9, 3.864286843151375*^9}, {3.864312073767428*^9, 
   3.864312114422969*^9}, {3.864312160160754*^9, 3.864312176013809*^9}, {
   3.86431242063426*^9, 3.864312427109799*^9}, {3.864314084672647*^9, 
   3.8643140943303957`*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"8a4d73c9-dde8-4f0b-a719-4579030983aa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
    RowBox[{
     RowBox[{"w", "''"}], "[", "z", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
    RowBox[{
     RowBox[{"w", "'"}], "[", "z", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
    RowBox[{"w", "[", "z", "]"}]}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.8643594884797277`*^9, 3.8643595482514753`*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"4586e6fa-2dfc-4003-8e4c-40d67b2646a1"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.8643594944807053`*^9, 3.864359506652858*^9}, 
   3.864359549285125*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"d8b73688-ffe3-4257-8139-97523ac944bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "\[Lambda]"]}], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["z", "2"], " ", "\[Lambda]"}], "+", 
  FractionBox[
   RowBox[{"2", " ", "\[Mu]"}], 
   RowBox[{"1", "+", "z"}]]}]], "Output",
 CellChangeTimes->{{3.8643594944807053`*^9, 3.864359506652858*^9}, 
   3.864359549312546*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"8458653e-cf67-4695-9c3a-4ff61141e89d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "A"}], " ", "z"}], "+", "\[Epsilon]", "+", 
  FractionBox["1", 
   RowBox[{"4", " ", 
    SuperscriptBox["\[Lambda]", "2"]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", "z", " ", "\[Lambda]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "z", "+", 
      RowBox[{"z", " ", "\[Mu]"}]}], ")"}]}], 
   RowBox[{"1", "+", "z"}]], "-", 
  FractionBox[
   RowBox[{"\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "z", "+", "\[Lambda]", "-", 
      RowBox[{"\[Lambda]", " ", "\[Mu]"}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "z"}], ")"}], "2"], " ", "\[Lambda]"}]]}]], "Output",
 CellChangeTimes->{{3.8643594944807053`*^9, 3.864359506652858*^9}, 
   3.864359550034553*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"cc4d8ca7-e128-452f-90ff-3a2fa73957de"]
}, Open  ]],

Cell["\<\
We perform a change of passive variable to move to the [0,1] segment\
\>", "Text",
 CellChangeTimes->{{3.864274950694655*^9, 
  3.864274983848119*^9}},ExpressionUUID->"61814ecc-3337-46d1-b0c1-\
b0388c251e9d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "==", 
      FractionBox["z", 
       RowBox[{"z", "+", "1"}]]}], "}"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "==", 
      FractionBox[
       RowBox[{"-", "z"}], 
       RowBox[{
        RowBox[{"-", "z"}], "+", "1"}]]}], "}"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864202530337821*^9, 3.8642025455519876`*^9}, {
   3.864203679909642*^9, 3.864203695046502*^9}, {3.8643125792997847`*^9, 
   3.864312584998733*^9}, 3.864312739399147*^9, 3.864312846895759*^9, {
   3.864313227672843*^9, 3.8643132302920513`*^9}, {3.8643145689046507`*^9, 
   3.864314569046402*^9}, {3.86435803966252*^9, 
   3.8643580553084383`*^9}},ExpressionUUID->"88ee5e8d-c2f4-4100-90c9-\
14832197358b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["x", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.864203689655448*^9, 3.864203695378886*^9}, 
   3.864269792992223*^9, 3.8642746682788057`*^9, 3.864312585566846*^9, 
   3.8643127402473993`*^9, 3.864312853051523*^9, 3.864313274121306*^9, 
   3.86431519558722*^9, 3.8643569316581*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"d46bd5ac-645a-41b9-8abe-693bd929602f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    FractionBox["x", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.864203689655448*^9, 3.864203695378886*^9}, 
   3.864269792992223*^9, 3.8642746682788057`*^9, 3.864312585566846*^9, 
   3.8643127402473993`*^9, 3.864312853051523*^9, 3.864313274121306*^9, 
   3.86431519558722*^9, 3.864356931660839*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"8b2183cb-9694-468c-9873-25aa150b1d06"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq3Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox["#1", 
            RowBox[{"#1", "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{"1", "-", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Minus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox[
            RowBox[{"-", "#1"}], 
            RowBox[{
             RowBox[{"-", "#1"}], "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}]}], "Input",
 CellChangeTimes->{{3.864203669237536*^9, 3.864203704773901*^9}, {
   3.86420374226264*^9, 3.864203743862155*^9}, 3.864206662091394*^9, 
   3.864206908747628*^9, {3.864206958892559*^9, 3.864206981146277*^9}, 
   3.864312121357253*^9, {3.8643121835475197`*^9, 3.8643121837888403`*^9}, {
   3.86431223160461*^9, 3.8643122468096533`*^9}, {3.864312635132743*^9, 
   3.864312642965464*^9}, {3.8643127437881927`*^9, 3.8643127515382442`*^9}, {
   3.864312859386508*^9, 3.86431288216315*^9}, {3.864313285147183*^9, 
   3.8643132933196983`*^9}, {3.864314583629097*^9, 3.864314588994113*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"1ff717bb-3ead-401d-9431-2256548e14fd"],

Cell["\<\
Now we need to fix the power \[Mu] in order for the coefficient of w[x] to be \
a polynomial in x\
\>", "Text",
 CellChangeTimes->{{3.8642760369276342`*^9, 
  3.8642760992304163`*^9}},ExpressionUUID->"6925a1b0-36fc-428d-9b91-\
08317d5f25c9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
    RowBox[{"w", "[", "x", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
    RowBox[{"w", "[", "x", "]"}]}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864276203478758*^9, 3.8642762449628353`*^9}, {
   3.864276415361682*^9, 3.864276443868231*^9}, 3.864312127163787*^9, {
   3.864312262542098*^9, 3.8643122664867067`*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"a7647c65-9d28-4012-b3f5-1ef7c7c8c30a"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", "x", "+", 
   RowBox[{"4", " ", "A", " ", "x", " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "-", 
   RowBox[{"4", " ", "\[Epsilon]", " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "+", 
   RowBox[{"4", " ", "x", " ", "\[Epsilon]", " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "+", 
   RowBox[{"8", " ", "x", " ", 
    SuperscriptBox["\[Lambda]", "3"]}], "+", 
   RowBox[{"4", " ", "\[Lambda]", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", "\[Lambda]"}], 
      "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["x", "2"], " ", 
       SuperscriptBox["\[Lambda]", "2"]}]}], ")"}], " ", "\[Mu]"}], "+", 
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
    SuperscriptBox["\[Lambda]", "2"], " ", 
    SuperscriptBox["\[Mu]", "2"]}]}], 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
   SuperscriptBox["\[Lambda]", "2"]}]]], "Output",
 CellChangeTimes->{{3.86427621846246*^9, 3.864276245125049*^9}, {
   3.864276419853499*^9, 3.864276444262329*^9}, 3.864286853987031*^9, 
   3.864312268584391*^9, 3.864312444627284*^9, 3.8643126484910307`*^9, 
   3.864312763725235*^9, {3.864312868911336*^9, 3.8643128850649652`*^9}, 
   3.864313297462576*^9, 3.864314108890142*^9, 3.8643150703272*^9, 
   3.864315199292749*^9, 3.8643596371011047`*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"e59923ea-665b-4967-a019-4c7f1a9523de"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", "x", "-", 
   RowBox[{"4", " ", "A", " ", "x", " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "-", 
   RowBox[{"4", " ", "\[Epsilon]", " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "+", 
   RowBox[{"4", " ", "x", " ", "\[Epsilon]", " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "+", 
   RowBox[{"8", " ", "x", " ", 
    SuperscriptBox["\[Lambda]", "3"]}], "+", 
   RowBox[{"4", " ", "\[Lambda]", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", "\[Lambda]"}], 
      "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["x", "2"], " ", 
       SuperscriptBox["\[Lambda]", "2"]}]}], ")"}], " ", "\[Mu]"}], "+", 
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
    SuperscriptBox["\[Lambda]", "2"], " ", 
    SuperscriptBox["\[Mu]", "2"]}]}], 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
   SuperscriptBox["\[Lambda]", "2"]}]]], "Output",
 CellChangeTimes->{{3.86427621846246*^9, 3.864276245125049*^9}, {
   3.864276419853499*^9, 3.864276444262329*^9}, 3.864286853987031*^9, 
   3.864312268584391*^9, 3.864312444627284*^9, 3.8643126484910307`*^9, 
   3.864312763725235*^9, {3.864312868911336*^9, 3.8643128850649652`*^9}, 
   3.864313297462576*^9, 3.864314108890142*^9, 3.8643150703272*^9, 
   3.864315199292749*^9, 3.864359637316923*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"96fba8ff-1be5-4e01-b5fd-b3afbacc8b9e"]
}, Open  ]],

Cell["\[Mu] should be such that -1+x divides the above numerator", "Text",
 CellChangeTimes->{{3.8642771359749947`*^9, 
  3.864277156949697*^9}},ExpressionUUID->"553008ed-4b8a-4a26-a9f4-\
5fd1ff882c1b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"muPlus", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PolynomialRemainder", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "+", "x", "+", 
          RowBox[{"4", " ", "A", " ", "x", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], "-", 
          RowBox[{"4", " ", "\[Epsilon]", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], "+", 
          RowBox[{"4", " ", "x", " ", "\[Epsilon]", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], "+", 
          RowBox[{"8", " ", "x", " ", 
           SuperscriptBox["\[Lambda]", "3"]}], "+", 
          RowBox[{"4", " ", "\[Lambda]", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], "-", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
              "\[Lambda]"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["x", "2"], " ", 
              SuperscriptBox["\[Lambda]", "2"]}]}], ")"}], " ", "\[Mu]"}], 
          "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
           SuperscriptBox["\[Lambda]", "2"], " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], ",", "x"}], "]"}], "==", 
       "0"}], ",", "\[Mu]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"muMinus", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PolynomialRemainder", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "+", "x", "-", 
          RowBox[{"4", " ", "A", " ", "x", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], "-", 
          RowBox[{"4", " ", "\[Epsilon]", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], "+", 
          RowBox[{"4", " ", "x", " ", "\[Epsilon]", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], "+", 
          RowBox[{"8", " ", "x", " ", 
           SuperscriptBox["\[Lambda]", "3"]}], "+", 
          RowBox[{"4", " ", "\[Lambda]", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], "-", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
              "\[Lambda]"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["x", "2"], " ", 
              SuperscriptBox["\[Lambda]", "2"]}]}], ")"}], " ", "\[Mu]"}], 
          "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
           SuperscriptBox["\[Lambda]", "2"], " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], ",", "x"}], "]"}], "==", 
       "0"}], ",", "\[Mu]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.8642764896009493`*^9, 3.864276567089525*^9}, {
   3.8642766664189796`*^9, 3.864276682947541*^9}, {3.864276958083522*^9, 
   3.864276974100775*^9}, {3.8642770336545763`*^9, 3.864277069237823*^9}, 
   3.864277164783778*^9, {3.8642868998673153`*^9, 3.864286933564728*^9}, {
   3.864312131851811*^9, 3.864312133268993*^9}, {3.8643122805726643`*^9, 
   3.86431232866*^9}, {3.864312901364444*^9, 3.864312936476317*^9}, {
   3.8643131849495573`*^9, 3.864313191041491*^9}, {3.8643133098870573`*^9, 
   3.8643133194317093`*^9}, {3.864314121375557*^9, 3.864314129335256*^9}, {
   3.864314607755836*^9, 3.86431461379952*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"b435c254-fe92-4ac4-a860-552b9d7b17be"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "-", 
  FractionBox["A", 
   RowBox[{"2", " ", "\[Lambda]"}]]}]], "Output",
 CellChangeTimes->{
  3.864277165089775*^9, 3.864286937877316*^9, 3.864312340829945*^9, {
   3.8643129171184063`*^9, 3.864312938922553*^9}, 3.864313192078261*^9, 
   3.864313320569648*^9, 3.864314130707193*^9, 3.864315071892817*^9, 
   3.864315200346899*^9},
 CellLabel->
  "Out[310]=",ExpressionUUID->"e0c7f3b7-ff0c-4382-a35d-51332089bf27"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  FractionBox["A", 
   RowBox[{"2", " ", "\[Lambda]"}]]}]], "Output",
 CellChangeTimes->{
  3.864277165089775*^9, 3.864286937877316*^9, 3.864312340829945*^9, {
   3.8643129171184063`*^9, 3.864312938922553*^9}, 3.864313192078261*^9, 
   3.864313320569648*^9, 3.864314130707193*^9, 3.864315071892817*^9, 
   3.86431520035002*^9},
 CellLabel->
  "Out[311]=",ExpressionUUID->"d49743ee-0751-4224-9353-2d77a754e1e6"]
}, Open  ]],

Cell["\<\
That is a great success. So now we can perform the change of variable \
explicitly.\
\>", "Text",
 CellChangeTimes->{{3.864277224998146*^9, 
  3.8642772574782133`*^9}},ExpressionUUID->"512083d6-6f49-4183-a60c-\
a83d63d50bcb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"A", " ", "z"}], " ", "+", 
   SuperscriptBox["z", "2"], "+", 
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", 
    SuperscriptBox["z", "4"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq", "[", "\[Psi]_", "]"}], ":=", 
   RowBox[{"z", "\[Function]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "''"}], "[", "z", "]"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Epsilon]", "-", 
        RowBox[{"V", "[", "z", "]"}]}], ")"}], 
      RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["z", "2"], " ", 
             SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
         RowBox[{"6", " ", "\[Lambda]"}]]}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "+", "1"}], ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        FractionBox["A", 
         RowBox[{"2", " ", "\[Lambda]"}]]}]]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"z", " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["z", "2"], " ", 
               SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
           RowBox[{"6", " ", "\[Lambda]"}]]}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"z", "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          FractionBox["A", 
           RowBox[{"2", " ", "\[Lambda]"}]]}]], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"z", " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["z", "2"], " ", 
            SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
        RowBox[{"6", " ", "\[Lambda]"}]]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "z"}], "+", "1"}], ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        FractionBox["A", 
         RowBox[{"2", " ", "\[Lambda]"}]]}]]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"z", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["z", "2"], " ", 
              SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
          RowBox[{"6", " ", "\[Lambda]"}]]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "z"}], "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          FractionBox["A", 
           RowBox[{"2", " ", "\[Lambda]"}]]}]], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox["#1", 
            RowBox[{"#1", "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{"1", "-", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Minus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox[
            RowBox[{"-", "#1"}], 
            RowBox[{
             RowBox[{"-", "#1"}], "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}]}], "Input",
 CellChangeTimes->{{3.864035526701899*^9, 3.864035567764186*^9}, {
   3.86403565956774*^9, 3.864035667256592*^9}, {3.864115016484351*^9, 
   3.864115017418898*^9}, {3.8641152422780733`*^9, 3.864115267812194*^9}, {
   3.864115649334899*^9, 3.864115655364806*^9}, 3.864115695927232*^9, 
   3.864116018567485*^9, 3.864117086684123*^9, {3.8641181148079357`*^9, 
   3.864118115933967*^9}, {3.864118242001134*^9, 3.86411825792118*^9}, 
   3.8641990306553793`*^9, 3.8642010609833183`*^9, 3.86420237395303*^9, {
   3.864205586724691*^9, 3.864205587664859*^9}, 3.8642078236374598`*^9, {
   3.864208608819233*^9, 3.864208610930963*^9}, {3.864269777597616*^9, 
   3.864269777795177*^9}, {3.8642708672924137`*^9, 3.8642708773561974`*^9}, {
   3.8642754046018677`*^9, 3.864275412761997*^9}, {3.8642772909887466`*^9, 
   3.86427732148457*^9}, {3.864277363257691*^9, 3.8642773643954773`*^9}, 
   3.864286339687099*^9, {3.864286963090498*^9, 3.864286991152171*^9}, {
   3.864312401282723*^9, 3.8643124124651127`*^9}, {3.864313334376279*^9, 
   3.864313408970352*^9}, {3.8643141466780167`*^9, 3.8643142086438932`*^9}, {
   3.8643159477434483`*^9, 3.8643159534652147`*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"21747cb5-4694-4154-ae1c-065d305ffb4b"],

Cell["\<\
The coefficients of the ODE are simple polynomials now. Let us extract and \
name the coefficients of those polynomials\
\>", "Text",
 CellChangeTimes->{{3.864274994666313*^9, 
  3.864275028944138*^9}},ExpressionUUID->"0be422b8-953a-4714-8e59-\
50c2806f5843"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "''"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "'"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{"w", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864277353595161*^9, 3.8642773853036823`*^9}, {
  3.864313419531303*^9, 3.864313425651647*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"ee4a31bf-00e5-4ab1-9a32-6cf37aeee7c2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "4"}], ",", "6", ",", 
   RowBox[{"-", "4"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.8643142298423433`*^9, 
   3.864315203764007*^9, 3.864359642054078*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"6ae6002f-97c7-41f8-b6f4-56d76c8efa51"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", "A", "+", 
      RowBox[{"4", " ", "\[Lambda]"}]}], "\[Lambda]"]}], ",", 
   RowBox[{"12", "+", 
    FractionBox[
     RowBox[{"2", "+", 
      RowBox[{"3", " ", "A"}]}], "\[Lambda]"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"3", " ", "A"}], "+", 
      RowBox[{"2", " ", "\[Lambda]", " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", "\[Lambda]"}], ")"}]}]}], "\[Lambda]"]}], ",", 
   RowBox[{"4", "+", 
    FractionBox["A", "\[Lambda]"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.8643142298423433`*^9, 
   3.864315203764007*^9, 3.8643596420740557`*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"2a98a92a-7d97-42f8-9413-dce644340cc7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "+", 
     SuperscriptBox["A", "2"], "+", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"6", " ", "\[Lambda]"}]}], ")"}]}], "+", 
     RowBox[{"4", " ", "\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]"}], ")"}], " ", "\[Lambda]"}]}], 
       ")"}]}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", "+", 
        RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "A", "+", 
        RowBox[{"2", " ", "\[Lambda]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Lambda]"}], ")"}]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "+", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"A", "+", 
       RowBox[{"4", " ", "\[Lambda]"}]}], ")"}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.8643142298423433`*^9, 
   3.864315203764007*^9, 3.864359642112814*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"34b56f1e-fdfe-4f8c-a887-f894232bf752"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", "A", "+", 
      RowBox[{"4", " ", "\[Lambda]"}]}], "\[Lambda]"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"12", "+", 
    FractionBox[
     RowBox[{"2", "+", 
      RowBox[{"3", " ", "A"}]}], "\[Lambda]"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"3", " ", "A"}], "+", 
      RowBox[{"2", " ", "\[Lambda]", " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", "\[Lambda]"}], ")"}]}]}], "\[Lambda]"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", 
   RowBox[{"4", "+", 
    FractionBox["A", "\[Lambda]"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", 
   FractionBox[
    RowBox[{"1", "+", 
     SuperscriptBox["A", "2"], "+", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"6", " ", "\[Lambda]"}]}], ")"}]}], "+", 
     RowBox[{"4", " ", "\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Epsilon]"}], ")"}], " ", "\[Lambda]"}]}], 
       ")"}]}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", "+", 
        RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "A", "+", 
        RowBox[{"2", " ", "\[Lambda]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Lambda]"}], ")"}]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}]}], ";", 
  RowBox[{"l", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "+", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"A", "+", 
       RowBox[{"4", " ", "\[Lambda]"}]}], ")"}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8642697470308247`*^9, 3.8642697719328527`*^9}, {
   3.8642698050613003`*^9, 3.864269809694182*^9}, {3.864269920748795*^9, 
   3.864269997090382*^9}, 3.864270965722127*^9, {3.864277396585041*^9, 
   3.8642774445072193`*^9}, {3.864287010818693*^9, 3.864287054480163*^9}, {
   3.864314237037458*^9, 3.86431427112982*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"1d133d24-d484-4bc0-8074-9d9bbae43357"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "''"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "'"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{"w", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864277353595161*^9, 3.8642773853036823`*^9}, {
  3.864313419531303*^9, 3.864313454870009*^9}},
 CellLabel->
  "In[415]:=",ExpressionUUID->"f3860058-d08d-407b-80b4-e9a18708f963"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "4"}], ",", "6", ",", 
   RowBox[{"-", "4"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.8643142757104816`*^9, 3.8643152072545967`*^9, 3.864315979017342*^9},
 CellLabel->
  "Out[415]=",ExpressionUUID->"87464f24-909f-47ed-9a32-28ea9c923610"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "4"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", "A"}], "\[Lambda]"]}], ",", 
   RowBox[{"12", "+", 
    FractionBox[
     RowBox[{"2", "-", 
      RowBox[{"3", " ", "A"}]}], "\[Lambda]"]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"3", " ", "A"}], "-", 
     RowBox[{"2", " ", "\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{"6", "+", "\[Lambda]"}], ")"}]}]}], "\[Lambda]"], ",", 
   RowBox[{"4", "-", 
    FractionBox["A", "\[Lambda]"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.8643142757104816`*^9, 3.8643152072545967`*^9, 3.8643159790267687`*^9},
 CellLabel->
  "Out[416]=",ExpressionUUID->"3d4fb43b-7f2a-47fe-8167-624ad80edd2e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"4", "-", 
        RowBox[{"6", " ", "A"}]}], ")"}], " ", "\[Lambda]"}], "+", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "\[Epsilon]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", "-", 
        RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "A", "-", 
        RowBox[{"2", " ", "\[Lambda]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Lambda]"}], ")"}]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "-", 
       RowBox[{"4", " ", "\[Lambda]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"A", "-", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.8643142757104816`*^9, 3.8643152072545967`*^9, 3.8643159790453672`*^9},
 CellLabel->
  "Out[417]=",ExpressionUUID->"9e05e9f8-6e7c-4197-9119-9065ff5dbb25"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bb", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dd", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ff", "=", 
   RowBox[{
    RowBox[{"-", "4"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", "A"}], "\[Lambda]"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gg", "=", 
   RowBox[{"12", "+", 
    FractionBox[
     RowBox[{"2", "-", 
      RowBox[{"3", " ", "A"}]}], "\[Lambda]"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hh", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"3", " ", "A"}], "-", 
     RowBox[{"2", " ", "\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{"6", "+", "\[Lambda]"}], ")"}]}]}], "\[Lambda]"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ii", "=", 
   RowBox[{"4", "-", 
    FractionBox["A", "\[Lambda]"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jj", "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"4", "-", 
        RowBox[{"6", " ", "A"}]}], ")"}], " ", "\[Lambda]"}], "+", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "\[Epsilon]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kk", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", "-", 
        RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "A", "-", 
        RowBox[{"2", " ", "\[Lambda]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "\[Lambda]"}], ")"}]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}]}], ";", 
  RowBox[{"ll", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "-", 
       RowBox[{"4", " ", "\[Lambda]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"A", "-", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8642697470308247`*^9, 3.8642697719328527`*^9}, {
   3.8642698050613003`*^9, 3.864269809694182*^9}, {3.864269920748795*^9, 
   3.864269997090382*^9}, 3.864270965722127*^9, {3.864277396585041*^9, 
   3.8642774445072193`*^9}, {3.864287010818693*^9, 3.864287054480163*^9}, {
   3.864313470139778*^9, 3.864313555327423*^9}, {3.86431431501865*^9, 
   3.864314348460184*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"60c43622-b66c-465c-8a2e-093cbf906e87"],

Cell[TextData[{
 "Ansatz for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"w", 
     RowBox[{"(", "x", ")"}]}], "=", 
    RowBox[{"\[Sum]", 
     RowBox[{
      SubscriptBox["\[Alpha]", "n"], 
      SuperscriptBox["x", "n"]}]}]}], TraditionalForm]],ExpressionUUID->
  "cf744cdb-0a40-4c66-877d-c22d40a9c5dc"],
 ", we get the following difference equations, exactly the same as in the \
previous section because it is for generic coefficients abcdefghijkl"
}], "Text",
 CellChangeTimes->{{3.8642750419140577`*^9, 3.864275053063743*^9}, {
  3.864275110366568*^9, 3.8642751370634737`*^9}, {3.864277463032014*^9, 
  3.864277495417461*^9}},ExpressionUUID->"de2ea44c-6544-48a8-b669-\
874f143b57fb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"diffEqPlus", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"n", "+", "2"}], ")"}], "a", " ", 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "+", "2"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "b"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "f"}]}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "+", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "n", " ", "c"}], "+", 
      RowBox[{"n", " ", "g"}], "+", "j"}], ")"}], 
    SubscriptBox["\[Alpha]", "n"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "d"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "h"}], "+", "k"}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "-", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "3"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "e"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "i"}], "+", "l"}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "-", "2"}]]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffEqMinus", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"n", "+", "2"}], ")"}], "aa", " ", 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "+", "2"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "bb"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "ff"}]}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "+", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "n", " ", "cc"}], "+", 
      RowBox[{"n", " ", "gg"}], "+", "jj"}], ")"}], 
    SubscriptBox["\[Delta]", "n"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "dd"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "hh"}], "+", "kk"}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "-", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "3"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "ee"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "ii"}], "+", "ll"}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "-", "2"}]]}]}]}]}], "Input",
 CellChangeTimes->{{3.864270018911315*^9, 3.8642702462416697`*^9}, {
  3.8642705156994133`*^9, 3.8642705159562902`*^9}, {3.864313518020338*^9, 
  3.864313519482671*^9}, {3.864313560863084*^9, 3.864313611425284*^9}},
 CellLabel->
  "In[418]:=",ExpressionUUID->"6346966c-6e3c-45f3-a007-fb0bf911ab3d"],

Cell[TextData[{
 "Now we need to generalize the choice of initial conditions C0 and C1 in \
order to be able to extract the even level energy spectrum, and in particular \
the ground state energy.\nLet us recall that for the previous potential (\
\[Gamma]->0, \[Beta]->1), we had C0=1 and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C1", "=", 
    RowBox[{"1", "+", 
     FractionBox["1", 
      RowBox[{"2", "\[Lambda]"}]]}]}], TraditionalForm]],ExpressionUUID->
  "8fe8e02e-568d-4145-afa4-3e25fee1d163"],
 "."
}], "Text",
 CellChangeTimes->{{3.864275145180252*^9, 3.864275191066702*^9}, {
  3.864277514040395*^9, 3.86427757220188*^9}, {3.8642777223928633`*^9, 
  3.8642778004261217`*^9}, {3.8642862975920963`*^9, 
  3.864286314556131*^9}},ExpressionUUID->"f693829a-a506-416e-bc84-\
fff32fd406a4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"psiPlus", "[", "z_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"z", " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["z", "2"], " ", 
          SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
      RowBox[{"6", " ", "\[Lambda]"}]]}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "+", "1"}], ")"}], 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     FractionBox["A", 
      RowBox[{"2", " ", "\[Lambda]"}]]}]], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Alpha]", "0"], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], 
      FractionBox["z", 
       RowBox[{"z", "+", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["z", 
         RowBox[{"z", "+", "1"}]], ")"}], "2"]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiMinus", "[", "z_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"z", " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["z", "2"], " ", 
         SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], 
     RowBox[{"6", " ", "\[Lambda]"}]]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "z"}], "+", "1"}], ")"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox["A", 
      RowBox[{"2", " ", "\[Lambda]"}]]}]], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Delta]", "0"], "+", 
     RowBox[{
      SubscriptBox["\[Delta]", "1"], 
      FractionBox[
       RowBox[{"-", "z"}], 
       RowBox[{
        RowBox[{"-", "z"}], "+", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[Delta]", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"-", "z"}], 
         RowBox[{
          RowBox[{"-", "z"}], "+", "1"}]], ")"}], "2"]}]}], 
    ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.864286324723585*^9, 3.864286433353557*^9}, {
   3.8642889704779167`*^9, 3.8642890116523952`*^9}, 3.8642890470751457`*^9, {
   3.864289083251052*^9, 3.86428912995544*^9}, {3.864289237638175*^9, 
   3.864289254868375*^9}, {3.864313707915181*^9, 3.864313713541687*^9}, {
   3.864313881883119*^9, 3.864313887220744*^9}, {3.86431438247745*^9, 
   3.864314419802773*^9}, {3.8643145018795633`*^9, 3.8643145063187*^9}, {
   3.864314643037959*^9, 3.864314675004569*^9}, {3.8643147513527117`*^9, 
   3.8643147549171143`*^9}, {3.86431601454582*^9, 3.864316017331876*^9}},
 CellLabel->
  "In[420]:=",ExpressionUUID->"02a6420f-2b82-4d6a-beda-38f99a2fb1a1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"psiPlus", "'"}], "[", "0", "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"psiMinus", "'"}], "[", "0", "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.8642864434371567`*^9, 3.864286462633073*^9}, {
  3.864289139123407*^9, 3.864289156917902*^9}, {3.864289223876636*^9, 
  3.864289228321069*^9}, {3.86431695365029*^9, 
  3.864316956012726*^9}},ExpressionUUID->"eee868dd-e760-42e6-bc7b-\
a9b35fc2bc72"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "A", "+", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
     SubscriptBox["\[Alpha]", "0"]}], 
    RowBox[{"2", " ", "\[Lambda]"}]]}], "+", 
  SubscriptBox["\[Alpha]", "1"]}]], "Output",
 CellChangeTimes->{{3.864286450123785*^9, 3.8642864630254097`*^9}, 
   3.864287064388155*^9, {3.864289140413212*^9, 3.864289159117506*^9}, {
   3.8642892288595867`*^9, 3.864289258649302*^9}, 3.86431389030669*^9, 
   3.8643144730100193`*^9, 3.864314656171434*^9, 3.864314757939825*^9, 
   3.864316021032392*^9},
 CellLabel->
  "Out[422]=",ExpressionUUID->"ffa3261f-73f2-4437-b7b1-911ddb7425bd"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "A", "+", 
      RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
    SubscriptBox["\[Delta]", "0"]}], 
   RowBox[{"2", " ", "\[Lambda]"}]], "-", 
  SubscriptBox["\[Delta]", "1"]}]], "Output",
 CellChangeTimes->{{3.864286450123785*^9, 3.8642864630254097`*^9}, 
   3.864287064388155*^9, {3.864289140413212*^9, 3.864289159117506*^9}, {
   3.8642892288595867`*^9, 3.864289258649302*^9}, 3.86431389030669*^9, 
   3.8643144730100193`*^9, 3.864314656171434*^9, 3.864314757939825*^9, 
   3.864316021038072*^9},
 CellLabel->
  "Out[423]=",ExpressionUUID->"532d4e83-8c7b-421c-89d3-ff85eb138501"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"C0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"C1", "=", 
   RowBox[{"S", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"1", "+", "A"}], 
        RowBox[{"2", "\[Lambda]"}]], "+", "1"}], ")"}], "C0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CC0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CC1", "=", 
   RowBox[{
    RowBox[{"-", "S"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"1", "-", "A"}], 
        RowBox[{"2", "\[Lambda]"}]], "+", "1"}], ")"}], "CC0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialEqPlus", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Alpha]", "0"], "-", "C0"}], ",", 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], "-", "C1"}], ",", 
     RowBox[{
      RowBox[{"2", "a", " ", 
       SubscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"f", " ", 
       SubscriptBox["\[Alpha]", "1"]}], "+", 
      RowBox[{"j", " ", 
       SubscriptBox["\[Alpha]", "0"]}]}], ",", 
     RowBox[{
      RowBox[{"6", "a", " ", 
       SubscriptBox["\[Alpha]", "3"]}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"b", "+", "f"}], ")"}], 
       SubscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"g", "+", "j"}], ")"}], 
       SubscriptBox["\[Alpha]", "1"]}], "+", 
      RowBox[{"k", " ", 
       SubscriptBox["\[Alpha]", "0"]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialEqMinus", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Delta]", "0"], "-", "CC0"}], ",", 
     RowBox[{
      SubscriptBox["\[Delta]", "1"], "-", "CC1"}], ",", 
     RowBox[{
      RowBox[{"2", "aa", " ", 
       SubscriptBox["\[Delta]", "2"]}], "+", 
      RowBox[{"ff", " ", 
       SubscriptBox["\[Delta]", "1"]}], "+", 
      RowBox[{"jj", " ", 
       SubscriptBox["\[Delta]", "0"]}]}], ",", 
     RowBox[{
      RowBox[{"6", "aa", " ", 
       SubscriptBox["\[Delta]", "3"]}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"bb", "+", "ff"}], ")"}], 
       SubscriptBox["\[Delta]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"gg", "+", "jj"}], ")"}], 
       SubscriptBox["\[Delta]", "1"]}], "+", 
      RowBox[{"kk", " ", 
       SubscriptBox["\[Delta]", "0"]}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.864270380769575*^9, 3.864270544385949*^9}, {
  3.864270681732925*^9, 3.8642707092690983`*^9}, {3.864277584361083*^9, 
  3.864277623001809*^9}, {3.864277788826624*^9, 3.864277805818914*^9}, {
  3.8643148390180197`*^9, 3.864314996387719*^9}, {3.864315370805738*^9, 
  3.864315370870441*^9}, {3.8643154226625013`*^9, 3.864315422935775*^9}, {
  3.8643161033803577`*^9, 3.8643161147858477`*^9}, {3.864316764706365*^9, 
  3.864316769043502*^9}, {3.864316802577961*^9, 3.864316820537896*^9}},
 CellLabel->
  "In[455]:=",ExpressionUUID->"51c73d4f-062d-4634-a0d6-6b2f89f77c3e"],

Cell["\<\
We solve for the coefficients of the series expansion for a large value of n\
\>", "Text",
 CellChangeTimes->{{3.8642751963474607`*^9, 
  3.8642752191768208`*^9}},ExpressionUUID->"a329d138-6d7a-4ca7-bba3-\
03a632efb73c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nmax", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]largePlus", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"initialEqPlus", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"diffEqPlus", "[", "n", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "2", ",", 
              RowBox[{"Nmax", "-", "2"}]}], "}"}]}], "]"}]}], "]"}], "==", 
        "0"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["\[Alpha]", "m"], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"Nmax", "+", "1"}], ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]largeMinus", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"initialEqMinus", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"diffEqMinus", "[", "n", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "2", ",", 
              RowBox[{"Nmax", "-", "2"}]}], "}"}]}], "]"}]}], "]"}], "==", 
        "0"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["\[Delta]", "m"], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"Nmax", "+", "1"}], ",", "2"}], "]"}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.8642703216466703`*^9, 3.864270374397962*^9}, {
  3.8642705513296633`*^9, 3.8642705574736023`*^9}, {3.8642706051077547`*^9, 
  3.864270674659809*^9}, {3.864270719493314*^9, 3.864270843494506*^9}, {
  3.864270983647256*^9, 3.864270983916497*^9}, {3.864271384077087*^9, 
  3.864271391467572*^9}, {3.864271456796391*^9, 3.864271566285283*^9}, {
  3.864272670480879*^9, 3.8642726706307497`*^9}, {3.8643150041381397`*^9, 
  3.864315039287624*^9}, {3.8643152147129307`*^9, 3.864315217142314*^9}, {
  3.8643153954184837`*^9, 3.8643153955802298`*^9}, {3.864316807467794*^9, 
  3.8643168351853743`*^9}},
 CellLabel->
  "In[466]:=",ExpressionUUID->"6be06e70-0b04-4d3a-8f6b-f76391bbb77c"],

Cell["\<\
The zeros of that large coefficient as a function of the energy parameter \
\[Epsilon] correspond to the spectum of the model.\
\>", "Text",
 CellChangeTimes->{{3.864275243849395*^9, 
  3.864275278617496*^9}},ExpressionUUID->"aec30ee4-9875-4e5c-99d1-\
75349cc9cf91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Alpha]largePlus", ",", "\[Alpha]largeMinus"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", "->", "1"}], ",", 
      RowBox[{"A", "->", "1.0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", 
       RowBox[{"-", "10"}]}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.864272516042613*^9, 3.864272581235248*^9}, {
   3.864272630956184*^9, 3.864272652997024*^9}, {3.8643152302549*^9, 
   3.864315334743429*^9}, {3.864315388282217*^9, 3.864315388370914*^9}, {
   3.864315478660943*^9, 3.864315500630616*^9}, {3.8643161278235292`*^9, 
   3.8643161552456636`*^9}, {3.864316829844284*^9, 3.864316829982398*^9}, {
   3.864317021269602*^9, 3.864317096679879*^9}, {3.864317220413212*^9, 
   3.864317231961761*^9}, 3.864317298780168*^9, {3.864317334566575*^9, 
   3.864317342387321*^9}},
 CellLabel->
  "In[483]:=",ExpressionUUID->"e57bd8d8-3948-4718-93e1-0833c13a072c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Epsilon]", "\[Rule]", "1.2992147129802147`"}], ",", 
   RowBox[{"S", "\[Rule]", 
    RowBox[{"-", "0.31871551177194624`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864272582474341*^9, 3.864272653692486*^9}, 
   3.8642727233006563`*^9, {3.864315296586309*^9, 3.864315344630843*^9}, {
   3.864315378405192*^9, 3.864315417696125*^9}, {3.864315457418236*^9, 
   3.864315501130307*^9}, {3.864316143990018*^9, 3.864316155816534*^9}, {
   3.864316791724887*^9, 3.8643168537145967`*^9}, {3.8643170232770653`*^9, 
   3.864317097691369*^9}, {3.86431722205857*^9, 3.864317232530428*^9}, 
   3.864317299287344*^9, {3.864317335018508*^9, 3.8643173428797483`*^9}},
 CellLabel->
  "Out[483]=",ExpressionUUID->"c6b83e80-05ca-460f-89e4-aeb12f600b3e"]
}, Open  ]],

Cell["\<\
!!!VERY IMPORTANT COMMENT!!!  (set {\[Lambda]->1,A->1.0} in the following \
comment)
The result of the above FindRoot function depends strongly on the \
initialization of the unknown variable S:
- if I initialize S=10 for instance (and \[Epsilon]=1), the result converges \
to the first excited energy 4.61606
- if I initialize S=-10 for instance (and \[Epsilon]=1), the result converges \
to the ground state energy 1.29921\
\>", "Text",
 CellChangeTimes->{{3.864317159987091*^9, 
  3.864317339702817*^9}},ExpressionUUID->"796f8069-b69e-4536-8ac4-\
cdfd1133154e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Spectrum (most generic quartic potential) (SUCCESS)", "Subsection",
 CellChangeTimes->{{3.864274692548676*^9, 3.864274722704041*^9}, {
  3.8643140153087*^9, 3.864314015970899*^9}, {3.8643185685023603`*^9, 
  3.864318578479597*^9}},ExpressionUUID->"dd6ce8dd-d52f-4919-baae-\
bfc80178df37"],

Cell[CellGroupData[{

Cell["Setup ODE", "Subsubsection",
 CellChangeTimes->{{3.864531502129651*^9, 3.8645315040934896`*^9}, {
  3.8650494206630898`*^9, 
  3.865049423238859*^9}},ExpressionUUID->"dd7f872f-bbb2-4e62-b465-\
4b024100df6c"],

Cell[TextData[{
 "Let us now generalize the above story to the following more generic quartic \
potential.\nNotation: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["H", "2"], "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["m", "1"], "+", 
       SubscriptBox["m", "2"]}], 
      RowBox[{
       SubscriptBox["m", "1"], 
       SubscriptBox["m", "2"]}]], 
     FractionBox[
      SuperscriptBox["hbar", "2"], "2"]}]}], TraditionalForm]],ExpressionUUID->
  "56dbe85e-456d-4781-bfd0-6074c10fdc1b"],
 "\nThe couplings in the potential A, \[Beta], \[Gamma], \[Lambda] are fixed \
according to the multipolar expansion in terms of the masses, charges and \
frequencies of the pair of QDOs."
}], "Text",
 CellChangeTimes->{{3.864274820517263*^9, 3.86427483221453*^9}, {
  3.864275377289834*^9, 3.864275399449318*^9}, {3.8642867086502132`*^9, 
  3.864286761195252*^9}, {3.864358765330817*^9, 
  3.864358823738635*^9}},ExpressionUUID->"c93deddb-90ec-4d53-a857-\
cf0cfc05d13f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GENERIC", " ", "COMMENT", " ", "ABOUT", " ", "THIS", " ", 
   RowBox[{"SECTION", ":", " ", 
    RowBox[{
    "contrary", " ", "to", " ", "the", " ", "case", " ", "of", " ", "an", " ",
      "even", " ", "potential"}]}]}], ",", " ", 
  RowBox[{
  "one", " ", "here", " ", "has", " ", "to", " ", "keep", " ", "track", " ", 
   "of", " ", "both", " ", "the", " ", "positive", " ", "x", " ", "and", " ", 
   "the", " ", "negative", " ", "x", " ", "solutions"}]}]], "Text",
 CellChangeTimes->{{3.8643119982628927`*^9, 
  3.864312056801162*^9}},ExpressionUUID->"a70d9391-164b-42ae-9926-\
1da565c18e49"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"A", " ", "z"}], " ", "+", 
   RowBox[{"\[Beta]", " ", 
    SuperscriptBox["z", "2"]}], "+", 
   RowBox[{"\[Gamma]", " ", 
    SuperscriptBox["z", "3"]}], "+", 
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", 
    SuperscriptBox["z", "4"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq", "[", "\[Psi]_", "]"}], ":=", 
   RowBox[{"z", "\[Function]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "''"}], "[", "z", "]"}], "+", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Epsilon]", "-", 
        RowBox[{"V", "[", "z", "]"}]}], 
       RowBox[{
        SuperscriptBox["H", "2"], " "}]], 
      RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.864035526701899*^9, 3.864035567764186*^9}, {
   3.86403565956774*^9, 3.864035667256592*^9}, {3.864115016484351*^9, 
   3.864115017418898*^9}, {3.8641152422780733`*^9, 3.864115267812194*^9}, {
   3.864115649334899*^9, 3.864115655364806*^9}, 3.864115695927232*^9, 
   3.864116018567485*^9, 3.864117086684123*^9, {3.8641181148079357`*^9, 
   3.864118115933967*^9}, {3.864118242001134*^9, 3.86411825792118*^9}, 
   3.8641990306553793`*^9, 3.8642010609833183`*^9, 3.86420237395303*^9, {
   3.864205586724691*^9, 3.864205587664859*^9}, 3.8642078236374598`*^9, {
   3.864208608819233*^9, 3.864208610930963*^9}, {3.864269777597616*^9, 
   3.864269777795177*^9}, {3.8642708672924137`*^9, 3.8642708773561974`*^9}, {
   3.8642754046018677`*^9, 3.864275412761997*^9}, {3.8642866904537773`*^9, 
   3.8642867029554768`*^9}, {3.864286770795536*^9, 3.864286800475404*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"8ef4b5a2-b391-4465-bbc2-c3aa197c324a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"latexCouplings", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "->", "\[Alpha]"}], ",", 
     RowBox[{"\[Lambda]", "->", 
      SqrtBox["\[Delta]"]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"physicalCouplings", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", "q2"}], "+", 
          RowBox[{"m2", " ", "q1"}]}], 
         RowBox[{"m1", "+", "m2"}]]}], "\[Tau]"}]}], ",", 
     RowBox[{"\[Beta]", "->", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]], 
        FractionBox[
         RowBox[{"2", " ", "q1", " ", "q2"}], 
         SuperscriptBox["r", "3"]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         RowBox[{"m1", "+", "m2"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", 
           SuperscriptBox["\[Omega]2", "2"]}], "+", 
          RowBox[{"m2", " ", 
           SuperscriptBox["\[Omega]1", "2"]}]}], 
         RowBox[{"m1", "+", "m2"}]]}]}]}], ",", 
     RowBox[{"\[Gamma]", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]]}], 
       FractionBox[
        RowBox[{"3", " ", "q1", " ", "q2"}], 
        SuperscriptBox["r", "4"]]}]}], ",", 
     RowBox[{"\[Delta]", "->", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "m1", " ", "m2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            SuperscriptBox["m1", "2"]}], "+", 
           RowBox[{"3", "m1", " ", "m2"}], "+", 
           RowBox[{"2", 
            SuperscriptBox["m2", "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"m1", "+", "m2"}], ")"}], "4"]], 
       FractionBox[
        RowBox[{"q1", " ", "q2"}], 
        SuperscriptBox["r", "5"]]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"latexCouplingsExplicit", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "->", "alpha"}], ",", 
     RowBox[{"\[Lambda]", "->", 
      SqrtBox["delta"]}], ",", " ", 
     RowBox[{"\[Beta]", "->", "beta"}], ",", " ", 
     RowBox[{"\[Gamma]", "->", "gamma"}], ",", 
     RowBox[{"\[Delta]", "->", "delta"}], ",", " ", 
     RowBox[{"\[Epsilon]", "->", "epsilon"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"physicalCouplingsExplicit", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alpha", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", "q2"}], "+", 
          RowBox[{"m2", " ", "q1"}]}], 
         RowBox[{"m1", "+", "m2"}]]}], "tau"}]}], ",", 
     RowBox[{"beta", "->", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]], 
        FractionBox[
         RowBox[{"2", " ", "q1", " ", "q2"}], 
         SuperscriptBox["r", "3"]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         RowBox[{"m1", "+", "m2"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"m1", " ", 
           SuperscriptBox["omega2", "2"]}], "+", 
          RowBox[{"m2", " ", 
           SuperscriptBox["omega1", "2"]}]}], 
         RowBox[{"m1", "+", "m2"}]]}]}]}], ",", 
     RowBox[{"gamma", "->", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"m1", " ", "m2"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"m1", "+", "m2"}], ")"}], "2"]]}], 
       FractionBox[
        RowBox[{"3", " ", "q1", " ", "q2"}], 
        SuperscriptBox["r", "4"]]}]}], ",", 
     RowBox[{"delta", "->", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "m1", " ", "m2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            SuperscriptBox["m1", "2"]}], "+", 
           RowBox[{"3", "m1", " ", "m2"}], "+", 
           RowBox[{"2", 
            SuperscriptBox["m2", "2"]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"m1", "+", "m2"}], ")"}], "4"]], 
       FractionBox[
        RowBox[{"q1", " ", "q2"}], 
        SuperscriptBox["r", "5"]]}]}], ",", 
     RowBox[{"H", "->", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"m1", "+", "m2"}], 
         RowBox[{"m1", " ", "m2"}]], 
        FractionBox[
         SuperscriptBox["HBAR", "2"], "2"]}]]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"HHrule", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "->", "0.6099"}], ",", 
     RowBox[{"m2", "->", "0.6099"}], ",", 
     RowBox[{"q1", "->", "0.7080"}], ",", 
     RowBox[{"q2", "->", "0.7080"}], ",", 
     RowBox[{"\[Omega]1", "->", "0.4273"}], ",", 
     RowBox[{"\[Omega]2", "->", "0.4273"}], ",", 
     RowBox[{"HBAR", "->", "1"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"HHruleExplicit", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "->", "0.6099"}], ",", 
     RowBox[{"m2", "->", "0.6099"}], ",", 
     RowBox[{"q1", "->", "0.7080"}], ",", 
     RowBox[{"q2", "->", "0.7080"}], ",", 
     RowBox[{"omega1", "->", "0.4273"}], ",", 
     RowBox[{"omega2", "->", "0.4273"}], ",", 
     RowBox[{"HBAR", "->", "1"}]}], "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.864396217362211*^9, 3.864396265512763*^9}, {
   3.864396367069921*^9, 3.864396374568042*^9}, {3.8643965649153843`*^9, 
   3.864396581585636*^9}, 3.86439912153622*^9, {3.8643996969927397`*^9, 
   3.8643999795681963`*^9}, {3.86452602030055*^9, 3.864526085408793*^9}, {
   3.864526130561105*^9, 3.8645261509441347`*^9}, {3.865049396727646*^9, 
   3.865049412695977*^9}, {3.865049648425116*^9, 3.86504964903269*^9}, {
   3.865148568949938*^9, 3.865148576738531*^9}, {3.865148612159862*^9, 
   3.8651486614068403`*^9}, {3.8651492537286177`*^9, 3.865149269712734*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"ff4d649d-72af-4424-8b4e-b48dd4d35a72"],

Cell["\<\
Now we need to find the correct change of variable for the active variable \
\[Psi], for this, let us get inspiration from the analytical solution \
provided by Mathematica:\
\>", "Text",
 CellChangeTimes->{{3.864275423626759*^9, 
  3.864275481754038*^9}},ExpressionUUID->"dc63463d-ffa1-43d3-b023-\
16b905d51db8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"eq", "[", "\[Psi]", "]"}], "[", "z", "]"}], "==", "0"}], ",", 
    RowBox[{"\[Psi]", "[", "z", "]"}], ",", "z"}], "]"}], "//", 
  "PowerExpand"}]], "Input",
 CellChangeTimes->{{3.8642754848765173`*^9, 3.8642755082360373`*^9}, {
  3.864275949123186*^9, 3.864275950754225*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"3d2674f1-d9fd-463c-a000-28d3b38adaba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Psi]", "[", "z", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3"}], " ", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{"6", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Beta]"}], "+", 
               RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
             SuperscriptBox["\[Lambda]", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["z", "2"], " ", 
             SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
         RowBox[{"24", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "3"]}]]}]], " ", 
      TemplateBox[{"2"},
       "C"], " ", 
      RowBox[{"HeunT", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Gamma]", "4"], "-", 
           RowBox[{"8", " ", "\[Beta]", " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "-", 
           RowBox[{"32", " ", "H", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "5"]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Beta]", "2"], "+", 
              RowBox[{"4", " ", "\[Epsilon]", " ", 
               SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}]}], 
          RowBox[{"64", " ", 
           SuperscriptBox["H", "2"], " ", 
           SuperscriptBox["\[Lambda]", "6"]}]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "\[Lambda]"}], "H"]}], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], "-", 
           RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"8", " ", "A", " ", 
            SuperscriptBox["\[Lambda]", "4"]}]}], 
          RowBox[{"8", " ", 
           SuperscriptBox["H", "2"], " ", 
           SuperscriptBox["\[Lambda]", "4"]}]]}], ",", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"4", " ", "\[Beta]", " ", 
           SuperscriptBox["\[Lambda]", "2"]}]}], 
         RowBox[{"4", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "3"]}]], ",", 
        RowBox[{"-", 
         FractionBox["\[Gamma]", 
          RowBox[{"H", " ", "\[Lambda]"}]]}], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", "\[Lambda]"}], "H"]}], ",", "z"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"z", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SuperscriptBox["\[Gamma]", "2"]}], "+", 
           RowBox[{"6", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Beta]"}], "+", 
              RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["z", "2"], " ", 
            SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
        RowBox[{"24", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "3"]}]]], " ", 
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"HeunT", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Gamma]", "4"], "-", 
           RowBox[{"8", " ", "\[Beta]", " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"32", " ", "H", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "5"]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Beta]", "2"], "+", 
              RowBox[{"4", " ", "\[Epsilon]", " ", 
               SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}]}], 
          RowBox[{"64", " ", 
           SuperscriptBox["H", "2"], " ", 
           SuperscriptBox["\[Lambda]", "6"]}]]}], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], "-", 
           RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{"A", "-", 
              RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
          RowBox[{"8", " ", 
           SuperscriptBox["H", "2"], " ", 
           SuperscriptBox["\[Lambda]", "4"]}]]}], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], "-", 
           RowBox[{"4", " ", "\[Beta]", " ", 
            SuperscriptBox["\[Lambda]", "2"]}]}], 
          RowBox[{"4", " ", "H", " ", 
           SuperscriptBox["\[Lambda]", "3"]}]]}], ",", 
        FractionBox["\[Gamma]", 
         RowBox[{"H", " ", "\[Lambda]"}]], ",", 
        FractionBox[
         RowBox[{"2", " ", "\[Lambda]"}], "H"], ",", "z"}], "]"}]}]}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.864275505072137*^9, 3.864275520794508*^9}, 
   3.8642759513363037`*^9, 3.8642868069716597`*^9, 3.864312218853105*^9, 
   3.864317506247504*^9, 3.864358620510544*^9, 3.864396277422563*^9, 
   3.864398377095174*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"f788a805-7b0c-4c55-94ef-7362eef0bddb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3"}], " ", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{"6", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Beta]"}], "+", 
               RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
             SuperscriptBox["\[Lambda]", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["z", "2"], " ", 
             SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
         RowBox[{"24", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "3"]}]]}]], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Beta]", "->", "1"}], ",", 
        RowBox[{"\[Gamma]", "->", "0"}], ",", 
        RowBox[{"H", "->", "1"}]}], "}"}]}], ")"}], "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["z", 
        RowBox[{"2", " ", "\[Lambda]"}]]}], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["z", "3"], " ", "\[Lambda]"}], "3"]}]]}], "//", 
   "PowerExpand"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8642755327791977`*^9, 3.864275587996393*^9}, 
   3.864275957522493*^9, {3.864286816515222*^9, 3.864286820666658*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"5577d6e0-3446-460c-a2c7-d971ae9673d0"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.8642755453939857`*^9, 3.864275588348443*^9}, 
   3.864275958047332*^9, 3.864286821522951*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"4aaf2634-c680-4ada-8cac-e0022b45d964"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"z", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "+", 
         RowBox[{"6", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Beta]"}], "+", 
            RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["z", "2"], " ", 
          SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
      RowBox[{"24", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "3"]}]]}], ",", "z"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"z", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{"6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Beta]"}], "+", 
           RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["z", "2"], " ", 
         SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
     RowBox[{"24", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "3"]}]], ",", "z"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864275685859309*^9, 3.864275687575535*^9}, 
   3.864275960581841*^9, 3.8642868320653667`*^9, {3.8643589506879377`*^9, 
   3.8643589909237423`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"39cc0d46-afda-46a3-87e4-313ad7f46403"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "2"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "3"]}]], ",", 
   RowBox[{"-", 
    FractionBox["\[Gamma]", 
     RowBox[{"4", " ", "H", " ", "\[Lambda]"}]]}], ",", 
   RowBox[{"-", 
    FractionBox["\[Lambda]", 
     RowBox[{"3", " ", "H"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.86427568824868*^9, 3.864275961517703*^9, 3.864286832679997*^9, {
   3.8643589530376472`*^9, 3.864358991352721*^9}, 3.864398379384306*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"0227efbb-7679-4aa3-9a4e-74b40b57ddb0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "2"], "-", 
      RowBox[{"4", " ", "\[Beta]", " ", 
       SuperscriptBox["\[Lambda]", "2"]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "3"]}]]}], ",", 
   FractionBox["\[Gamma]", 
    RowBox[{"4", " ", "H", " ", "\[Lambda]"}]], ",", 
   FractionBox["\[Lambda]", 
    RowBox[{"3", " ", "H"}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.86427568824868*^9, 3.864275961517703*^9, 3.864286832679997*^9, {
   3.8643589530376472`*^9, 3.864358991352721*^9}, 3.864398379403253*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"c93e2b14-67a9-49be-85d2-3a602da479e8"]
}, Open  ]],

Cell[TextData[{
 "So now we have the exponential change of variable.\nRemains the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "+", "1"}], ")"}], 
    RowBox[{"some", " ", "power"}]], TraditionalForm]],ExpressionUUID->
  "37a51820-b9a7-4630-a962-3bc700e424b2"],
 " to fix. Let us call the generic power \[Mu]"
}], "Text",
 CellChangeTimes->{{3.864275595259122*^9, 
  3.864275672684463*^9}},ExpressionUUID->"12fd6c21-5c33-431e-89d0-\
c632747007a7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq2Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3"}], " ", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{"6", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Beta]"}], "+", 
               RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
             SuperscriptBox["\[Lambda]", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["z", "2"], " ", 
             SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
         RowBox[{"24", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "3"]}]]}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "+", "1"}], ")"}], "\[Mu]"]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"z", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "3"}], " ", 
               SuperscriptBox["\[Gamma]", "2"]}], "+", 
              RowBox[{"6", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[Beta]"}], "+", 
                 RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
               SuperscriptBox["\[Lambda]", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["z", "2"], " ", 
               SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
           RowBox[{"24", " ", "H", " ", 
            SuperscriptBox["\[Lambda]", "3"]}]]}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"z", "+", "1"}], ")"}], "\[Mu]"], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"z", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SuperscriptBox["\[Gamma]", "2"]}], "+", 
           RowBox[{"6", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Beta]"}], "+", 
              RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["z", "2"], " ", 
            SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
        RowBox[{"24", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "3"]}]]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "z"}], "+", "1"}], ")"}], "\[Mu]"]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"z", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], " ", 
              SuperscriptBox["\[Gamma]", "2"]}], "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Beta]"}], "+", 
                RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
              SuperscriptBox["\[Lambda]", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["z", "2"], " ", 
              SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
          RowBox[{"24", " ", "H", " ", 
           SuperscriptBox["\[Lambda]", "3"]}]]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "z"}], "+", "1"}], ")"}], "\[Mu]"], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.864118163342272*^9, 3.864118163421801*^9}, {
   3.8641182338242292`*^9, 3.8641182794537277`*^9}, {3.864118309938342*^9, 
   3.8641183532169247`*^9}, {3.864118384770278*^9, 3.864118397361452*^9}, {
   3.86419901804711*^9, 3.864199020958868*^9}, 3.864199267933145*^9, {
   3.864199361245159*^9, 3.864199363388564*^9}, 3.864201067883738*^9, {
   3.8642023845592937`*^9, 3.8642023977426434`*^9}, {3.864202740227565*^9, 
   3.864202750578661*^9}, {3.864203210996903*^9, 3.864203221267009*^9}, {
   3.864203261029221*^9, 3.864203279172521*^9}, {3.864204269612*^9, 
   3.864204278153284*^9}, {3.864204353340111*^9, 3.864204375658196*^9}, {
   3.8642046023818207`*^9, 3.864204606220006*^9}, {3.86420559214673*^9, 
   3.864205635889922*^9}, 3.8642069206506863`*^9, 3.8642069619650087`*^9, {
   3.864269780717699*^9, 3.864269784781036*^9}, {3.8642756794382143`*^9, 
   3.8642757264933233`*^9}, {3.8642759668761806`*^9, 3.86427598791363*^9}, {
   3.864286840898326*^9, 3.864286843151375*^9}, {3.864312073767428*^9, 
   3.864312114422969*^9}, {3.864312160160754*^9, 3.864312176013809*^9}, {
   3.86431242063426*^9, 3.864312427109799*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"54705305-6d2c-4dee-bdb1-11d879e4708f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "''"}], "[", "z", "]"}]}], "]"}], "/.", 
    RowBox[{"\[Mu]", "->", "0"}]}], "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
         RowBox[{
          RowBox[{"w", "'"}], "[", "z", "]"}]}], "]"}], "/.", 
       RowBox[{"\[Mu]", "->", "0"}]}], "/.", "latexCouplings"}], "//", 
     "FullSimplify"}], ",", "z"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
         RowBox[{"w", "[", "z", "]"}]}], "]"}], "/.", 
       RowBox[{"\[Mu]", "->", "0"}]}], "/.", "latexCouplings"}], "//", 
     "FullSimplify"}], ",", "z"}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864396826760911*^9, 3.864396966083762*^9}, {
  3.864397122289941*^9, 3.864397129270009*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"f42abe4c-6d1b-4840-8e4e-77f57ec5955c"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.8643968320367727`*^9, 3.864396859312842*^9}, {
   3.864396890635481*^9, 3.8643968999014683`*^9}, {3.8643969381990967`*^9, 
   3.864396966537038*^9}, {3.864397123840867*^9, 3.86439712960247*^9}, 
   3.864398385354786*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"30740fa0-8e4e-4391-8706-5f33d5225da6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "2"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", "\[Delta]"}]}], 
    RowBox[{"4", " ", "k", " ", 
     SuperscriptBox["\[Delta]", 
      RowBox[{"3", "/", "2"}]]}]], ",", 
   RowBox[{"-", 
    FractionBox["\[Gamma]", 
     RowBox[{"k", " ", 
      SqrtBox["\[Delta]"]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox["\[Delta]"]}], "k"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8643968320367727`*^9, 3.864396859312842*^9}, {
   3.864396890635481*^9, 3.8643968999014683`*^9}, {3.8643969381990967`*^9, 
   3.864396966537038*^9}, {3.864397123840867*^9, 3.86439712960247*^9}, 
   3.8643983853568077`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"fa88bba5-26b5-4b50-8d68-a0560cfccfe5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "4"], "-", 
     RowBox[{"8", " ", "\[Beta]", " ", 
      SuperscriptBox["\[Gamma]", "2"], " ", "\[Delta]"}], "-", 
     RowBox[{"32", " ", "k", " ", "\[Gamma]", " ", 
      SuperscriptBox["\[Delta]", 
       RowBox[{"5", "/", "2"}]]}], "+", 
     RowBox[{"16", " ", 
      SuperscriptBox["\[Delta]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Beta]", "2"], "+", 
        RowBox[{"4", " ", "\[Delta]", " ", "\[Epsilon]"}]}], ")"}]}]}], 
    RowBox[{"64", " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox["\[Delta]", "3"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", "\[Delta]"}], "+", 
      RowBox[{"8", " ", "\[Alpha]", " ", 
       SuperscriptBox["\[Delta]", "2"]}], "+", 
      RowBox[{"16", " ", "k", " ", 
       SuperscriptBox["\[Delta]", 
        RowBox[{"5", "/", "2"}]]}]}], 
     RowBox[{"8", " ", 
      SuperscriptBox["k", "2"], " ", 
      SuperscriptBox["\[Delta]", "2"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8643968320367727`*^9, 3.864396859312842*^9}, {
   3.864396890635481*^9, 3.8643968999014683`*^9}, {3.8643969381990967`*^9, 
   3.864396966537038*^9}, {3.864397123840867*^9, 3.86439712960247*^9}, 
   3.8643983853837557`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"7a9d2884-78fc-4e91-9d00-0589c2cf2a3b"]
}, Open  ]],

Cell["\<\
We perform a change of passive variable to move to the [0,1] segment\
\>", "Text",
 CellChangeTimes->{{3.864274950694655*^9, 
  3.864274983848119*^9}},ExpressionUUID->"1797eaaa-2a96-4258-8f16-\
b0aaeadc709f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "==", 
      FractionBox["z", 
       RowBox[{"z", "+", "1"}]]}], "}"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "==", 
      FractionBox[
       RowBox[{"-", "z"}], 
       RowBox[{
        RowBox[{"-", "z"}], "+", "1"}]]}], "}"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864202530337821*^9, 3.8642025455519876`*^9}, {
   3.864203679909642*^9, 3.864203695046502*^9}, {3.8643125792997847`*^9, 
   3.864312584998733*^9}, 3.864312739399147*^9, 3.864312846895759*^9, {
   3.864313227672843*^9, 3.8643132302920513`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"0ba523e6-8de9-4e5a-8c93-e58531fdfa9d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["x", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.864203689655448*^9, 3.864203695378886*^9}, 
   3.864269792992223*^9, 3.8642746682788057`*^9, 3.864312585566846*^9, 
   3.8643127402473993`*^9, 3.864312853051523*^9, 3.864313274121306*^9, 
   3.864317519201784*^9, 3.864358623939385*^9, 3.864398387368374*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"62c91768-4e1f-4eee-89f5-e29d587b4f46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    FractionBox["x", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.864203689655448*^9, 3.864203695378886*^9}, 
   3.864269792992223*^9, 3.8642746682788057`*^9, 3.864312585566846*^9, 
   3.8643127402473993`*^9, 3.864312853051523*^9, 3.864313274121306*^9, 
   3.864317519201784*^9, 3.864358623939385*^9, 3.864398387390162*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"6648de88-982d-4005-8690-5473040f5008"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq3Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox["#1", 
            RowBox[{"#1", "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{"1", "-", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Minus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox[
            RowBox[{"-", "#1"}], 
            RowBox[{
             RowBox[{"-", "#1"}], "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}]}], "Input",
 CellChangeTimes->{{3.864203669237536*^9, 3.864203704773901*^9}, {
   3.86420374226264*^9, 3.864203743862155*^9}, 3.864206662091394*^9, 
   3.864206908747628*^9, {3.864206958892559*^9, 3.864206981146277*^9}, 
   3.864312121357253*^9, {3.8643121835475197`*^9, 3.8643121837888403`*^9}, {
   3.86431223160461*^9, 3.8643122468096533`*^9}, {3.864312635132743*^9, 
   3.864312642965464*^9}, {3.8643127437881927`*^9, 3.8643127515382442`*^9}, {
   3.864312859386508*^9, 3.86431288216315*^9}, {3.864313285147183*^9, 
   3.8643132933196983`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"e00713bd-4f4d-44c7-be2c-6e62e00d44a1"],

Cell["\<\
Now we need to fix the power \[Mu] in order for the coefficient of w[x] to be \
a polynomial in x\
\>", "Text",
 CellChangeTimes->{{3.8642760369276342`*^9, 
  3.8642760992304163`*^9}},ExpressionUUID->"c193f374-e684-46e4-85ec-\
9b491781295f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
    RowBox[{"w", "[", "x", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
    RowBox[{"w", "[", "x", "]"}]}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864276203478758*^9, 3.8642762449628353`*^9}, {
   3.864276415361682*^9, 3.864276443868231*^9}, 3.864312127163787*^9, {
   3.864312262542098*^9, 3.8643122664867067`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"030c1b12-13b3-4947-9a36-98a6a339850d"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"64", " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
    SuperscriptBox["\[Lambda]", "6"]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
     SuperscriptBox["\[Gamma]", "4"]}], "+", 
    RowBox[{"8", " ", "x", " ", 
     SuperscriptBox["\[Gamma]", "3"], " ", 
     SuperscriptBox["\[Lambda]", "2"]}], "-", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
     SuperscriptBox["\[Gamma]", "2"], " ", 
     SuperscriptBox["\[Lambda]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"\[Beta]", "+", 
       RowBox[{"2", " ", "H", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Lambda]", " ", 
        "\[Mu]"}]}], ")"}]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["\[Lambda]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       RowBox[{"4", " ", "H", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", "\[Beta]", " ", 
        "\[Lambda]", " ", "\[Mu]"}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Epsilon]"}], "+", 
          RowBox[{"x", " ", 
           RowBox[{"(", 
            RowBox[{"A", "+", "\[Epsilon]", "+", 
             RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}], "+", 
          RowBox[{"H", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "H"}], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["x", "2"], " ", "\[Lambda]"}]}], ")"}], " ", 
           "\[Mu]"}], "+", 
          RowBox[{
           SuperscriptBox["H", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], "-", 
    RowBox[{"32", " ", "\[Gamma]", " ", 
     SuperscriptBox["\[Lambda]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "H"}], " ", "\[Lambda]"}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{"\[Beta]", "+", 
          RowBox[{"H", " ", "\[Lambda]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.86427621846246*^9, 3.864276245125049*^9}, {
   3.864276419853499*^9, 3.864276444262329*^9}, 3.864286853987031*^9, 
   3.864312268584391*^9, 3.864312444627284*^9, 3.8643126484910307`*^9, 
   3.864312763725235*^9, {3.864312868911336*^9, 3.8643128850649652`*^9}, 
   3.864313297462576*^9, 3.864317640173773*^9, 3.864358629893512*^9, 
   3.864398393670128*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"1727f977-8c3b-4a83-b149-b7c1e809f3f2"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"64", " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
    SuperscriptBox["\[Lambda]", "6"]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
     SuperscriptBox["\[Gamma]", "4"]}], "-", 
    RowBox[{"8", " ", "x", " ", 
     SuperscriptBox["\[Gamma]", "3"], " ", 
     SuperscriptBox["\[Lambda]", "2"]}], "-", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
     SuperscriptBox["\[Gamma]", "2"], " ", 
     SuperscriptBox["\[Lambda]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"\[Beta]", "+", 
       RowBox[{"2", " ", "H", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Lambda]", " ", 
        "\[Mu]"}]}], ")"}]}], "+", 
    RowBox[{"32", " ", "\[Gamma]", " ", 
     SuperscriptBox["\[Lambda]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "H"}], " ", "\[Lambda]"}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{"\[Beta]", "+", 
          RowBox[{"H", " ", "\[Lambda]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["\[Lambda]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       RowBox[{"4", " ", "H", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", "\[Beta]", " ", 
        "\[Lambda]", " ", "\[Mu]"}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "A"}], " ", "x"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Epsilon]"}], "+", 
          
          RowBox[{"H", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "x", " ", "\[Lambda]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "H"}], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["x", "2"], " ", "\[Lambda]"}]}], ")"}], " ", 
              "\[Mu]"}], "+", 
             RowBox[{"H", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
      ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.86427621846246*^9, 3.864276245125049*^9}, {
   3.864276419853499*^9, 3.864276444262329*^9}, 3.864286853987031*^9, 
   3.864312268584391*^9, 3.864312444627284*^9, 3.8643126484910307`*^9, 
   3.864312763725235*^9, {3.864312868911336*^9, 3.8643128850649652`*^9}, 
   3.864313297462576*^9, 3.864317640173773*^9, 3.864358629893512*^9, 
   3.864398394326879*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"922ec6a5-2259-4f9c-8562-7fb067a391f2"]
}, Open  ]],

Cell["\[Mu] should be such that -1+x divides the above numerator", "Text",
 CellChangeTimes->{{3.8642771359749947`*^9, 
  3.864277156949697*^9}},ExpressionUUID->"8171d9ac-34d9-4484-bb7a-\
05482ef52eaf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"muPlus", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PolynomialRemainder", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "4"]}], "+", 
           RowBox[{"8", " ", "x", " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "-", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            SuperscriptBox["\[Lambda]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Beta]", "+", 
              RowBox[{"2", " ", "H", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Lambda]", " ",
                "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              RowBox[{"4", " ", "H", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", "\[Beta]",
                " ", "\[Lambda]", " ", "\[Mu]"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Lambda]", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[Epsilon]"}], "+", 
                 RowBox[{"x", " ", 
                  RowBox[{"(", 
                   RowBox[{"A", "+", "\[Epsilon]", "+", 
                    RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}], "+", 
                 RowBox[{"H", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "H"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["x", "2"], " ", "\[Lambda]"}]}], ")"}], 
                  " ", "\[Mu]"}], "+", 
                 RowBox[{
                  SuperscriptBox["H", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], "-", 
           RowBox[{"32", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "H"}], " ", "\[Lambda]"}], "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{"\[Beta]", "+", 
                 RowBox[{"H", " ", "\[Lambda]", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Mu]"}]}], 
                   ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], ",", "x"}], "]"}], "==", 
       "0"}], ",", "\[Mu]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"muMinus", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PolynomialRemainder", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "4"]}], "-", 
           RowBox[{"8", " ", "x", " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "-", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            SuperscriptBox["\[Lambda]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Beta]", "+", 
              RowBox[{"2", " ", "H", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Lambda]", " ",
                "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"32", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "H"}], " ", "\[Lambda]"}], "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{"\[Beta]", "+", 
                 RowBox[{"H", " ", "\[Lambda]", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Mu]"}]}], 
                   ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              RowBox[{"4", " ", "H", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", "\[Beta]",
                " ", "\[Lambda]", " ", "\[Mu]"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["\[Lambda]", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "A"}], " ", "x"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
                  "\[Epsilon]"}], "+", 
                 RowBox[{"H", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "x", " ", "\[Lambda]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "H"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["x", "2"], " ", "\[Lambda]"}]}], ")"}], 
                    " ", "\[Mu]"}], "+", 
                    RowBox[{"H", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"], " ", 
                    SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], ",", "x"}], "]"}], "==", 
       "0"}], ",", "\[Mu]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.8642764896009493`*^9, 3.864276567089525*^9}, {
   3.8642766664189796`*^9, 3.864276682947541*^9}, {3.864276958083522*^9, 
   3.864276974100775*^9}, {3.8642770336545763`*^9, 3.864277069237823*^9}, 
   3.864277164783778*^9, {3.8642868998673153`*^9, 3.864286933564728*^9}, {
   3.864312131851811*^9, 3.864312133268993*^9}, {3.8643122805726643`*^9, 
   3.86431232866*^9}, {3.864312901364444*^9, 3.864312936476317*^9}, {
   3.8643131849495573`*^9, 3.864313191041491*^9}, {3.8643133098870573`*^9, 
   3.8643133194317093`*^9}, {3.864317648225321*^9, 3.864317658506645*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"bc8bd5a8-1838-433f-b10b-ccc9781582d8"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Gamma]", "3"], "-", 
    RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
     SuperscriptBox["\[Lambda]", "2"]}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["\[Lambda]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{"A", "+", 
       RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
   RowBox[{"16", " ", "H", " ", 
    SuperscriptBox["\[Lambda]", "5"]}]]}]], "Output",
 CellChangeTimes->{
  3.864277165089775*^9, 3.864286937877316*^9, 3.864312340829945*^9, {
   3.8643129171184063`*^9, 3.864312938922553*^9}, 3.864313192078261*^9, 
   3.864313320569648*^9, 3.864317660725588*^9, 3.8643586318566103`*^9, 
   3.8643983949426727`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"804b4a0b-0521-4674-b789-442b723415cb"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[Gamma]", "3"], "-", 
   RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "+", 
   RowBox[{"8", " ", 
    SuperscriptBox["\[Lambda]", "4"], " ", 
    RowBox[{"(", 
     RowBox[{"A", "-", 
      RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
  RowBox[{"16", " ", "H", " ", 
   SuperscriptBox["\[Lambda]", "5"]}]]], "Output",
 CellChangeTimes->{
  3.864277165089775*^9, 3.864286937877316*^9, 3.864312340829945*^9, {
   3.8643129171184063`*^9, 3.864312938922553*^9}, 3.864313192078261*^9, 
   3.864313320569648*^9, 3.864317660725588*^9, 3.8643586318566103`*^9, 
   3.8643983949586906`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"99651457-a5ef-41ed-846e-b94044fbf406"]
}, Open  ]],

Cell["\<\
Let us check that we recover the result when there is no cubic coupling and \
the quadratic coupling is unity\
\>", "Text",
 CellChangeTimes->{{3.864277168293796*^9, 
  3.864277217334004*^9}},ExpressionUUID->"ce5cdc2c-1ae1-42ee-b05e-\
001c5ccbb4bf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"muPlus", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]", "->", "1"}], ",", 
     RowBox[{"\[Gamma]", "->", "0"}], ",", 
     RowBox[{"H", "->", "1"}]}], "}"}]}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"muMinus", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]", "->", "1"}], ",", 
     RowBox[{"\[Gamma]", "->", "0"}], ",", 
     RowBox[{"H", "->", "1"}]}], "}"}]}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864277071238452*^9, 3.864277092886804*^9}, {
  3.864286945404324*^9, 3.864286947049967*^9}, {3.86431236195774*^9, 
  3.864312369611364*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"a2c6bcce-1e88-4487-a9df-e7c987a320eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "-", 
  FractionBox["A", 
   RowBox[{"2", " ", "\[Lambda]"}]]}]], "Output",
 CellChangeTimes->{{3.864277071886488*^9, 3.864277093232448*^9}, 
   3.864286947721074*^9, 3.8643123713891277`*^9, 3.864313327058065*^9, 
   3.86431766496283*^9, 3.86435863571774*^9, 3.864398398081375*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"e582dd3a-ecda-4740-b916-ed1c599824ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  FractionBox["A", 
   RowBox[{"2", " ", "\[Lambda]"}]]}]], "Output",
 CellChangeTimes->{{3.864277071886488*^9, 3.864277093232448*^9}, 
   3.864286947721074*^9, 3.8643123713891277`*^9, 3.864313327058065*^9, 
   3.86431766496283*^9, 3.86435863571774*^9, 3.8643983980831747`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"1bbe72e8-2c27-4da9-9296-351c0e3c04ff"]
}, Open  ]],

Cell["\<\
That is a great success. So now we can perform the change of variable \
explicitly.\
\>", "Text",
 CellChangeTimes->{{3.864277224998146*^9, 
  3.8642772574782133`*^9}},ExpressionUUID->"ceba5f3e-a66d-4040-88bf-\
51c4ea0f6de5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"A", " ", "z"}], " ", "+", 
   RowBox[{"\[Beta]", " ", 
    SuperscriptBox["z", "2"]}], "+", 
   RowBox[{"\[Gamma]", " ", 
    SuperscriptBox["z", "3"]}], "+", 
   RowBox[{
    SuperscriptBox["\[Lambda]", "2"], " ", 
    SuperscriptBox["z", "4"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq", "[", "\[Psi]_", "]"}], ":=", 
   RowBox[{"z", "\[Function]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "''"}], "[", "z", "]"}], "+", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Epsilon]", "-", 
        RowBox[{"V", "[", "z", "]"}]}], 
       RowBox[{
        SuperscriptBox["H", "2"], " "}]], 
      RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"z", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3"}], " ", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{"6", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Beta]"}], "+", 
               RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
             SuperscriptBox["\[Lambda]", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["z", "2"], " ", 
             SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
         RowBox[{"24", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "3"]}]]}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "+", "1"}], ")"}], 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Gamma]", "3"], "-", 
          RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[Lambda]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"A", "+", 
             RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
         RowBox[{"16", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "5"]}]]}]]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"z", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "3"}], " ", 
               SuperscriptBox["\[Gamma]", "2"]}], "+", 
              RowBox[{"6", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[Beta]"}], "+", 
                 RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
               SuperscriptBox["\[Lambda]", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["z", "2"], " ", 
               SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
           RowBox[{"24", " ", "H", " ", 
            SuperscriptBox["\[Lambda]", "3"]}]]}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"z", "+", "1"}], ")"}], 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], "-", 
            RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
             SuperscriptBox["\[Lambda]", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["\[Lambda]", "4"], " ", 
             RowBox[{"(", 
              RowBox[{"A", "+", 
               RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
           RowBox[{"16", " ", "H", " ", 
            SuperscriptBox["\[Lambda]", "5"]}]]}]], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"z", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", 
            SuperscriptBox["\[Gamma]", "2"]}], "+", 
           RowBox[{"6", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Beta]"}], "+", 
              RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["z", "2"], " ", 
            SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
        RowBox[{"24", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "3"]}]]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "z"}], "+", "1"}], ")"}], 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "3"], "-", 
         RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["\[Lambda]", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"A", "-", 
            RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
        RowBox[{"16", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}]]]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"z", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], " ", 
              SuperscriptBox["\[Gamma]", "2"]}], "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Beta]"}], "+", 
                RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
              SuperscriptBox["\[Lambda]", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["z", "2"], " ", 
              SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
          RowBox[{"24", " ", "H", " ", 
           SuperscriptBox["\[Lambda]", "3"]}]]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "z"}], "+", "1"}], ")"}], 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], "-", 
           RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["\[Lambda]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{"A", "-", 
              RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
          RowBox[{"16", " ", "H", " ", 
           SuperscriptBox["\[Lambda]", "5"]}]]], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox["#1", 
            RowBox[{"#1", "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{"1", "-", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3Minus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Minus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox[
            RowBox[{"-", "#1"}], 
            RowBox[{
             RowBox[{"-", "#1"}], "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}]}], "Code",
 CellChangeTimes->{{3.864035526701899*^9, 3.864035567764186*^9}, {
   3.86403565956774*^9, 3.864035667256592*^9}, {3.864115016484351*^9, 
   3.864115017418898*^9}, {3.8641152422780733`*^9, 3.864115267812194*^9}, {
   3.864115649334899*^9, 3.864115655364806*^9}, 3.864115695927232*^9, 
   3.864116018567485*^9, 3.864117086684123*^9, {3.8641181148079357`*^9, 
   3.864118115933967*^9}, {3.864118242001134*^9, 3.86411825792118*^9}, 
   3.8641990306553793`*^9, 3.8642010609833183`*^9, 3.86420237395303*^9, {
   3.864205586724691*^9, 3.864205587664859*^9}, 3.8642078236374598`*^9, {
   3.864208608819233*^9, 3.864208610930963*^9}, {3.864269777597616*^9, 
   3.864269777795177*^9}, {3.8642708672924137`*^9, 3.8642708773561974`*^9}, {
   3.8642754046018677`*^9, 3.864275412761997*^9}, {3.8642772909887466`*^9, 
   3.86427732148457*^9}, {3.864277363257691*^9, 3.8642773643954773`*^9}, 
   3.864286339687099*^9, {3.864286963090498*^9, 3.864286991152171*^9}, {
   3.864312401282723*^9, 3.8643124124651127`*^9}, {3.864313334376279*^9, 
   3.864313408970352*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"33266b00-1840-4e26-943c-a220052c1b66"]
}, Closed]],

Cell[CellGroupData[{

Cell["Setup recurrence", "Subsubsection",
 CellChangeTimes->{{3.864531519695738*^9, 
  3.864531522493395*^9}},ExpressionUUID->"e9687498-4e52-40c3-8f96-\
b01c1467a36c"],

Cell["\<\
The coefficients of the ODE are simple polynomials now. Let us extract and \
name the coefficients of those polynomials\
\>", "Text",
 CellChangeTimes->{{3.864274994666313*^9, 
  3.864275028944138*^9}},ExpressionUUID->"4c640880-6459-4024-b91c-\
680836bbf068"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "''"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "'"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{"w", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864277353595161*^9, 3.8642773853036823`*^9}, {
  3.864313419531303*^9, 3.864313425651647*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"8c936833-1c05-4ed1-9e55-d66306293c7f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "4"}], ",", "6", ",", 
   RowBox[{"-", "4"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.864317683945923*^9, 
   3.864358640844207*^9, 3.8643984051989737`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"3f70b2b9-ea2c-4dde-a5e5-5e7db2d8e4f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"2", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"32", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "-", 
     RowBox[{"4", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "+", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"3", " ", 
       SuperscriptBox["\[Gamma]", "3"]}], "-", 
      RowBox[{"2", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "A"}], "+", "\[Beta]", "-", "\[Gamma]"}], ")"}], 
       " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"96", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "+", 
      RowBox[{"16", " ", 
       SuperscriptBox["\[Lambda]", "6"]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Lambda]", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"A", "+", 
        RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.864317683945923*^9, 
   3.864358640844207*^9, 3.8643984053394737`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"d21a7259-80ce-4539-aeb8-191840bde25b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"256", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "6"], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "A"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"48", " ", "H", " ", 
       SuperscriptBox["\[Gamma]", "3"], " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "-", 
      RowBox[{"32", " ", 
       RowBox[{"(", 
        RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "6"]}], "-", 
      RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "7"]}], "+", 
      RowBox[{"64", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", "+", "\[Beta]"}], ")"}], "2"], " ", 
       SuperscriptBox["\[Lambda]", "8"]}], "+", 
      RowBox[{"128", " ", "H", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "A"}], "+", 
         RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "9"]}], "+", 
      RowBox[{"256", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]}], ")"}]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"A", "+", "\[Beta]", "-", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "4"]}], "+", 
        RowBox[{"32", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}], "+", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Lambda]", "6"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Lambda]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"A", "+", 
           RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"128", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}], " ", 
     
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.864317683945923*^9, 
   3.864358640844207*^9, 3.864398405504036*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"6e9f1865-9d2c-4f9f-9734-58e633c97e50"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"2", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"32", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "-", 
     RowBox[{"4", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "+", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"3", " ", 
       SuperscriptBox["\[Gamma]", "3"]}], "-", 
      RowBox[{"2", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "A"}], "+", "\[Beta]", "-", "\[Gamma]"}], ")"}], 
       " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"96", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "+", 
      RowBox[{"16", " ", 
       SuperscriptBox["\[Lambda]", "6"]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Lambda]", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"A", "+", 
        RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"256", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "6"], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "A"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"48", " ", "H", " ", 
       SuperscriptBox["\[Gamma]", "3"], " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "-", 
      RowBox[{"32", " ", 
       RowBox[{"(", 
        RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "6"]}], "-", 
      RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "7"]}], "+", 
      RowBox[{"64", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", "+", "\[Beta]"}], ")"}], "2"], " ", 
       SuperscriptBox["\[Lambda]", "8"]}], "+", 
      RowBox[{"128", " ", "H", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "A"}], "+", 
         RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "9"]}], "+", 
      RowBox[{"256", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"128", " ", 
       SuperscriptBox["H", "2"], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"A", "+", "\[Beta]", "-", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "4"]}], "+", 
        RowBox[{"32", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}], "+", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Lambda]", "6"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Lambda]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"A", "+", 
           RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
       ")"}]}]}]}]}], ";", 
  RowBox[{"l", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]]}], ";"}]}], "Code",
 CellChangeTimes->{{3.8642697470308247`*^9, 3.8642697719328527`*^9}, {
   3.8642698050613003`*^9, 3.864269809694182*^9}, {3.864269920748795*^9, 
   3.864269997090382*^9}, 3.864270965722127*^9, {3.864277396585041*^9, 
   3.8642774445072193`*^9}, {3.864287010818693*^9, 3.864287054480163*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"8e4de106-f69b-4013-9ec7-508b64e01070"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "/.", "latexCouplings"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "/.", "latexCouplings"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.8643990506629972`*^9, 3.864399079726974*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"a62b3c59-2e96-4f2b-95b3-51cea4a7b7cc"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Gamma]", "3"], "-", 
    RowBox[{"2", " ", "\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
     "\[Delta]"}], "+", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}], " ", 
     SuperscriptBox["\[Delta]", "2"]}], "+", 
    RowBox[{"32", " ", "H", " ", 
     SuperscriptBox["\[Delta]", 
      RowBox[{"5", "/", "2"}]]}]}], 
   RowBox[{"8", " ", "H", " ", 
    SuperscriptBox["\[Delta]", 
     RowBox[{"5", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.864400756374359*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"cde43abd-8032-4cf6-a234-a48014f55260"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"3", " ", 
    SuperscriptBox["\[Gamma]", "3"]}], "-", 
   RowBox[{"4", " ", "\[Gamma]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
    "\[Delta]"}], "+", 
   RowBox[{"8", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", "\[Alpha]"}], "+", 
      RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
    SuperscriptBox["\[Delta]", "2"]}], "+", 
   RowBox[{"96", " ", "H", " ", 
    SuperscriptBox["\[Delta]", 
     RowBox[{"5", "/", "2"}]]}]}], 
  RowBox[{"8", " ", "H", " ", 
   SuperscriptBox["\[Delta]", 
    RowBox[{"5", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.864400756399481*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"e72b2ced-ead7-438b-a22a-37f0faac06bb"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"3", " ", 
     SuperscriptBox["\[Gamma]", "3"]}], "-", 
    RowBox[{"2", " ", "\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"6", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
     "\[Delta]"}], "+", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "\[Alpha]"}], "+", "\[Beta]", "-", "\[Gamma]"}], 
      ")"}], " ", 
     SuperscriptBox["\[Delta]", "2"]}], "+", 
    RowBox[{"96", " ", "H", " ", 
     SuperscriptBox["\[Delta]", 
      RowBox[{"5", "/", "2"}]]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["\[Delta]", "3"]}]}], 
   RowBox[{"8", " ", "H", " ", 
    SuperscriptBox["\[Delta]", 
     RowBox[{"5", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.8644007564350147`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"3d89f7d7-a359-472d-bb4c-1599c76dba51"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[Gamma]", "3"], "-", 
   RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", "\[Delta]"}], "+", 
   RowBox[{"8", " ", 
    RowBox[{"(", 
     RowBox[{"\[Alpha]", "+", 
      RowBox[{"4", " ", "H", " ", 
       SqrtBox["\[Delta]"]}]}], ")"}], " ", 
    SuperscriptBox["\[Delta]", "2"]}]}], 
  RowBox[{"8", " ", "H", " ", 
   SuperscriptBox["\[Delta]", 
    RowBox[{"5", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.86440075644879*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"779bcff1-7993-4afb-8615-bb8d9d2c96a1"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"256", " ", 
    SuperscriptBox["H", "2"], " ", 
    SuperscriptBox["\[Delta]", "5"]}]], 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[Gamma]", "6"], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Gamma]", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
     "\[Delta]"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Gamma]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox["\[Beta]", "2"]}], "+", 
       RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "\[Alpha]"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}],
      " ", 
     SuperscriptBox["\[Delta]", "2"]}], "+", 
    RowBox[{"48", " ", "H", " ", 
     SuperscriptBox["\[Gamma]", "3"], " ", 
     SuperscriptBox["\[Delta]", 
      RowBox[{"5", "/", "2"}]]}], "-", 
    RowBox[{"32", " ", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
     SuperscriptBox["\[Delta]", "3"]}], "-", 
    RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
     SuperscriptBox["\[Delta]", 
      RowBox[{"7", "/", "2"}]]}], "+", 
    RowBox[{"64", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}], "2"], " ", 
     SuperscriptBox["\[Delta]", "4"]}], "+", 
    RowBox[{"128", " ", "H", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "\[Alpha]"}], "+", 
       RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
     SuperscriptBox["\[Delta]", 
      RowBox[{"9", "/", "2"}]]}], "+", 
    RowBox[{"256", " ", 
     SuperscriptBox["\[Delta]", "5"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.864400756585198*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"e5e5baf3-7b98-4c06-a4eb-0b900a84e5a1"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", "\[Delta]"}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "+", 
         RowBox[{"2", " ", "H", " ", 
          SqrtBox["\[Delta]"]}]}], ")"}], " ", 
       SuperscriptBox["\[Delta]", "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", "\[Delta]"}], "-", 
      RowBox[{"4", " ", "\[Gamma]", " ", "\[Delta]", " ", 
       RowBox[{"(", 
        RowBox[{"\[Beta]", "+", 
         RowBox[{"2", " ", "\[Delta]"}]}], ")"}]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[Delta]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "+", "\[Beta]", "+", 
         RowBox[{"4", " ", "H", " ", 
          SqrtBox["\[Delta]"]}], "+", 
         RowBox[{"2", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], 
   RowBox[{"128", " ", 
    SuperscriptBox["H", "2"], " ", 
    SuperscriptBox["\[Delta]", "5"]}]]}]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.8644007566702538`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"e955d5f8-e2d5-4a22-bba7-f3411f366383"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", "\[Delta]"}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"\[Alpha]", "+", 
        RowBox[{"2", " ", "H", " ", 
         SqrtBox["\[Delta]"]}]}], ")"}], " ", 
      SuperscriptBox["\[Delta]", "2"]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", "\[Delta]"}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"\[Alpha]", "+", 
        RowBox[{"4", " ", "H", " ", 
         SqrtBox["\[Delta]"]}]}], ")"}], " ", 
      SuperscriptBox["\[Delta]", "2"]}]}], ")"}]}], 
  RowBox[{"256", " ", 
   SuperscriptBox["H", "2"], " ", 
   SuperscriptBox["\[Delta]", "5"]}]]], "Output",
 CellChangeTimes->{{3.8643990609646053`*^9, 3.864399080742661*^9}, 
   3.864399157850107*^9, 3.8644007566826143`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"1dc4123d-4b27-4c8a-9c8d-bb5d4085bccd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "''"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "'"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{"w", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864277353595161*^9, 3.8642773853036823`*^9}, {
  3.864313419531303*^9, 3.864313454870009*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"a8ba9d02-a284-4225-8897-8252a381dffe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "4"}], ",", "6", ",", 
   RowBox[{"-", "4"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.864317698224139*^9, 3.864358644440229*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"7ac3630c-de46-4eae-ae9a-278edb748dba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"32", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "-", 
     RowBox[{"4", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "+", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "-", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], 
       ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}], "-", 
     RowBox[{"16", " ", 
      SuperscriptBox["\[Lambda]", "6"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[Lambda]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"A", "-", 
         RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.864317698224139*^9, 3.864358644621873*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"a37f1060-3fb8-4b80-926f-1170f0d4900a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "6"], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Gamma]", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Gamma]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["\[Beta]", "2"]}], "-", 
        RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "A"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"48", " ", "H", " ", 
      SuperscriptBox["\[Gamma]", "3"], " ", 
      SuperscriptBox["\[Lambda]", "5"]}], "-", 
     RowBox[{"32", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "A"}], "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "6"]}], "-", 
     RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "7"]}], "+", 
     RowBox[{"64", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"A", "-", "\[Beta]"}], ")"}], "2"], " ", 
      SuperscriptBox["\[Lambda]", "8"]}], "+", 
     RowBox[{"128", " ", "H", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "9"]}], "+", 
     RowBox[{"256", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "+", 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
         " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], ")"}], " ", 
         
         SuperscriptBox["\[Lambda]", "4"]}], "-", 
        RowBox[{"32", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Lambda]", "6"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Lambda]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"A", "-", 
           RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"128", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}], " ", 
     
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.864317698224139*^9, 3.8643586448405027`*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"a06afa03-843d-40fb-ad9d-a38d07d3ee10"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bb", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dd", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ff", "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"32", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gg", "=", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "-", 
     RowBox[{"4", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "+", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hh", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "-", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], 
       ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}], "-", 
     RowBox[{"16", " ", 
      SuperscriptBox["\[Lambda]", "6"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ii", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[Lambda]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"A", "-", 
         RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jj", "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"256", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "6"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Beta]", "2"]}], "-", 
         RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "A"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "-", 
      RowBox[{"48", " ", "H", " ", 
       SuperscriptBox["\[Gamma]", "3"], " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "-", 
      RowBox[{"32", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "A"}], "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "6"]}], "-", 
      RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "7"]}], "+", 
      RowBox[{"64", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", "-", "\[Beta]"}], ")"}], "2"], " ", 
       SuperscriptBox["\[Lambda]", "8"]}], "+", 
      RowBox[{"128", " ", "H", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "A"}], "+", 
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "9"]}], "+", 
      RowBox[{"256", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kk", "=", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"128", " ", 
       SuperscriptBox["H", "2"], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "+", 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
         " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "4"]}], "-", 
        RowBox[{"32", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Lambda]", "6"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Lambda]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"A", "-", 
           RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
       ")"}]}]}]}]}], ";", 
  RowBox[{"ll", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]]}], ";"}]}], "Code",
 CellChangeTimes->{{3.8642697470308247`*^9, 3.8642697719328527`*^9}, {
   3.8642698050613003`*^9, 3.864269809694182*^9}, {3.864269920748795*^9, 
   3.864269997090382*^9}, 3.864270965722127*^9, {3.864277396585041*^9, 
   3.8642774445072193`*^9}, {3.864287010818693*^9, 3.864287054480163*^9}, {
   3.864313470139778*^9, 3.864313555327423*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"bba9a1c4-1d18-4a26-8ab3-9e2229071852"],

Cell[TextData[{
 "Ansatz for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"w", 
     RowBox[{"(", "x", ")"}]}], "=", 
    RowBox[{"\[Sum]", 
     RowBox[{
      SubscriptBox["\[Alpha]", "n"], 
      SuperscriptBox["x", "n"]}]}]}], TraditionalForm]],ExpressionUUID->
  "cbaac105-2cb4-4761-b2be-8853b3d81809"],
 ", we get the following difference equations, exactly the same as in the \
previous section because it is for generic coefficients abcdefghijkl"
}], "Text",
 CellChangeTimes->{{3.8642750419140577`*^9, 3.864275053063743*^9}, {
  3.864275110366568*^9, 3.8642751370634737`*^9}, {3.864277463032014*^9, 
  3.864277495417461*^9}},ExpressionUUID->"60006717-d4f0-49fd-9749-\
d28b32186661"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"diffEqPlus", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"n", "+", "2"}], ")"}], "a", " ", 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "+", "2"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "b"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "f"}]}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "+", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "n", " ", "c"}], "+", 
      RowBox[{"n", " ", "g"}], "+", "j"}], ")"}], 
    SubscriptBox["\[Alpha]", "n"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "d"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "h"}], "+", "k"}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "-", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "3"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "e"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "i"}], "+", "l"}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "-", "2"}]]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffEqMinus", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"n", "+", "2"}], ")"}], "aa", " ", 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "+", "2"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "bb"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "ff"}]}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "+", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "n", " ", "cc"}], "+", 
      RowBox[{"n", " ", "gg"}], "+", "jj"}], ")"}], 
    SubscriptBox["\[Delta]", "n"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "dd"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "hh"}], "+", "kk"}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "-", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "3"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "ee"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "ii"}], "+", "ll"}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "-", "2"}]]}]}]}]}], "Code",
 CellChangeTimes->{{3.864270018911315*^9, 3.8642702462416697`*^9}, {
  3.8642705156994133`*^9, 3.8642705159562902`*^9}, {3.864313518020338*^9, 
  3.864313519482671*^9}, {3.864313560863084*^9, 3.864313611425284*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"fbf7c6cd-954c-4a1e-b761-d9403fc7d7ae"],

Cell[TextData[{
 "Now we need to generalize the choice of initial conditions C0 and C1 in \
order to be able to extract the even level energy spectrum, and in particular \
the ground state energy.\nLet us recall that for the previous potential (\
\[Gamma]->0, \[Beta]->1), we had C0=1 and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C1", "=", 
    RowBox[{"1", "+", 
     FractionBox["1", 
      RowBox[{"2", "\[Lambda]"}]]}]}], TraditionalForm]],ExpressionUUID->
  "2051da58-ecc0-4f63-915a-1c6ae8372c38"],
 "."
}], "Text",
 CellChangeTimes->{{3.864275145180252*^9, 3.864275191066702*^9}, {
  3.864277514040395*^9, 3.86427757220188*^9}, {3.8642777223928633`*^9, 
  3.8642778004261217`*^9}, {3.8642862975920963`*^9, 
  3.864286314556131*^9}},ExpressionUUID->"11cc14b3-1299-4c1d-aeb7-\
00492ad7f768"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"psiPlus", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"z", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "+", 
         RowBox[{"6", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Beta]"}], "+", 
            RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["z", "2"], " ", 
          SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
      RowBox[{"24", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "3"]}]]}], "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "+", "1"}], ")"}], 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]]}]], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Alpha]", "0"], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], 
      FractionBox["z", 
       RowBox[{"z", "+", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["z", 
         RowBox[{"z", "+", "1"}]], ")"}], "2"]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiMinus", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Exp", "[", 
    FractionBox[
     RowBox[{"z", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{"6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Beta]"}], "+", 
           RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["z", "2"], " ", 
         SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
     RowBox[{"24", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "3"]}]], "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "z"}], "+", "1"}], ")"}], 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[Gamma]", "3"]}], "+", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "A"}], "+", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]]}]], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Delta]", "0"], "+", 
     RowBox[{
      SubscriptBox["\[Delta]", "1"], 
      FractionBox[
       RowBox[{"-", "z"}], 
       RowBox[{
        RowBox[{"-", "z"}], "+", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[Delta]", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"-", "z"}], 
         RowBox[{
          RowBox[{"-", "z"}], "+", "1"}]], ")"}], "2"]}]}], 
    ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.864286324723585*^9, 3.864286433353557*^9}, {
   3.8642889704779167`*^9, 3.8642890116523952`*^9}, 3.8642890470751457`*^9, {
   3.864289083251052*^9, 3.86428912995544*^9}, {3.864289237638175*^9, 
   3.864289254868375*^9}, {3.864313707915181*^9, 3.864313713541687*^9}, {
   3.864313881883119*^9, 3.864313887220744*^9}, {3.864317721805814*^9, 
   3.864317725550482*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"7cd8a1e6-a867-45c1-8c9c-b6914c1b1b70"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"psiPlus", "'"}], "[", "0", "]"}], "/.", "rule"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"psiMinus", "'"}], "[", "0", "]"}], "/.", "rule"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.8642864434371567`*^9, 3.864286462633073*^9}, {
  3.864289139123407*^9, 3.864289156917902*^9}, {3.864289223876636*^9, 
  3.864289228321069*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"d1664fba-5159-4fbb-b119-d7acbcf15af0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "A", "+", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
     SubscriptBox["\[Alpha]", "0"]}], 
    RowBox[{"2", " ", "\[Lambda]"}]]}], "+", 
  SubscriptBox["\[Alpha]", "1"]}]], "Output",
 CellChangeTimes->{{3.864286450123785*^9, 3.8642864630254097`*^9}, 
   3.864287064388155*^9, {3.864289140413212*^9, 3.864289159117506*^9}, {
   3.8642892288595867`*^9, 3.864289258649302*^9}, 3.86431389030669*^9, 
   3.864317732172204*^9, 3.8643586500678988`*^9, 3.864446550293253*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"b30999df-d06f-44df-a4fb-95610785319e"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "A", "+", 
      RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
    SubscriptBox["\[Delta]", "0"]}], 
   RowBox[{"2", " ", "\[Lambda]"}]], "-", 
  SubscriptBox["\[Delta]", "1"]}]], "Output",
 CellChangeTimes->{{3.864286450123785*^9, 3.8642864630254097`*^9}, 
   3.864287064388155*^9, {3.864289140413212*^9, 3.864289159117506*^9}, {
   3.8642892288595867`*^9, 3.864289258649302*^9}, 3.86431389030669*^9, 
   3.864317732172204*^9, 3.8643586500678988`*^9, 3.864446550307499*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"42f0e254-8815-46b8-8648-71079399d491"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"psiPlus", "'"}], "[", "0", "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"psiMinus", "'"}], "[", "0", "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.86428941613244*^9, 3.864289417586679*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"f370c1c6-3320-4a08-b7c7-dcfe4553ed4f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"2", " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "4"]}], "+", 
       RowBox[{"16", " ", "H", " ", 
        SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
     SubscriptBox["\[Alpha]", "0"]}], 
    RowBox[{"16", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], "+", 
  SubscriptBox["\[Alpha]", "1"]}]], "Output",
 CellChangeTimes->{3.864289418474496*^9, 3.864317827419479*^9, 
  3.8643586517049227`*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"0b5f9636-c4a0-4e2b-b758-f6e227b10e97"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "+", 
       RowBox[{"2", " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
        " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "4"]}], "-", 
       RowBox[{"16", " ", "H", " ", 
        SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
     SubscriptBox["\[Delta]", "0"]}], 
    RowBox[{"16", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], "-", 
  SubscriptBox["\[Delta]", "1"]}]], "Output",
 CellChangeTimes->{3.864289418474496*^9, 3.864317827419479*^9, 
  3.864358651786807*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"c19e0f7a-6a8a-4e04-8f7b-bcd70ec076f4"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"C0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"C1", "=", 
   RowBox[{"S", "+", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Gamma]", "3"], "-", 
         RowBox[{"2", " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          RowBox[{"(", 
           RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "4"]}], "+", 
         RowBox[{"16", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
       SubscriptBox["\[Alpha]", "0"]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]], "C0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CC0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CC1", "=", 
   RowBox[{
    RowBox[{"-", "S"}], "-", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Gamma]", "3"], "+", 
         RowBox[{"2", " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
          " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          RowBox[{"(", 
           RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "4"]}], "-", 
         RowBox[{"16", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "0"]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]], "CC0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialEqPlus", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Alpha]", "0"], "-", "C0"}], ",", 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], "-", "C1"}], ",", 
     RowBox[{
      RowBox[{"2", "a", " ", 
       SubscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"f", " ", 
       SubscriptBox["\[Alpha]", "1"]}], "+", 
      RowBox[{"j", " ", 
       SubscriptBox["\[Alpha]", "0"]}]}], ",", 
     RowBox[{
      RowBox[{"6", "a", " ", 
       SubscriptBox["\[Alpha]", "3"]}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"b", "+", "f"}], ")"}], 
       SubscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"g", "+", "j"}], ")"}], 
       SubscriptBox["\[Alpha]", "1"]}], "+", 
      RowBox[{"k", " ", 
       SubscriptBox["\[Alpha]", "0"]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialEqMinus", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Delta]", "0"], "-", "CC0"}], ",", 
     RowBox[{
      SubscriptBox["\[Delta]", "1"], "-", "CC1"}], ",", 
     RowBox[{
      RowBox[{"2", "aa", " ", 
       SubscriptBox["\[Delta]", "2"]}], "+", 
      RowBox[{"ff", " ", 
       SubscriptBox["\[Delta]", "1"]}], "+", 
      RowBox[{"jj", " ", 
       SubscriptBox["\[Delta]", "0"]}]}], ",", 
     RowBox[{
      RowBox[{"6", "aa", " ", 
       SubscriptBox["\[Delta]", "3"]}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"bb", "+", "ff"}], ")"}], 
       SubscriptBox["\[Delta]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"gg", "+", "jj"}], ")"}], 
       SubscriptBox["\[Delta]", "1"]}], "+", 
      RowBox[{"kk", " ", 
       SubscriptBox["\[Delta]", "0"]}]}]}], "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.864270380769575*^9, 3.864270544385949*^9}, {
  3.864270681732925*^9, 3.8642707092690983`*^9}, {3.864277584361083*^9, 
  3.864277623001809*^9}, {3.864277788826624*^9, 3.864277805818914*^9}, {
  3.8643148390180197`*^9, 3.864314996387719*^9}, {3.864315370805738*^9, 
  3.864315370870441*^9}, {3.8643154226625013`*^9, 3.864315422935775*^9}, {
  3.8643161033803577`*^9, 3.8643161147858477`*^9}, {3.864316764706365*^9, 
  3.864316769043502*^9}, {3.864316802577961*^9, 3.864316820537896*^9}, {
  3.8643179116870728`*^9, 3.864317931324974*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"bca1ef3b-66a9-41d9-8196-5aab1bd979ab"]
}, Closed]],

Cell[CellGroupData[{

Cell["Solve recurrence", "Subsubsection",
 CellChangeTimes->{{3.864531533293716*^9, 
  3.8645315366840963`*^9}},ExpressionUUID->"6c03e5ae-951f-4455-8880-\
6529b8f93feb"],

Cell["\<\
We solve for the coefficients of the series expansion for a large value of n\
\>", "Text",
 CellChangeTimes->{{3.8642751963474607`*^9, 
  3.8642752191768208`*^9}},ExpressionUUID->"ffcadf0a-4dbf-4025-814e-\
8971b9ff2228"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nmax", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]largePlus", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"initialEqPlus", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"diffEqPlus", "[", "n", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "2", ",", 
              RowBox[{"Nmax", "-", "2"}]}], "}"}]}], "]"}]}], "]"}], "==", 
        "0"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["\[Alpha]", "m"], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"Nmax", "+", "1"}], ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]largeMinus", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"initialEqMinus", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"diffEqMinus", "[", "n", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "2", ",", 
              RowBox[{"Nmax", "-", "2"}]}], "}"}]}], "]"}]}], "]"}], "==", 
        "0"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["\[Delta]", "m"], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"Nmax", "+", "1"}], ",", "2"}], "]"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->CompressedData["
1:eJwd0F1I03EYxfG/cwTNsOWdiYoYJopFNivFRpsSpEaiS5jLojUpk7VYhQSF
pilm6tSFzRd8KVPLai4tTEWlvHFuNYbMlwwtSaaMDcTUizb7nefi8Ln+ngil
Jiufx3HccTZYYRKNlZpdkpBRyyRsrl5fgBOHjT/gsPblLxgdenEdJk15PNBn
1+zCrE+bwjLmRraXLC7ipcDcLTe590FwBhRETMnhpWvfV+DBozNkV+FjnYF5
UrSmhzKb4zV01Bx6A0+p1BNQXK8lY3fct5uYje78u1C0k2eZY1bXq8ilYJ5i
hdkSKCADzTM9kOMre+GowGCBCZk5VpihHnbCos1x0hnpPfeH2X2WnwaVe+48
hGc098hGe48JBnVuD8Bv8U9tUH6sllyOE/St4ZfWL+SGYs0Kcwwe8sXlzKFd
Zof0yQiUtM2n+U27JA3tAenQtfxRAW+UjpOy575i2JzCL4FxjZ162O98Rf5N
nm2DB7yLZEdIzFeYW5NATgeprvKYR8Jryd+hVYVQHVZHWsXyOvisLI8MXHK1
Q3uYhxTe9w1A8SpvECr1iU0xzGjdadK8z9gF3xd8IC1X+j7DyY4B0lQV74ac
fyKZPaYUv2VGpXJS6HdTOw93jdIFGPBvews2dPO24WpluBdmtESRFUPJ/HfM
2Mp0MjUzKQeK3RIyWjjWACP94/RQpjVLZ9H100FqNSWP4GB9P3l+rvzWInr3
68iIArkNjpy4TvZGca0+5oVyIfkfyLPP4Q==
  "],
 CellLabel->"In[45]:=",ExpressionUUID->"800309c8-c87d-4c44-b6bf-42d5f0f86b32"],

Cell["\<\
Check that we recover the result for the simpler potential.
The first method we use is by numerically solving for S and \[Epsilon] using \
the vanishing of the positive and negative coefficients. With proper \
initialization, it gives us the ground state energy.\
\>", "Text",
 CellChangeTimes->{{3.864275243849395*^9, 3.864275278617496*^9}, {
  3.864317968659535*^9, 3.864317980809977*^9}, {3.8650114424388237`*^9, 
  3.865011498854601*^9}},ExpressionUUID->"f087c32a-614f-4602-b796-\
8535b1c16195"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Alpha]largePlus", ",", "\[Alpha]largeMinus"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", "->", "1"}], ",", 
      RowBox[{"A", "->", "1.0"}], ",", 
      RowBox[{"\[Gamma]", "->", "0"}], ",", 
      RowBox[{"H", "->", "1"}], ",", 
      RowBox[{"\[Beta]", "->", "1"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1.0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", 
       RowBox[{"-", "10"}]}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.864272516042613*^9, 3.864272581235248*^9}, {
   3.864272630956184*^9, 3.864272652997024*^9}, {3.8643152302549*^9, 
   3.864315334743429*^9}, {3.864315388282217*^9, 3.864315388370914*^9}, {
   3.864315478660943*^9, 3.864315500630616*^9}, {3.8643161278235292`*^9, 
   3.8643161552456636`*^9}, {3.864316829844284*^9, 3.864316829982398*^9}, {
   3.864317021269602*^9, 3.864317096679879*^9}, {3.864317220413212*^9, 
   3.864317231961761*^9}, 3.864317298780168*^9, {3.864317334566575*^9, 
   3.864317342387321*^9}, {3.864318011281124*^9, 3.864318026607298*^9}, {
   3.8648152350966997`*^9, 3.864815235334029*^9}, {3.8648152886433153`*^9, 
   3.864815290182455*^9}, {3.864815350419099*^9, 3.864815350530383*^9}, 
   3.864815457195801*^9, {3.864815506360507*^9, 3.864815507751213*^9}, {
   3.864815553078826*^9, 3.864815562151266*^9}, {3.864877208457326*^9, 
   3.864877213672748*^9}, {3.864879694782627*^9, 3.86487977377365*^9}, {
   3.864880429843172*^9, 3.8648804334743853`*^9}, {3.86488125389849*^9, 
   3.8648812893362513`*^9}, {3.864882149792671*^9, 3.864882160029595*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"5e86adfd-ce6d-4ad4-bda0-153c6bc22cd5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Epsilon]", "\[Rule]", "1.2984329350142854`"}], ",", 
   RowBox[{"S", "\[Rule]", 
    RowBox[{"-", "0.3184263445999832`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864272582474341*^9, 3.864272653692486*^9}, 
   3.8642727233006563`*^9, {3.864315296586309*^9, 3.864315344630843*^9}, {
   3.864315378405192*^9, 3.864315417696125*^9}, {3.864315457418236*^9, 
   3.864315501130307*^9}, {3.864316143990018*^9, 3.864316155816534*^9}, {
   3.864316791724887*^9, 3.8643168537145967`*^9}, {3.8643170232770653`*^9, 
   3.864317097691369*^9}, {3.86431722205857*^9, 3.864317232530428*^9}, 
   3.864317299287344*^9, {3.864317335018508*^9, 3.8643173428797483`*^9}, 
   3.86431806306894*^9, 3.86481515433778*^9, 3.864815276172928*^9, 
   3.864815330930966*^9, 3.864815395054429*^9, 3.864815497476426*^9, 
   3.864815548890336*^9, 3.864815603244605*^9, 3.86487730937459*^9, 
   3.864879622209888*^9, {3.864879666309824*^9, 3.8648797755261183`*^9}, 
   3.864880435816009*^9, 3.864880958222632*^9, 3.864881094787812*^9, 
   3.8648811347803373`*^9, 3.864881225823657*^9, {3.86488125997513*^9, 
   3.864881292611203*^9}, {3.864882154639968*^9, 3.864882160641786*^9}, 
   3.864882628543458*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"321b80a3-66ca-44eb-abbd-cfb74336156a"]
}, Open  ]],

Cell["\<\
The second method we use is much more efficient. It consists in solving for S \
using one of the two equations (it so happens that the dependence on S is \
just linear), and plug it back in the other equation. This gives us a \
rational function of \[Epsilon], the vanishing of which being ensured by the \
vanishing of its numerator. The numerator is a polynomial of a given degree, \
hence giving us access to quite a nice number of energy levels in addition to \
the ground state energy.
The first levels fit perfectly with the paper of Lay and Bay. The discrepancy \
in the other levels is probably due to the fact that one has to take further \
coefficients in the series expansions.\
\>", "Text",
 CellChangeTimes->{{3.86501150286266*^9, 
  3.865011702989729*^9}},ExpressionUUID->"98d4ae08-619f-4e2c-8407-\
286657de6f13"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]Plus", "=", 
   RowBox[{"\[Alpha]largePlus", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", "->", "1"}], ",", 
      RowBox[{"A", "->", "1.0"}], ",", 
      RowBox[{"\[Gamma]", "->", "0"}], ",", 
      RowBox[{"H", "->", "1"}], ",", 
      RowBox[{"\[Beta]", "->", "1"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]Minus", "=", 
   RowBox[{"\[Alpha]largeMinus", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", "->", "1"}], ",", 
      RowBox[{"A", "->", "1.0"}], ",", 
      RowBox[{"\[Gamma]", "->", "0"}], ",", 
      RowBox[{"H", "->", "1"}], ",", 
      RowBox[{"\[Beta]", "->", "1"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rational", "=", 
   RowBox[{"\[Alpha]Plus", "/.", 
    RowBox[{"S", "->", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"\[Alpha]Minus", "==", "0"}], ",", "S"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"num", "=", 
   RowBox[{
    RowBox[{"rational", "//", "Together"}], "//", "Numerator"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"num", "==", "0"}], ",", "\[Epsilon]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.865011272214334*^9, 3.865011354066938*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"ca4c6747-0808-459a-999a-137a50e43e28"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "1.2992147129802176`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "4.6160637724680225`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "8.651623464456057`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "13.182833863900498`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "17.58224004199639`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "22.715954340228716`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "32.41631230403714`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "51.033468160772486`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "83.37846751786722`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "137.24488050178743`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "225.62131502075422`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "370.6120813282369`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "611.6022773809508`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "1023.5986676023903`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "1763.3015603665547`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "3204.136581818244`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "6430.560228813639`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "15821.910315675828`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "66870.54810843477`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.865011359625132*^9, 3.865048399976865*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"5166facb-d7c1-4de8-b94a-35f846271ac8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Export everything needed for python", "Subsubsection",
 CellChangeTimes->{{3.865049129318329*^9, 3.865049139510181*^9}, {
  3.8650493503723793`*^9, 
  3.865049370406671*^9}},ExpressionUUID->"638d987a-5b5c-4123-9625-\
2b7f7085a3ef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "saveDir", "=", 
   "\"\</home/sarkis/git_repositories/Quartic-Potential/archived/output_\
mathematica/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<plusNumerator.py\>\""}], ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]largePlus", "/.", "latexCouplingsExplicit"}], "//", 
       "Together"}], "//", "Numerator"}], ",", " ", "FortranForm"}], "]"}], 
   ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<plusDenominator.py\>\""}], ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]largePlus", "/.", "latexCouplingsExplicit"}], "//", 
       "Together"}], "//", "Denominator"}], ",", " ", "FortranForm"}], "]"}], 
   ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<minusNumerator.py\>\""}], ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]largeMinus", "/.", "latexCouplingsExplicit"}], "//", 
       "Together"}], "//", "Numerator"}], ",", " ", "FortranForm"}], "]"}], 
   ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<minusDenominator.py\>\""}], ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]largeMinus", "/.", "latexCouplingsExplicit"}], "//", 
       "Together"}], "//", "Denominator"}], ",", " ", "FortranForm"}], "]"}], 
   ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.865049542818655*^9},ExpressionUUID->"9c7623ef-a6fb-48c3-8c40-\
c7b35078f494"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]Plus", "=", 
   RowBox[{"\[Alpha]largePlus", "/.", "latexCouplingsExplicit"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]Minus", "=", 
   RowBox[{"\[Alpha]largeMinus", "/.", "latexCouplingsExplicit"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[51]:=",ExpressionUUID->"5ad06055-8ea9-46ea-8ead-fc915e00bbf9"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"Level", "[", 
     RowBox[{"\[Alpha]Minus", ",", 
      RowBox[{"-", "5"}]}], "]"}], "//", "Tally"}], "//", 
   RowBox[{"MaximalBy", "[", "Last", "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.86505475240481*^9, 3.865054766475773*^9}, 
   3.865058517834971*^9},ExpressionUUID->"72edcd1b-ae1e-4897-9224-\
23c9b2be9fed"],

Cell["\<\
The equation for S is just linear, so to help mathematica let\
\[CloseCurlyQuote]s just extract the coefficients and solve manually\
\>", "Text",
 CellChangeTimes->{{3.865058524939623*^9, 
  3.865058560660483*^9}},ExpressionUUID->"fb11cd44-ec9d-47bf-addf-\
33d11671cacb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coefS", "=", 
   RowBox[{"CoefficientList", "[", 
    RowBox[{"\[Alpha]Minus", ",", "S"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865055020831924*^9, 3.8650550257140303`*^9}, {
  3.865057742084869*^9, 3.865057773988196*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"4bb8c281-cd9f-4a0c-900a-62049ef38e1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "coefS", "]"}]], "Input",
 CellChangeTimes->{{3.865058327368753*^9, 3.865058351923066*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"e321b3c9-2ca6-46ad-85ba-6c617dd21e0d"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.8650583377595654`*^9, 3.865058352680169*^9}},
 CellLabel->"Out[90]=",ExpressionUUID->"80738758-8b73-4024-a9e3-9d3fc368f448"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"solS", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"coefS", "[", 
      RowBox[{"[", "1", "]"}], "]"}], 
     RowBox[{"coefS", "[", 
      RowBox[{"[", "2", "]"}], "]"}]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865058388936252*^9, 3.8650584117160997`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"65d49684-88aa-401c-a74e-db3bc3fcfb4e"],

Cell["We plug back in the other equation", "Text",
 CellChangeTimes->{{3.86506779724603*^9, 
  3.865067802862265*^9}},ExpressionUUID->"fb9c66e6-5c00-48f5-8ed5-\
2326f350e161"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rational", "=", 
   RowBox[{"\[Alpha]Plus", "/.", 
    RowBox[{"S", "->", "solS"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865058489476781*^9, 3.865058490468895*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"471b429a-0e66-4009-90f2-f5b1880ee288"],

Cell["\<\
Put in fraction form (this take A LOT of time, a few hours for Nmax=20)\
\>", "Text",
 CellChangeTimes->{{3.865067810638118*^9, 
  3.86506783393408*^9}},ExpressionUUID->"99e731d5-356a-4818-854a-\
9a95ceace031"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rational2", "=", " ", 
   RowBox[{"rational", "//", "Together"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865058567866859*^9, 3.8650585914946737`*^9}, 
   3.865058762596073*^9, {3.86505896233062*^9, 3.865058975175508*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"3add8282-3571-43d2-9b5a-219513b9ef94"],

Cell["\<\
Extract the numerator and denominator separately and save them both in \
mathematica notebooks and in text files in python format\
\>", "Text",
 CellChangeTimes->{{3.865067848686243*^9, 
  3.8650678804945307`*^9}},ExpressionUUID->"356dca39-f246-43f3-b2e9-\
6f3b4d44abe9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"num", "=", 
   RowBox[{"rational2", "//", "Numerator"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8650648751010723`*^9, 3.865064894281478*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"546d84d5-d6da-45e8-a722-6833686a9cd6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"den", "=", 
   RowBox[{"rational2", "//", "Denominator"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865065921810235*^9, 3.865065930708765*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"9b8245d4-c711-4464-8e79-d462ef52ff86"],

Cell[BoxData[
 RowBox[{"num", ">>", 
  "\"\</home/sarkis/git_repositories/Quartic-Potential/mathematica/\
rationalNumerator_N20.m\>\""}]], "Input",
 CellChangeTimes->{{3.8049956481827393`*^9, 3.80499572195166*^9}, {
   3.804995829955764*^9, 3.804995859025194*^9}, 3.8130286138999243`*^9, {
   3.8130286915868*^9, 3.813028737791086*^9}, {3.813029052533731*^9, 
   3.813029066013687*^9}, {3.813029156597683*^9, 3.813029157915803*^9}, {
   3.8650676462182817`*^9, 3.865067647210259*^9}, {3.86506768304077*^9, 
   3.8650676986504393`*^9}, {3.865067750844502*^9, 
   3.865067752058529*^9}},ExpressionUUID->"02fb20e3-5dd4-4278-b4a7-\
b45b0c90a918"],

Cell[BoxData[
 RowBox[{"den", ">>", 
  "\"\</home/sarkis/git_repositories/Quartic-Potential/mathematica/\
rationalDenominator_N20.m\>\""}]], "Input",
 CellChangeTimes->{{3.865067737674655*^9, 3.865067747866434*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"d48572de-a28a-4636-8b6a-b738428d075b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "saveDir", "=", 
   "\"\</home/sarkis/git_repositories/Quartic-Potential/archived/output_\
mathematica/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator.py\>\""}], ",", 
   RowBox[{"ToString", "[", 
    RowBox[{"num", ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator.py\>\""}], ",", 
   RowBox[{"ToString", "[", 
    RowBox[{"den", ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.865048925529873*^9, 3.865048954938983*^9}, {
   3.865049055388707*^9, 3.8650490767941303`*^9}, {3.865058582518388*^9, 
   3.8650585830777273`*^9}, {3.865058666146372*^9, 3.865058667970311*^9}, 
   3.865064965713005*^9, {3.865065910875408*^9, 3.865065950178067*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"195ecbb2-57bd-4edf-8b9b-b4d2e73f2b3b"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica/rationalNumerator.py\"\>"], "Output",
 CellChangeTimes->{3.865065872298984*^9, 3.865065924263405*^9, 
  3.8650659588139467`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"c04ccea7-3f71-49a6-a362-3c7941fe50f6"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica/rationalDenominator.py\"\>"], "Output",
 CellChangeTimes->{3.865065872298984*^9, 3.865065924263405*^9, 
  3.865065959284857*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"a5e731a1-238c-4e33-8e94-e313f1588c04"]
}, Open  ]],

Cell["\<\
We double check that no errors occurred during the computation\
\>", "Text",
 CellChangeTimes->{{3.8650678878226013`*^9, 
  3.865067912062971*^9}},ExpressionUUID->"edaf6acb-d476-442f-b34b-\
358bfe859af0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"specialNum", "=", 
   RowBox[{"num", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"delta", "->", "1"}], ",", 
      RowBox[{"alpha", "->", "1.0"}], ",", 
      RowBox[{"gamma", "->", "0"}], ",", 
      RowBox[{"H", "->", "1"}], ",", 
      RowBox[{"beta", "->", "1"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865066048404996*^9, 3.8650660610933113`*^9}, {
  3.865066095797245*^9, 3.865066111141767*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"f63b7536-f49c-4c30-8c63-550f04584996"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"specialNum", "==", "0"}], ",", "epsilon"}], "]"}]], "Input",
 CellChangeTimes->{{3.865066118586887*^9, 3.86506612757345*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"61dfab4c-78aa-433c-ad72-6684c6b030e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1.2992147129802134`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "4.616063772468295`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "8.651623464453854`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "13.182833863903042`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "17.58224004202428`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "22.715954340155275`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "32.41631230411431`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "51.033468160703684`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "83.37846751791798`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "137.24488050176112`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "225.62131502077713`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "370.6120813282067`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "611.6022773810004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1023.5986676022744`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1763.3015603667457`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "3204.1365818181494`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "6430.5602288136715`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "15821.910315675823`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "66870.5481084348`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.865066131339369*^9, 3.865148502075282*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"c14c9886-7ad1-4a7e-9bdc-d42c3eb8f12d"]
}, Open  ]],

Cell["\<\
Exporting separately the coefficients of the \[Epsilon] polynomial to help \
numpy\
\>", "Text",
 CellChangeTimes->{{3.86506858641536*^9, 3.8650685987353907`*^9}, {
  3.865068982645403*^9, 3.865068989221512*^9}, {3.8650696229826527`*^9, 
  3.8650696445693398`*^9}},ExpressionUUID->"d767ac92-e93c-406c-9a2c-\
62ac80e515c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"num", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sarkis/git_repositories/Quartic-Potential/mathematica/\
rationalNumerator_N20.m\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"den", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sarkis/git_repositories/Quartic-Potential/mathematica/\
rationalDenominator_N20.m\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8650686585939207`*^9, 3.8650686858116617`*^9}, {
  3.865069541434374*^9, 3.865069556263504*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"43aa1519-f34d-48cc-9d72-22c5877a1922"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HHNum", "=", 
   RowBox[{
    RowBox[{"num", "/.", "physicalCouplingsExplicit"}], "/.", 
    "HHruleExplicit"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8651488024506407`*^9, 3.8651488702051573`*^9}, {
  3.865149289267313*^9, 3.865149289827015*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"07c81278-c985-4523-b452-512ab15fa331"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"numnum", "=", 
   RowBox[{"HHNum", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "->", "4"}], ",", 
      RowBox[{"tau", "->", "0"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.86514938589338*^9, 3.865149402160404*^9}, {
  3.865149668620867*^9, 3.865149699534534*^9}, {3.865149746150929*^9, 
  3.8651497506267347`*^9}, {3.865151205248459*^9, 3.8651512233920317`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"2c142d1d-ec34-4d12-ba4a-0b01ba311e23"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"-\\\", \
FractionBox[\\\"7.150739521176802`*^-26\\\", \
\\\"92938556779861441424878906134368785008203762603712153690985741207246291072\
525273346573019656009771911862420236887060815653411577846556606736926911318899\
664111435677527966242121417900614643608554389949736396964825379234294179867505\
50981868377179113018825281909088399455148533430091776\\\"]}]\\) is too small \
to represent as a normalized machine number; precision may be lost.\"", 2, 
   144, 19, 29173448080933174315, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.865149673604875*^9, 3.865149701574894*^9}, 
   3.865149752823126*^9, 3.865151208085746*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"c6eeacd8-d049-46cf-981b-20597174c4f6"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"-\\\", \
FractionBox[\\\"2.0822268309535958`*^-29\\\", \
\\\"23234639194965360356219726533592196252050940650928038422746435301811572768\
131318336643254914002442977965605059221765203913352894461639151684231727829724\
916027858919381991560530354475153660902138597487434099241206344808573544966876\
37745467094294778254706320477272099863787133357522944\\\"]}]\\) is too small \
to represent as a normalized machine number; precision may be lost.\"", 2, 
   144, 20, 29173448080933174315, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.865149673604875*^9, 3.865149701574894*^9}, 
   3.865149752823126*^9, 3.8651512082558107`*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"f8690fa7-537d-4ff3-bae1-0451e5008a6c"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"-\\\", \
FractionBox[\\\"4.539014684195623`*^-27\\\", \
\\\"58086597987413400890549316333980490630127351627320096056866088254528931920\
328295841608137285006107444914012648054413009783382236154097879210579319574312\
290069647298454978901325886187884152255346493718585248103015862021433862417190\
9436366773573694563676580119318024965946783339380736\\\"]}]\\) is too small \
to represent as a normalized machine number; precision may be lost.\"", 2, 
   144, 21, 29173448080933174315, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.865149673604875*^9, 3.865149701574894*^9}, 
   3.865149752823126*^9, 3.865151208426754*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"8ab58e75-e40a-404e-bcb9-a9a7909c9168"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 144, 22, 29173448080933174315, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.865149673604875*^9, 3.865149701574894*^9}, 
   3.865149752823126*^9, 3.8651512087824087`*^9},
 CellLabel->
  "During evaluation of \
In[144]:=",ExpressionUUID->"e4b7583d-85ab-4ab9-80c6-c0be6961d5c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["numnum"], "Input",
 CellChangeTimes->{{3.865151181872993*^9, 3.8651511841872663`*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"1061cdfd-2d99-4209-ac4d-1d3d9b616135"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.439230486448272`*^-233"}], "+", 
  RowBox[{"7.656654540465346`*^-233", " ", "epsilon"}], "-", 
  RowBox[{"1.0068600049901385`*^-232", " ", 
   SuperscriptBox["epsilon", "2"]}], "+", 
  RowBox[{"4.8303055269738525`*^-233", " ", 
   SuperscriptBox["epsilon", "3"]}], "-", 
  RowBox[{"9.94731565442056`*^-234", " ", 
   SuperscriptBox["epsilon", "4"]}], "+", 
  RowBox[{"9.677467829763631`*^-235", " ", 
   SuperscriptBox["epsilon", "5"]}], "-", 
  RowBox[{"4.752635368798825`*^-236", " ", 
   SuperscriptBox["epsilon", "6"]}], "+", 
  RowBox[{"1.237301980747617`*^-237", " ", 
   SuperscriptBox["epsilon", "7"]}], "-", 
  RowBox[{"1.7711448897345287`*^-239", " ", 
   SuperscriptBox["epsilon", "8"]}], "+", 
  RowBox[{"1.4315821035699726`*^-241", " ", 
   SuperscriptBox["epsilon", "9"]}], "-", 
  RowBox[{"6.65177355316783`*^-244", " ", 
   SuperscriptBox["epsilon", "10"]}], "+", 
  RowBox[{"1.7940787213812595`*^-246", " ", 
   SuperscriptBox["epsilon", "11"]}], "-", 
  RowBox[{"2.8126968600057786`*^-249", " ", 
   SuperscriptBox["epsilon", "12"]}], "+", 
  RowBox[{"2.542823237885046`*^-252", " ", 
   SuperscriptBox["epsilon", "13"]}], "-", 
  RowBox[{"1.300010230356939`*^-255", " ", 
   SuperscriptBox["epsilon", "14"]}], "+", 
  RowBox[{"3.628153820600475`*^-259", " ", 
   SuperscriptBox["epsilon", "15"]}], "-", 
  RowBox[{"5.208408329024474`*^-263", " ", 
   SuperscriptBox["epsilon", "16"]}], "+", 
  RowBox[{"3.473753577266576`*^-267", " ", 
   SuperscriptBox["epsilon", "17"]}], "-", 
  RowBox[{"8.893389222376271`*^-272", " ", 
   SuperscriptBox["epsilon", "18"]}], "+", 
  RowBox[{"5.566578556616262`*^-277", " ", 
   SuperscriptBox["epsilon", "19"]}]}]], "Output",
 CellChangeTimes->{{3.865151184509548*^9, 3.8651512124420137`*^9}},
 CellLabel->
  "Out[145]=",ExpressionUUID->"5a185a69-cb17-4654-a8da-27e9bcaaf2e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"numnum", "==", "0"}], ",", "epsilon"}], "]"}]], "Input",
 CellChangeTimes->{{3.8651494288528357`*^9, 3.865149437632782*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"19a6c94a-6336-4a95-b026-f489c57e8e04"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "0.2750548597357799`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1.0496928151530274`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "2.6126229456166707`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "5.8565582051639895`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "12.17227576537034`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "23.743107284420468`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "43.97667882501939`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "78.17561942584265`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "134.64608391000831`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "226.6084059875146`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "375.6487420900405`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "618.318369546829`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1019.6651507167073`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1703.5369176455347`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "2928.673141959294`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "5311.72455291152`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "10643.687017429367`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "26157.652115736622`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "110475.98969782532`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.865149438458359*^9, {3.865149686185192*^9, 3.865149711051893*^9}, {
   3.8651497605457363`*^9, 3.865149765402261*^9}, {3.865151200649691*^9, 
   3.865151215431389*^9}},
 CellLabel->
  "Out[146]=",ExpressionUUID->"0dee98f9-15aa-424a-a247-53c215b87f09"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"specialNum", "=", 
   RowBox[{"num", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"delta", "->", "1"}], ",", 
      RowBox[{"alpha", "->", "1.0"}], ",", 
      RowBox[{"gamma", "->", "0"}], ",", 
      RowBox[{"H", "->", "1"}], ",", 
      RowBox[{"beta", "->", "1"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865066048404996*^9, 3.8650660610933113`*^9}, {
  3.865066095797245*^9, 3.865066111141767*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"1e2c9859-1d37-4ff0-a03d-70319185d045"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"specialNum", "==", "0"}], ",", "epsilon"}], "]"}]], "Input",
 CellChangeTimes->{{3.865066118586887*^9, 3.86506612757345*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"1eb9a044-da0a-4ba5-8a05-bf3e78731a8c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1.2992147129802134`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "4.616063772468295`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "8.651623464453854`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "13.182833863903042`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "17.58224004202428`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "22.715954340155275`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "32.41631230411431`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "51.033468160703684`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "83.37846751791798`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "137.24488050176112`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "225.62131502077713`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "370.6120813282067`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "611.6022773810004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1023.5986676022744`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "1763.3015603667457`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "3204.1365818181494`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "6430.5602288136715`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "15821.910315675823`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"epsilon", "\[Rule]", "66870.5481084348`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.865066131339369*^9, 3.865148502075282*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"5b20a9d9-35b2-47a6-a4e4-5636282938e3"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"listNum", "=", 
   RowBox[{"CoefficientList", "[", 
    RowBox[{"num", ",", "epsilon"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listDen", "=", 
   RowBox[{"CoefficientList", "[", 
    RowBox[{"den", ",", "epsilon"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.86506989404906*^9, 3.8650699083376923`*^9}, {
  3.865071686553843*^9, 3.865071692212829*^9}, {3.8650717245177*^9, 
  3.865071738229124*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"d0d08e64-81ea-428d-bc88-c84720276933"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Length", "[", "listNum", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "listDen", "]"}]}], "Input",
 CellChangeTimes->{{3.865071831002026*^9, 3.8650718439126*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"f3df003c-a044-4a76-a780-92dd0dc42af1"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{{3.865071835280501*^9, 3.865071844214357*^9}, 
   3.865148481811997*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"c9c1ec57-b391-4f8b-abb4-7634b9d59564"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{{3.865071835280501*^9, 3.865071844214357*^9}, 
   3.865148481813334*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"fdab0f9f-772b-46c8-88ce-b24f718465c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "saveDir", "=", 
   "\"\</home/sarkis/git_repositories/Quartic-Potential/archived/output_\
mathematica_coefficients/numerator/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_0.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_1.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_2.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_3.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_4.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_5.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_6.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "7", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_7.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "8", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_8.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "9", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_9.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "10", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_10.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "11", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_11.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "12", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_12.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "13", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_13.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "14", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_14.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "15", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_15.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "16", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_16.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "17", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_17.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "18", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_18.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "19", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalNumerator_coefficients_19.py\>\""}], 
   ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listNum", "[", 
      RowBox[{"[", "20", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.865071716133852*^9, 3.8650717204229918`*^9}, {
  3.865071767846192*^9, 3.86507189729142*^9}, {3.865071934694552*^9, 
  3.8650719385685663`*^9}, {3.865072084733864*^9, 3.8650721194004707`*^9}, {
  3.865072159682582*^9, 3.8650721637259398`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"6cf5b05e-99c0-400c-a8c6-1a143762afb0"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_0.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072258732958*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"c64310d9-db25-4a89-8d8c-475ceb441d8b"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_1.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072259953915*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"c0cd9033-cf4e-4a52-8556-ed9e267d3ec8"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_2.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072260967979*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"9b04dc9d-ea9c-4924-94d5-f96892946074"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_3.py\
\"\>"], "Output",
 CellChangeTimes->{3.8650722617644444`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"7e0b57fb-ee9b-4c5b-a034-40294e80efcf"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_4.py\
\"\>"], "Output",
 CellChangeTimes->{3.8650722623929253`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"e5b2a3e4-d1e0-4fc0-8a69-014abfe99b91"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_5.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072262878223*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"3b162f10-3b95-42b8-9a72-06cd989440a1"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_6.py\
\"\>"], "Output",
 CellChangeTimes->{3.8650722632369757`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"4f5e3491-a967-4862-9b3a-18c8378202ec"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_7.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072263525201*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"1cf75c91-35ec-4783-9ec9-3c93b8e0f3c4"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_8.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072263725746*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"17d78ca3-2ca1-4e15-b4d2-f31cd7e0ac67"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_9.py\
\"\>"], "Output",
 CellChangeTimes->{3.865072263883136*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"d76c7546-1342-4398-b696-7a782fc0a91b"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_10.\
py\"\>"], "Output",
 CellChangeTimes->{3.865072264001464*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"ec2e64ad-8343-461e-809c-d853b36530c8"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_11.\
py\"\>"], "Output",
 CellChangeTimes->{3.865072264067236*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"2d0b4a29-c2e7-4425-a224-c07a3f323a79"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_12.\
py\"\>"], "Output",
 CellChangeTimes->{3.8650722641101017`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"33b4d714-1c82-4703-a3ac-d8c1ccdfa9cb"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_13.\
py\"\>"], "Output",
 CellChangeTimes->{3.8650722641355743`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"1e046030-59d9-44ca-ac12-12f1c80d878c"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_14.\
py\"\>"], "Output",
 CellChangeTimes->{3.865072264157556*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"3a0779a6-929d-41b0-a4bd-c010ced5f400"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_15.\
py\"\>"], "Output",
 CellChangeTimes->{3.8650722641804657`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"4ce3593b-b7ca-4a77-b607-fe4d93fb275b"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_16.\
py\"\>"], "Output",
 CellChangeTimes->{3.8650722641822863`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"02717dca-20ed-40d2-a5f2-e8f3d11a8088"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_17.\
py\"\>"], "Output",
 CellChangeTimes->{3.865072264183524*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"a378f1ce-8abd-40fc-8b9d-e0a95449a1cd"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_18.\
py\"\>"], "Output",
 CellChangeTimes->{3.865072264184795*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"b4feadd2-c10f-49ab-a721-d8fb5b4cd812"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/numerator/rationalNumerator_coefficients_19.\
py\"\>"], "Output",
 CellChangeTimes->{3.865072264186121*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"36220416-6014-4b30-83c2-ee70dc6992a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "saveDir", "=", 
   "\"\</home/sarkis/git_repositories/Quartic-Potential/archived/output_\
mathematica_coefficients/denominator/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_0.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_1.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_2.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_3.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_4.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_5.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_6.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "7", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_7.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "8", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_8.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "9", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"saveDir", "<>", "\"\<rationalDenominator_coefficients_9.py\>\""}],
    ",", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"listDen", "[", 
      RowBox[{"[", "10", "]"}], "]"}], ",", " ", "FortranForm"}], "]"}], ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.865072171496413*^9, 3.865072251001671*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"8d53aed8-d919-4664-9528-56e9615d57ef"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
0.py\"\>"], "Output",
 CellChangeTimes->{3.8650722644295197`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"c0a5f361-ea9a-4fe0-a258-9e3276dfb157"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
1.py\"\>"], "Output",
 CellChangeTimes->{3.865072264595069*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"29ba2311-8da5-40b6-9c3b-334798074af8"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
2.py\"\>"], "Output",
 CellChangeTimes->{3.865072264685749*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"8187fd45-3abc-4437-923b-bf523d5c87c5"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
3.py\"\>"], "Output",
 CellChangeTimes->{3.8650722647397537`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"941f1cff-50a4-4063-91de-337789ff98ae"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
4.py\"\>"], "Output",
 CellChangeTimes->{3.86507226476867*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"9cd718a1-78ad-4e3d-bdb7-c87236e1d0d3"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
5.py\"\>"], "Output",
 CellChangeTimes->{3.865072264789915*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"e01a4939-39c3-4dae-bb7e-4e55791ddd8b"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
6.py\"\>"], "Output",
 CellChangeTimes->{3.8650722647921343`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"a2685032-d489-49c5-8ea6-90984f1eac71"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
7.py\"\>"], "Output",
 CellChangeTimes->{3.865072264809712*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"6c3b481a-39a4-47d6-ba3f-1498d17871c0"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
8.py\"\>"], "Output",
 CellChangeTimes->{3.865072264811531*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"5c0d180a-f4b9-48c0-b27c-5fc15574be0b"],

Cell[BoxData["\<\"/home/sarkis/git_repositories/Quartic-Potential/archived/\
output_mathematica_coefficients/denominator/rationalDenominator_coefficients_\
9.py\"\>"], "Output",
 CellChangeTimes->{3.865072264812826*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"0f204fd6-4e35-44b8-b719-81ba32f34844"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting for paper", "Subsubsection",
 CellChangeTimes->{{3.8649914369811077`*^9, 
  3.8649914401650047`*^9}},ExpressionUUID->"7d8bc839-ff56-4e3e-b8ce-\
44880c097ea1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]Plus", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]largePlus", "/.", "latexCouplings"}], "/.", 
     "physicalCouplings"}], "/.", "HHrule"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]Minus", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]largeMinus", "/.", "latexCouplings"}], "/.", 
     "physicalCouplings"}], "/.", "HHrule"}]}], ";"}]}], "Input",ExpressionUUI\
D->"0a840572-3e50-40f9-981e-4a535247fd97"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rational", "=", 
   RowBox[{
    RowBox[{"\[Alpha]Plus", "/.", 
     RowBox[{"S", "->", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"\[Alpha]Minus", "==", "0"}], ",", "S"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Tau]", "->", "0"}], ",", 
      RowBox[{"r", "->", "10"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865007107644417*^9, 3.865007116808415*^9}, {
  3.8650071663123503`*^9, 3.865007168501062*^9}, {3.865008221510722*^9, 
  3.865008221602228*^9}, {3.8650083440854807`*^9, 3.8650083939438257`*^9}, {
  3.865008443846773*^9, 3.8650084769169703`*^9}, {3.865008512749763*^9, 
  3.865008513030899*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"7d376c22-1934-4f3c-9759-0bccb31dfcbe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"num", "=", 
   RowBox[{
    RowBox[{"rational", "//", "Together"}], "//", "Numerator"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.86500692344523*^9, 3.865006941961009*^9}, {
  3.865006982843453*^9, 3.865006994576399*^9}, {3.8650070534528627`*^9, 
  3.865007055234913*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"3d53ea0d-7777-4ba5-9f57-ce31fe4db344"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"num", "==", "0"}], ",", "\[Epsilon]"}], "]"}]], "Input",
 CellChangeTimes->{{3.865007197643188*^9, 3.865007207060359*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"c0844726-bbdc-4f31-a45e-7227c119720a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "22.286019682678024`"}], "-", 
      RowBox[{"20.68774583279195`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "22.286019682678024`"}], "+", 
      RowBox[{"20.68774583279195`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", 
     RowBox[{"18.72888087805439`", "\[VeryThinSpace]", "-", 
      RowBox[{"49.75104659929728`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", 
     RowBox[{"18.72888087805439`", "\[VeryThinSpace]", "+", 
      RowBox[{"49.75104659929728`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", 
     RowBox[{"86.89216343033333`", "\[VeryThinSpace]", "-", 
      RowBox[{"34.57260457616983`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", 
     RowBox[{"86.89216343033333`", "\[VeryThinSpace]", "+", 
      RowBox[{"34.57260457616983`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "148.50536792945695`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "273.7813300606355`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "540.9922299091687`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "1142.0413612388807`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "2576.937398942562`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "6294.343342370951`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "18081.8439141469`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "\[Rule]", "84530.23892255237`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.865007207770591*^9, 3.865008239182199*^9, {3.865008331411027*^9, 
   3.865008407382365*^9}, 3.865008456247333*^9, 3.865008490184958*^9, 
   3.865008526606431*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"c1a1996d-7e4d-447f-bfd3-30d91a555436"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]P", "=", 
   RowBox[{
    RowBox[{"\[Alpha]Plus", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Tau]", "->", "0"}], ",", 
       RowBox[{"r", "->", "4"}]}], "}"}]}], "//", "FullSimplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]M", "=", 
   RowBox[{
    RowBox[{"\[Alpha]Minus", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Tau]", "->", "0"}], ",", 
       RowBox[{"r", "->", "4"}]}], "}"}]}], "//", "FullSimplify"}]}], 
  ";"}]}], "Input",ExpressionUUID->"6a555a0c-0a08-4eb9-ad06-757abde4adbd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FP", "[", 
   RowBox[{"\[Epsilon]_", ",", "S_"}], "]"}], ":=", 
  RowBox[{"\[Alpha]P", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Symbol", "[", "\"\<\[Epsilon]\>\"", "]"}], "->", 
      "\[Epsilon]"}], ",", 
     RowBox[{
      RowBox[{"Symbol", "[", "\"\<S\>\"", "]"}], "->", "S"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FM", "[", 
   RowBox[{"\[Epsilon]_", ",", "S_"}], "]"}], ":=", 
  RowBox[{"\[Alpha]M", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Symbol", "[", "\"\<\[Epsilon]\>\"", "]"}], "->", 
      "\[Epsilon]"}], ",", 
     RowBox[{
      RowBox[{"Symbol", "[", "\"\<S\>\"", "]"}], "->", "S"}]}], 
    "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.864998621164598*^9, 3.8649987041773653`*^9}},
 CellLabel->
  "In[307]:=",ExpressionUUID->"766bb855-112e-44b7-8222-fdd810d97c80"],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", "\[Epsilon]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"FP", "[", 
     RowBox[{"\[Epsilon]", ",", "S"}], "]"}], "/.", 
    RowBox[{"S", "->", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FM", "[", 
          RowBox[{"\[Epsilon]", ",", "S"}], "]"}], "==", "0"}], ",", "S"}], 
       "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.865002444242592*^9, 3.8650025865101147`*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"f97459a9-ca5d-4269-abf1-679f38a1498b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"FM", "[", 
       RowBox[{"\[Epsilon]", ",", "S"}], "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{"FP", "[", 
       RowBox[{"\[Epsilon]", ",", "S"}], "]"}], "==", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", 
     RowBox[{"-", "10"}], ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"S", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "->", "None"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<\[Epsilon]\>\"", ",", "Black", ",", "30"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<S\>\"", ",", "Black", ",", "30"}], "]"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Latin Modern Roman\>\""}], ",", 
      RowBox[{"FontSize", "\[Rule]", "25"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"25", ",", "Black", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ContourStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", 
        RowBox[{"Darker", "[", 
         RowBox[{"Green", ",", "0.8"}], "]"}], ",", 
        RowBox[{"Opacity", "[", "0.6", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", 
        RowBox[{"Darker", "[", 
         RowBox[{"Red", ",", "0.4"}], "]"}], ",", 
        RowBox[{"Opacity", "[", "0.6", "]"}]}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Purple", ",", 
      RowBox[{"PointSize", "@", "Large"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"1.9", ",", "3.8"}], "}"}], "]"}], ",", "Purple", ",", 
      RowBox[{"PointSize", "@", "Large"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0.4", ",", "0"}], "}"}], "]"}], ",", "Purple", ",", 
      RowBox[{"PointSize", "@", "Large"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"14.83", ",", "5.66"}], "}"}], "]"}], ",", "Purple", ",", 
      RowBox[{"PointSize", "@", "Large"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"5.69", ",", 
         RowBox[{"-", "0.51"}]}], "}"}], "]"}], ",", "Purple", ",", 
      RowBox[{"PointSize", "@", "Large"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"34.6", ",", 
         RowBox[{"-", "1.55"}]}], "}"}], "]"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Background", "\[Rule]", "White"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQrTf5ZNLj028cnwnWp4LoRapyLSC66inDdBDNIHt6
Noi+kJ2yFETbKOusBNFKfg6bQPQXxyXbQPQbjs9g+saxB/tAtMGNvcdBdNL+
sOYnQNpsfdJMEK2zevU8EG3Ld24JiO7ZvXEjiH4bmrcbROcsuJ31DEi//9xR
AKIDun57PQfSHCphLSD6jHpOL4j2X5ffB6JZJlQtBtHZlpLrQLTcS4vNIDrr
sBuY9lE+vhtEbynS3QuiJ51+exBEc6WnHAXRkvxrToPoPc1KF0C0+9d12i+A
9EYuG2MQfchZ9QiIlvnBeBREAwCEK7rE
  "],
 CellLabel->
  "In[267]:=",ExpressionUUID->"b832d30d-a2b7-45af-a445-5fc4f7fcc8b8"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
WmhmwsHH/wPCZfYg
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0., 0.19999999999999996`, 0.], Thickness[Large], Opacity[
        0.6], 
        StyleBox[{
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84}], LineBox[CompressedData["
1:eJwl0lVSUAEAAMCH3YkdiIoodpzEGVtBsRVBbOzu7i6wEBss7O7u7u5u3Rk/
9gYbHpvQMD4kCIJ7NKIxTWhKM5rTgpa0IpoYWtOGWNrSjvZ0oCOd6EwXuhJH
N+JJoDuJ9KAnvehNH/rSjyT6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxi
MlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylpNMCitYySpWs4ZU1pLGOtaz
gY1sYjNbSCeDrWxjOzvYSSa72M0e9rKP/RzgIIc4zBGOcozjnOAkpzjNGc5y
jvNc4CKXuMwVrnKN69zgJre4zR3uBv+/3OcBD3nEY57wlGc85wUvecVr3vCW
d7znAx/5xGe+8JVvfOcHP/nFb/7wl0DaELKQlWxkJwc5yUVu8pCXfOSnAAUp
RGGKUJRQilGcEpSkFKUpQ1nKUZ4wKhBORSpRmQiqEElVqhFFdWpQk1rUpg51
qUd9GvAP9OF5uQ==
           "]], LineBox[CompressedData["
1:eJwVz9c6FgAAgOG/S+kiZDVsoWElGQ1RKSObqGhZaaEhZTQkkaRSoS0lEul6
vB28z/OdfhvzSlNLNgQCgUGCxCaCCSGUMMLZzBa2so0IIokimhhiiSOe7SSQ
SBI72MkudpNMCqmkkc4eMthLJvvIIpscctnPAQ5yiDwOk08BRzjKMQo5zgmK
KOb/bCknKaOcCiqpopoaaqnjFPU0cJoznKWRJs5xngtc5BLNtNBKG+1cpoMr
XOUa17lBJ110c5Nb3OYOPdyll3vcp49+BhjkAQ95xGOGeMIwTxnhGaOM8Zxx
XjDBSyZ5xWveMMVb3vGeaWaY5QMf+cRnvvCVb8zxnXl+8JMFfrHIEr9Z5g8r
rPKXNf6xDsZ3V3M=
           "]]},
         FontFamily->"Latin Modern Roman",
         FontSize->25]},
       RowBox[{
         RowBox[{
           RowBox[{"12.194427640553812`", "\[VeryThinSpace]"}], "+", 
           RowBox[{
             TagBox["\[Epsilon]", HoldForm], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "35.140935203292656`"}], "+", 
                 RowBox[{
                   TagBox["\[Epsilon]", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"8.51507864273902`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.3325176234286391`"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.002746365997682094`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5.364225133072119`*^-6"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2.364992030562556`*^-9", "-", 
                    RowBox[{"1.65924196371522`*^-13", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
             TagBox["S", HoldForm], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "50.249990947568804`"}], "+", 
                 RowBox[{
                   TagBox["\[Epsilon]", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"36.53569709016391`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3.393021119493091`"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.059549244347758365`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.0002379938401519114`"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"2.2489872871832529`*^-7", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "4.281176842148333`*^-11"}], "+", 
                    RowBox[{"7.535659314738926`*^-16", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], "\[Equal]", 
         "0"}]],
      Annotation[#, 
       12.194427640553812` + 
        HoldForm[$CellContext`\[Epsilon]] (-35.140935203292656` + 
          HoldForm[$CellContext`\[Epsilon]] (8.51507864273902 + 
            HoldForm[$CellContext`\[Epsilon]] (-0.3325176234286391 + 
              HoldForm[$CellContext`\[Epsilon]] (0.002746365997682094 + 
                HoldForm[$CellContext`\[Epsilon]] (-5.364225133072119*^-6 + (
                    2.364992030562556*^-9 - 1.65924196371522*^-13 
                    HoldForm[$CellContext`\[Epsilon]]) 
                   HoldForm[$CellContext`\[Epsilon]]))))) + 
        HoldForm[$CellContext`S] (-50.249990947568804` + 
          HoldForm[$CellContext`\[Epsilon]] (36.53569709016391 + 
            HoldForm[$CellContext`\[Epsilon]] (-3.393021119493091 + 
              HoldForm[$CellContext`\[Epsilon]] (0.059549244347758365` + 
                HoldForm[$CellContext`\[Epsilon]] (-0.0002379938401519114 + 
                  HoldForm[$CellContext`\[Epsilon]] (
                    2.2489872871832529`*^-7 + (-4.281176842148333*^-11 + 
                    7.535659314738926*^-16 HoldForm[$CellContext`\[Epsilon]]) 
                    HoldForm[$CellContext`\[Epsilon]])))))) == 0, 
       "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {RGBColor[0.6, 0., 0.], Thickness[Large], Opacity[0.6], 
        StyleBox[{LineBox[CompressedData["
1:eJwVzlc7lgEAgOH3Q7JlNZTx2aNCJUXZe++ROPAD+Bv+YUaUsiIlESXjdnBf
13P4hOcWhudDQRAs8kEsscwKq3xkjXU+8ZkNvvCVTbbYZoddvrHHPt854Ac/
OeQXR/zmmBP+cMoZf/nHOf+54JKrm9GIIAgRQSRR3CKa28QQSxzxJJBIEsnc
IYVU0kgng7vc4z4PyOQhj8gimxxyCZNHPgUUUkQxJZRSRjmPecJTKqikimc8
5wXVvKSGV7ymljre8JZ6GmikiWZaaKWNdjropItueuilj34GGGSIYUYYZYxx
JphkindM854ZZrkGRsg6Nw==
           "]], LineBox[CompressedData["
1:eJwNw4c2UAEAANCHSEv9Qr/kB6wKFRrIaqPQQksDDYqG0l7SUEmhXSotDaJo
KEW695w7Mz4tOjUkCIJGY0KDINY4401wlrOdY6JJJjvXec43xVTTXOBCF7nY
dDPMdIlZZptjrnkudZnLXeFKV7nafAssdI1rLbLYEte53g1udJOlllnuZre4
1W1ut8Id7nSXu620ymr3uNd97rfGWg940DrrPeRhj3jUBo953EZPeNJTnvaM
Zz3neS940Us2edlmr3jVa163xRve9Jat3rbNO9613Q47ved9H/jQRz72iU99
ZpfPfeFLu33la9/41nf2+N4PfvSTvfb52X4H/OJXBx3ym9/94U+H/eVvR/zj
X0cd85/jBmFBEGKoYU4w3AgnGukkJzvFqU4zyunO8D8WjHJy
           "]]},
         FontFamily->"Latin Modern Roman",
         FontSize->25]},
       RowBox[{
         RowBox[{
           RowBox[{"117.1738489947312`", "\[VeryThinSpace]"}], "+", 
           RowBox[{
             TagBox["\[Epsilon]", HoldForm], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "265.81816432232154`"}], "+", 
                 RowBox[{
                   TagBox["\[Epsilon]", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"42.28390685080488`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.108810883409416`"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.006503303086392308`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "9.488302488347804`*^-6"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"3.2539818024176075`*^-9", "-", 
                    RowBox[{"1.8333925978002083`*^-13", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
             TagBox["S", HoldForm], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"450.43032031174425`", "\[VeryThinSpace]"}], "+", 
                 RowBox[{
                   TagBox["\[Epsilon]", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "224.64781248057005`"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"13.716010953452912`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.16617918856920982`"}], "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.00048431255467153877`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3.4928217819593087`*^-7"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"5.2601039817943464`*^-11", "-", 
                    RowBox[{"7.535659314738926`*^-16", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], "\[Equal]", 
         "0"}]],
      Annotation[#, 
       117.1738489947312 + 
        HoldForm[$CellContext`\[Epsilon]] (-265.81816432232154` + 
          HoldForm[$CellContext`\[Epsilon]] (42.28390685080488 + 
            HoldForm[$CellContext`\[Epsilon]] (-1.108810883409416 + 
              HoldForm[$CellContext`\[Epsilon]] (0.006503303086392308 + 
                HoldForm[$CellContext`\[Epsilon]] (-9.488302488347804*^-6 + (
                    3.2539818024176075`*^-9 - 1.8333925978002083`*^-13 
                    HoldForm[$CellContext`\[Epsilon]]) 
                   HoldForm[$CellContext`\[Epsilon]]))))) + 
        HoldForm[$CellContext`S] (450.43032031174425` + 
          HoldForm[$CellContext`\[Epsilon]] (-224.64781248057005` + 
            HoldForm[$CellContext`\[Epsilon]] (13.716010953452912` + 
              HoldForm[$CellContext`\[Epsilon]] (-0.16617918856920982` + 
                HoldForm[$CellContext`\[Epsilon]] (0.00048431255467153877` + 
                  HoldForm[$CellContext`\[Epsilon]] (-3.4928217819593087`*^-7 + \
(5.2601039817943464`*^-11 - 7.535659314738926*^-16 
                    HoldForm[$CellContext`\[Epsilon]]) 
                    HoldForm[$CellContext`\[Epsilon]])))))) == 0, 
       "Tooltip"]& ]}], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  Background->GrayLevel[1],
  BaseStyle->{
    GrayLevel[0], FontFamily -> "Latin Modern Roman", FontSize -> 25},
  DisplayFunction->Identity,
  Epilog->{
    RGBColor[0.5, 0, 0.5], 
    PointSize[Large], 
    PointBox[{1.9, 3.8}], 
    RGBColor[0.5, 0, 0.5], 
    PointSize[Large], 
    PointBox[{0.4, 0}], 
    RGBColor[0.5, 0, 0.5], 
    PointSize[Large], 
    PointBox[{14.83, 5.66}], 
    RGBColor[0.5, 0, 0.5], 
    PointSize[Large], 
    PointBox[{5.69, -0.51}], 
    RGBColor[0.5, 0, 0.5], 
    PointSize[Large], 
    PointBox[{34.6, -1.55}]},
  Frame->{True, True},
  FrameLabel->{{
     FormBox[
      StyleBox["\"S\"", 
       GrayLevel[0], 30, StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox["\"\[Epsilon]\"", 
       GrayLevel[0], 30, StripOnInput -> False], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  LabelStyle->Directive[25, 
    GrayLevel[0], FontFamily -> "Times"],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-10, 20}, {-10, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8650006117510147`*^9, 3.865000995100832*^9}, {
   3.865001069195051*^9, 3.8650010759612226`*^9}, 3.865001275975718*^9, {
   3.8650013083241653`*^9, 3.86500132925404*^9}, 3.865001370970562*^9, {
   3.865001440923731*^9, 3.8650014498111143`*^9}, {3.86500148894179*^9, 
   3.8650015155361643`*^9}, {3.865001567426333*^9, 3.8650016013743668`*^9}, {
   3.8650016378491793`*^9, 3.865001650030106*^9}, {3.86500233404529*^9, 
   3.865002394545395*^9}, 3.865003560449058*^9},
 CellLabel->
  "Out[267]=",ExpressionUUID->"2ce40c3d-5d8e-43fe-b9c6-ddd3e872fc19"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rm", "=", 
   RowBox[{"-", "5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rM", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pm", "=", 
   RowBox[{"-", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pM", "=", "10"}], ";"}]}], "Input",
 CellChangeTimes->{{3.864993423636203*^9, 3.8649934340332537`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"ce160c10-a63c-412f-9430-35f14f47157a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"contourPotentialPlot1", "=", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"FM", "[", 
         RowBox[{"\[Epsilon]", ",", "S"}], "]"}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{"FP", "[", 
         RowBox[{"\[Epsilon]", ",", "S"}], "]"}], "==", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "rm", ",", "rM"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", "pm", ",", "pM"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"Contours", "\[Rule]", "15"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotPoints", "->", "50"}], ",", 
     RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
     RowBox[{"Frame", "\[Rule]", "False"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.864993463218747*^9, 3.864993489879678*^9}, {
  3.864994010521727*^9, 3.864994041893669*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"fd924231-b75c-4540-b76c-4a53f850e5dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"level", "=", 
  RowBox[{"-", "1.5"}]}]], "Input",
 CellChangeTimes->{{3.864993505988164*^9, 3.864993507664818*^9}, {
  3.8649937860212*^9, 3.864993798105344*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"f2b499fc-8048-4565-a8f0-bfb4687756b5"],

Cell[BoxData[
 RowBox[{"-", "1.5`"}]], "Output",
 CellChangeTimes->{
  3.86499350792962*^9, {3.864993786418323*^9, 3.864993798517879*^9}},
 CellLabel->
  "Out[172]=",ExpressionUUID->"d879c031-3751-4a5f-96ad-dd43d8b2cfcd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"potential1", "=", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FM", "[", 
        RowBox[{"\[Epsilon]", ",", "S"}], "]"}], ",", 
       RowBox[{"FP", "[", 
        RowBox[{"\[Epsilon]", ",", "S"}], "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "rm", ",", "rM"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", "pm", ",", "pM"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], ",", "1"}], "}"}]}], ",", 
     RowBox[{"ClippingStyle", "\[Rule]", "None"}], ",", 
     RowBox[{"MeshFunctions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"#3", "&"}], "}"}]}], ",", 
     RowBox[{"Mesh", "\[Rule]", "15"}], ",", 
     RowBox[{"MeshStyle", "\[Rule]", 
      RowBox[{"Opacity", "[", ".5", "]"}]}], ",", 
     RowBox[{"MeshShading", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", ".3", "]"}], ",", "Blue"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", ".8", "]"}], ",", "Orange"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", ".01", "]"}], ",", "Cyan"}], "}"}]}], 
       "}"}]}], ",", 
     RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.864993551308247*^9, 3.8649935568629227`*^9}, {
  3.864993665788474*^9, 3.8649936710382423`*^9}, {3.864993880258629*^9, 
  3.864993915876451*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"c0f8cf19-3f71-48c3-b6df-818ec63cf6e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FM", "[", 
      RowBox[{"\[Epsilon]", ",", "S"}], "]"}], ",", 
     RowBox[{"FP", "[", 
      RowBox[{"\[Epsilon]", ",", "S"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "rm", ",", "rM"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"S", ",", "pm", ",", "pM"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "500"}], ",", "500"}], "}"}]}], ",", 
   RowBox[{"ClippingStyle", "\[Rule]", "None"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"#3", "&"}], "}"}]}], ",", 
   RowBox[{"Mesh", "\[Rule]", "15"}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", 
    RowBox[{"Opacity", "[", ".5", "]"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "\"\<Rainbow\>\"", "]"}], ",", 
      RowBox[{"Directive", "[", "\"\<TemperatureMap\>\"", "]"}]}], "}"}]}], 
   ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.864994199101231*^9, 3.8649943958182573`*^9}, {
  3.864994503029675*^9, 3.8649945042232513`*^9}, {3.8649945395478773`*^9, 
  3.864994540921068*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"d35e4030-b331-4367-ac7f-3798990cb4cf"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
t18s9qZgnoIOTYnmaZILQzHfQIexzSF63un+2C/ws/vjlvuSw8IxTrDvio5q
ftIZgXUD5ouEjOblwtpQzBPwM8j+78iA27E4LlAn554/sVg+YSXGb9CnA0st
drvExr1jsV3gXrKeKts+RCEX/NeQEHma4zB1JpvOT8i3d1OrEpws/VE3iEdo
y/n0oYvo6xTw4g65EbOGR/XrPwzzx1kv+suil3HUP3POehLs34kYvi+UjUF7
qGMrP+2s0QoNJMBBn+kB7j83mPev6zjrVfATNrGCb8KqcArWXf3X0/5/+fhg
3cXkUJ+ZnHsdRXPGdRw59zqK6V+Bh/f9VHk49zqK2a4OD4f1D5PDumXgOE15
+D998PshzDgt/4PLUX31Xp3bD0dnJgedmRx0ZnLQmclB54H9K/Dwvp8qDwed
B25Xh4eDzkwOOg8cpykPB50HjtPyP7gcBfcvTJ2ZHHRmctCZyZn3R0ydB/av
wMNBZyYHnQduV4eHg85MDjoPHKcpDwedB47T8j+4HAXrTKbOTA46MznozOTM
+02mzgP7V+DhoDOTg84Dt6vDw0FnJgedB47TlIeDzgPHafkfXI6CdTtTZyYH
nZkcdGZy5v07U+eB/SvwcNCZyUHngdvV4eGgM5ODzgPHacrDQeeB47T8Dy5H
wX0QU2cmB52ZHHRmcuZ+CFPngf0r8PC+nyoPB50HbleHh4POTA46DxynKQ8H
nQeO0/I/OL3Pw+Xn/+3zcOvQymZy0JnJmftCTJ0H9q/Aw0FnJgedB25Xh4eD
zkwOOg8cpykPB50HjtPyPzis695NZOrM5NzrOpoz98eYOjM5c3+M278CD+/7
qfJw5v4Yd7s6PJx7XUdz7nUdM05THs69rmPGafkfXI6CfQAuPxydmRx0ZnLQ
mcmZ+4Hc8UvycNCZyft+qjycua/I3a4ODwedmRx0HjhOUx4OOg8cp+V/cDkK
9lWYOjM56MzkoDOTM/dLmToP7F+Bh4POTA46D9yuDg9n7tMydR44TlMeDjoP
HKflf3A5CvZ7mTozOejM5KAzkzP3mZk6D+xfgYeDzkwOOg/crg4PB52ZnLnv
zdR5QH04Og8cp+V/cDkK9smZOjM56MzkoDOTM/fnmToP7F+Bh4POTA46D9yu
Dg8HnZmc+byAqfOA+nB0HjhOy//gchQ8d2DqzOSgM5ODzkzOfK7B1Hlg/wo8
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
AdTjWnY=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFnHn8VVP3x++93XumL19RUVJSKSlzhoxlaCINSEIqZaooQklFMqtkTI+h
kIwhyTxmJmQmQ8/D85jnIbPf5+2zvH5/7Nded5199tlnn73X8Flr342GHzfg
2EqpVFo7KZUaqP68KJXGifGh6g3KpdKdKv3Fbx/0g6IH6fpi0QNKbrM4+Nuq
XqIyWnRr1berDBbds2L+E6I/yc3/Iy2V2qm+Q+UB8burvl9lguivctObZKVS
B9V3Rf87qF6qMqxk/t0qQ0V/qvb9VP9X7bcL/pP63abie2lTr/fZmTa1UmlT
8Rro2n7cK7os+l7RvdRmH9X/Vj99RCfi76O6idqURN+j6i3dv5fqV8Wvac4O
Ej2ucH+/ld3nNxrPA6K/Vp2LX1M5WPy+apeKbp+4Lfc8JP4moitBty37uY+J
LmscD6v+RfUf4ldjzPupn0x0feZ+uJdv8S3PU328xjip7DG8o99N1O4p1S1y
f69bmXfmRPUtQTcLfv+gbw7+ctU30E70e0Hvwjzmvvcj1Y1UL4g2DVXfxloR
/aGudVP9mp6fMRaV6/S7TvWN0U99PGt30Y2Df6vopqpvYg2Jbqn3Wyh675K/
xcJ41h6ah0Gq31T9u+p54l+rev+K6a2i/aK49zuN50HRx2o8/xO9p3hfaq66
iHdPrJkvxB/DM3OvsaXBn1K4zWfiv68yX/R7ql/kneK9PtCavpla/f8n93p7
RfRzqcf1ouh/i7+T6JdEv1B2P1xrpjFfG/08H30yPx+o/daqX9Y4XxPvIRUN
pfSr+lyqunnhOfyFedHvJ8S/RvVZuu/X+lJphuifVB+mNTde9HS131htv1A5
pOS996Xow9i/ura96q1Ub0cR/ajG+V9d/7nsa9z3edy7Sep1navvHQq3eUm8
VoX304aqvxfvB/ayfk9gXlR3Ev8Wtbtc9EWic9FXi95adKG++oj+U7yRmpOi
4vG1Ljz+nfRevVUmie7PfIu/mdpMVb2H+Kewz8R/UHQf3fei6jaF6YNE91U5
VW2uUH2V7rtS5RCVLPHeRwZsoXG+JLoPfSTuc8/M/XylfnqJt6+eMVH8fUR3
0rUXRe+l9muor69ZY/q9Ur+3UL1Y13sxbvF7qH5G984X/wXxx4i3KmTmONX/
Vjm5ZFn7QezHM6qaX9Wnq95D/a+r0oE5Ulmv4vXRVfU6Kq1ED9U41bQ0WGtm
oOg68Q9QfZSe9674Y3Ovefgv6PcRZffznegr1eZb1cPUfoRKI/FnqZ+RotcX
f7jqtdTmcdF7iz482sBvEmPYSNcuUJsvGLue1b/ia/AHhOzqr7pxZp2wkeiD
4lsjq5EB7/0jZ2reR+ynG4KPnFip8m7Zsmd9lfdDj7wf89Y+6vdjDg/TMxry
rRlvEfJG32G9wvumieoOGs9y0RsjVwrrw7dV/6k+Plbprd87Fq7fQ4aUvTf2
QNYhC5GP0S/9v66xT9D6OFP0ARr/jyoPsx9YFxrLK/Gt10Vmlrzu39C9PVW/
q3s3rPhdkYcf6/du7Hddb61nHy/6RI3lPf3uhV7KLBcbhWzcSdfWKVsWddcY
jhavC3Oo9i1FnyP+z4n35e3qe7Se1Tzk9q1q00b19eLfLHpD0eep/XG8q8qJ
+n0xc6h7ZqvGgGgh/uKSdUiz0B2f6v6uqv+tPuaozSS+sa51KTxfjQvLuSzk
3qtqvy37Qu0/Vdlf9Gd67leiDxD9uegVatMZGSnejxp/e9G31SyTk7Jl7Lrq
tyJ6WWY9gg7BPjhQm6K76uNUdy4sJ5GXA6vW6WNUP63fO8LXvXvpdxd0kerm
Gvta6qsB30/PbSf+LXru66LXYz5Fz9M9c0T/Jt5uGs/2attc9em6t7fKiWWv
LdZYR7U9Tbyx4u1ZtqxB5mwj/g6ZZdSBiWUKsmVzbKGQY4PF65p772IjnS7+
K6K70afGfyF7SPceoXEfoPaHqz5U7XuI7qZ6tq6drzazVB+fmr5Q9MjEMm0P
9XOO6DNEHyr6R7U5UPQfeseDxT+B9SX+v9TfN8gM5lfPmKt6d9V/qs3mou+t
WbajN54WfafotqIv0b2fJl5XV4n/38Rrcq7oK9RmXdEn860T09PFf0T8zUTP
F3+RyjzRT4p3BeMQvVT0AyqdRF8t3rLUY7hW9G2Zx/aE3j1LrdeeUp8zREs1
lpaj2zO/x9Nq00vfZUXZ369jYl23c2p5h9xrqLZjVd5nntX+kbJ1M3r5fPW7
NnPFs8QYLP73oh9X/YbKkND56P489PzzsQd21nOXqW6q+yer/w9V35O7L/pc
rHpq2TKEZ89R/28ix1Ufr/arxBuP3ld5TPxTsA/jXsZ1WWH+L7ntteUhK55S
/bbKMJWng25WsrxdHuOs6d4jxEt177Ya56vinabf36MXRV+Y24Zn3rCfmsf6
v5x9qbI5z9Vkn1r2fDFXvDv2E/ZgtbAtfa7anqT+3xLvU/2eqv4/Uj1R/G9E
byT+BaKnld2GuepZtZ07RXVaeGys8176vVL8o1Wv1u860Ter/im+2bjM3+MJ
5LiuraHfI1T/pfq83M/imd9mtv3xWerQ/ezf8F/QOdhOd4XOwU9ZS2360o/a
JLr3cNG/Z7ab7it5PX2d2X77XW1+rvf8ME8DwkfAV8A3wY7CxsJ/wr9CX9bl
nnPmvnnVe3NQ1fYp/g/26mYaw6HoFrVtW7GPgX/xSdnvhQ6bEWsPPdtAz3tO
9OPqc/+q5dxo1U1177Nl2wano/NUn6o+/1RZh3Hllovci43yZWabfOPU/bPO
sW/nq/9nRPPhsTWahr1xRqw51lul8LPKqs9nvsQ7jXVV8b20Z20+Fe2nBc06
qerj7i96ZG6bDDnWVX0crHGcLnqEeKNF91ebw9RmoK5NE3+Y6CPF30f8AWFb
7i16X+yW3PxB1Kntzx7qZ4jKZNH7i38le1L0YF0fllg3ttJYLtGYLw6Zf0TF
upNrp6aWyUfk1v/jwgYYnFjm/1Bv2xQaPbB3Yp94mubkROSv2p+g6+eJPlT0
ueKfnJtmj2yi8jQyHFmLDyJ+O9X76/duordi/ybmb4w/mNuvxjdsjW8i+sDC
+msv0Q1F91T7Y5CB4nVU2VX8LVRvhk0gfnvsbpXDyl4bF9RMT0IGJG7fiXlC
14o+RvQgtRkk+mD1v2/iOd+bb5G7zSjVLeqsH3vr+h6JbZ5teI7m89CY29MZ
N7aBrl9YWIZNzb1Ong6ZdpX4I1VfrXq15ndj1qnqmRXbMIfr2hq6NhR5pfqK
wry5qi+qeL1iI09Xv9uwTvF7NP41RJ+gOUgT4xzHYVMUbjtP9czcMhPZiVxD
vrVPLVuOQeahh4OP/NtQ9I7sT3R1xWPetGT/aUTZttrC3D4+2AK+4KSQpQNr
5oMB3ByybhS2RMUyt4g9wF4Yous35eYfhF6u2Z+g0bcqp4h/fW5ZepLoa2gr
ejRjSCyL8FvwWa5W/yeXvQdWBB/5f5banYvs1b1nij6n5DV/XW56/8x2GPbY
Vqq3SfzurXLvWWyV09C34r+nNuPEX5ZYxzHnSxP7MkfTT+619Cj36vdb4g9V
/Xtim2FpzWugn8a6oSbmPv1eLf4Ctbld5RfRd6q+RvzPRM9U22nqazj7VPQS
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
pdAR+ED8DwzrpEfhM7yPir+DLv4fJHbChw==
            "]], 
           Polygon3DBox[CompressedData["
1:eJxFnAfYl+P7xp/n6/vMt95CykpTKCskWxmhIVRGRkOUmZ0QZSUzVHZEISN7
z5AUIpEdRVsJlc3//Djv3/E/jvc63uve47nHdZ3XdX+b9R982OmVKIquq0aR
/qLmRRSdrv9vi1qIH63IzspwqWik+O3TKDpZaTvGUbR3FkVjFR4jOlf8eaLe
eRQdJbpWcdeJ3hFNFx2fRNEA0RDVcb7K9hL1F/+e8k5QfbuLZog/W/St+GFK
Pzpx2bdF/RPXcYiou+j1Moqmlk6bJuqXOM8ixS0snYe8T6tP26i+lqInxG+n
vNuK9hS/l+go5alR2jeiyYxd7X8t/gK1/7PCJ4quUvh60UXKv6A2iuaL3hfN
EvVU+jClXSk6SemHhnbp2xuiK8RfLrpZaWNIV/2XKu8o0WkKX6XydZhLhUeK
f1B0ocKviM7IPY6DRa+VHvMWSh+svNNFW4r/TX04Q/O4saiFxlVfZd5Q2g4q
30Dp76jMdNG7ovdEM0rHwb8v2l+0n+hP9eUvUXvRzqJmqqu56FvV/4HqO1N0
uMK/q/5XxfcX/SZ+F7XRXtRK/BaiEerHLkq7W3Sp+MeUdrH6cq7Wz2ClH6C6
O4l2V117iL5S/V+KponeDvyOKrdZ1XFf1zoPadNF16q+U1TfB6JVqu9v1fUc
31fhJUqrq3Ad0buas/cS8zWimYnj3uDbiBLFpaJ/VWaEyi5SHSNUXyvFbS76
VfSbKFf6dkr/UJSGufpX/OCK5+xV0V0qGynuVeZe4fEEFX5d4StVfpD4taK3
lLZGcUcr/XnR2tx9K0UzEvexvvJvr7yni24uTDeJ6hVO+1b0D9+XNSu+VnVM
Fd9W+Xuob9sr7ljN3VlVl/tK9JfS7xXNVDtnMfdKayk6T/O/X9Xfaq2oYdVz
zLeeEXnuqYO6jqm6Dzvo/wFK6yQ6oupveIb4dyJ/29HKc2qYr19y78s6SksY
s/JuqPQ3xZ8iaiT+NNWxv/h1GLP4xoXPHs6gTcVvW7gv9Km1+Baqc6b4Dsq/
s8IPKfybwncp/LnCc0W/K7yF6JPCa/Jd8R1jr1XKtBM1z11X26rHQh8Or3pt
7i/aLfUara/D4UrOPtEazcd5yjNEdY1XuG/VefcT7Zq6TKvCc8GctBTfrPBe
Zc82EX89+0NlrxINrHpvdxO9WnqPzwhnJmflCaKXxb8k6iO+r2iZ+tBJ5ZqI
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
ZEBkQeoDa/g/jgSbVg==
            "]], Polygon3DBox[CompressedData["
1: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
67hHf8qRK+D/4jA2xA==
            "]]},
          Annotation[#, "Charting`Private`Tag$78053#1"]& ]],
        Lighting->"Neutral"]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
KA==
            "]], Polygon3DBox[CompressedData["
1:eJxFmwf41uP3x799e77W8xmPEolKVEgSGipSGclq2JK0qbSUhuzsyIgQkkop
oVS2kj2yCUllFZWy+Qn/96vzdv2v63lf13nOvcfn3Oc+59x1eg7uMqi8rKys
ZqGsTL+yFsWyskOEE4WOQiuhpdBJ6CyMF24QJmRlZTcLy/KysreEk8U7RXg7
Dx70qcL1ynOd8JTwdBZ53xROKkaZk0R3EY5KysqOFgYI/YWPlPaxkJbKyhLh
dPHOEA51n+hLF+E64Vr6pbpvFN7Jow+0fRrtOw9pN2XRd3jQjOF+YYrQW7w+
wrt51EHZ04WmaruJ0EJ5WgrvK+094QylnSlkpegjfTtTWKQ8C4XHhQXCDmlZ
2fbCJmGz8KR4TwgPCjOFj8Xbo6KsbDfhLNVzq3i3CINU92BhnvCMFuYr4RO1
+0EefaDtrsbDSltViLSbPA+PCo95jRjnPGF+FmvZwmvLmh4s3j/aAJ8JPYox
NuaAsTNGxn6wcEgWc8DeaC6c4D3ymPC02n5CuJd59h652eOY4Hl/zH24Q2il
sf6l/OWl6Ctr94j7/JPK/ih8IawSBmlOzxc+Ef2psFbz9a1QTXl3Fl5SX18U
dhGqm14q7Gze/Sr7o9r6THhF/98QXheeEf9Z4TXRrwpPiX46iTwvC1OSKNtR
9InCvWrrvizK/Ky6Pi9EXScIxwuTlXZPFnVTJ3XRxtmiu7Ef2VPCSvW9jsb/
i8r/T/8f1f8vNffzhXM0vhfEWyLsJFQzvVioat4TwiJhB6Hosb7gvIx5nur7
SnW9KVwi+l3hO9GPCF1E/yv8A199e0/4W/QW4W3R7wjlGkMloULYRijLogx5
30+iLGXI+67XZqCwvBhr1D2PMTPW04V+wvMa6wvCuaJ/UZ6fhdXCmmLMLXPI
3DHHpP3ktSfPr8UoQ94vhR20Z7YXTlGbpyaxVzYLK71nNgk/CCuEz4vRN2QK
soQ+dmdNhN5qs08eeTcKn7nMZtfxues8J48xMZYzhHOSqIOyfYWB6vMA4Syh
m9CVb1PoqDydklj7s5CH3gNniddV6CG6p+t8SnPzbCHaom/dhF559PH8LNqg
7rOFapr7nYTuos/hG0iDB91DqC56F6Gn6F5Z0OQhDR510wfapg1ka1E4LQkZ
u1BjXiDcL0wV3kGmC88Kzwm7K+9uwh5CHaFmKXjQewqHCYcKPWhD2FV0Ze33
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
            "]], 
           Polygon3DBox[CompressedData["
1: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
eQ==
            "]]},
          Annotation[#, "Charting`Private`Tag$78053#2"]& ]],
        Lighting->"Neutral"]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1: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
mHOzl3vd0+sh1uuZ5fqmk9yLvf4Pql6guQ==
           "]],
          Annotation[#, "Charting`Private`Tag$78053#3"]& ]],
        Lighting->"Neutral"]}, {}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl02VTFlEYBuBFxA8o2EUpdncXIG0LqKCAiCKKCnZ3K92INdaM+Qv8F+pH
259gzThjXC/uvNc+s8/ue5+zu2cTS6tyKsMCm112RFcJXkYHQWT3IJhITybT
m8UsoR9JJLOcFAYwlYGsYSk5pJLLMQazjmmkM4T5xvti3M984iMfeM873pLl
mvAeQdCNMAL+6v/hNxu0YmXlU0AMe9nIPuK4zCYucZFC9lNEMQc4yGbmMoqF
jKPBeNXGaFSbaKaFVtpop4Ma13SqN7nFbe5Qq//LMz0pq4wOtnGUE4xmHoc4
TAmdNNJEIrO5QX1oPlzhKiO4RgvNHGcL1bRznSOUsp2t1DCeu+ZWZ26P1Ic8
4D73qNd/oT7nGU95wmManHvjfl7zigmyFjE29D4ZwwJGModMhjOLYWSQwEzi
Q+tK5hKSSKZMfowaSxzxJDCM9c599c6/8Z0f/CRTf6isGWygiumsZw+V5LGb
XVzgHOdJYxBrWc0qKljJCvozhb70IZpJRIWyjF3BTnZQzvaIriUalKibKaaI
QvyC4kjHFNKnm3WqKSpYZneWNlrJZid1lFPLDrI4zRlO0Ytw/8+XV0CUzByZ
ueThMEhRl5JKGulkhJ5b6PuK+P/t/wMRTWjA
        "]]}, 
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0+VWVFEYgOE9AwMoCEp32600mJfgJXgBej1KqoCF3a1gd3djdxcgPix/
POvd8605sc/MKVu6fMmySAihn8XJIfREQ6hKC6GaGmqpo54GGmliU3wIj+jh
N49JiYVQTB75jGEG05lJKoO+N1eHtErHMo7AM7MjZFg/1+NkWb/SU7zhHO+5
RG5KCDlkk0UmGaTTax8d7rOdNlppoZmVrOCyc3zgPPWuU0cDCcTIJp44MokS
IZ1qhh03R/9qmu7UIi2kgFJ2mM3WPzpLB7RRd+k8raWGpz7vZg/76ecAhzhK
Ly84wWnO8JYLfOQqefadTwGFFFFMCaWUUU4FlfR5Rp2eQxfdXHOOK1zkHWd5
zUle0scxDnOQfexlO9t4wlaa7GejbiDJOpccEpnAWvOJ2qX3+coa7vKZVdym
jRu0MMr9JZFIAjHiiSNKhMBwqt+DIQYZoNnx12nlFu3cpINP3GE1X7hHJ98o
c4/lPLDuZpL1T63U8SQzmhK2mE/VaVQwhclsNv/Fen6M7MPsoX5n3ch/wDs3
nwUsZFHy//fwHw+BdL4=
        "]]}, 
      {GrayLevel[0], 
       Line3DBox[{1030, 785, 1026, 1011, 800, 815, 830, 845, 860, 875, 890, 
        905, 920, 935, 950, 965, 980, 1015, 1032, 995, 1028, 1020, 996, 997, 
        998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1017, 
        1033, 1009, 1029, 1021, 994, 979, 964, 949, 934, 919, 904, 889, 874, 
        859, 844, 829, 814, 1013, 1031, 799, 1027, 1019, 798, 797, 796, 795, 
        794, 793, 792, 791, 790, 789, 788, 787, 786, 1018, 1030}]}, 
      {Opacity[0.5], 
       Line3DBox[{1353, 2783, 1342, 1710, 1343, 1726, 1390, 1928, 1747, 1414, 
        1941, 1768, 2181, 2179, 1951, 1956, 2199, 2514, 1465, 2213, 2499, 
        2220, 2218, 2521, 3779, 2246, 1804, 1483, 2003, 1506}], 
       Line3DBox[{1364, 2148, 2798, 2800, 2799, 2469, 2157, 2807, 2810, 2808, 
        2477, 2168, 2604, 2171, 2423, 2425, 2175, 2429, 2701, 2702, 1439, 
        2512, 2715, 2714, 2713, 2813, 2203, 2657, 2204, 2663, 2718, 2717, 
        2847, 2205, 2716, 2857, 1440, 1771, 2433, 2434, 2662, 2661, 2658, 
        2659, 1753, 2178, 1399, 1732, 1398, 1733, 1377, 1720, 1372}], 
       Line3DBox[{1370, 2656, 1368, 2651, 2415, 2496, 1717, 1369, 2473, 2161, 
        2550, 2568, 2547, 2160, 2472, 2471, 2543, 2544, 2414, 2650, 1365, 
        2777, 2648}], 
       Line3DBox[{1382, 3797, 3772, 1739, 1400, 1738, 1405, 1759, 1427, 1776, 
        1446, 1966, 1787, 2208, 2207, 1980, 1982, 2238, 1996, 1491, 1811, 
        1492, 2017, 1513, 1820, 1514, 1835, 1547, 1833, 1549, 1852, 1579, 
        1851, 1580, 2325, 2085, 2087, 2360, 2108, 2110, 2747, 2742, 2745, 
        1664, 2823, 2827, 1690}], 
       Line3DBox[{1500, 2006, 1814, 2265, 2014, 2586, 2735, 2736, 2270, 2619, 
        2271, 2015, 2257, 2575, 2574, 1509, 2530, 2258, 2525, 2526, 2254, 
        1994, 2524, 2230, 2231, 2503, 2228, 1978, 2520, 1456, 1785, 2607, 
        1960, 1438, 1770, 1947, 1417, 1750, 2603, 1934, 2768, 1393, 1729, 
        2805, 2757, 1356, 1714, 2794, 2786, 1347}], 
       Line3DBox[{1527, 2029, 2027, 1521, 2024, 2022, 1519, 2771, 1496, 2622, 
        2666, 2665, 2261, 2262, 2242, 2563, 1480, 2438, 1988, 2612, 1987, 
        2210, 3823, 3822, 3831, 3821, 1448, 2194, 1432, 1764, 1410, 1744, 
        3777, 3802, 1387}], 
       Line3DBox[{1533, 2037, 1531, 3824, 1571, 3832, 2310, 3833, 1574, 2676, 
        1601, 2674, 2319, 2450, 2352, 2356, 2456, 1624, 3826, 1893, 1654, 
        1906, 1680}], 
       Line3DBox[{1567, 2059, 2056, 1558, 2305, 1844, 2054, 2300, 1840, 1556, 
        2070, 2337, 2335, 1857, 1588, 2090, 2372, 1872, 2377, 2375, 2114, 
        2117, 2401, 2134, 2138, 1677, 1926, 1696, 1917, 1697}], 
       Line3DBox[{1600, 2078, 2074, 2350, 2346, 1860, 1593, 2095, 2381, 2099, 
        3787, 2126, 1647, 1891, 1650, 2139, 2144, 3792, 3816, 1702, 1920, 
        1704}], Line3DBox[{1688, 1913, 1662, 1897, 2388, 1630, 1880, 1627, 
        2107, 2359, 2086, 2084, 2324, 2064, 2635, 2063, 2644, 2293, 2294, 
        2592, 2591, 1546, 2046, 1512, 1818, 1511, 1819, 1490, 1810, 1489, 
        1995, 1477, 1799, 1476, 1979, 2206, 1968, 1965, 1445, 1775, 1426, 
        1758, 1404, 1737, 1381, 1724, 1376}], 
       Line3DBox[{1694, 1915, 2831, 1689, 2833, 2493, 2405, 2820, 2403, 2822, 
        2491, 2492, 2510, 2461, 1633, 2848, 2727, 2728, 1869, 2454, 1610, 
        2845, 2365, 2846, 2366, 2817, 2725, 2726, 2576, 2367, 2331, 2455, 
        1611, 2690, 2691, 2688, 1883, 1636, 2398, 1668, 2132, 2467, 2408, 
        2412, 1701}], 
       Line3DBox[{1695, 1916, 2406, 1669, 1900, 2399, 2464, 2578, 2463, 2567, 
        2369, 2397, 2577, 2733, 2734, 2693, 2694, 2687, 2730, 2729, 1635, 
        2732, 2731, 2840, 2396, 2849, 2395, 2462, 2460, 1882, 1634, 2404, 
        2465, 2511, 2495, 2494, 2834, 3829, 2832, 3830, 3834}], 
       Line3DBox[{2649, 2778, 2149, 2413, 1716, 1366, 2545, 1394, 2418, 2549, 
        2548, 2480, 2569, 2481, 2556, 2555, 1419, 2557, 2482, 2695, 2483, 
        2497, 2419, 1397, 2551, 2474, 2155, 2416, 2152, 2655, 2652}], 
       Line3DBox[{2882, 4096, 2876, 2898, 3298, 3309, 3906, 3625, 3435, 3325, 
        3493, 3121, 3439, 3532, 3444, 3449, 3337, 3567, 3574, 3131, 2941, 
        3689, 3692, 3677, 3144, 2983, 4101, 3153, 3011, 4155, 3043, 4131, 
        4184, 4137, 4143, 4219, 4205, 4212, 3976, 4088, 3998}], 
       Line3DBox[{3090, 3199, 3082, 3192, 3069, 3184, 4172, 3046, 3171, 4158, 
        3014, 3156, 4104, 2986, 3147, 3680, 3349, 3695, 2944, 3577, 3466, 
        3340, 3644, 2935, 3715, 2908, 3496, 3328, 3520, 3425, 3432, 3312, 
        3301, 2901, 4045, 3894}], 
       Line3DBox[{3108, 3217, 3989, 4079, 3967, 4064, 3952, 3059, 3040, 3166, 
        3940, 3933, 3926, 3921, 3140, 2969, 2931, 3916, 3739, 3737, 2923, 
        3421, 2891, 3483, 3392, 3407, 2886, 3510, 2869, 3115, 3583, 3281, 
        3592, 3884, 4039, 3257, 3369, 3367, 3244, 3229, 3876, 4033, 3861, 
        4018, 3846}], 
       Line3DBox[{3771, 1711, 1344, 1727, 1391, 1929, 1748, 1415, 1938, 1942, 
        2180, 1952, 3778, 1780, 1451, 1973, 2214, 2500, 2221, 2219, 2522, 
        3780, 2247, 1805, 1484, 2004, 1507}], 
       Line3DBox[{3794, 3813, 3789, 3809, 1678, 3812, 3788, 2127, 2123, 3784, 
        3806, 1620, 3818, 3781, 3803, 1597}], 
       Line3DBox[{3835, 4007, 3850, 4022, 3865, 3218, 3233, 3356, 3246, 2861, 
        3109, 2862, 4090, 3549, 4190, 3110, 2863, 3603, 3605, 3558, 3564, 
        3396, 3395, 3524, 3909, 3628, 3632, 4191, 3620, 3618, 3901, 3304, 
        3293, 2893, 2871, 4091, 2877}], 
       Line3DBox[{3900, 4051, 2907, 3318, 4055, 3431, 3519, 3492, 3502, 4149, 
        3642, 3639, 3651, 3464, 3347, 4198, 3355, 4199, 3475, 3478, 4110, 
        3162, 3020, 4164, 3177, 3052, 4178, 3190, 3075, 3198, 3088, 3205, 
        3096}], Line3DBox[{3993, 4083, 3971, 4207, 4200, 4214, 4138, 4132, 
        4179, 4126, 4121, 4165, 4116, 4111, 4150, 3710, 4100, 3684, 4099, 
        3699, 3470, 3662, 3474, 4189, 4188, 3542, 2945, 3674, 4097, 3668, 
        4098, 3734, 2947, 3769, 3721, 3757, 3723, 2951, 2973, 2992, 4056, 
        2993, 3003, 3021, 3029, 3178, 3062, 3076, 3956, 4068, 3978, 3206, 
        3097}], Line3DBox[{4006, 4003, 3992, 4082, 3970, 4067, 3955, 4057, 
        3945, 3944, 3943, 3936, 3929, 3924, 3143, 2972, 2934, 3919, 3742, 
        3891, 3889, 3390, 4187, 4186, 4146, 3579, 3586, 3590, 3588, 3887, 
        4042, 3260, 3882, 4038, 3232, 3879, 4036, 3864, 4021, 3849}], 
       Line3DBox[{1345, 2784, 2792, 1712, 1354, 2755, 2803, 2802, 2809, 2478, 
        2169, 2605, 2172, 2424, 2174, 2176, 2186, 1962, 2608, 1963, 2706, 
        2707, 2705, 1457, 2560, 2721, 2720, 2719, 2232, 2664, 2233, 1471, 
        2236, 2837, 2839, 2838, 2855, 2853, 2856, 1458, 2860, 2858, 2189, 
        2435, 2188, 2660, 1423, 1754, 1422, 1755, 1401, 1734, 1378, 1721, 
        1373}], Line3DBox[{1346, 2785, 2793, 1713, 1355, 2756, 2804, 1728, 
        1392, 2766, 2767, 2602, 1749, 1416, 1946, 1769, 1437, 1959, 2606, 
        1784, 1455, 2519, 1470, 2708, 2229, 2562, 2561, 2234, 2573, 2235, 
        2528, 2527, 1488, 2723, 2724, 2722, 1472, 1794, 2436, 2237, 1795, 
        1473, 1797, 1460, 2852, 2854, 2851, 2859, 1442, 1772, 1441, 1773, 
        1424, 1756, 1402, 1735, 1379, 1722, 1374}], 
       Line3DBox[{1348, 2787, 2795, 1715, 1357, 2750, 2758, 2762, 1930, 1935, 
        2165, 1943, 1948, 2183, 1957, 1961, 2202, 2517, 2518, 2225, 2223, 
        1793, 1468, 1993, 2253, 2504, 2256, 2255, 2529, 1508, 2012, 2009, 
        2268, 2266, 1815, 2007, 1501}], 
       Line3DBox[{1349, 2779, 2788, 1358, 2751, 2759, 2763, 1931, 1936, 2166, 
        1944, 1949, 2184, 1958, 1452, 1781, 1453, 1976, 2224, 2501, 2502, 
        1469, 2227, 1992, 2252, 2249, 1806, 1486, 2010, 1497, 2267, 1816, 
        2008, 1502}], 
       Line3DBox[{1350, 2780, 2789, 1359, 2752, 2760, 2764, 1932, 1937, 2167, 
        1945, 1433, 1765, 1434, 1953, 1782, 1454, 2201, 1974, 2215, 1977, 
        2226, 2523, 1485, 2250, 1807, 1487, 2011, 1498, 2005, 2000, 1503}], 
       Line3DBox[{1351, 2781, 2790, 1360, 2753, 2761, 2765, 1933, 1411, 1745, 
        1412, 1939, 1766, 1435, 1954, 1783, 2200, 2197, 2515, 1975, 2216, 
        2211, 1791, 1466, 1990, 2251, 1808, 1991, 2244, 1802, 1481, 2001, 
        1504}], Line3DBox[{1352, 2782, 2791, 1361, 2754, 1388, 1725, 1389, 
        1927, 1746, 1413, 1940, 1767, 1436, 2182, 1950, 1955, 2198, 2513, 
        2516, 2217, 2212, 1792, 1467, 2222, 1989, 2248, 2245, 1803, 1482, 
        2002, 1505}], 
       Line3DBox[{1362, 2146, 2796, 2150, 2470, 1367, 2546, 2158, 2417, 1730, 
        1395, 2553, 2710, 2709, 2570, 2422, 2173, 2487, 2698, 1751, 2835, 
        2699, 2700, 2488, 2498, 2427, 1420, 2558, 2484, 2164, 2420, 2162, 
        2552, 2475, 2476, 1718, 2153, 2653}], 
       Line3DBox[{1363, 2147, 2797, 2151, 2801, 2468, 2156, 2806, 2159, 2479, 
        1396, 2554, 2170, 2421, 2696, 2697, 1418, 2571, 2712, 2711, 2572, 
        2430, 2811, 2185, 2812, 2703, 2704, 2431, 2836, 2432, 2187, 2489, 
        1421, 1752, 2426, 2428, 2177, 2559, 2485, 2486, 1731, 2163, 1371, 
        1719, 2154, 2654}], 
       Line3DBox[{1375, 1723, 1380, 1736, 1403, 1757, 1425, 1774, 1444, 1964, 
        1459, 1786, 1461, 1798, 1474, 1796, 1475, 2259, 2440, 2439, 1809, 
        2850, 2815, 2816, 2814, 2016, 1510, 2667, 2272, 2505, 2274, 2669, 
        2273, 2633, 1544, 2632, 2589, 2590, 1832, 1545, 2636, 2637, 2634, 
        1850, 1578, 2081, 1867, 1605, 2103, 1879, 1629, 2387, 1896, 1661, 
        1912, 1687}], 
       Line3DBox[{1383, 3798, 3773, 1740, 1406, 1760, 1428, 2190, 1443, 1777, 
        1447, 1967, 1788, 1462, 1981, 1800, 1478, 2239, 1997, 1998, 2260, 
        2531, 1515, 2275, 1821, 1516, 2047, 1551, 1836, 1548, 1834, 1550, 
        1853, 1582, 2361, 1606, 1868, 1607, 2109, 2599, 2841, 2749, 2748, 
        2743, 2746, 1665, 2824, 2828, 1691}], 
       Line3DBox[{1384, 3799, 3774, 1741, 1407, 1761, 1429, 2191, 2195, 2196, 
        1969, 1972, 2209, 1983, 1986, 2240, 2614, 2615, 2580, 2617, 2579, 
        1812, 1493, 2018, 2276, 2506, 2278, 2277, 2537, 1554, 2295, 1838, 
        2048, 1552, 1837, 1553, 2326, 1581, 1854, 1583, 2362, 2363, 2594, 
        2692, 1631, 2600, 2842, 1881, 1632, 2844, 2744, 2818, 1898, 1666, 
        2825, 2829, 1692}], 
       Line3DBox[{1385, 3800, 3775, 1742, 1408, 1762, 1430, 2192, 1778, 1449, 
        1970, 1789, 1463, 1984, 2610, 1801, 1479, 2616, 1999, 2581, 2583, 
        2584, 1494, 2532, 2533, 2280, 2507, 2279, 2769, 2770, 2621, 1822, 
        2281, 2773, 2774, 2624, 1823, 2282, 2025, 1825, 2284, 2031, 1828, 
        1525}], Line3DBox[{1386, 3801, 3776, 1743, 1409, 1763, 1431, 2193, 
        1779, 1450, 1971, 1790, 1464, 1985, 2611, 2609, 2613, 2437, 2241, 
        2582, 2243, 2263, 1495, 2534, 1517, 2019, 2623, 2020, 2772, 1518, 
        2021, 2023, 1520, 2026, 2028, 1526}], 
       Line3DBox[{1523, 1826, 1528, 2057, 1559, 2053, 2051, 2302, 2301, 1841, 
        1557, 2071, 1587, 2336, 2509, 2339, 2338, 2647, 2089, 2597, 2091, 
        2376, 2115, 1637, 1884, 1638, 2129, 1901, 1670, 2409, 1918, 1698}], 
       Line3DBox[{1524, 1827, 2030, 2283, 1824, 1522, 2052, 1555, 2050, 2625, 
        2049, 2297, 2296, 1839, 2508, 2299, 2672, 2298, 2539, 2069, 2333, 
        2332, 1856, 1586, 2645, 2646, 2596, 2598, 1870, 1612, 2112, 1885, 
        1639, 2130, 1902, 1671, 2410, 1919, 1699}], 
       Line3DBox[{1534, 2038, 1532, 3825, 1572, 2307, 2630, 2308, 2313, 2311, 
        2565, 2446, 2316, 2675, 2320, 2451, 2452, 2353, 1876, 1625, 3827, 
        1894, 1655, 1679, 1681}], 
       Line3DBox[{1535, 2039, 1829, 2285, 2775, 2627, 2631, 2309, 2314, 2312, 
        2566, 2447, 2449, 2317, 2678, 1864, 1602, 2354, 1877, 1626, 3828, 
        1653, 2389, 1656, 1907, 1682}], 
       Line3DBox[{1536, 2040, 1830, 2286, 2776, 2043, 2628, 1541, 2673, 1573, 
        2315, 2291, 2448, 1576, 2684, 2318, 2679, 1865, 1603, 2355, 1623, 
        2104, 2457, 2383, 2390, 1657, 1908, 1683}], 
       Line3DBox[{1537, 2032, 2035, 1529, 2287, 2044, 2629, 1831, 2441, 2564, 
        2443, 2445, 2290, 2638, 1849, 1577, 2682, 2683, 2680, 2677, 2082, 
        2357, 2100, 2105, 2458, 2384, 2391, 1658, 1909, 1684}], 
       Line3DBox[{1538, 2033, 2036, 1530, 2041, 2587, 2042, 2626, 1540, 2442, 
        2288, 2444, 1543, 2671, 1575, 2639, 2642, 2641, 2321, 2079, 2681, 
        2083, 2358, 2101, 2106, 2459, 2385, 2392, 1659, 1910, 1685}], 
       Line3DBox[{1539, 2034, 1499, 1813, 2264, 2013, 2585, 2737, 1817, 2269, 
        2618, 2620, 2588, 2668, 2738, 2739, 2670, 1542, 2535, 2289, 2045, 
        2536, 2292, 2061, 2640, 2062, 2643, 2322, 2323, 2080, 1866, 1604, 
        2102, 1878, 1628, 2386, 1895, 1660, 1911, 1686}], 
       Line3DBox[{1562, 1845, 1568, 2075, 2351, 2347, 1861, 1594, 2096, 2382, 
        2378, 1873, 1616, 2121, 1892, 1651, 2140, 2145, 3793, 3817, 1703, 
        1921, 1705}], 
       Line3DBox[{1563, 1846, 1569, 2076, 1591, 2348, 1862, 1595, 2097, 1614, 
        2379, 1874, 1617, 2118, 2122, 1652, 2141, 1672, 1903, 1673, 1922, 
        1706}], Line3DBox[{1564, 1847, 1570, 2077, 1592, 2349, 1863, 1596, 
        2098, 1615, 2380, 1875, 1618, 2119, 1640, 1886, 1642, 2135, 1904, 
        1674, 1923, 1707}], 
       Line3DBox[{1565, 1848, 2060, 2303, 1842, 1560, 2072, 2342, 2340, 1858, 
        1590, 2345, 2092, 2373, 2094, 1619, 2120, 1641, 1887, 1643, 2136, 
        1905, 1675, 1924, 1708}], 
       Line3DBox[{1566, 2058, 2055, 2306, 2304, 1843, 1561, 2073, 1589, 2341, 
        1859, 2344, 2343, 2093, 2374, 2371, 1871, 1613, 2116, 1888, 1644, 
        2402, 2133, 2137, 1676, 1925, 1709}], 
       Line3DBox[{1598, 3804, 3782, 3819, 1621, 3807, 3785, 2124, 1645, 1889, 
        1648, 2142, 3810, 3790, 3814, 3795}], 
       Line3DBox[{1599, 3805, 3783, 3820, 1622, 3808, 3786, 2125, 1646, 1890, 
        1649, 2143, 3811, 3791, 3815, 3796}], 
       Line3DBox[{1693, 1914, 2830, 2826, 1667, 1899, 2819, 2843, 1663, 2821, 
        2490, 2394, 2601, 2393, 2595, 1609, 2741, 2740, 2453, 1608, 2364, 
        1584, 1855, 2327, 2328, 2065, 2066, 1585, 2067, 2593, 2068, 2330, 
        2685, 2329, 2686, 2538, 2334, 2540, 2541, 2368, 2088, 2542, 2370, 
        2111, 2689, 2113, 2400, 2128, 2131, 2466, 2407, 2411, 1700}], 
       Line3DBox[{2878, 4092, 2872, 2894, 3294, 3305, 3902, 3619, 3621, 4192, 
        3633, 3629, 3910, 3525, 3526, 3397, 3531, 2883, 3117, 3565, 3559, 
        3606, 3604, 2864, 3111, 3548, 3597, 3550, 3271, 3370, 3261, 3247, 
        3357, 3234, 3219, 3866, 4023, 3851, 4008, 3836}], 
       Line3DBox[{2879, 4093, 2873, 2895, 3295, 3306, 3903, 3622, 3319, 4193, 
        3322, 3630, 3911, 3527, 3330, 3398, 3331, 3530, 3547, 3529, 2884, 
        3118, 3557, 3615, 3560, 3612, 3607, 3382, 3594, 3598, 3551, 3272, 
        3371, 3262, 3248, 3358, 3235, 3220, 3867, 4024, 3852, 4009, 3837}], 
       Line3DBox[{2880, 4094, 2874, 2896, 3296, 3307, 3904, 3623, 3320, 4194, 
        3323, 3631, 3912, 3528, 3443, 3332, 3447, 3503, 2912, 3634, 2939, 
        3657, 3571, 3661, 3659, 3473, 3698, 3702, 3687, 3709, 3705, 4153, 
        4114, 4119, 4168, 4124, 4129, 4182, 4135, 4141, 4217, 4203, 4210, 
        3974, 4086, 3996}], 
       Line3DBox[{2881, 4095, 2875, 2897, 3297, 3308, 3905, 3624, 3321, 4195, 
        3324, 3442, 3438, 3535, 3333, 3448, 3504, 2913, 3635, 3636, 3566, 
        3573, 3130, 2940, 3688, 3691, 3676, 3675, 3706, 4154, 4115, 4120, 
        4169, 4125, 4130, 4183, 4136, 4142, 4218, 4204, 4211, 3975, 4087, 
        3997}], Line3DBox[{3091, 3200, 3083, 3193, 3070, 3185, 4173, 3047, 
        3172, 4159, 3015, 3157, 4105, 2987, 3148, 3681, 3350, 3467, 3459, 
        3653, 3341, 3645, 2936, 3716, 2909, 3497, 3329, 3521, 3426, 3433, 
        3313, 3302, 2902, 4046, 3895}], 
       Line3DBox[{3092, 3201, 3084, 3194, 3071, 3186, 4174, 3048, 3173, 4160, 
        3016, 3158, 4106, 2988, 3149, 3682, 3351, 3468, 3460, 3654, 3342, 
        3646, 2937, 3717, 2910, 3498, 3522, 3515, 3427, 3434, 3314, 3303, 
        2903, 4047, 3896}], 
       Line3DBox[{3093, 3202, 3085, 3195, 3072, 3187, 4175, 3049, 3174, 4161, 
        3017, 3159, 4107, 2989, 3150, 3683, 3352, 3469, 3461, 3648, 3652, 
        3647, 2938, 3718, 2911, 3499, 3523, 3516, 3428, 4052, 3315, 2904, 
        4048, 3897}], 
       Line3DBox[{3094, 3203, 3086, 3196, 3073, 3188, 4176, 3050, 3175, 4162, 
        3018, 3160, 4108, 2990, 3476, 3353, 4196, 3345, 3462, 3649, 3637, 
        3640, 4147, 3500, 3490, 3517, 3429, 4053, 3316, 2905, 4049, 3898}], 
       Line3DBox[{3095, 3204, 3087, 3197, 3074, 3189, 4177, 3051, 3176, 4163, 
        3019, 3161, 4109, 2991, 3477, 3354, 4197, 3346, 3463, 3650, 3638, 
        3641, 4148, 3501, 3491, 3518, 3430, 4054, 3317, 2906, 4050, 3899}], 
       Line3DBox[{3098, 3207, 3979, 4069, 3957, 3077, 3063, 3179, 3030, 3022, 
        3004, 2994, 2974, 2959, 3132, 2952, 3724, 3758, 3722, 3770, 2948, 
        3731, 3735, 3669, 3672, 3671, 2946, 3541, 3543, 3720, 3719, 3343, 
        3569, 3344, 3663, 3471, 3696, 3700, 3685, 3707, 3703, 4151, 4112, 
        4117, 4166, 4122, 4127, 4180, 4133, 4139, 4215, 4201, 4208, 3972, 
        4084, 3994}], 
       Line3DBox[{3099, 3208, 3980, 4070, 3958, 3078, 3064, 3180, 3031, 3023, 
        3005, 2995, 2975, 2960, 3133, 2953, 3725, 3759, 3765, 3763, 2949, 
        3732, 3736, 3670, 3673, 3664, 3711, 3451, 3124, 3507, 3458, 3540, 
        3457, 3655, 3656, 3570, 3660, 3658, 3472, 3697, 3701, 3686, 3708, 
        3704, 4152, 4113, 4118, 4167, 4123, 4128, 4181, 4134, 4140, 4216, 
        4202, 4209, 3973, 4085, 3995}], 
       Line3DBox[{3100, 3209, 3981, 4071, 3959, 3079, 3065, 3181, 3032, 3024, 
        3006, 2996, 2976, 2961, 3134, 2954, 3726, 3760, 3766, 3764, 2950, 
        3733, 2925, 3665, 3714, 3712, 3452, 3505, 3454, 3334, 3413, 3536, 
        3410, 3614, 3616, 3561, 3613, 3608, 3383, 3595, 3599, 3552, 3273, 
        3372, 3263, 3249, 3359, 3236, 3221, 3868, 4025, 3853, 4010, 3838}], 
       Line3DBox[{3101, 3210, 3982, 4072, 3960, 3080, 3066, 3182, 3033, 3025, 
        3007, 2997, 2977, 2962, 3135, 2955, 3727, 3761, 3767, 3750, 3743, 
        2916, 3125, 3666, 3423, 3713, 3453, 3506, 3455, 3335, 3414, 3537, 
        3411, 3617, 3291, 3562, 3286, 3609, 3384, 3596, 3600, 3553, 3274, 
        3373, 3264, 3250, 3360, 3237, 3222, 3869, 4026, 3854, 4011, 3839}], 
       Line3DBox[{3102, 3211, 3983, 4073, 3961, 4058, 3946, 3053, 3034, 3026, 
        3008, 2998, 2978, 2963, 3136, 2956, 3728, 3762, 3768, 3751, 3744, 
        2917, 3126, 3667, 3424, 3456, 2914, 3538, 2888, 3412, 3292, 3563, 
        3287, 3610, 3385, 3601, 3283, 3554, 3275, 3374, 3265, 3251, 3361, 
        3238, 3223, 3870, 4027, 3855, 4012, 3840}], 
       Line3DBox[{3103, 3212, 3984, 4074, 3962, 4059, 3947, 3054, 3035, 3027, 
        3009, 2999, 2979, 2964, 3137, 2957, 3729, 2926, 3752, 3745, 2918, 
        3416, 3486, 3415, 2915, 3539, 2889, 3119, 3402, 3288, 3388, 3611, 
        3386, 3602, 3284, 3555, 3276, 3375, 3266, 3252, 3362, 3239, 3224, 
        3871, 4028, 3856, 4013, 3841}], 
       Line3DBox[{3104, 3213, 3985, 4075, 3963, 4060, 3948, 3055, 3036, 3028, 
        3010, 3000, 2980, 2965, 3138, 2958, 3730, 2927, 3753, 3746, 2919, 
        3417, 3487, 3479, 3544, 3399, 3403, 3289, 3513, 2865, 3387, 3285, 
        3556, 3277, 3376, 3267, 3253, 3363, 3240, 3225, 3872, 4029, 3857, 
        4014, 3842}], 
       Line3DBox[{3105, 3214, 3986, 4076, 3964, 4061, 3949, 3056, 3037, 3163, 
        3937, 3930, 3151, 3001, 2981, 2966, 2928, 3913, 3127, 3754, 3747, 
        2920, 3418, 3488, 3480, 3545, 3400, 3404, 3290, 3514, 2866, 3112, 
        3580, 3278, 3380, 3377, 3268, 3254, 3364, 3241, 3226, 3873, 4030, 
        3858, 4015, 3843}], 
       Line3DBox[{3106, 3215, 3987, 4077, 3965, 4062, 3950, 3057, 3038, 3164, 
        3938, 3931, 3152, 3002, 2982, 2967, 2929, 3914, 3128, 3755, 3748, 
        2921, 3419, 3489, 3481, 3546, 3401, 3405, 3512, 3508, 2867, 3113, 
        3581, 3279, 3381, 3378, 3269, 3255, 3365, 3242, 3227, 3874, 4031, 
        3859, 4016, 3844}], 
       Line3DBox[{3107, 3216, 3988, 4078, 3966, 4063, 3951, 3058, 3039, 3165, 
        3939, 3932, 3925, 3920, 3139, 2968, 2930, 3915, 3129, 3756, 3749, 
        2922, 3420, 2890, 3482, 3391, 3406, 2885, 3509, 2868, 3114, 3582, 
        3280, 3591, 3883, 3379, 3270, 3256, 3366, 3243, 3228, 3875, 4032, 
        3860, 4017, 3845}], 
       Line3DBox[{3847, 4019, 3862, 4034, 3877, 3230, 3245, 3368, 3880, 3258, 
        4040, 3885, 3593, 3282, 3584, 3116, 2870, 3511, 2887, 3408, 3393, 
        3484, 2892, 3422, 2924, 3738, 3740, 3917, 2932, 2970, 3141, 3922, 
        3927, 3934, 3941, 3167, 3041, 3060, 3953, 4065, 3968, 4080, 3990, 
        4001, 4004}], 
       Line3DBox[{3848, 4020, 3863, 4035, 3878, 3231, 4037, 3881, 3259, 4041, 
        3886, 3587, 3589, 3585, 3578, 4145, 4185, 3389, 3409, 3394, 3485, 
        3120, 3888, 3890, 3741, 3918, 2933, 2971, 3142, 3923, 3928, 3935, 
        3942, 3168, 3042, 3061, 3954, 4066, 3969, 4081, 3991, 4002, 4005}], 
       Line3DBox[{3892, 4043, 2899, 3299, 3310, 3907, 3626, 3436, 3326, 3494, 
        3122, 3440, 3533, 3445, 3450, 3338, 3568, 3572, 3575, 2942, 3690, 
        3693, 3678, 3145, 2984, 4102, 3154, 3012, 4156, 3169, 3044, 4170, 
        3067, 4144, 4220, 4206, 4213, 3977, 4089, 3999}], 
       Line3DBox[{3893, 4044, 2900, 3300, 3311, 3908, 3627, 3437, 3327, 3495, 
        3123, 3441, 3534, 3446, 3336, 3643, 3339, 3465, 3576, 2943, 3694, 
        3348, 3679, 3146, 2985, 4103, 3155, 3013, 4157, 3170, 3045, 4171, 
        3183, 3068, 3191, 3081, 3089, 
        4000}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
    VertexNormals->CompressedData["
1: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
qckecIm99jU6xuV6j/WWPPwPgmeE1w==
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{380.310078585008, 275.6698500833151},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-5., 20.}, {-10., 10.}, {-500., 500.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.4709376818560106, 3.0620741820791544`, 1.360852454622632},
  ViewVertical->{-0.0611335397662024, -0.3974951272521825, 
   0.9155655706318503}]], "Output",
 CellChangeTimes->{{3.864994199689621*^9, 3.864994364285956*^9}, 
   3.864994396130711*^9, 3.864994504717518*^9, 3.864994542112433*^9},
 CellLabel->
  "Out[214]=",ExpressionUUID->"0b25abd4-2d07-4dcc-bae3-2958093715e4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"gr", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Texture", "[", "contourPotentialPlot1", "]"}], ",", 
       RowBox[{"EdgeForm", "[", "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rm", ",", "pm", ",", "level"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"rM", ",", "pm", ",", "level"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"rM", ",", "pM", ",", "level"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"rm", ",", "pM", ",", "level"}], "}"}]}], "}"}], ",", 
         RowBox[{"VertexTextureCoordinates", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
     RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", "Black"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.864993575045636*^9, 3.864993576502808*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"1977914a-64ba-4614-85ba-3770e73641c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"potential1", ",", "gr", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"BoxRatios", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0.6"}], "}"}]}], ",", 
   RowBox[{"FaceGrids", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Back", ",", "Left"}], "}"}]}], ",", 
   RowBox[{"Background", "->", "White"}], ",", 
   RowBox[{"ImageSize", "->", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.864993563701008*^9, 3.864993593873316*^9}, {
  3.864993636915388*^9, 3.864993655209297*^9}, {3.864993732992659*^9, 
  3.864993773749105*^9}, {3.8649941850416594`*^9, 3.8649941855102262`*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"8ab1d283-1c45-4b0a-9aa2-3a9dc92898c2"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1:eJx03XlcTN//B/BKmxbSrrQnVJREsr1viGylbAmVpUSWLCFLthBComxll50o
GZE7jYykjUlNCBMqKiZSU9Pyuz4+59zf90wf//R4PL0eZ+68utvcOfdmsWCl
T5CCnJxc7+5ycl2Ynxz9ne2r3paA3D//Pj/yfvx2bImoEiwnvrsdZy1PZXh0
M//zkzv2zawm+6p/c7rcvz+t//0pJ7fibfryt+ldZfz+8j//0UiTzvnH0euy
PjHOesKf1yP93Z/hl3eX8b/j68v433+mMt57wp8XsJTxv69rI+Mr/3lf/WT8
6J/4hP7/sZyOMv5PP0Oc/mM5nf/Ddbn/LK61xf+Ow/RMOuqZdNQz6ahn0lHP
nY+vL+N//5nKOOq589e1kXHUM+mo586X01HGUc+dL6fzf7gu95+Xiesl0zPp
qGfSUc+ko55JRz13Pr6+jKOeSUc9d/66NjKOeiYd9dz5cjrKOOq58+V0/g/X
5ab/fX8yPZOOeiYd9Uw66pl01HPn4+vLOOqZdNRz569rI+OoZ9JRz50vp6OM
o547X07n/3Bdrsc/y9VDpmfSUc+ko55JRz2TjnrufHx9GUc9k4567vx1bWQc
9Uw66rnz5XSUcdRz58vp/B+uy0375/0py/RMOuqZdNQz6ahn0lHPnY+vL+N/
/5nKOOq589e1kXHUM+mo586X01HGUc+dL6fzf7gu987/nEewPZOOeiYd9Uw6
6pl01HPn4+vLOOqZdNRz569rI+OoZ9JRz50vp6OMo547X07n/3B0XiccQfZM
+v+e17H+v+d1rP/veR3r/3teR46vL+N//5nK+P+e15GvayPj/3tex/r/nteR
y+ko4/97Xkcup/N/uC43829/8D/jMD2TjnomHfVMOuqZdNRz5+Pry/jff6Yy
jnru/HVtZBz1TDrqufPldJRx1HPny+n8H67Lzfi7P6HInklHPZOOeiYd9Uw6
6rnz8fVlHPVMOuq589e1kXHUM+mo586X01HGUc+dL6fzf7gud9Lf46NMz6Sj
nklHPZOOeiYd9dz5+PoyjnomHfXc+evayDjqmXTUc+fL6SjjqOfOl9P5P1yX
++B/9otsz6SjnklHPZOOeiYd9dz5+PoyjnomHfXc+evayDjqmXTUc+fL6Sjj
qOfOl9P5P1yX2+fv5xeZnklHPZOOeiYd9Uw66rnz8fVlHPVMOuq589e1kXHU
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
pR/Y48iebhPeS/2VqLOzo0bGDfyJ81ndXhdcvC7HvT232OWGuBbnn5YrnIvM
lOOubF6bG3O/FudX6v2+nxreRIfVdtcY94r9fWkIgscWOTTRoffiHqxZwP6+
dt8e817sLIGb7dUfYizN8fqgOLpx8V0TCWSs0S12NUcuhjV3HaqGKknAcHGu
KCzbGOdDrjj6NNU0QZrCsY4tz41x/qqZfMeqjRKgvds/1Cmy16XN8xpHbA+W
wPHNjsE/FNjr0ufvJh+Vuy6BjRHdJR5x7PWNn83NiS4JpIuhZHDd3s1LJaDu
aBSbvpy9XjH17FsXfR/SxbAkatB3dS+032fPB1w4T3Uv7CddDNHaTdetJ+hQ
3IXZp4Iuc9j9MPLNHi99b93F+5/VNbf8Gxq0KYni8LfhJSk4/9T/V/7srjpU
YvX4At+oqzj/Yn1f0/vBupTiHrHipYN5OB+xP5a3x0KXWmUYM3rHhac4381M
+N3PH503o+8pimj/Ac7j+gaSLoYzC6e2ml1QJOZFF9Gnq3mPR1wiXQzrNDwe
RyoqEfN7i+geg0f9UlchXQxKd0u51y+qEvP6imi9PgG9Iq+TLgb0veTomnM9
AqPr8ftFrvloQn1kVD1+v39/6nKvri4NU3/DHkeQn3ZIbwsuZY8j6PvNxnnP
fwyPqMJ55PNPKIevWFZF5PWp/Bk856HtH4m8PjVkpsusUn0Rzt8M6dNldia6
/ojmfRXRN58e0U3LJp35nDgpvP9Y+WZiHlcR7XFjziP9Bgnh7HV7rTWbT9aH
ZOA88skPcjwKCx7gPPoerubw5CKzDvY4jvxpr+XcfXXscZzbEDh8+vDeFLk8
gsXJzgkjSRdDyEeNwNKnbcT8qCK6OM5tfVUm6WJA39u6cuW+jQ9vweMj/6U4
4/CcZS14/ACua6vKJnJeUxHtN3uc+Mhm0sXQ8v37HqGgg5hHVETbHErm2haQ
zuwP//2+2PPSPBPfJHb/j/zqph6p04+z+/9037gcR4kdRY6vu4rZWJpJZ85z
no2uXbJZjphnwnxurbmo5ryRdDGg76m7qicOSbNiP1ciT0l7eHazOfu50ju9
R7fiFHI+TBHt81ZEJdwhXQxuoHA36oMcMR+jiHZcMrZdWE66GPLaayaGFQ6Q
yY8VDh3Vs4h05vjY1tVjmDE576KIfn6pdUphT9KZzwUW97R63nCQyZfMfXHk
loyj9UeeehV+RXXqbTaP5/EmxKTNy2bzMR5fP56aTs5PKKKX+/uoV/mQzmwv
G7gTE/uT8wGY9bn54owPMs4cL0r3eG0oU6SO+JoFDR3NHr88RmSs2PdWkRrU
o8K/wI09fkH7xBuHxyhRkRN2hsR5s8fTA4IPod3HKVHna1681fZmj6cB6nEP
5VfrcDdKRG819Nj9W9POjJiYMB1uwMaFNxZosfu3RVbiT+OP5oKhzap3nKTH
OK/er0N7YtgLuJz+c969kZk4/61QYmZdbUqpto/vKBzyDG+PB6NvTi6rMKUG
v+Wun36bj7dHu/2CaVUBrWDb5q5oGclet4lUnfdp+4xWiFzwKaw5gr1u83zX
i/3J0zrg0aVRt7QPsNdR4wrPJRVN7oA7VYV30vaz11E70iNvfFkgR5267bTh
9wF2fd485lrt7EA5Kr9K66k4hl2fp3WbJ3xYJEfZiq7YcsPY9TP3bcPhtAI5
inviy1rxSnb91M95Wxla2J+aucZ+1Li77HWVV8oLgxcX9ad2Xnx5QZjKXldx
NRNNWMCst+M3bdk8w5Jd3xafmp1y20Ce2tkijW23YNe3BeV0Vq2DA7VKzUTN
Kom9jpoxdEYE7ehAvSgUOqw9zV5HHRF6656KgSN10lze1jOcvY56YGk//wWM
93oQ5/IhnL2OOsxv/tp19kqUv/3NiD2/2euizz8NkJo4KFG9eX2urW9gr4sG
9555xkZBiZoTbpk8ejH7/cukdeYjfzLH8akO1JfAEPb7F6fNVwd9qVWiZo9J
/nm3nr2Oat7SFOcnVqKele/Omypmr6OuSOqrFMxTomY62syf0qaN8442/a72
5CtRYfkxK3PatXH+pGpj/pHpKlSvZpW+4hnsdVf3QYrf985WoezVFnaTeLPX
XXuaTtXLnalCNYxpt1lcxH7/Mv5wOCdtjgq1Vflr95nF7PcvPccVNu01U6M+
R/Rb/CmR/X7E1985/35vNWrigZvvi8+x34/0vFkeK1VQ4kbdzFsffu073l5C
30mXHuxQ5NaP7X888sx3vL24bO3z8mSkHPciNzerYFsdzu+N0Jy7a7scV0nZ
9FXE+jqc9y254dq2ooo+k3Sun6FAhPP1chvfRG+poq31jo0Of8aePxw4NHJF
lPl3cMraGlXxrRxvj6XFdYF7JtRBN0e5EVVx7/D26PLt9soXh3/BMNvfRVn7
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
kB5L93V88HH6MNJTILIrb8rVoaQzx8GK3Iy2IaTnge0jQR+fwaQLYFv8u6PJ
g0gXQsmKL/LSgaSXg73H9xVejqSLYIdF09sLAwhneha2dHhI7Ml8JQwoVk2f
bEfmqyHqZg+rc/3IPHPestso9ncfMl8HKn4PY67I3E/Bpymat6VGxjl0hHXu
igFupMfSd/e+DFgl4ylQ8104NU3GeWA9/aNbk4znwbwHVU7DRpMugATTH1Zb
ZFwIhTsbdbkyXg6qX9uUuowhXQRunkpN7qQzPW9M1aiOlslXQqqhbtkLmXw1
1G4xzu0mc79JDVh/snzoTTrTc+AJW8WMAvJ+Ez7da3Bg6dU80jm0sCj+2olc
0pnj4LIXW/bmkJ4CU1XlvSP4pPNA4+IQ6yXZpOdBDixr8uWRLoCdb8/lenBJ
F8Ko9aVJQx+TXg4t2pqr+j4iXQTpt0aPNcwgnOl51cQNBqocMl8J9pU3vzXd
I/PVUL39U2ZVKpmvgYsmPQ+X3iHzdWD2OeWI4SnyPh0+vW6sTkiwjHPo/Ivh
I9JkPJa2VhJqKSSSngIbg4Z98ZJxHrx8mvggScbzoK9Nx4EaGRdA5O75C1yT
SBdCceWTIXtkvBzsxtuov5ZxZr9xOfqD5WnC/+w3VGpSw0j/s98ImRL9WCZf
Dbtybs/VkLm/qQbe9dUe6Ec60/M3Q3W3IkPyvic+LayrijPRJ51D83nZn5fq
kB5Lpx47N4SjRXoKnF0WGa3UjXQeHHSb88ZHnfQ82Kw/1P6sKukCWFKjG1mn
RLoQZnLrC4d1Ib0cxsYXWETLkS4Cp6XX17xuI+7nYno2g+inllLyPq9K0NAN
MgiTkHnmOFjttiTzN5lnjoOZpg/VfpH5Oth6xKRkyD3yvjA+beFzP+eIjHPo
J1reD8UyHksHFX67OSWd9BRQORh19pqM8+DqZNMjKvdJz4NJ6pxdi2ScOa97
7r0hS8aFcCi6Zqkph/RyGDh+17xNMi6CYiWzqULSmZ7XZXNGD35A5ivBcKfP
4DjSmZ4futX2+SGTrwF/ud1Gk8n77Jiev4aPfj8ki7yfjk9Pf2oG3pmkc2ha
t+1M6APSY2nbRW/kdt8jPQXiU+/PP3uHdB7IdYnnZdwkPQ9CfVZbvb5KugBK
znlF/bhEuhDc6u2/dD1PejncoNTGWZ8mXQSGsVXJo04SzvS880O2yuwEMl8J
3wecD1kTR+arwS9y6/MDB8l8DfDz59pe2Ufm6/D9iV9tHs6tX4HmvfPx/Ynb
Pi7o2g3fH8zBbnBSLd02FHks9lvT7i4YvwR5Ch7fXdOv+6LFyHnY3/HlH20L
Qp6Hfc22qyFJC5ELsKsN89bLmI9ciP3cL0lWSQDycuxDb55d8WsechH2wmAP
Y625Wrhn5MHm4mf2fihfib2t7NjaCb4oX4396BGwCJ6J8jXYbadU5e+YjvJ1
YBpdMXGlHHn/Jp/e0Cu+QlmedOb8OWX8xtMyHkvbu7f0GKJAegrsLrtxNV/G
efBxeYBbUBfS82CYgnZZq4wL4EhCdthRRdKFUGu7XtVeiXTmcwrd7+wTGRfB
2WnvXOYoE8703Fx1sPAn6X+u+212W7xPhcxXww2thnYLVTJfA8qXkhMekL4N
zcc0pWa/eKn2shjd98rH82pyYzd2DCtEzsE+fKZVw8XnyGOx3zDOq+6WjTwF
j28iWlu+4TFyHvaDySavKjjI87DLLePzJ6ciF2BfNXDlw/SbyIXYKxoNUsyv
IC/HPv0R9+K+88hF2Pnbl5xoSPzXmZ6Ru4zXPuh/DOUrsV/ReLgj53ALvr6K
3OjVwvVOMS34+irymGMayxJ3t+Drq/dEvbUWR5L3C/Npr4eTu+/aRjqH/nZ0
TbcLO0iPpaNWnNTMiiI9BUw9sjQ+7CadBw8sqtXboknPg+nSburG+0kXwPfi
wWquB0gXQvStuV1nHSK9HKyid6qGHyZdBI/nX1M5coRwpmff4S+V78ST+Ur4
qStRKjxG5qvhwHdTpboTZL4G+ua4K6onkvk6fJ/148sSm89CdB8QH99nfUGs
Ore6FDkHe7Rrz8O1JchjsS/f0Y8vfo08BY/v88JV2lCMnIfdRXeiY7MAeR72
XvP8gtpeIRdgl0teelIeuxD75+8bC5VeIi/H/txlv6JaEXIR9lvbTrl2K/yN
vy9AHvf8+grtApSvxL5O+9EF/XyUr8Y+Z06e0CgP5WuwUxffaZq9QPk6QPeb
7x5Rf8zgtQD3jNxQ9bzux3oB7hn5NYHP4SvdinHPyEec6dJtlV0x7hl5wdK0
fa4exbhn5IFDglQUgopxz8h/yutH5W4vxj0jj8rnyx05XYx7Rq5/Yv2WOQ+L
cc/Iryzq22IlLMY9Ix/mWLautqEY94w8T7r3V1qP17hn5P7PhoVtGfAa94z8
R1xNrfuk17hn5Nv8E5d0C3mNe0bfs9z+0W5UdgzdL8+nkScYxZWYXETOwb7F
vXfcghTksdgXhnGmXH6EPAWPP/HUpK61Och52B3577MdXyPPw25Qv2pbuAi5
AHubsdKIjDrkQuyfxx1vam9GXo49d5Vd6hhl9vsU5HcSH6+I1ma/T0F+7Jm3
bb4p+32KZll9pGkG+RwDZnsfvnqpBU06h5Ym/ZxhnU16LL1abo1bn+ekp8DX
Bb/s/8yf/F/nQeDTNYb9BaTnQWmfhi6OQtIF4Llv7Q+nctKFwK9teDO4gvRy
GOkVzh9aRboI0u78vjO8lnCmH3vddUmj6sl8JVxc1xjt1kjmq8G4bN3asVIy
XwPPk6S3reSI5z8w62HCwB/bGr6Qz3ng06lvVjbckXEOXbRTvHiljMfSdfar
3trLeAqoldR7fvtMOg/6bF3NuyzjeTC276/BQTIugPkv11y1lHEhRG5s6PXx
E+nlcNIqPDZJxkWQnve7yxzS/5z3hq9bbyiTrwSxadO31+RzMJieNXLW+x+R
eT4Gc/xaJXk5VSZfh5+bIQrMtRfosts78tRpqeU2uuz2jnzXuMSDG3XY7R35
LNddUKDNbu/I+9mvEFtos9s7cqnprHPhPdjtHXl+D8rnuRa7vSM/o9ivi4kW
u70jD2vqkRbWnd3ekY/+1rIouxtyEXbd8k96hsiZnpF/Kczjh2qifCX2dN69
9bQGyldjj753uq8OcqZn5H5X9pQFq6N8HeyNEo4tu00+V4RPX0mYf6FrKukc
+tmVb/LD0kmPpSsz1gQufUB6Cijmtz4++Yh0Hlh92GXygiY9D0bXd9ss5ZEu
gMAux9/Y8Uln1mc9C9e5z0kvh6Q+147F5JEugkeugxofFRLO9Pxm0qPpda/I
fCVI5rmnmpSQ+WowCCvo4VlG5mtgyI5ZYZHvyHwdfFNMXrdf5jktfNpA8d2N
vjLOocd20f70lEd6LB2m4NFzoYynQKJ8pJecjPPguVzarqQs0vOgsePrw2Ey
zhy/Osx+lnJJF4Jn+4y+4TJeDpva9vtry7gIrrRmHb1NE870XCxtyp1M+p/P
F9L+8t8ek/lq6N+y0GUP6UzPfs0nllvL5Oug7/1Ng60ekc+x4dP79JzfRzwm
nUPXrqndXcQlPZb2fHXRoc8T0lMgxXGecMtT0nmgfUhve/Ez0vNgbV1+P7tc
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
ZTSBzUoLK2035AKwiYj1NuE0QXza5kdHsDPrs0mOT/y9JlBsKZ2hNxp5ORTx
OqZppjbBGhj0IwG7CC4tdpmxK6UJKqIORhuO0cE9b9RYObPtZhN45361OImc
6dnrTvKs8OtNwO3u/tB4LMpXg/XM9751V5rAYcbZ6UnImZ6bW/T8gpKb4PRJ
aZ0per400/PI4SWzzaKsqMKVfUy24OdL8+nVBinLgxkf/y53oTp2Dn35197t
NxmnPVZcOzELeSz9rnBhfAPjLvd61PfBngI9boy8OnyXFXXb4p5L+kzkPBgX
bZC5g/E+B30jx2LPg02L6oueM36mRZr9agZyAaRQLz5r7baiDBafUZ+PXQhf
el2SzGL8kGC0z4/pyMvBqDlS4wzjKlTl8S3YReD12te8kvGtN/Z+UEf+Z97F
HSfn/nusqCbD/jYnp6F8JTw4oOGxlvGVu4qW9UXO9Px9SeWch4xX1a9JTfdB
+RqwGsddqRBtRQX4G7SMRc70PGBD+6Ka0kbgfHoy0XQlev4Dn+aYweq5xY3g
Oaz8+r4w5Bx69LOtW/OLGuFzbKNG0yrksfSLFdyYUfmNsLGq+4qFa5CnwHR9
+ZO3nzeC1qh+hYVrkfPgfabbZXN+IyQfHe04Yh3yPAgJ2pF2mNcII2rmHL6y
HrkA6jWeZCnQjfDKLfynbgRyIWxM61K45mEjhBw/OG37RuTloDh37LvP9xuh
/fvltLpNyEVwsMuurzPSGuGoe5ae3xZ13LPB9aeN/JRG6Jf4Zh0/EuUr4ayP
suLQm43w+OevUqdtKF8Nti3jely92gjTJ2i6ntmO8jWQdm6PqVFyI3w7Y3NS
fSfK18GyL9EvNJItqKOVeWnzC9Fzy/l0+YiAr0GMzwvZFT22ADmH9jw6WIVm
3ObbyLl98pHH0nSNem/DyxbUj9BGB7U85CngOKZi9CrGOXW3utTlIufBuZOc
wFzGt69cXFr4HHkeaP88GGl1xYKaWG92/W4OcgHsnBCUuJlxnTXCyPhn+O9V
QsPZ4RmvGX/XEOuzgY+8HIIkPYQDrlpQl9ZNsJnzFLkISryqf+9hfIVEvmVk
dlfc8/jLj3VEjA/dmJFv/gTlK4HTfnTgsGsWlELr6nNdeCjP9Dwz1OsI4y+2
2IVXclG+BhJvui2vZfxoxyeP5zTK14HCqMOxJwJMKG3t7pPuvUPPe+fTw3er
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
5wEM27Dq0bw2yBxSMDOlL/I8uDjyTebA+W0wVFEveH4/5ALo6jZC7fKiNrj7
ck64ti1yIawYe3pmr5A2sD9zPuoJ9nIQjJe7cDi0DS4v+3pkrR1yEQydtOCH
8so2sBzmeKG3vRbuOckze/jm1W2QqLL+bglypmcFH5vo+vA20H+dmbWnP8pX
Q/CM6OLgiDY4fF7x5dABKF8Dub7fzN9tbgONsEkfvyJnevZZq1r71tiRire4
fuK8KduzVnmWCs34PLWE3uNM2Z4L3DdZnWe8969td76asD0fuOUMuxivexs6
8oAJ2/Nkg+9+IYzfy5753NGE7Vlt2+V1kxjfctNtRnEvtuec6sC4AYyPTbAX
re/F9rzH2+hWD8Y1thosN+7F9jwuQ/C8wciRKl6s0PzYmO1Z0erAl1LGT02t
i1pgzPbM2z9O/iHjC1yFWsrGbM/bGzp6nWbc1vJJ4lUjtmdq3oOh2xn/qXar
7xQjtuf2p6unL2L8wa/jaeKebM+PBtiHjWd827ud1NGebM9vxD+HGAS3QoA3
Z6ziLfQcWj5t6isyiwtpBYGTMbUTO4deQBeqaoa2wnjdyOEKt5HH0sk2j+v3
LG+Fh78/DtmOPQW+HbjxRiGsFRxKxzjJpSDnwYDfJ59sWd0KFzjJ/bdiz2M+
7O+9IVnbCgYnu/Zrxy6A9Cfr49esb4X9m5ZZb7mDXAgttsGR3yNaoWNuoVkr
9nIYFTd98ZLNrbBmlJPxprvIRbCjefTUz5GtUGUWr9+CnOmZHzjQNWB7K8yR
l/SISEX5SlDLMbN8s7MVCiv8NCXImZ69HLqpz9jdCmOyM1XXp6E8s39OaP1V
GN0K9y+ZKzYi//O5+1pSiNcXKZxcpq1nOgn9XSfmvO7mzpmjqqQw/+yaHtux
c2jHlCVj+3+VQt/iYs3P2GNp7VQvp141UvihMkRtPP77UCnQcG+wuXqdFNKH
H1O+hp0HJRzjbi3fpbBlpURBcwryPOA8lG+tFkth7IXZHSuxC+Dk46qvpT+l
oF6aIX2FXQibs/JL+Q1SeKXWSzLYE3k5zMtOfXqvUQrHR21pOI5dBKOenUi9
KJGC/+r3YinyP88nyd167kiLFHonQ52/F8oz+438oEM7WqVQW3b2axZypudP
hZO2rGqXwl1NhUpr/PezaiD71cDQQLlW2OC2sGIPcqbnm+vie+7bZk8dneL3
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
4tUeHG6C0ssOQaz99XjeSurloKOmh5pg5dMTVxxC6/G81YZ3Oxuf+jdB3qfs
NM0T9Xje6tG3l1vm7W0C81bxu/KoejxvFXtnxdTOkyNyx0el6J/aSu9PErgq
b2EY5VaaBcYaW+j9SRw6LdaoUr73dsWceCd6fxLTeLZr7IkRudFT2peYOtL7
kyjaTjo4ifIXacp2ORvp/UlEnTcj0yNG5P6eP9HJegO9P0l+/KhbBOWKheBW
to7en+S2bVQaL3xE7qzVG31dHOj9SUK75Is2Ur5Z4BPcvIben8TxbujXX2Ej
co/vOHUi1J7en8R8dbvYh/Lk2tsXhtnR+5OM6PaW7js+Ivfjvuy4q7b0/iRN
d3+rn6K8u/dj0oRV9P4kvNVbJo2kfHxEXVqqDb0/SVL3p3m3j1G9qciSYE3v
T9K0cdO6m62yucuUu+4fD27APQ9eG21j8Vc2N29HY458YAPuecwqvuWHZtnc
+U9/fzi1rwH3bLZc1cKzSTaXo1D+W3FvA+55peUq40GNsrmzNn/sivJswD07
zzttECuWzX38+JXSCLcG3HOgWZG2Wb1s7pRB5PjoHQ245ygT2eEltbK5ieuf
mmltacA9J062HLzrj2yuXvKDFbEbG3DPz/VD+wZqZHPj+m5vGevQgHv+OPrZ
36vVsrma9ld976xuwD3/GdX5Z/pv2dxLd8+FT7BpwD1LqZlVvv4pm6vaGXYt
aVkD7llD0a90Z5Vs7hmboIdTFzXgno3kH/N6K2Vz5W/65j1a0IB7Vng2/sia
sTXk+qU+bz+oVeGePS8YLt9lWEMqXLt5aaJSFe6Z5zFVOXhaDZldX+IUMrgK
92xsafqZNauG9CL69fjSVbhnlqZZbMK8GlL30rTaSb1C3HNL45yd2YtqyJKa
zU9C24W4Z4eihVPeraghj8yLDPzUJMQ9Z9xY3PzTroacHvUMptQJcc+aAVac
zg01ZFVVrfyR30Lc86FVqw4rbashL5lrl3z+IcQ9lxusWabnVkMuO73i8tSv
Qtzzwt71SrO9a8iOisDNRz8Jcc+3+E6fbPxryKTpSfplJULc86AH269vD6oh
HcPLao2Khbhnt2OuzvuP1ZCKX+RTj70U4p5PeEyTd72oSpQvfyZHKhXinut1
h2omXFIlrnhJvcudVoh7tn9fPfn3ZVViTdTSq9xVhbjnjOMv5024okoopZ3e
ke9diHvWmX1rletVVeJV6bsphWcLcc9HaoO3JVxTJY53q7cWPSzEPVfHbfL9
HaNKLBzjmFP8thD3bGNvfnxCrCrRaXkz4o24EPfMlh1x2TVOlUh1/bX6rVIR
7lmD05iYcEOV8D41WevdtCLcc7AXj/P7piox6eGeqverinDPwjH3X0+4rUpU
vU978NG7CPe87GN4uesdVSK2tdP/09ki3HNKuHNDQrwqsUFz4cLSh0W4Z7U5
IFV9V5VQm398sOBtEe7Z2VTz5tmzM4jiglHyF9joPK9CMimksvET5Z98HscU
P0LOIRteJxG652YQP3SWm0g/RM4iZ2n6nt9JeW3h95cWD5D/2391TlUy5e2+
ARt97iPnQm6q9MwWyqVHK4vv3UPOA3mp18fnRM0gFF8lHP2RgJwPK1dd+HSE
cs19CzRG3UUugAsxjhNeUW4w5nOy7R3k1PNgjV6ACmsGYVK8GyJuIRfCOLO6
wvWUz/WX/ZRz439O9ex2LG3UDcqXjY11b4tF+WpIeRfk/pvyNa9n9hldR3kR
/NVdkmV0fgaxZf+b8y7XUL4O5noqDvWn3H3cTsPYKygvBnLUH9MP8tOJ+DmZ
BSvwufaF5LvsZboZlC9c9c0/9hFyDvljy93B1yn/sn1Av/EhchbZKCXz9zDl
/v76fEvsbBiI3/bdhXKVk8uPXUpBzgWV5TnFKyhPvu41veYBch6MrdV+akz5
0sdRlXOw88HkbOCtEZRXctOiIpORU9/rTEvPdMpNJ4JKyxb+uI+8Auz4Mw9U
UK5R2yOejl1Ifc8478yl/Enf2LiwpKG4Z1+txlX3KF85fMnKsnsoXw3Hnq+c
E0l5jYF7z2TkVM8XtiUb+FJ+zCIyOTgR5evgjoyC6nrKx6xkb3qXgPJikFXo
Mvkl2w+vXaRZcgP0/htDV3Rd/jK4H3pPzxq5p5/ef0P1dFdPydB+MH6yK6a0
j95/Y+Sbrh35Sv2wvSxmLGBng7Zid1GWaj9c6Ht7914vvf/GuFXd0x6P6Id8
fekpqth5YHiu++JdjX5oXzHrcWAPvf/G1HfdXde0+mGSz65Zwm56/w1T1Z5t
Ubr94Bgdk7UCewWY2/cUhI3th8jnbxemdtH7b8y/0DP1kF4/vKiSytdGTvVs
ye85v3dCPzQpzFpxvJPef2OZem+Hy6R+0DPZVVLXQe+/sXJd7xbHqf2wbl3M
WgfkVM9rontfrjbuh5NBbwXP2+n9N+K9be+7PDUmrLICrbZ5ofPQC0nDMo6N
IeXazqcO93gi55D3Cf2GmnRjon5oTMYV7CzSKPks6z7lL9KSxTOxs4E9onOG
F+Wszc8M3nsg58LMEOfPRpQ7y/GcdmPnQUY170BDmjEx61H5BQXsfJhrN1ub
Tbn8BnHxXXfkAniRdfu5L+WCgT4pS+wVYKmvuG0m5clJyhYVu5ALIT8yQLot
1ZgIth+79yByqmer9sr4DMpXd5skjsT5auBts1kWSLlePFHxxA3lRbC6+Klo
DuWtNvbqtsipnj/OGHem54kxUdi6w6bWFeXFcGdT8Y27Q4yJTAdrM+979Dxs
1pChLS0KxsSFT1XBp5Loedj3WdZLLSn3dgjKT7hPz8PWeJy5GjWY+rw+jVDk
JtPzsP1avLoKeerv6ZCy9vsDeh5W47Ui9R3ImOjjL7nenULPwxofWnXhkBzV
29qKKo1H9Dzs0innfr+SNSZS+funzHxMz8Nu/lpiMYryyLXKfqvZ9Dys/2mV
SNdBxsQufmKW1xN6HjZyrt2PNBljYtFakD75/83DxteyZshQrssvs7r7/83D
Zsd8CLeTNiba1/iwctPpediP1mpfbkgZEx8+KgjKn9LzsLXda4zEA9OIlDW3
x3Zl0POwWl8MEn4q9EHIFVO/5SJ0TlkheXecQafWsD641LjTuLQGOYc0dde3
sVPqgwfLr9S6YGeRzx7r3YhQ6QPuzdeJf6uRs2FZx/jm58P74EtHn/Mx7Fz4
uHD8kr8j+qBp9fSxw7HzYGvEuCuTNfpAIcnl283fyPnw5+3Y2m2afTBW6uoV
Y+wC8B85dkG0dh+Yb3yzNucX8gqQ2jKGxdPtA1t2v8pK7FTPd0f/lBnbB24K
M3hff47CPY+q1zWfM57qYbvrSQ/kVM93Zuqe2qtP9cC5uqSzCuVFYBykU54w
oQ9SVHlSJ5BTPWdztU3KJ/ZBvvvA85E4L4bsaWflHQ5PIzYFBw0dN4PuedRB
+0F6lOtNWi33fjrds3/+SKmm0GlELV9P6sh0uucPKl97cyhPO9zebTKd7tnY
6UbXGcqDp75u+2FK93wm0bl9E+VLyuKaokzpnkXNhn8nUq543LcOTOmely2o
a2wLmUZ8Nl5a3WhC93z35OP6l5Tf+KopvGlC9yz9ad+f85S7RdR/W21C97x1
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
Mp1DWvj0bIsa1MZwFunUVC2apMZ0NoT6fPTljmM6F2435XQ7mTCdB/k+94+3
LWA61XPTJcWolUwXwFDfI5cnOTG9AqY1e43hejBdCHa+G+45BTKc6tmveZFp
WwQzXw2XfI2zzl1m5kWQ2ay1aNJdZr4OvvrKvclLZebFUHn2hP+fuUMIZs+3
AyfplVgynUM67yx+l2rFdBapb+sZcmU109nwy2LY1OD1TOdCgn6KYPsWpvPA
TXlVxFIXpvNhYpd45hQvpgtA9POcUNmP6RVwv8Qk6m8g04XgmfV+vuAww6me
p971rX0ewcxXQ/05tau3zzLzInh4MG1pxCVmvg72uDj89bzOzIvBO9rFbMuq
QcSt/3t+wT1H3N63JXQN0znkzZRj4Tc3MJ1FcjLPP8zdzHQ2fOTe+izcwXQu
1L193Cezi+k8kP3yYoLBbqbzYcyvt6uW+jJdABaN5fvdApheAfbddXEngphO
9SzXU5B0hOH/9t9QHdpQHM7MV8MNHS2NutPMPHU9G05aqMhi5uvg/fTZbtMu
M/NiKFpQVWOwQoEIymrSi3n0B/eM3Owledvi5R/cM/IG3rlxZWV/cM/Ik0q3
3Nxf/wf3jNy50miMunQt7hm5Tm1PbOrIWtwz8k9/X+vYT6nFPSM/13ctpnFh
Le4ZudVgD61za2txz8ilh1tcNXKvxT0jz9YePOpNcC3uGbm/Qellj/O1uGfk
xsYJ6gqJtbhn5DWz/S8mZtfinpHfslystvRdLe45UKzg8M18BjHRueD18Dz6
vWPkD5R6Iybn0u8dIzfJmrHYkqTfO0ae5uIxsPEF/d4x8tmqt5755NDvHSN/
9qz0wMnn9HvHyIldSrNuPaPfO0aer7akKTObfu8YudWLQynvsuj3jpG/9Xji
XsOh3ztGvmakyGAgk37vGHlp7hihBnKqZ+SOu9fFGWfQ7x0j/zEqctOyp//f
e8f/c5eX3JFb0+n3jqN8BhdmeJsSqbeK7XwDlXHPyHdOElzUPICcg12dXV1K
7kfOwp4/u01rlz9yNv75/uSgLcr7kHOxT1iuduupL3Ie9tKScT83+yDnY49Y
b2Iouxe5ALv59wUeD7yRV2CvcV2ZsmY3ciH2q2LHxi5PZdwzcqv9HjNue6B8
NfbO3gP7rdxRXoT9flgEp9EN5euwOype7ol2RXkxjFCW/3M825Rg/bdfsSLu
efo4o32rJJxD2s5Y06ch4Sxy95LAE5VZTGfD6fU3hidLOBfuuedf3yfh1PeN
Q7UTFkg4H6oiVdnyEk497900n/uew/QKGP1kc/41CRfC3JfHbHcy/d/5X5+T
BEYS+WoIqClxbs9k5kVwsau1nmQ61TN7mM6BUxJ5MZi5KPVbqZkQFm9c38xP
V8M9I7csjlHemoacg9266J394VTkLOwOBbKXbz1BzsY/f+vLOYI8NnIu9l15
e3R+PkbOw+5Dxm+Vxc7HfihHcHvCI+QC7GHPlH4ve4i8AvvZrEWT3FOQC7FH
Zx7wOvVADfeM/NbTlEfJyShfjT05Tdj85j7Ki7CnPdEwEyehfB32549tApWR
/ztv1GvFzIKTxsSM//Z3pee7ld4urHSXcA453XjWWUUJZ5HroibPZZ9gOhsO
No2pWSvhXIizV7/UEcF0HuSlDrG8LuF8+D1iQLxQwgUwZH9rTFU406nvz6V/
lkdIuBDWzP7ROpnp/851vfrp9tswZr4aYrqKbX2ZTvVMOpI96hL5Ovj1LD2J
c5yZF0MV36/Ey68XEs+1FM/NGY17vnE2d6ipfy+kxwZvqHyOnEM6Llde3rq/
F7jJ8r/DsbNIDenNxzkHeuEdh+U3FTv1vS77Phl8sBfKC7WlPjxDzoVz/h09
RFAv1H66ezYAOw+sjZdayIX0QmeVsY4udj7Iiy74F4f2glwzJykvG7kAuLcr
2WeP9ILawCLzXdgrINTJWGx/rBfGKb19qYidGjdGBk/WCOsFY50N9qlZo3HP
HSXFrl/De2HeZOH3Dcj/7SdzctSdGyd6wWq21+4+DsqLwGeR63fnU72wfmlb
1x3k/9Yx9qZqTzzTCy5rD5+wwnkxOCl2F/07f2LZ+4g6kzuV+PdIyPl5I24u
voKcg3172q01GyKRs7CL706T9zqKnI1//qHo7KzQAORc7INPLve+4IWch/3S
wU/jErcj52Mf77XjU9Y65ALsjzY3nHhrjbwC+zzboHlCQC7E/goUGltnVeLf
IyFfN/3yHYUpKF+NvUpPb73uWJQXYd+r/niIqTrK12HvlZufs3gIyoshxSSt
d4yFJsH8/Tzvu3H3sblM55D1Z5M7qucznUUqLjBsswams8Go/nbLI0umc2Hl
9dFNakuYzoPd1tfEAcuYzofILvW6r1ZMF0BKEku00IbpFfBmg2L1nVVMF0Kt
/Mmf8nYMp3oemjFI6LmGma+GKa6Hv5c4MPMiWKHe823GBma+DtxfBnyJ3sTM
i0G2/8orrUOtEOn00/nZXzT/UkgaB3Vluu1vhcebn8fGtiHnkBs7He+l+bTC
xy2XS0M6kLPIY/ufR0vtboXWrXtUt3UhZ0NKy+iIVbtaQWP7cmuiBzkXSvce
3h/j3ApzdowLG9+HnAdS4kqXmi2tsNm5K0dmADkfpngucpi1qRVCd37s+ClF
z8M61MQvPurQCrdcHkwvkKHnYUNc5GaWrG6Fl65hXomy9DxsotBNT8emFard
tiSckKfnYd9vfTXcfVkrKLib/3BXoOdhu79Nln5q2QpTPFS0rIfS87D6m840
SS9ohVWeojVTFel52JWl9T9sLVrBxysvUlGZnod9VrL+7ex0BWLvN4etqjPQ
ubCF5FnpWRuWZioQ5dap1p/nIeeQ22YNF67JViBWZKvMjlmKnEVO39XguT1H
gciY7K2/bTVyNgyKedPqnatA6F97rWKwCTkXPvOSQoNeKhAshUm9ImfkPLg3
EK5wqlCB6DsQLnq4GzkfDs7YeSG6WIHwrKn65BeAXAA2roTuXZ4CUbaeyJuN
z7WlvtddHZ345J0CsaQw7mHvKeRCaHzdbUJ+VCDYZj3X8i6K8PNgXl9ZFu+z
AjE6YWNERBzKV8NF06eLvwoUiNPqGX4291BeBK47L7yt+aZAtB8fsU31CcrX
wezovRvavlPPv399bD5no7wYmom2wx6JbZA6qP1HwAz5XNTzougCN/JOG3Qu
nz+6YSZyDnmx7vKqkTfbYGHkMUdXM+Qs8hfhNsvrehuEvX91pdwcOfW9Ltpc
J+9KG7xWV/m81gI5FyLq5GVGXWoD1U3r1N7MQc4DAVEm2s1qg/Vx11cvmoec
D5Oj773jRrZBrFAYmTUfuQAO1R3I0DzVBlUTJr02XYi8AniEVdye8DaY5Lln
cBIgF8KYaM2w/KNtsOdR+pKxlv9zque9dSJP7dA2SG/pPhq9COWrIZfIsvc5
1Abd5pak0hKUF4Fa9CmLwoA2gKATvWFLUb4OXOo2jdXdR/VAvp3TuwzlxeBs
1trhZ9gCCimpEZe3t+Hx2aUkUqdzTAsMzTWKv+bYhsdnt10TIGRUCyh+SiTj
HNrw+Owu9cJZRrUFlEXjym/btuHx2fPa+ogTCi2g2hvTmWDVhsfn3TMa7ytK
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
2ki/N3HtQvIi9y5F4nhdyfDH0t/xOD+l2/Hjyl5FokXH6/4M9e94nBduiTPS
NJEjXg8TZLf8oterjxVmBa+YIUcUVVjsUa6l16tvcSnlHTKTI/IfXxs/pZFe
r369pkU3xUKOyDva/WlpK71e/YuninfFPDnixVqnkzu66PXqoxqm5iiDHPFs
wvN5If30evV1vlZKxCI5gtOh23h1UAvu+WKryxbfpXLE0+KQO+kKLbjnjweO
PrxjJUekXv++7r1SC+5ZtSeuj28jRzz2hiH1ai24Z9vQ7FVyq+WIFLj1fLBm
C+75rHRZnPkaOSJ5uLSP/ugW3DMv7K941zo5IunnDn3Qa8E9D1VQXXhtoxyR
8JRb6jixBfdsdcbo3GsnOeLOCf3TAUYtuOcndR1e3BSp3CC3fkJbXI97vv1K
e0jlQ6nc5T6TrE/+qcc9n09YkNj3SCp3xKE1a9t/1+Oejx7bvliHLZX743jw
Zpeqetyz77bjlRbUl50HZxNdP36vxz3vmJ8Ysj5VKvfAlfd7iG/1uGd7rWJt
/zSp3MW3uw88KqvHPVu212WeT5fKVXlgcFT3Uz3ueQZfed3jp1K539JtT59+
X4971mNPb+FlSOXeexF4sZNXj3tWO+sQVZsplbvv1Z1Yt+J63PMgzwNGCllS
ufCRl/CpoB733LospnhCtlTusPL2R4u49bjnX/o5boufSeWW/R7HYb+oxz1/
kqoctOO5VG58o3XemGf1uOcV058fWefbQUppiaqt3tDPKfqrjq/o2N1Bspbm
5tnk088pfe7WatfcO8hxfldjbXPo55SysOHf5rp0kOwbPgfsM+jnlCe3BPHl
2zpI4o3VGofH9HPKmec3d4c6dZDvO8ZN25BEP6e4CtzMxm3oILcbdA12vE0/
p0DrtP68NR1ko92Hqs0x9HOKlmpb4U7bDjI05H7Otov0c8rfqc+j5Kw7SOXk
o1edI+nnFN7y4xvvLe0gb5Ru2ucaTj+nJO60Hr/CsoOcNmiGrXso/Zxy5PDw
2tr5HeRzk6GTvQ7QzymbrgtSIy06yJWbqwbt8aGfU2Zk3gwyntVBlp/M/u7j
QT+nPBJ8bw+e2Qn9T6c+3qU3Lhf1XCp9SGXIjE5Y7b0ndBF2Dtk/ZeSky6ad
cMvgyarR2FmkoQObGG/SCc3f/up2jkfOBtsQm00Pp3XCoovm9R+xcyEgsdp3
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
UM//B56dyO8=
     "], {{
       {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwtl3uQzWUYx3/nnF275yxndSe3zI4RS0ZG2jZjjNHaZCSVW6WEUFHuW6nI
tavbpjJGLhnTNHKrKROhpmEil2rS0EVqTAmpqUZCn4+nP76z3/f3vue9fJ/v
87zvNh8y5rbR6SRJ9oECMDefJPP4MAFsqZckN4Fh8OfA/fQ1pD0Y/gIYS3t2
UZIsSyXJp2BXcZIML0mSFvTNANfRX0G7GfwZ0DIfYxzbBKzm2yHmq+HvHHA7
/d3BrHTswb2Mr5sk1fBysIC5htGuSscarpVlzFPwB8AdzFWXbw3hD4NptKfS
/1I6xjjWM3m2SWA3vBXzdYFPAf/QXpFLkhL4IrCZ8a/z7VH4APArY/vTn4JX
gH9Zax79Y1wbfEb/naB7Os7s2atod0vHntxbA+acCq8Fa+B7me8i+BLwC+0J
6LMVbV4D/YtCc7V3j+71LOOvgF8GTsDP8G1QOvboXr+h3S8de3JvH9LuC8+o
EeOPs4dO8D5gLX17aHeAdwTfwreC9vDeYBn980EveDuwjr7loC28pzGlbzrt
VsZWz8D7gTJ4c9ADfjV7uE/vgE7wieyhED4OvE37euboCr8EfEffLs77Knwk
GEp/cSn7gNcD6+k/xrfH0+FJvTmDb0XpWMO1FtLOwjuDK5k7x7e79Q5Ymo8Y
Gks1UitjZuzUSK3USK0qQQnt1pyhCbyRKAnP633P4FnUUC3VTO30sF7Ww3rZ
HDAX9LBe1sN6WU3VVs3UTs3U7vtskpwi9n+Ak9nIGXNHz+t9NVd7NVd7Pa7X
9Zzec4/uVY/olXH0PwhfDA7mwzN6R83VfjtrHGetP8G5bMTAWCwFp/MRM2Nn
Tpgbel7vn2d8dS40UitzwtxQc7U3JsZmYCH7YuwHoB/ebsy30/Cz4IZcQO4Y
x26ow7ngf4N6uYD8DCjPhQf0Qs3/tUOP6TVjZKyMsbE2J8wNNVTLzmAVBW4b
ObUa/jVoQ99K8DN8j5qzvzasPxb+JcjT9zG/6QovAIUZ1uf3q+DHwAb1ov0W
/CiopT3Ab/AjYFI2cshcMmfMnb2Mf5O+n8BM+keAw/Dm4ItMxMBYuKZrO4dz
Ocax7sG9nAT7aO+gfRX8EKiiPRkNBzoXSGejxlhrrDHWmgOccRd9u8GP8Br2
sxQ+Dazk7Cdor4FvB9PpH0V7CXwn2Ex7MOvVd29gAe2b+c1E+FfW9GzUCGuF
NcXaMoL+x+h72Xgz13J+8wn8CfWhry377Q2/GIzORE2wNpiz5u5O62wSOWFu
HGb8CHgHMAh9fqM9Cr4J9GDuCvAe/EX9zPzNGFMOHwo+Ymxr+t+FP6+G9G/k
2xB4K1CfsY3o3whfD+rCU3xrCb8XvMHY7fxmJnytHi6KmBk7NVf7xnybD28P
bikIyN2ze9dzek8P6aVa5nta7cEK2sNZcwt8OVhYFJqr/Q6wDn4jc/SBX+4Z
WLuaMa+kQlO1bUp/r1TEyFgltKs9i56i/QP76Q4vBmW0y/n9QvhD4HxheEgv
6Wm9rUf1alPwPuP3M2Y4fK75WRQ5YC6YQ+aSGqv1s8aLs+0Ds1Ohqdqqqdqq
udqrqdqaM+bO76zRAn6PnikMjdX6LjCL9ib8sB9+EFRmw+N63W/2uUf3ag25
UEuKw8vmnLmnZ/SOZ/bsekAv6Bm9M5P2k+7V32QiJsamPxhZGJ7Vu+aEuaGn
9bZ3tne3HtbLkz1PncgJc8OYGJtKvo1PRUyMjTXGWmNMjE0N6AR/xHxibB6M
hnd0vYLIUXPVGmYt0/N6vx3oTP81oG0qPKgXjZGxMgfMBWNibPS03j7CfstS
ESNjVcqeesJz4NpM5IS5Yc6YO9YMa4c1w9qhR/VqA7A4E2f27HlwayY8p/es
EdaKnszfF34pmJIJD+pFNVEba4q1xZph7TjF+lXwOv4mEx7Vq2qkVp+DbvA0
+Iv4HwDnkrjTvNvMGXPHN6pv1XcY30XtwdF0aKzWlWBRQdxR3lXmoLmo5he0
T0WtsaZYW9RYrWeDilTEyFhZk63N3iHeJXpYL1szrB16WC+rudp7Z3h3WHOt
vXpMr+lBveid593nnendac6b+2qolmqu9tYEa4NvRt+O1gRrgxqrtTXWWmtM
jI0xNtbG2FirsVqrsVqrqdqqqdqqmdp5R3pXWrOsXd6p3q1qrva+wX2L+4bz
Leebw7eHb2Dfwr5xfev6JvFt4hvbt7ZvOt92vvl8+/lG9q2sp/W2Ncfasw0N
Sn2L+MYpjTeKbxW/2ef/FP5v4R3nXWeNsFZ4R3pX+sb3re//BP5v4BzO5RvT
t6b/E/i/gf/j+L/Of+y+nTg=
          "]]]}, 
       {RGBColor[1, 0.5, 0], Opacity[0.8], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
aomaqraquWqvGqPW6AN9Yc2wdljDreX/A/yzw9s=
          "]]]}, 
       {RGBColor[0, 1, 1], Opacity[0.01], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
1tzW3tpYW5fH2DdmjJ3aWGv4hr7l/yk1wSU=
          "]]]}, 
       {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
        GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAADR0ch3d4RlZVCBgXhnZ3S1taYVFS
YlJTSlpZhHR1Y1NUBxcWChoZalpbQFBPPU1MaVlaRFRTQ1NSX09QYFBRSFhX
RVVUCRkYP09OaFhZQVFQhXV2QlJRR1dWZ1dYZlZXHAwNoZGS6uLTsKCh0uLh
r5+gKhob8Ozks8PCGwsMssLBvc3M5ucgXk5PvMzLEuQTIxMU9PDlZFRVSVlY
ZVVWucnI7eYQKxscrZ2eu8vKGgoLrp6fusrJtMTD5eQSWkpLKzs6FycmKjo5
LDw7dWVmFiYlCxsaf29wJTU0fm5vdmZnJjY1JDQzIzMyIjIxeGhpGCgnd2do
Hy8ueWlqKTk4GSkoGysqHS0sfW1uHi4tfGxtHCwrKDg3Jzc2WEhJ4NDRXW1s
ppaX7+rU4dHSV2dm38/Q4tLTWWloXm5tWGhnW2tqWmppWUlKBhYVXExNBRUU
BBQTW0tMa1tcU2NiVmZlVWVkUmJhT19eVGRjTl5dUWFgUGBfLBwdLR0e6uvi
+vLVwbGyMiIjNCQlwLCx7vLol4eIm4uMMyMkrb28MSEiloaHrLy7+fER7/Pq
FQUG+/PjFAQFmIiJ5AQTqZma9vLu9/Pvq7u6qbm4+PAD5fDkv6+wqpqb7fHm
rr69qLi3vq6vscHAFwcIsMC/8vrpFgYHpbW08fURp5eY8vbV8PQD8/fjpJSV
q5uc5OwE8Pjspra1rJydqrq58fnn9fHtpLSzLx8gNSUmLh4fNiYno7Oyr7++
pZWWmoqLva2uzNzbzd3ctqanuKips6Oky9vaJRUWsqKjydnYJBQVytrZtKSl
8efmyNjXvs7Nt8fGH+YgtcXE6OnG8+vq1OrToJCRuMjHopKTx+jGGQkK7ujW
vKyto5OUITEwtaWmIhITwtLRz9/ewdHQJxcYzt7dKBgZuamqHQ0OGAgJnIyN
JhYXHg4PnY2Ox9fWuqqrno6P8unoHw8QorKxw9PSxNTTu6usn4+Q0ODfKRka
saGi0eHgwNDPv8/OemprTFxb8/vrQzM0hZWUg5OShJSTVkZHVUVGhpaVkoKD
GiopRDQ1kqKhYXFwna2syrq7YHBvnq6tx7e4yLi5Pi4vm6uqlYWGYnJxX29u
kYGC0cHCeYmI0MDBe4uKiJiXj5+ezb2+zr6/kaGgj3+Ah5eWfIyLd4eGZXV0
0sLDZHRzgZGQgpKRUEBBU0NERTU2Tz9AY3NykKCfybm6iXl6b39+zLy9jHx9
Oiormamol6embn59UkJDk6OiOSkqOyssPCwtbX1828vManp5aXl4bHx72srL
mqqpi3t8Rzc4UUFCiHh5lKSjlqal3MzNoLCvobGwn6+u3s7PNycowrKzxbW2
OCgp3c3OxLS1w7O0y7u8k4OElISFPS0uaHh3Z3d2FSUkZnZ1nKyrlaWkjp6d
TT0+cmJjMEA/MUFAFCQj2MjJLT08cIB/cYGANUVEjX1+jn5/2cnKRjY3cGBh
b19gMkJBcWFiEiIhc2NkEyMiLj49dGRlTDw9OkpJSzs8dISDbl5fgXFyN0dG
DBwbNERDbV1ec4OCcoKB18fIgHBxNkZF6MfWO0tKOUlIdYWEPExLgnJzg3N0
Sjo7OEhHdoaFVERFQDAxDh4dDx8e5h8Q08PESDg5V0dIQjIzfo6NjJybi5ua
STk6QTEyz7/Af4+OgJCP1MTFfY2MipqZeIiHjZ2cM0NCkICBPHBoGQ==
           "]], Polygon3DBox[CompressedData["
1:eJwtl3mIlWUUhz+dO3PvzL0zowZF6rgEBZkzGhTkMhoU5JaBQeYWJJR7C6Tj
BgWZW1CQa0FB6ji2QeqoQYW7QYa7BkruFkWaoxVFlj2P5/3jgY/7ve95z3u+
8zvn3J4TXxz1Qvssyw5DDv4oy7LfYXV5lr0LZ0tZdgaWVWfZciivZB18xaav
YTBrBsFb7HkbhhezbBj0hnr4jb1Xkg1tLa7KskXQC1v3wcaaLPscjvDbUVjG
8zuwg3c7YRy/jYX/sHUTxsKYdIZnja9gDYzi7CdhEb8thCaYDSs4czls5rkV
3sDmAnia38bALtgJUzhjKvTnXT9o5nk9fMcd98N57nwBVmqzGDa1fdU7wibP
gL9Z+xdsI5hfwALu8joUoQTTsDEVTuDr99CJ2HWEB3h+ELpzZjcYCI3wL77c
qA4b2trK3i2wHloqY497r3PW77CowP3hSJ54wl7W7IEMW+1gKWctgUvs+RE2
8NwC41gzvjJiYCyquUsN1GKrBrayZhtMZM+zsILfVhbiTM++nd/ugGZisc44
s3dhKWxqew7MhTp+61qKHDAXWvh262E3vu6Bg9g8AB8Tw09gB3feDpeJwRX4
gDPeL4ucM/casFGfYmbs9EFfjuPTCeiOzW4wkucnYCg2hsBz2HweesG9MAmf
JsM0fJkKA9nTCEt4XgyfYvMzOMjaA+7FxiQ4xrujUIfP3WA9e5phGr5Nhzd5
XpqPO3m3r7DxJWxhz9aK0Jha28PzXsjMc+5xFdqgA3troSe+3wX3sPduaGTt
IOgB3bXDu/fgI9gAJ4ndKbiO7WswjLOHF0IjasWcM/dmsHZ6Lta4dj7P83Jh
U9truOuH8C+x+Q8GQH84h2/nYQu+teYjJ83N3ry7rxQ5a+7O4N102M7ZOwqh
IbXUBtfgUXx5BEZw1uMVodmmpHG1PgGfxsMY9o4thA/6sgbba+EIaw7DWTgH
HbHZAS5yh0u5iJGxao+NMmPBcxsMwNZAyLGmLBcaUAuHsHkQukBX+IZ3+yCP
j4WyqEHWouHcfQScYc1peIoYja4JjaiVTuy5LRdnerZ39K6zObPJuxCTcdAA
9dBOH6Ena3uUh8bUmhpUi9ZAa6E119rbyB0HQTVnl6rjG/mtrKHW0l/VTE3U
AGvBYtYugS781jnVXGuvv/nOnDQ3mzhrVilqnLVuHc9rS6FptT2Ls2bCD+w9
XROaUlsX8PkiTGHNZHiId/3SGtcOxcYw6MgdO1REzpl7q3leVRGaUTvWjFu1
oxi1vAN3qU0aV+vHOeNYeWhCbfiN/dZqQm3Yo+xVh7BxuBQxMlbf8m5/WeSc
ubchacUaYC0wZ81dNagWb2I7K4TP+l6DL7XQDeqSRtXqfNbNy0cNs5bNTbXO
Gm+tN8fMtcxvnA8b2rIH2YuaebcO5ri3InLa3LZn2juNqbGdgK/P5KIn7kg5
aq6qGbXTnbN6wEzu8grMxr858DB7BuciZsaunrN6F0IDaqEx9Ro1ptbsefY+
a661dyC+DihGjbRWtnGHq/noMfYac97cfwyGwDxszC2PGcFZYRgMhXPsOZ8P
n/RtI75vqo6aWZd6jL3Gmm/tP8nzqUL0aHu1PuhLKfXS0fZw6IPthspUg/JR
I62Ve/FhX3nU9Fu1vRi5qSbUhjlsLqtptX0UG8cqI2cOpZnA2UANq2VjZuz8
Bn6L+qRdz/Cs88TyQkX0HHuPM4CzQEvq1X+w989C9Fx7rz3D3vGTvxUih8yl
G/j2D+wmRntgNz7vKiYNlqJmWDuGw4h81AxrhzXb2j0SXx6HVznjtTSTOZv5
m+8612bZnVAFxdqocdY6c8bccSZxNvEb+i3bUi/qn2q/mlAbzhDOEqt4t7Iq
erq9/U18WJoLjav1+3num4sebC+2B9mLzElzU02oDde4tpV3mwvRM+2dt2JQ
FT7ruzlkLq0ipqsrIwfMBXuyvbkvPvWBl7jDy2XxTf22DfjSpyJiYmxc0zf1
aHu1Pd5e7wziLGJOmVv2eHu9NdPaqcZuaa08arVneJYzqLOoPcpeNRmmFEIT
j6WZ1tlWjat1e6K90Rw/mXLAXHAmcDaw5ln7piRbK71zPmqqtdUaba12hu6V
ZlZn1xEpN6wpzannbk8xbU0zm7ObM46zjjXR2jg0adWebm83B81FZ1hn2Z/J
5V/axwy9OfVce68zr7OvOWquqgG1YE+1tzpDOUvZ8+x9fjO/nTXEWuI38dvY
s+3dzniX04zmrOadvbszn7NfffpvUZdqsTOOs44zrrPuFnxvrYqefCbVmI2p
R9oriyn3XeNaNak27UH2ImdkZ2V7vr3/f1A7vHE=
           "]]}]}, 
       {RGBColor[1, 0.5, 0], Opacity[0.8], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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

          "]]]}, 
       {RGBColor[0, 1, 1], Opacity[0.01], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
          "]]]}, 
       {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJw1lnmIllUUh1/nW2b5Zj51tKBwm9GgIPegIPegwGVGhYLU0YqC3GaEgtyF
BPcRClJnNChIHbUNchkNMtwNMrQcNVByGTeK3EaNInse7+2Ph/fy3v2cc3/n
VLxRN762IEmS45CGYSVJMhSmZJLkNThSnCSHIcW/NDyXSpJn4S6D78HjtB+D
07TPwGnmnILywiTpBA/ySfIvHGLuYajkXwWMY+x4uMzarXAH2uAfDvM37KHv
W5jM2BqogmqYkuUfvMyer8DnjNkGZ5lzDqqKkmQMjODfCzAL6qCNM92Fl5jz
IlSzxlhIONuDsiRZwncpNLPHLmjmLLvhEeZ0zoQ7e/en4EkYxtzhcI32VWih
fQqaueMuOM+aF+AUa7RAf/oGZIPNtJ0203b+s68TYzo7jrn9oEJbwQj2Hg4f
MPZDOKpPoJU5l53HmPI4x7n9OXs/SNOXgQZssQ5m0q6FIvYohL3Y6ntYw50/
gv2c9QD0LU2SPqXBJtpmCmMnw3xYABv59xkk9LeDvZzpO2hm7d3wKe1PUuHM
nl0f6SttqC0HwgB4h3/vQg5KUsFG2moRtlkIlazVE4Zxl6EwlzvMgw3MXQ+H
6TuSDTFlbHVpnyRdoZ6+VZngE32znjUb4TZr3IHVUA/HWetEUbCpth3LnHHw
F//uQyNrr4c6/tXCStqrIM3cFAzkjM/8H/PpELPG7lb22lIc1nAt93Tv5bRX
GJv0jYZL/GuF/fzbBzthFyxkrwWZ4CN9VR1jfzN9TTAB278KI2FUZGT0ob7U
h/ryBPxcFt6Ab8E36dvsxpiu8A1sh1XssbI4+FBfemfv3sSeW6A9Y/IwgbUm
wlDOMKQo2EBbDDBmi+ObMfbo6+u9WaMtG96Ab8Eze/a1tNd4NmLsFyjPJUlH
WMq/ZZDljJlMeKO+1bmMmQPrGNOQiz6HAs8Aw9l7GPzI2GOwh7m7jTXu/Cgc
5kyHCsMZPesc9pgNv3GW8/ATPjtWEDRILVJz1J7f+fcH7GDsdmgPHcpCTBqb
GxjzcTpojtqjRqqVv3KGM6ngQ325mjH10Ik5nbMhZowdNVAt9I36Vo15Y983
7dvO0i5MBw1VS3vRfgKuwpV00CC1aB42mQuToAZ6sWdPeJO+t6ACG/WAjlAO
V+i7rLazxuuwiTtthJvY+FZpiFFj9SR7tsB0/k2D6aw9Q+ibDg30NcIiWGis
cOat2RCjxup82gughvakOMe5s7H5ezCPNzu/JGiwWlyJ7XoWh5g0Nk/S11IS
1nRtfagvF0Qtmgm1sJmzbYLNnK0pF2LK2DoAB+EQ/w7m4hhYyZoroDd37gOD
YRA08W+L2s3Yna4DJ+EHbHQ0HTRKrXJO7zjHudpM212Ai5BiTgHcZq077kV7
efSRvipgTDuooq+6JGhoEn2gL6oYMwb6Qr9ciDljT81Ve9UstesLYu5LGMJa
g+ESa7V6L8Y8nY8+Kw0xMSmuWRVtpK2W0bccZjJnBnSg3REm064pCWf0rOfY
6yxcg+tFwSba5iJcyoWawNpAG2mrWfiorjBomtp2MPrCPdwrj0aXtQ850lzZ
g77upcEn+sY7eTf3dG9zlrnLHGAu6Bdt0wMqcsHm2l5NUVvW0V5bGnyoL73j
w7vmgi8q4lx9pK+mYqu38yHnmfsmwUQYQt9Q7UZ7dGnQKLXqJnvcgFEwOmqs
WtsNupeFmsnayZg39hu5U0NJuKN3bYu1jjWLtYtv1Ldqjm6IOc5cZ81j7bOT
OTtKQwwby2qcWmcOMZcM4uzP54NGqpVqpFqpDbSFOdncbI1grWAOM5d9xRpf
p0KN0xxzlrnLmDV2jSljazFj3k+FnG3uvh5jYWF8+zfY+8980FS1Vc1Ve80B
5gI1Rq2xJrE28U37tp3j3PKoTWq22m0O7xJjxFjZxr+tmVCDWIuMjrbXZ/pO
TVQbrYmsje5z1nupUCNYK5gjzBXWBNYG5iRzkznMXKamqW3aUFtak1qbqpFq
pTWdtZ0aqpZaM1k7mXPMPWqG2rHPGiofYsBYUOPUuspYy1lTW1urmWqnNZK1
kjWHtYc2XhxrImsja1xr3WmsNbUs5GxztzWntac5MhtrWmtba15rX3OouXRi
jOVdsbaoj7XPCdY4ng9ruvZt7n4rF2JsZ9QAtUANmBw1RW2xhreWNyeYG6wZ
VsWa1dr1SsxNavhDLc+EXGTOM/fVxVrcmsfax5rM2swcZ67Tx/ranGxu9s35
9mqj1ptTza3aWFv7Bn2L5hhzjZqj9lijWKt4R+9qDWMtYw1nLWeNvyTWNNY2
5iBzkTneXO+b9+2roWrpf15FuEs=
          "]]]}, 
       {RGBColor[1, 0.5, 0], Opacity[0.8], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwtl3to11UYh7/td9t+u+k2DYrSbRoUpE4NClI3DQrSeQkMtG0qFORlUygo
nZtQkHehIHXToCB1ajfIe5DhvAZZak4NlEznJYq8zEsU9Tw73z8e+O18z3nP
Oe9538/7rnxW05TGnCiKfoIkXElHUTdk+CMXmvKiqBHOJaLoF9jL7z2wFbbB
DGiAxdACO4qi6Gs4nY2iLliFrZXwJWu/ggF8ezSe49xkbhQlYFUqilbDBua2
Q0eGPeAxzjAYjvLtGJxk7gn4nEN/Abfzo+gW7CyIol0wHpsvwoewFl5i7RS4
wtqrUM3cMfAk34ZACWv6Qj1nbYC7zLkDtewxEbYy1gEHmNsJOYVR9ABsgs3Q
w7fbMBobY+A3xi7CNOZOhzvcpQfGYKsa5rH3XHiWb6MgwZocmIiNSZBh7zQ8
j69eSAQf6IsmxubDUGwPgVEwGhaxdiGsx2YbbMLmp0XhjJ51BXsuh9PY6IKJ
zKmFYVDlGr6th0bO2AQz2WMG1DFWnxt8pu9m4sNZsARaoZK5g+AIZz4MjxTz
rtDJmgOwC3bnBh/r6zmccS7s507fwh7W7k2HO3gXfayvl/F7KbzC3Do4BAdh
Ht8as+ENfIsbzLkJ89hjLrRxt3bIIwZzYT+x8V1O2MO9Sllbpo/1AWxhTQds
49tWOMzYERjGXkMh0odxDBlLnex1EIYzpwpSrEnDUr69B8XQpyjs6d41nGEs
7MbHu+BnOA2lUJIf7uhdt7DXZtjCWEd+uIN3+RgffZIIPtW3RVBcHHLK3PpL
H8Bh1hzKj23AHGzOLgw5Zq5N5oyToJKzDII70APbecPPkiEmjI2VjK2C2ax5
vSj4QF+4h3u9jc2F8CZnegMasDlDreAsl+E/5kTF4c19+9XYXAMjsDlcP/B7
TyacofcsxNRguMi6X2ECe9XCg5ypPwzDRhX8DtehlbVLMiGGemMpP+RSLbYm
wGW+dWfCHbyLMWasjeWMNemQU+bWctYug+WsXQFn+NYF5exRkRtiwFjwzJ7d
mDF2qmA4TMAH4wuDj/TVffa4BxuwvRHKsT0QVjB3JZxi7kkYAAMLQwwYC5fg
MmxnzbZU0FC1VJ/om1ex+RqUcqYS2MvYvlSwoa23fBO4pObAWsbWFYacrYtz
wtwwZ81dY9bY7eed4Cpj16Afdy+D+fxeABv41g63mdsDF7BxPn4D36KGO1Vn
g0aoFc2MLVIrmNsAfTlDn8KgQWrRYuY2ww7GdkILey12P+YuyAQNVAvVMLXM
GmAtuMbdryfCGTyLGqaW3eOMd+Ehvj2sjmB7dzZortp7Cxs3Y5/oGzVdbVdj
1VpzOopz1tw9w127jFHONCIdap61zzfxbY6qcelQo6xVUxibDO+w97uJ4DN9
Z82wdjjmtxH8HpkKNWBaXJOsTd8z9xjkM6cAfkQrjkM3Z7iSFzRYLa7mzjVQ
BqWZUAOthWqEWtEbwwUhJo3NCqjMhhguj2PG2KmMv/lmvp052JuLeaGWP8EZ
Hk+EHDFX+nPmfvA0Y8/AyzA1Ecb8Zo6Za8aIsWLNtfaqQWqRGtkZx7yxb8wa
u+a0uX2Bu56HI6w9mhdy0FxcBM3mBrZOxZqv9hsDxoI5aq7ag9iLtGCzNRVq
nrVvnTWwIPQk9ib3ufvfuUGT1ebp1pTC4OPuWAPVwm840z74gzP9Cef4fRb+
4fe/OaEGW4vVULVUTVabx7L3uFTQRLVRDVPLKjhLOSQgmR/O5NmsAdYCNVPt
nBr71hw0F30D38IaZ62zJ7E3MUfMFWuqtdUc2hHnmLmmJqqN1jBr2VnOdCYV
YqYszsn6uOZZ+6xZ1q7WuJarIWqJOWquWtOt7Rv59lEy+FhfW1OtrSlsJGEk
355Khpwxd9QUtaWeO9bFPYa9Rjs227JBE9VGeyB7IW1oSxvaquB3ZSZontpn
T9IW1wBrgT2UvVQKW8lsyCFzyTf2re0Z7R2r4t7GN/At1GS12Rw2l80pc0vN
UruMQWNRm9q2p7gRa7xab02yNpXEtdue0N5wHHs/lwwar9bbk9mbrWFsdTJo
qtpqDbQW2rPau26Oe0c1Sq1qjmNfn+k7exJ7EzVSrSyOa78ap9ad5K1OFIUa
b63/AF+9nwiapDaZs+auGqlW2jPaO9qD24vbQ9tL2+Pb63sH72LMGDtqktqk
JqqNyTiW7XHtda0x1hpz1Fw1B8wFz+BZ7IHthe0J7A3MIXPJHDPX1Gy12xwz
1+yR7JV+YOx4IvQQ9hL2lPaWaqhaas9h72GMGCv29Pb2LfH/Hv6P4v8q9jT2
NmrMhfh/BP9XsIZZy9zDvewZ7B3sMe01/Z/A/w3UCLVCH+vr/wHBOLeT
          "]]]}, 
       {RGBColor[0, 1, 1], Opacity[0.01], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwtl3tollUcgF/dvu3bt33zNjUovGxqUJBu06Ag70FBbk6DAstbUJC6qVCQ
d6Eg70JB6mZBQerUbpC6aZDh1GmQ4tSpgZKXqUWRl3mJoufZOX888HLe33vO
7/zu7+DZdVNquydJchJy4XwqSc5BSX6S9IWd0AjzWVsAY7JJMhoaM7yDkQVJ
UglNyDRDfl6S5MEKNlsJ63m3Dn7MSZKD0IBMPXzO8xcwEtlK6ItMv4jPN/j2
JuQhm4JRPD8N4zlzHMxCl9mwC9md8DCdJP9AP/eCBcguhAtwHv7lkv/BY5z5
aE5Y8506qVsz3+yHc9AOpexVBiXQB/Zz1gFo5HkHLENmOWQ4uwAOsvdPkEYm
H15gzxehWw+MCkfRuRVuY7tbMAmqssGm2nYde62HE3zzC1SxZzV8yrut0Mq7
Y9CBLa5BA++2wkbusCE33Nm7n0SHE9DBu+twmjPaYBAMhinI1MAQ3g2NZ3iW
e7r32cIkOQNX4RoML06Sp2BuUZLMg3Zl8oNP9e0lbHERfoc/4A10mQ0VyFTC
Vs5qyAsxZCw9wrv+UI5sBQxVF/iUtc+gjbVT8DV3+AZKOXMwrMV262A1d1gF
r7M2HXqhW094zTVoR+Ys/M3areLgU31bwlpf2IvMHugFvbNBZ3VfgW4roQ97
9oYZyM7MBJtr+1xkUnCP504Yy/O4dJBRNodvcuFZfPcM3OcuD3KDT/Xtt6x9
B3nIpuA4736GFfh2eSrEkLF0g+frqWBDbVmPD7bAZvbeAgvRcQEc4uwWmMXe
M+EV9n4VslAE7ex1riDkkLn0BGtP5gSf6Btz1FxVRllz0Fycz3MdXED2VzjD
mafhMByBOnSvzQQbaas7cBuuwNWicGfvbo6Za9YIa8UhfNECDTzXZ4JP9e1y
zloWz/RsfaSvKqASOtH1LqzhrmvT4Y7etR826g8zeTcDJkMNfMy7j2AK76am
gk/0zWT2qsmEHDVXx3PWhILgU327HtkNMIu1mVEndVuK7ZfAdJhRGGqIteQA
d/wB3uKsN2ELe9Sng4219XhsOSEvxKyxO5xYG5ENd/Au5pC5tIx3SzMhJo3N
seg6Bq6x1gHlPI+Abtiue3GIUWN1J3vvgjbWTsEcvp2bDTLKfgir4CG6PMgJ
NcRaYk2yNlkDrAXaQFtYc6w9x3huLQgxaqxqY21tTBvbu625qWAjbWWOmqvW
AGvBV9hkN1xk7RL0pPb1gCb2as4EndX9KHdohZeRnZobYt7Y14bass5YzAs1
09o5gD0GwlLeLUkHn+v7SdzxJfgENkE1tqoyNvFVCXyAzu/bZ9h7lLllDYU0
ZxbAWmTWRB/r6zns8XZxsLm2v4JNL8M0awzkaGPYBtthCTKLi0KOmqvmjLlj
TpvbfjMt6jgp6qiuLXx7OPpM3w1kbVBx6Fn2rnt8ez/2OHvddO+cDjbRNuO4
+/j8kJPmpjlpbj7Ot8PgGN8ch6PodAS2I7PDPGCPapiIzPO5wSf6xjt618nI
VkM5VMA2dPqyONzZu9eyNg+eY200DEGHsvzgQ33pmZ6tjbX1Zr7ZlA01xFpi
z7f3T0BmIpSxVynkQqow6KRuziDOIoNj73qPsxZBJ7rezYQcMVes8db6Rcgs
zoacMXfsufbeVNzbb/zWHmGvMGfaYk2yNtmT7c0zYq5rA22hjupqTbG26BN9
ow21pTk9PM5Ezkbj+GZsYeiZ9k57ZlfvLAy2s2fZu5RR1ppubd/Hc1NhiPEB
MWfMHWPUWDXnzL27yNyBvX4Dezjj++LQ8+x9Q6AszkjOSs5gzmL2WHvtPXK2
syDkqLnaO/ZCfayvrWnWtj/J3b+6hxpmLXOmSccZyFnIHm4vN2YHRh32xJgw
NswJc8MeZa/aB03pMCN2zYrosL8gzADOAvZUe6s1wdrgTOls+S42fycn9Dh7
nTNZaZzJnM2GocvQVKjB1mJjvCvWsVFjYZiRnJXsIfaSVbE2OjM4O6xBdnVR
qAHWAmc6Zzt7rL3WmdLZ0hnGWcaebe8uir3WGcBZwBnVWVWf6Btzztxzxuqa
tVJB15rYq5whG6NNtM0G1jbGnDa3rXHWuu2x1tyOvbYqzo7WKGuVMW/s/8bz
5eJQI6wV86DW2QYdb+aEmdbZ1jM8yxnLWcsZ31nfmmHtsGZaO52xVsca1RJn
SGdJa6i1VJ/oG3PS3LSH2cuuxlnAnDf37an2VnVQF3uyvdmabG22R9gr7Dn2
ntqou/8I/iuYE/viTOps6kzbEWPYWPbO3t2ab+2vjLNDWcwFY8BY6PJxUahp
5bHmWHv8p/DfwhpmLTMmm+M/hf8W/wODUbjZ
          "]]]}, 
       {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwtlnmIlVUUwL9m3nvz5o3zzGW0oHAdDQrScTQoyGVUKMg9KLDGJSjIbRQK
UscFCnIXCnIPCnJvg1xGgwx3hQx3DZJcxiWKzD2q32/O98cPPu537znnnnu2
LhOmjppSkiTJMcjAmrIkWQ2flSbJ57CjVZJshwMVSXIQPmbtIxidTZIxsIm1
jbCQPYtgfCFJxkGG7yzMQNZ02JtPkn2wirWVsIMzO6GIrEo4U54kZ2Ej/za0
CpnKXg2rKuKMZ+uQNQhmI6sxHzKUdQpOw+PIegzOcZnzmbCpxTb+LVYnZ3bA
MmQsh/nsmQfVuSTpkYs7etcWG2Aad5kK7fhuD6fgJOzXJ9CrmCRPw2S+p3h/
ZI6DkTAKluGjpXAdm26Uhg3aMhsaYS13XgO32XsH+iPreZiFrNnwD7Y+gDXY
thZuc+ZWRbyJb5NnrSwXd/Au09HVAEtYWwonK5PkBHSBrnCOf2ehCl0dYABr
/WETd9wM6/i3Fg5x9jA8g8x+0J291dCXtVrogM0d4RY2/A2X4DIsQcZi6IXM
3nCI74PQqXWSdG4dPtSXxoix0o49beEL7ry+GDKUtYK1lTAfnfNgMzq3QD9s
6wvv4Mt3YRy+qIcRMBJO4Kvj8BVB/XVJxIix4pv4Nsu5yzLogKyO3pE7HIIc
tpRBN3R3bRV38C76SF/15MwTmYgZY0cd6pqILROgXh1whO/D0Izsq7mISWPz
MlyBXaw1QZWyC5Ej5spIvkfBf9j8L+xG1/cwh7VG2IYvtlfGnbzbr+i6ADN8
c7iLznvZWPPfDfg9HzKU9Qdn/iwJGdtSn+v7+/y7l4mcMXeegiehDhsHw118
cwe2sudLGApDMhFDxlIdtg0qhA/0hTFirIxhz8vGDXfuBlnIVYRP9E05/wqZ
iJFeaQwaiz9j4zFoRudVGAx18BM2HYMtfG8uj5wwN2rR3Qe6QzUcReaRTNQU
a4symtM7eBdz0Fw8gw1n4QQxdxwmoXsyNGH7Tmhi7y4Ywp0GZ6PmWfvaEMMP
w050NcFbrL0Jq7BlNfzC93mYy5l5kEFmKayHDZURo8ZqDfSBEmQ91DpyxFyZ
hC1vQ29iosbc4sxNGAbD4YJvXxIxa+zmUt/e5uydQsisSX2u741pY1ufHE1r
orXRGDPWRqBjuLWNvVXmEHcYkY83Hpq+uW+vTnXPReccmAYN5VEzrZ3r2PMp
1CPrdRiIrEEV8Wa+3XD2jkhrvLXeGmItaUxroTlsLi/kjgsqQ4ayXuXsK9AR
Xz6SjZpmbfuGtW9LQ4e6rMHW4obUNt/At9jG2ndwGh+cKcSbNqUxZCwZo8bq
VWRfy0bOmDvWHGuPPtW3A7wT1LLWpyxqrrW3mX9XCvGGvqU11Fq6F537ipGT
5qY+1bebObupLGq0tXoFez5xL3feXxlv7tuXsFYKE7BxfOpzfT88jQVjxFix
JlmbrDnWHmuktfIgOg7Bdf5dy0ROm9tT8dWUiugx9pq77L0DA7FtUD5s1nZj
ztjLsZbNRw+zlzUj80pZ9Cx7lzlgLlxk76XKyAFzYRoyG3LhU307ERvegBex
4QUYxb/RudCp7pw+hQmsjc/Fm/v25pC5VEBXBczEtveKUROtjd052w3aQ1U+
fKbvPoQFxfDpvrQH2gvtQZ3SHDaXN6S5aQ+zl+1G1y5jDVsfhbbIaAOvGZOV
MfM4+7yPbR+URg2zlm1hbWsao8bqs/x7DmZxZib8hoyLsAkbN8Ic7jg3Fz3f
3r+ItcXQB2ry8Sa+jTrUZc+z9zmTOZtZk6xND/i+Xxo9297tG/gWY7W5GDZp
mzFkLKlT3c5kzmY9WKs2j9nTMxs139qf57s8GzOMs4w2a7t73GvNs/bpE31j
DbWWDoOX0pg2tu3R9mrf1Lc1Jo3NWnT2tRbwfRqW8L20PHpiVVrTre1T0Tkl
HzOps6kzkbPRqnQ2rE5rvz3IXmTMGXvOiM6Ka1hbXYiebm83xow1ZxpnG9/I
t7IH2guNMWNtD7Xux5LoCfaGztylSzFm2L3pDOks6YzirHIynQ3d0zmtOdYe
ZzZnN3Pe3HdmcnYyJ81NZ8aW2bEicnMPtvxQGjOCs4JvODb1qb71TXwbc8hc
MmaMHX2oL52hnKXsOZl05nP2M2fMnao0V4xxY90eaC80h8wl7+zd69LeuyDN
JXPAXPCNfCtt1FZz2ty2JlobjXFj3Z5ib7nJ91/FyAFzwZnS2dKaYm2xJ9gb
rCnWFmu0tdoznj2QztrO4M7izlj1aUwYG+aouVqT5o4znbOdM5GzkTFmrLX0
9LKoOdaelpgvj55n77Pn2Hus8dZ6a7q1/X/uHrwd
          "]]]}, 
       {RGBColor[1, 0.5, 0], Opacity[0.8], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
2JtZM62d/wNhwr1j
          "]]]}, 
       {RGBColor[0, 1, 1], Opacity[0.01], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
HPYe7uFeg1ItsOez97MHtxfXx/r6f5Ddvqk=
          "]]]}, 
       {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
        GraphicsGroup3DBox[{
          Polygon3DBox[{{695, 2, 710}, {710, 2, 2390}, {691, 1, 2263}, {709, 
           2, 2317}, {979, 2, 2374}, {1939, 1, 2236}, {692, 1, 677}, {2374, 2,
            709}, {1895, 1, 692}, {2263, 1, 1939}, {2275, 1, 691}}], 
          Polygon3DBox[CompressedData["
1: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
Imqdml8We/Km2JPbm/8Pk4Ok/A==
           "]], 
          Polygon3DBox[{{1412, 1411, 2317, 2, 695}, {2390, 2, 979, 2386, 
           2387}, {2249, 2248, 2236, 1, 1895}, {677, 1, 2275, 2287, 
           2288}}]}]}, 
       {RGBColor[1, 0.5, 0], Opacity[0.8], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
          "]]]}, 
       {RGBColor[0, 1, 1], Opacity[0.01], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
WRvpA33RHm1fyL+8XRI0Rq3pH7XMPsf+B51aunE=
          "]]]}, 
       {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
        GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
1Xp7JHsl/2fxf5f/ARnRlMs=
          "]]]}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ckq7wEYBuDf4SiKYmtYuBCKoigWSrF1AZSxOOZ7OOapzPM5xiXlGP5m
jvEOzLOV6SmLp7f3q2/1JheV5BX/CIKgkZOwIHiXjw7PpPKp38pX0ongnjKO
ySSKCrKJoYpTconjHzW0sEwHbaxRSzchOsknnh16aWaEc4a45pI9GhmgkHoS
WQwPggXmmWOWGf7yh2mmmGSCccYYJcF/HQX008AuF1wxyBnDNNHDNlsksUkf
62zQxS9WaaWdJX5TzQqx5HBCJdFkUU4kGRxRyh0/SeOFGz7skyKfeOBN37Bj
iE222GaHXfbY54BD/nPEcdj3/l9BdlOB
         "]], Line3DBox[CompressedData["
1:eJwl0s0r3wEcB/CvH1lNbcXm4eLpQlnZheJCUZSVh4niYrKprbhypzzM88Mf
wG2Mu8fiL/Bws2FsmMeNydhDXnJ4vetz+Bw+vT8p9c0VTWFBEPSyHxKGPEIU
EEkRDynhES1EU8oTXhJLOfGMscAcVfzjmj9c0UYi3/jAElPsM8knktlglXVq
SOELu2xRRxpdNJBBP2/IZIa3ZHF3ZA4dEUHQSRfdvKeHXvroZ4BBhhhmhFFy
7TeTzTtmeU4jAzzjNd2k84ptvrJDKrWssMYmn/nIAdMsM8EeSbTzm7/c8J9q
5llknAQqiKOSp5QRQyuPeUEUxTygkHDyCeNS97+44Jyf/OCMU0445ohDvnMQ
uv+ZW0YnTh4=
         "]], Line3DBox[CompressedData["
1:eJwl0ElKAmAABeBf9CKSCQoJWVBQl8i1FuhGwaZLNEAZNGCjZcM+zaZrlWWZ
WR+4+BZv8Xjw4sXV3EokhLBAiIWQFJbYpEWBBNs88kCJNM/s8soeGQ7IUmGa
I5aZZZ157uzccsM1Ta64pMEF55xxygnH1JnTX2OGKodMUWaSfSao8cIOT6Qo
0qbDFmPkuWeDRcZ5i4bwTpcPPunxxTd9fhjwy5C/6Oi/f9PiLuM=
         "]]}, 
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0bcuBWAAhuH/aANREjVRkoNESUhY1IUNh8PRu7gAvd+AkpAou3p7emfg
EcMzfMM3vdH5xcRCJISwTVd6CD9GS1IIEdpIZpBhFhllnGUmOWWaVVI5ZJZN
1jlml322yeSSa7I5J5cO8imkmFKiVFBFDT3UEaeBAZq4zQjhjnseeOSJZ154
5Y13Pvjki2+a/RM00k89MWqpppJyyiihiAI6yeOCHG64IosdDtjjhA22mOOI
NNaY4YwpVphgjCVGGCKFdpJoJfw10GmEYYYYJMEA/cTpo5cYPXSn//f9BRPx
MvU=
         "]], Line3DBox[CompressedData["
1:eJwl0bcuxWEAxuGPBf9jYWPBwEJComxKoksY3IGjOxwXoNeFhMHpRbkwvXMR
nsTwjL/lfVvim7PJihBCgrsohKgyhAGqibNALVm2WeKcIXa5ZJ8V8qxxSJp6
yqxTZIRGkozRzDETtHHKFB3M0EUPffzGQvjhmy8++eCdN1554ZknHnngnl59
N51M084kJ7QyzhFNjLJBA8MUSFCijhQHrJJjmT0u2GGQMxbZIkOMeeaoop8a
ruydIk2GLDnyFChSosw1N9xG/z/9AQ+bNWw=
         "]]}, 
       {GrayLevel[0], 
        Line3DBox[{248, 3, 244, 229, 18, 33, 48, 63, 78, 93, 108, 123, 138, 
         153, 168, 183, 198, 233, 250, 213, 246, 238, 214, 215, 216, 217, 218,
          219, 220, 221, 222, 223, 224, 225, 226, 235, 251, 227, 247, 239, 
         212, 197, 182, 167, 152, 137, 122, 107, 92, 77, 62, 47, 32, 231, 249,
          17, 245, 237, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 236, 
         248}]}, 
       {Opacity[0.5], 
        Line3DBox[{727, 2542, 2557, 1204, 742, 2512, 2572, 1234, 787, 2527, 
         1594, 2332, 1264, 817, 1609, 1294, 847, 1624, 2347, 1324, 877, 2209, 
         1654, 1864, 2179, 1894, 1879, 2224, 1669, 1912, 2251, 1897, 694, 679,
          2290, 1927, 1714, 1999, 2362, 1984, 2497, 2482, 2305, 1699, 1969, 
         1399, 1684, 952}], 
        Line3DBox[{743, 1205, 758, 1235, 788, 1265, 818, 1295, 848, 1625, 878,
          1325, 893, 1355, 908, 1340, 923, 1940, 2150, 2135, 1370, 2618, 2588,
          2603, 2573, 1715, 953, 2438, 2000, 2180, 2030, 2453, 2015, 2375, 
         968, 2363, 698, 2306, 1400, 980, 2408, 2423, 2393, 1445, 1025, 1760, 
         1475, 1055, 1805, 1490, 1085, 2120, 1520, 1130, 1550, 1160}], 
        Line3DBox[{938, 1670, 1385, 1955, 1685, 2291, 2468, 2483, 1970, 2348, 
         1985, 1700, 1913, 2276, 2264, 680, 2252, 1928, 2225, 2237, 1898, 
         1655, 2210, 1865, 1880, 2165, 1850, 1640, 2195, 863, 1310, 2333, 
         1610, 833, 1280, 1595, 803, 1250, 2318, 1580, 2513, 773, 1220, 2558, 
         2498, 728, 1190, 2543, 2528, 713}], 
        Line3DBox[{1024, 1444, 1744, 2059, 1429, 1009, 1759, 2089, 2074, 1474,
          1054, 2104, 1789, 2119, 1804, 1084, 1834, 1114, 1519, 1129, 1849, 
         1549, 1159, 1579, 1189}], 
        Line3DBox[{1174, 1564, 1144, 1534, 2134, 1099, 1504, 1819, 1069, 1489,
          1774, 1039, 1459, 2407, 2437, 2422, 994, 1414, 697, 712, 2392, 2389,
          2029, 2467, 2044, 2194, 2014, 2452, 967, 1729, 2587, 2617, 2602, 
         2632, 1384, 2149, 2164, 1954, 937, 1354, 922, 1369, 907, 1339, 892, 
         1639, 862, 1309, 832, 1279, 802, 1249, 772, 1219, 757}], 
        Line3DBox[{1175, 1565, 1145, 1535, 1835, 1115, 1505, 1100, 1820, 1070,
          1790, 2105, 1775, 2090, 1040, 1460, 2060, 2075, 1745, 995, 1415, 
         2045, 1730, 1430, 1010}], 
        Line3DBox[{2633, 3068, 2648, 3083, 2663, 3263, 3278, 3473, 3293, 3308,
          3488, 3323, 3743, 3338, 3503, 2678, 3698, 3353, 3533, 3518, 3728, 
         3653, 3668, 3548, 2738, 3848, 3863, 2753, 3833, 2783, 3128, 2798, 
         2813, 2843, 2858, 2888, 2903, 2933, 2948, 3203, 2978, 3233, 3008, 
         3248, 3053}], 
        Line3DBox[{2722, 3112, 2707, 3382, 3397, 2737, 3787, 3577, 3412, 3697,
          3127, 3592, 3727, 3607, 3427, 3802, 3442, 3622, 3772, 2782, 3832, 
         3457, 3817, 3157, 2842, 3472, 3172, 2887, 3637, 3187, 2932, 3652, 
         3202, 2977, 3232, 3007, 3037, 3052}], 
        Line3DBox[{3038, 3023, 2993, 3218, 2963, 3188, 3638, 2918, 3173, 3623,
          2873, 3158, 3458, 2828, 3143, 3803, 3443, 3818, 2768, 3758, 3608, 
         3428, 3788, 3413, 3593, 3713, 3578, 3113, 3683, 3398, 3563, 3773, 
         2723, 3383, 3368, 2693, 3098, 2708}], 
        Line3DBox[{3067, 3262, 3022, 3247, 2992, 3217, 2962, 2947, 2917, 2902,
          2872, 2857, 2827, 2812, 3142, 2797, 3847, 2767, 3877, 3862, 2752, 
         3562, 3682, 3667, 3742, 3532, 3547, 3367, 3712, 2692, 3517, 3352, 
         3757, 3337, 3502, 3322, 3307, 3487, 3292, 3277, 2677, 3097, 2662, 
         3082, 2647}], 
        Line3DBox[{714, 2529, 2544, 1191, 729, 2499, 2559, 1221, 774, 2514, 
         1581, 2319, 1251, 804, 1596, 1281, 834, 1611, 2334, 1311, 864, 2196, 
         1641, 1851, 2166, 1881, 1866, 2211, 1656, 1899, 2238, 2226, 1929, 
         2253, 681, 2265, 2277, 1914, 1701, 1986, 2349, 1971, 2484, 2469, 
         2292, 1686, 1956, 1386, 1671, 939}], 
        Line3DBox[{715, 2530, 2545, 1192, 730, 2500, 2560, 1222, 775, 2515, 
         1582, 2320, 1252, 805, 1597, 1282, 835, 1612, 2335, 1312, 865, 2197, 
         1642, 1852, 2167, 1882, 1867, 2212, 1657, 1900, 2239, 2227, 1930, 
         2254, 682, 2266, 2278, 1915, 1702, 1987, 2350, 1972, 2485, 2470, 
         2293, 1687, 1957, 1387, 1672, 940}], 
        Line3DBox[{716, 2531, 2546, 1193, 731, 2501, 2561, 1223, 776, 2516, 
         1583, 2321, 1253, 806, 1598, 1283, 836, 1613, 2336, 1313, 866, 2198, 
         1643, 1853, 2168, 1883, 1868, 2213, 1658, 1901, 2240, 2228, 1931, 
         2255, 683, 2267, 2279, 1916, 1703, 1988, 2351, 1973, 2486, 2471, 
         2294, 1688, 1958, 1388, 1673, 941}], 
        Line3DBox[{717, 2532, 2547, 1194, 732, 2502, 2562, 1224, 777, 2517, 
         1584, 2322, 1254, 807, 1599, 1284, 837, 1614, 2337, 1314, 867, 2199, 
         1644, 1854, 2169, 1884, 1869, 2214, 1659, 1902, 2241, 2229, 1932, 
         2256, 684, 2268, 2280, 1917, 1704, 1989, 2352, 1974, 2487, 2472, 
         2295, 1689, 1959, 1389, 1674, 942}], 
        Line3DBox[{718, 2533, 2548, 1195, 733, 2503, 2563, 1225, 778, 2518, 
         1585, 2323, 1255, 808, 1600, 1285, 838, 1615, 2338, 1315, 868, 2200, 
         1645, 1855, 2170, 1885, 1870, 2215, 1660, 1903, 2242, 2230, 1933, 
         2257, 685, 2269, 2281, 1918, 1705, 1990, 2353, 1975, 2488, 2473, 
         2296, 1690, 1960, 1390, 1675, 943}], 
        Line3DBox[{719, 2534, 2549, 1196, 734, 2504, 2564, 1226, 779, 2519, 
         1586, 2324, 1256, 809, 1601, 1286, 839, 1616, 2339, 1316, 869, 2201, 
         1646, 1856, 2171, 1886, 1871, 2216, 1661, 1904, 2243, 2231, 1934, 
         2258, 686, 2270, 2282, 1919, 1706, 1991, 2354, 1976, 2489, 2474, 
         2297, 1691, 1961, 1391, 1676, 944}], 
        Line3DBox[{720, 2535, 2550, 1197, 735, 2505, 2565, 1227, 780, 2520, 
         1587, 2325, 1257, 810, 1602, 1287, 840, 1617, 2340, 1317, 870, 2202, 
         1647, 1857, 2172, 1887, 1872, 2217, 1662, 1905, 2244, 2232, 1935, 
         2259, 687, 2271, 2283, 1920, 1707, 1992, 2355, 1977, 2490, 2475, 
         2298, 1692, 1962, 1392, 1677, 945}], 
        Line3DBox[{721, 2536, 2551, 1198, 736, 2506, 2566, 1228, 781, 2521, 
         1588, 2326, 1258, 811, 1603, 1288, 841, 1618, 2341, 1318, 871, 2203, 
         1648, 1858, 2173, 1888, 1873, 2218, 1663, 1906, 2245, 2233, 1936, 
         2260, 688, 2272, 2284, 1921, 1708, 1993, 2356, 1978, 2491, 2476, 
         2299, 1693, 1963, 1393, 1678, 946}], 
        Line3DBox[{722, 2537, 2552, 1199, 737, 2507, 2567, 1229, 782, 2522, 
         1589, 2327, 1259, 812, 1604, 1289, 842, 1619, 2342, 1319, 872, 2204, 
         1649, 1859, 2174, 1889, 1874, 2219, 1664, 1907, 2246, 2234, 1937, 
         2261, 689, 2273, 2285, 1922, 1709, 1994, 2357, 1979, 2492, 2477, 
         2300, 1694, 1964, 1394, 1679, 947}], 
        Line3DBox[{723, 2538, 2553, 1200, 738, 2508, 2568, 1230, 783, 2523, 
         1590, 2328, 1260, 813, 1605, 1290, 843, 1620, 2343, 1320, 873, 2205, 
         1650, 1860, 2175, 1890, 1875, 2220, 1665, 1908, 2247, 2235, 1938, 
         2262, 690, 2274, 2286, 1923, 1710, 1995, 2358, 1980, 2493, 2478, 
         2301, 1695, 1965, 1395, 1680, 948}], 
        Line3DBox[{724, 2539, 2554, 1201, 739, 2509, 2569, 1231, 784, 2524, 
         1591, 2329, 1261, 814, 1606, 1291, 844, 1621, 2344, 1321, 874, 2206, 
         1651, 1861, 2176, 1891, 1876, 2221, 1666, 1909, 2248, 2236, 1939, 
         2263, 691, 2275, 2287, 1924, 1711, 1996, 2359, 1981, 2494, 2479, 
         2302, 1696, 1966, 1396, 1681, 949}], 
        Line3DBox[{725, 2540, 2555, 1202, 740, 2510, 2570, 1232, 785, 2525, 
         1592, 2330, 1262, 815, 1607, 1292, 845, 1622, 2345, 1322, 875, 2207, 
         1652, 1862, 2177, 1892, 1877, 2222, 1667, 1910, 2249, 1895, 692, 677,
          2288, 1925, 1712, 1997, 2360, 1982, 2495, 2480, 2303, 1697, 1967, 
         1397, 1682, 950}], 
        Line3DBox[{726, 2541, 2556, 1203, 741, 2511, 2571, 1233, 786, 2526, 
         1593, 2331, 1263, 816, 1608, 1293, 846, 1623, 2346, 1323, 876, 2208, 
         1653, 1863, 2178, 1893, 1878, 2223, 1668, 1911, 2250, 1896, 693, 678,
          2289, 1926, 1713, 1998, 2361, 1983, 2496, 2481, 2304, 1698, 1968, 
         1398, 1683, 951}], 
        Line3DBox[{744, 1206, 759, 1236, 789, 1266, 819, 1296, 849, 1626, 879,
          1326, 894, 1356, 909, 1341, 924, 1941, 2151, 2136, 1371, 2619, 2589,
          2604, 2574, 1716, 954, 2439, 2001, 2181, 2031, 2454, 2016, 2376, 
         969, 2364, 699, 2307, 1401, 981, 2409, 2424, 2394, 1446, 1026, 1761, 
         1476, 1056, 1806, 1491, 1086, 2121, 1521, 1131, 1551, 1161}], 
        Line3DBox[{745, 1207, 760, 1237, 790, 1267, 820, 1297, 850, 1627, 880,
          1327, 895, 1357, 910, 1342, 925, 1942, 2152, 2137, 1372, 2620, 2590,
          2605, 2575, 1717, 955, 2440, 2002, 2182, 2032, 2455, 2017, 2377, 
         970, 2365, 700, 2308, 1402, 982, 2410, 2425, 2395, 1447, 1027, 1762, 
         1477, 1057, 1807, 1492, 1087, 2122, 1522, 1132, 1552, 1162}], 
        Line3DBox[{746, 1208, 761, 1238, 791, 1268, 821, 1298, 851, 1628, 881,
          1328, 896, 1358, 911, 1343, 926, 1943, 2153, 2138, 1373, 2621, 2591,
          2606, 2576, 1718, 956, 2441, 2003, 2183, 2033, 2456, 2018, 2378, 
         971, 2366, 701, 2309, 1403, 983, 2411, 2426, 2396, 1448, 1028, 1763, 
         1478, 1058, 1808, 1493, 1088, 2123, 1523, 1133, 1553, 1163}], 
        Line3DBox[{747, 1209, 762, 1239, 792, 1269, 822, 1299, 852, 1629, 882,
          1329, 897, 1359, 912, 1344, 927, 1944, 2154, 2139, 1374, 2622, 2592,
          2607, 2577, 1719, 957, 2442, 2004, 2184, 2034, 2457, 2019, 2379, 
         972, 2367, 702, 2310, 1404, 984, 2412, 2427, 2397, 1449, 1029, 1764, 
         1479, 1059, 1809, 1494, 1089, 2124, 1524, 1134, 1554, 1164}], 
        Line3DBox[{748, 1210, 763, 1240, 793, 1270, 823, 1300, 853, 1630, 883,
          1330, 898, 1360, 913, 1345, 928, 1945, 2155, 2140, 1375, 2623, 2593,
          2608, 2578, 1720, 958, 2443, 2005, 2185, 2035, 2458, 2020, 2380, 
         973, 2368, 703, 2311, 1405, 985, 2413, 2428, 2398, 1450, 1030, 1765, 
         1480, 1060, 1810, 1495, 1090, 2125, 1525, 1135, 1555, 1165}], 
        Line3DBox[{749, 1211, 764, 1241, 794, 1271, 824, 1301, 854, 1631, 884,
          1331, 899, 1361, 914, 1346, 929, 1946, 2156, 2141, 1376, 2624, 2594,
          2609, 2579, 1721, 959, 2444, 2006, 2186, 2036, 2459, 2021, 2381, 
         974, 2369, 704, 2312, 1406, 986, 2414, 2429, 2399, 1451, 1031, 1766, 
         1481, 1061, 1811, 1496, 1091, 2126, 1526, 1136, 1556, 1166}], 
        Line3DBox[{750, 1212, 765, 1242, 795, 1272, 825, 1302, 855, 1632, 885,
          1332, 900, 1362, 915, 1347, 930, 1947, 2157, 2142, 1377, 2625, 2595,
          2610, 2580, 1722, 960, 2445, 2007, 2187, 2037, 2460, 2022, 2382, 
         975, 2370, 705, 2313, 1407, 987, 2415, 2430, 2400, 1452, 1032, 1767, 
         1482, 1062, 1812, 1497, 1092, 2127, 1527, 1137, 1557, 1167}], 
        Line3DBox[{751, 1213, 766, 1243, 796, 1273, 826, 1303, 856, 1633, 886,
          1333, 901, 1363, 916, 1348, 931, 1948, 2158, 2143, 1378, 2626, 2596,
          2611, 2581, 1723, 961, 2446, 2008, 2188, 2038, 2461, 2023, 2383, 
         976, 2371, 706, 2314, 1408, 988, 2416, 2431, 2401, 1453, 1033, 1768, 
         1483, 1063, 1813, 1498, 1093, 2128, 1528, 1138, 1558, 1168}], 
        Line3DBox[{752, 1214, 767, 1244, 797, 1274, 827, 1304, 857, 1634, 887,
          1334, 902, 1364, 917, 1349, 932, 1949, 2159, 2144, 1379, 2627, 2597,
          2612, 2582, 1724, 962, 2447, 2009, 2189, 2039, 2462, 2024, 2384, 
         977, 2372, 707, 2315, 1409, 989, 2417, 2432, 2402, 1454, 1034, 1769, 
         1484, 1064, 1814, 1499, 1094, 2129, 1529, 1139, 1559, 1169}], 
        Line3DBox[{753, 1215, 768, 1245, 798, 1275, 828, 1305, 858, 1635, 888,
          1335, 903, 1365, 918, 1350, 933, 1950, 2160, 2145, 1380, 2628, 2598,
          2613, 2583, 1725, 963, 2448, 2010, 2190, 2040, 2463, 2025, 2385, 
         978, 2373, 708, 2316, 1410, 990, 2418, 2433, 2403, 1455, 1035, 1770, 
         1485, 1065, 1815, 1500, 1095, 2130, 1530, 1140, 1560, 1170}], 
        Line3DBox[{754, 1216, 769, 1246, 799, 1276, 829, 1306, 859, 1636, 889,
          1336, 904, 1366, 919, 1351, 934, 1951, 2161, 2146, 1381, 2629, 2599,
          2614, 2584, 1726, 964, 2449, 2011, 2191, 2041, 2464, 2026, 2386, 
         979, 2374, 709, 2317, 1411, 991, 2419, 2434, 2404, 1456, 1036, 1771, 
         1486, 1066, 1816, 1501, 1096, 2131, 1531, 1141, 1561, 1171}], 
        Line3DBox[{755, 1217, 770, 1247, 800, 1277, 830, 1307, 860, 1637, 890,
          1337, 905, 1367, 920, 1352, 935, 1952, 2162, 2147, 1382, 2630, 2600,
          2615, 2585, 1727, 965, 2450, 2012, 2192, 2042, 2465, 2027, 2387, 
         2390, 710, 695, 1412, 992, 2420, 2435, 2405, 1457, 1037, 1772, 1487, 
         1067, 1817, 1502, 1097, 2132, 1532, 1142, 1562, 1172}], 
        Line3DBox[{756, 1218, 771, 1248, 801, 1278, 831, 1308, 861, 1638, 891,
          1338, 906, 1368, 921, 1353, 936, 1953, 2163, 2148, 1383, 2631, 2601,
          2616, 2586, 1728, 966, 2451, 2013, 2193, 2043, 2466, 2028, 2388, 
         2391, 711, 696, 1413, 993, 2421, 2436, 2406, 1458, 1038, 1773, 1488, 
         1068, 1818, 1503, 1098, 2133, 1533, 1143, 1563, 1173}], 
        Line3DBox[{1011, 1431, 1731, 2046, 1416, 996, 1746, 2076, 2061, 1461, 
         1041, 2091, 1776, 2106, 1791, 1071, 1821, 1101, 1506, 1116, 1836, 
         1536, 1146, 1566, 1176}], 
        Line3DBox[{1012, 1432, 1732, 2047, 1417, 997, 1747, 2077, 2062, 1462, 
         1042, 2092, 1777, 2107, 1792, 1072, 1822, 1102, 1507, 1117, 1837, 
         1537, 1147, 1567, 1177}], 
        Line3DBox[{1013, 1433, 1733, 2048, 1418, 998, 1748, 2078, 2063, 1463, 
         1043, 2093, 1778, 2108, 1793, 1073, 1823, 1103, 1508, 1118, 1838, 
         1538, 1148, 1568, 1178}], 
        Line3DBox[{1014, 1434, 1734, 2049, 1419, 999, 1749, 2079, 2064, 1464, 
         1044, 2094, 1779, 2109, 1794, 1074, 1824, 1104, 1509, 1119, 1839, 
         1539, 1149, 1569, 1179}], 
        Line3DBox[{1015, 1435, 1735, 2050, 1420, 1000, 1750, 2080, 2065, 1465,
          1045, 2095, 1780, 2110, 1795, 1075, 1825, 1105, 1510, 1120, 1840, 
         1540, 1150, 1570, 1180}], 
        Line3DBox[{1016, 1436, 1736, 2051, 1421, 1001, 1751, 2081, 2066, 1466,
          1046, 2096, 1781, 2111, 1796, 1076, 1826, 1106, 1511, 1121, 1841, 
         1541, 1151, 1571, 1181}], 
        Line3DBox[{1017, 1437, 1737, 2052, 1422, 1002, 1752, 2082, 2067, 1467,
          1047, 2097, 1782, 2112, 1797, 1077, 1827, 1107, 1512, 1122, 1842, 
         1542, 1152, 1572, 1182}], 
        Line3DBox[{1018, 1438, 1738, 2053, 1423, 1003, 1753, 2083, 2068, 1468,
          1048, 2098, 1783, 2113, 1798, 1078, 1828, 1108, 1513, 1123, 1843, 
         1543, 1153, 1573, 1183}], 
        Line3DBox[{1019, 1439, 1739, 2054, 1424, 1004, 1754, 2084, 2069, 1469,
          1049, 2099, 1784, 2114, 1799, 1079, 1829, 1109, 1514, 1124, 1844, 
         1544, 1154, 1574, 1184}], 
        Line3DBox[{1020, 1440, 1740, 2055, 1425, 1005, 1755, 2085, 2070, 1470,
          1050, 2100, 1785, 2115, 1800, 1080, 1830, 1110, 1515, 1125, 1845, 
         1545, 1155, 1575, 1185}], 
        Line3DBox[{1021, 1441, 1741, 2056, 1426, 1006, 1756, 2086, 2071, 1471,
          1051, 2101, 1786, 2116, 1801, 1081, 1831, 1111, 1516, 1126, 1846, 
         1546, 1156, 1576, 1186}], 
        Line3DBox[{1022, 1442, 1742, 2057, 1427, 1007, 1757, 2087, 2072, 1472,
          1052, 2102, 1787, 2117, 1802, 1082, 1832, 1112, 1517, 1127, 1847, 
         1547, 1157, 1577, 1187}], 
        Line3DBox[{1023, 1443, 1743, 2058, 1428, 1008, 1758, 2088, 2073, 1473,
          1053, 2103, 1788, 2118, 1803, 1083, 1833, 1113, 1518, 1128, 1848, 
         1548, 1158, 1578, 1188}], 
        Line3DBox[{2634, 3069, 2649, 3084, 2664, 3264, 3279, 3474, 3294, 3309,
          3489, 3324, 3744, 3339, 3504, 2679, 3699, 3354, 3534, 3519, 3729, 
         3654, 3669, 3549, 2739, 3849, 3864, 2754, 3834, 2784, 3129, 2799, 
         2814, 2844, 2859, 2889, 2904, 2934, 2949, 3204, 2979, 3234, 3009, 
         3249, 3054}], 
        Line3DBox[{2635, 3070, 2650, 3085, 2665, 3265, 3280, 3475, 3295, 3310,
          3490, 3325, 3745, 3340, 3505, 2680, 3700, 3355, 3535, 3520, 3730, 
         3655, 3670, 3550, 2740, 3850, 3865, 2755, 3835, 2785, 3130, 2800, 
         2815, 2845, 2860, 2890, 2905, 2935, 2950, 3205, 2980, 3235, 3010, 
         3250, 3055}], 
        Line3DBox[{2636, 3071, 2651, 3086, 2666, 3266, 3281, 3476, 3296, 3311,
          3491, 3326, 3746, 3341, 3506, 2681, 3701, 3356, 3536, 3521, 3731, 
         3656, 3671, 3551, 2741, 3851, 3866, 2756, 3836, 2786, 3131, 2801, 
         2816, 2846, 2861, 2891, 2906, 2936, 2951, 3206, 2981, 3236, 3011, 
         3251, 3056}], 
        Line3DBox[{2637, 3072, 2652, 3087, 2667, 3267, 3282, 3477, 3297, 3312,
          3492, 3327, 3747, 3342, 3507, 2682, 3702, 3357, 3537, 3522, 3732, 
         3657, 3672, 3552, 2742, 3852, 3867, 2757, 3837, 2787, 3132, 2802, 
         2817, 2847, 2862, 2892, 2907, 2937, 2952, 3207, 2982, 3237, 3012, 
         3252, 3057}], 
        Line3DBox[{2638, 3073, 2653, 3088, 2668, 3268, 3283, 3478, 3298, 3313,
          3493, 3328, 3748, 3343, 3508, 2683, 3703, 3358, 3538, 3523, 3733, 
         3658, 3673, 3553, 2743, 3853, 3868, 2758, 3838, 2788, 3133, 2803, 
         2818, 2848, 2863, 2893, 2908, 2938, 2953, 3208, 2983, 3238, 3013, 
         3253, 3058}], 
        Line3DBox[{2639, 3074, 2654, 3089, 2669, 3269, 3284, 3479, 3299, 3314,
          3494, 3329, 3749, 3344, 3509, 2684, 3704, 3359, 3539, 3524, 3734, 
         3659, 3674, 3554, 2744, 3854, 3869, 2759, 3839, 2789, 3134, 2804, 
         2819, 2849, 2864, 2894, 2909, 2939, 2954, 3209, 2984, 3239, 3014, 
         3254, 3059}], 
        Line3DBox[{2640, 3075, 2655, 3090, 2670, 3270, 3285, 3480, 3300, 3315,
          3495, 3330, 3750, 3345, 3510, 2685, 3705, 3360, 3540, 3525, 3735, 
         3660, 3675, 3555, 2745, 3855, 3870, 2760, 3840, 2790, 3135, 2805, 
         2820, 2850, 2865, 2895, 2910, 2940, 2955, 3210, 2985, 3240, 3015, 
         3255, 3060}], 
        Line3DBox[{2641, 3076, 2656, 3091, 2671, 3271, 3286, 3481, 3301, 3316,
          3496, 3331, 3751, 3346, 3511, 2686, 3706, 3361, 3541, 3526, 3736, 
         3661, 3676, 3556, 2746, 3856, 3871, 2761, 3841, 2791, 3136, 2806, 
         2821, 2851, 2866, 2896, 2911, 2941, 2956, 3211, 2986, 3241, 3016, 
         3256, 3061}], 
        Line3DBox[{2642, 3077, 2657, 3092, 2672, 3272, 3287, 3482, 3302, 3317,
          3497, 3332, 3752, 3347, 3512, 2687, 3707, 3362, 3542, 3527, 3737, 
         3662, 3677, 3557, 2747, 3857, 3872, 2762, 3842, 2792, 3137, 2807, 
         2822, 2852, 2867, 2897, 2912, 2942, 2957, 3212, 2987, 3242, 3017, 
         3257, 3062}], 
        Line3DBox[{2643, 3078, 2658, 3093, 2673, 3273, 3288, 3483, 3303, 3318,
          3498, 3333, 3753, 3348, 3513, 2688, 3708, 3363, 3543, 3528, 3738, 
         3663, 3678, 3558, 2748, 3858, 3873, 2763, 3843, 2793, 3138, 2808, 
         2823, 2853, 2868, 2898, 2913, 2943, 2958, 3213, 2988, 3243, 3018, 
         3258, 3063}], 
        Line3DBox[{2644, 3079, 2659, 3094, 2674, 3274, 3289, 3484, 3304, 3319,
          3499, 3334, 3754, 3349, 3514, 2689, 3709, 3364, 3544, 3529, 3739, 
         3664, 3679, 3559, 2749, 3859, 3874, 2764, 3844, 2794, 3139, 2809, 
         2824, 2854, 2869, 2899, 2914, 2944, 2959, 3214, 2989, 3244, 3019, 
         3259, 3064}], 
        Line3DBox[{2645, 3080, 2660, 3095, 2675, 3275, 3290, 3485, 3305, 3320,
          3500, 3335, 3755, 3350, 3515, 2690, 3710, 3365, 3545, 3530, 3740, 
         3665, 3680, 3560, 2750, 3860, 3875, 2765, 3845, 2795, 3140, 2810, 
         2825, 2855, 2870, 2900, 2915, 2945, 2960, 3215, 2990, 3245, 3020, 
         3260, 3065}], 
        Line3DBox[{2646, 3081, 2661, 3096, 2676, 3276, 3291, 3486, 3306, 3321,
          3501, 3336, 3756, 3351, 3516, 2691, 3711, 3366, 3546, 3531, 3741, 
         3666, 3681, 3561, 2751, 3861, 3876, 2766, 3846, 2796, 3141, 2811, 
         2826, 2856, 2871, 2901, 2916, 2946, 2961, 3216, 2991, 3246, 3021, 
         3261, 3066}], 
        Line3DBox[{2709, 3099, 2694, 3369, 3384, 2724, 3774, 3564, 3399, 3684,
          3114, 3579, 3714, 3594, 3414, 3789, 3429, 3609, 3759, 2769, 3819, 
         3444, 3804, 3144, 2829, 3459, 3159, 2874, 3624, 3174, 2919, 3639, 
         3189, 2964, 3219, 2994, 3024, 3039}], 
        Line3DBox[{2710, 3100, 2695, 3370, 3385, 2725, 3775, 3565, 3400, 3685,
          3115, 3580, 3715, 3595, 3415, 3790, 3430, 3610, 3760, 2770, 3820, 
         3445, 3805, 3145, 2830, 3460, 3160, 2875, 3625, 3175, 2920, 3640, 
         3190, 2965, 3220, 2995, 3025, 3040}], 
        Line3DBox[{2711, 3101, 2696, 3371, 3386, 2726, 3776, 3566, 3401, 3686,
          3116, 3581, 3716, 3596, 3416, 3791, 3431, 3611, 3761, 2771, 3821, 
         3446, 3806, 3146, 2831, 3461, 3161, 2876, 3626, 3176, 2921, 3641, 
         3191, 2966, 3221, 2996, 3026, 3041}], 
        Line3DBox[{2712, 3102, 2697, 3372, 3387, 2727, 3777, 3567, 3402, 3687,
          3117, 3582, 3717, 3597, 3417, 3792, 3432, 3612, 3762, 2772, 3822, 
         3447, 3807, 3147, 2832, 3462, 3162, 2877, 3627, 3177, 2922, 3642, 
         3192, 2967, 3222, 2997, 3027, 3042}], 
        Line3DBox[{2713, 3103, 2698, 3373, 3388, 2728, 3778, 3568, 3403, 3688,
          3118, 3583, 3718, 3598, 3418, 3793, 3433, 3613, 3763, 2773, 3823, 
         3448, 3808, 3148, 2833, 3463, 3163, 2878, 3628, 3178, 2923, 3643, 
         3193, 2968, 3223, 2998, 3028, 3043}], 
        Line3DBox[{2714, 3104, 2699, 3374, 3389, 2729, 3779, 3569, 3404, 3689,
          3119, 3584, 3719, 3599, 3419, 3794, 3434, 3614, 3764, 2774, 3824, 
         3449, 3809, 3149, 2834, 3464, 3164, 2879, 3629, 3179, 2924, 3644, 
         3194, 2969, 3224, 2999, 3029, 3044}], 
        Line3DBox[{2715, 3105, 2700, 3375, 3390, 2730, 3780, 3570, 3405, 3690,
          3120, 3585, 3720, 3600, 3420, 3795, 3435, 3615, 3765, 2775, 3825, 
         3450, 3810, 3150, 2835, 3465, 3165, 2880, 3630, 3180, 2925, 3645, 
         3195, 2970, 3225, 3000, 3030, 3045}], 
        Line3DBox[{2716, 3106, 2701, 3376, 3391, 2731, 3781, 3571, 3406, 3691,
          3121, 3586, 3721, 3601, 3421, 3796, 3436, 3616, 3766, 2776, 3826, 
         3451, 3811, 3151, 2836, 3466, 3166, 2881, 3631, 3181, 2926, 3646, 
         3196, 2971, 3226, 3001, 3031, 3046}], 
        Line3DBox[{2717, 3107, 2702, 3377, 3392, 2732, 3782, 3572, 3407, 3692,
          3122, 3587, 3722, 3602, 3422, 3797, 3437, 3617, 3767, 2777, 3827, 
         3452, 3812, 3152, 2837, 3467, 3167, 2882, 3632, 3182, 2927, 3647, 
         3197, 2972, 3227, 3002, 3032, 3047}], 
        Line3DBox[{2718, 3108, 2703, 3378, 3393, 2733, 3783, 3573, 3408, 3693,
          3123, 3588, 3723, 3603, 3423, 3798, 3438, 3618, 3768, 2778, 3828, 
         3453, 3813, 3153, 2838, 3468, 3168, 2883, 3633, 3183, 2928, 3648, 
         3198, 2973, 3228, 3003, 3033, 3048}], 
        Line3DBox[{2719, 3109, 2704, 3379, 3394, 2734, 3784, 3574, 3409, 3694,
          3124, 3589, 3724, 3604, 3424, 3799, 3439, 3619, 3769, 2779, 3829, 
         3454, 3814, 3154, 2839, 3469, 3169, 2884, 3634, 3184, 2929, 3649, 
         3199, 2974, 3229, 3004, 3034, 3049}], 
        Line3DBox[{2720, 3110, 2705, 3380, 3395, 2735, 3785, 3575, 3410, 3695,
          3125, 3590, 3725, 3605, 3425, 3800, 3440, 3620, 3770, 2780, 3830, 
         3455, 3815, 3155, 2840, 3470, 3170, 2885, 3635, 3185, 2930, 3650, 
         3200, 2975, 3230, 3005, 3035, 3050}], 
        Line3DBox[{2721, 3111, 2706, 3381, 3396, 2736, 3786, 3576, 3411, 3696,
          3126, 3591, 3726, 3606, 3426, 3801, 3441, 3621, 3771, 2781, 3831, 
         3456, 3816, 3156, 2841, 3471, 3171, 2886, 3636, 3186, 2931, 3651, 
         3201, 2976, 3231, 3006, 3036, 
         3051}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     VertexNormals->CompressedData["
1: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
EzfQfYYvxwig71yx/+GGHmxjKJCMbntn5GDW605YfsMdEI2+NXjSYBydqYA5
Xwzdg/7k/tfoV+9zp4pyWMCDgT6lNzmdwDIzUlizFn+JbsgavWL4ZKM0OuuD
/7QG0EWU43g+okvVqlwrzO4Eqmf6+C90wbPDN9fvsgDKDqnMS7NU4vNCr8ST
P5tY0xlY5+3C/d5CQeIx9E0pj3yOnsom7CzLnOLoY3NGLlzoLQempWduZ5O2
HW9yXnF4Qbiw5on16GEGgY1JztkkMTVIUghdvsZkephKJScTFFQvx6LfC0rJ
2OkF898/PKpF38LQm7PpXTbhoebRHkRfjpdbeIl+pU1xmbRnk6iBFY0Udqx3
z7wGBb1K7ryI1Vw2efnZNIAH3d6tN9QSPbLoAe8OhhzCb0FXEM/mBR8mf3+8
tBbnzui+B6w55D+1sgZO9Flnlfqj6C2HXFhreHOI5cb0tihW3PfqNJfuRlfJ
2/+XRyKHFBwvqGZFf5zp93R1hkpEIqraHBVziEbUdEbIDi/I8LG/9R2d7qHW
sw61HDKSruawFf0051OGSnSrgfc6ojo55BxLj0wAixcsnTct4b0xDJdur5+M
aRsFt92/Irt/O0JTgVj28vVhaDleMlmEzqS/+fvgH0fwSfzwtAOdhUFhagC9
wLbr0MySI5Rv2RTwCj0oy3GKtn0U1M9fsf791xG4VnkcvNHzj9hP8aEnfw8o
Xr/iCNKWqwa66MvxUlNn0V0lbRg2/3OETONk7aPobWN5kyboObI7NNhXHYF9
fPMJZvRs5rmJIHTaX/pRPOucYNeUgtjktWGg2T0znot+8vaDgUM0TnDBWmpP
Bbo83YuxDnQlG0F+qfVOcP3xwsan6B2fDo7+Rq8RjzVTpHWC9t32i9bosmZ3
hzk7RuF5UEmBCh2Wl6v4roY+OKs7qICe6h+zcpHeCZ4MdTQeRAf1Pd9uo0fy
CJy8tcEJ/mN79WEderlv9FdP9FPnTfwMGZxATA80Ff5Sya2VKtaMpQRSRK0O
5aLHc/rqfWYp9B0Wn9iEGBPJPup/Nhzoh9OY6oTRK50GWbI5EslbkccXd6Bb
Xhd0OoAumcK0WUIgkRzLkRPdin6Ku+zAHvQDZorr82USiZm16AZGdNefbdU7
0O/dtf8hfSaR7HLV6aZDXxm4pceEXsyYO/DhciJZbalKX6Vzhdihez9p0VfG
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
g/jKZkHiE7lHeeskFHd/itFdxPPZvXvZDjvzJ/6ML8yTEFp3RvH2TwJ81Gi0
qsGe9G784WXsd+kjuoi/CLD416d1V/kscL6UVplgmgTSref2z34TII968pgt
9ugXjCwPsOv1uGwrWyLAwR3rKQi7brlV1/qWSeg8wJPWu0yAjGuf6XkqZsFu
7VxSGHZrTdejiysEMK+LuHkHu8Sjiht82LVY0hrYVgmQoG5RV4E97UCxRBbj
JHwyjLi6/y8BnrYoiu/8NAvssidnFbFv3VSbUf9HgAhjTj8b7MlPtXNrGCbh
3o8yJ4s1AnT0LwyXYnc3/2prgP0g0+qGxzoB4jW7FTkqZ6E3bfPgGP0kBPOv
BcZt4PEnVoRZYSffypmxxd7GW8v2YZMAjXWvx4uwt3wayVilm4TTHQZRrXRe
cFbh23a3dRpaZb8yWdGcgDKX4595rbmAW2ZJsxP232Pl+XYjCWjXvRaGE+su
sKPQLPTh/++ffnf2FpxPQN7pD2yWsVtY9WraY1d0DNBpX09ALyIDvnzYcIGy
t0L0tthZ26a5fDkSkfq+bZIOmy7wKP5U6W3sJeoJQ7JCiUhC4Z//ITpXGBY6
7HATO7NwUhr5SCJiqzUb/45dV2tB1PL//2vIm735VDURlZcdOZlB7wo8HP49
ZtgzTj6WUjdMRMuMD2NvMLhCuNOcvyn2QJyUvywTETFchMrP6AosnuJyJtgP
+SRmZTxKROJqamcGsZNF5EYuYbdo5bAx8k9EaRwdcaQtrnD37o7HBthntBuF
mWPxecmts4ZMrvDHsOaQHnbS6fqhooxEpJJ14iQHsytMD2t26Pz//w4rzDG3
CxMRRXdXWBN25Vom9SXWUeQnbz+bRqQi9Z/qfhfFI+EYN3PdMNsoimiOPXYL
e6PUDWsu7Jpih8/WsI+iHv9Zv0PYv3v6qHeJRcKlMdfP2RyjaPHG/eYfflT0
6fcLkafYdWRmIZJzFHnfEeAuwn4/oX7dEPvedZ8y5x2jSDBt7Yon9j12P/p3
Yn+veErh+s5RdI99e6oqdrIb//tO0Uj4Wynw+gzXKKIvOvuVCftstW5gNPaZ
x+JCB7hHEfH5O6FmXyoyuuBtaoj9jqPBU06eURTWrmUehV1H/OPhndjvPnzB
uIy9TJcj2Qj7lM78WodIJIzd3e04wjuK8vkY+/ZiN6g70ByFvUDzw3jNrlHE
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
LfwWMBt3NeLe7QlYP00RPIXuSd2TWLfHAmKdnbUm0Emif3mdXPqJKEI64DOf
BXwIFN1uYjcBslU/OHLvYz69WsllvBbgEH6nMn9mGsSVQs7SnMkmpAbEPPWW
NaGK4OT5gK72daM772w2YZKrdvYYutOHWNtc9O+Juvdunc8mmD6abduB7nd3
R9V79Kn6aGZelWxCY+l27fSSJqxv2PFkoxeerUmsv5hN6NpaB9ah/7iWb5uJ
fo22S97rUjZxbpf+1VT03S4/K9PRZ1l+tB29nE0orp7a4YNebbHCnYaeZVRu
O6aeTdjtZGk3Rf++d8UmBT3nbwhtzNVsYvlWSySg6yYMViShCzSoxlzVzCa2
zgbc4EM/P5+3MxFdaHzyyFbtbKIw5wj/8qImJLDetn6H/uPsg7pCnWzieFpj
fxu64wJbeTy6Tc80yfp6NpHeafguFz0/5TVnHDpNrvo/fr1s4uSZPvNg9Nti
7FZv0EvKw8Oa9bMJhiENcRv0vSlrxZnL0xARbupP7E4gzJUP8DaJqcO7pVza
//1CH8vZXt4EYq9ly8409FV5Q42M//3Hh/VVvgSCjcuOwxtd/P7G63R0tsfa
xbz8CYTKxU0sN//35PDRNPTdfZOOp/YmEN1bAxiOoq/VCh/533vHPA7oCSQQ
PRcYaFnQk38muaeid7xjHnMWTCAMOdxpRkTVQXR279cUdFemF+/ChRIIO7OJ
fwT6/T9BO//3s8KchvnCCYSogvpiJHr8+B+TZPT0kUCeVpEE4nls8pwDely7
emYSuoTeppY50QSC6rc4qYruVBi7lIh+3Pl2IPu+BOLHsvyYMLpg4K8z/7ua
UtuFg+IJRMfcg6FVEXVIuC4cnIA+XHB08xWJBKLdMauvDX1957XOd+jOHcGl
tpIJxKjb984sdFC/47TbdIgokE17RZc+Cl0H6lo0kshgn5F3JdFkiLgfctDy
Fnpmy2izSSIZ3Hgk9h1EzysLOExFh7/pDQ4JZOiOb179aDxEROcUrYhnjMKZ
PK5az3dkoNd933gO3fTmx3J/dHtpscrQt2R4oFr5ttFoiJDLDX48jv7Au6cw
Pp4MmX70jjfQbySdOH8pcxS4206n58SRYbeQt9IvwyFiXiqfNgN9TUnpdUUs
GeTFDrM4oMsdo61iyhqFobHJgKY3ZAhN4Prxz2CIsCwSf2SL/vi3kvNADBnC
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
YhRE
      "]], {}}, 
   {Texture[
     FormBox[
      GraphicsBox[{
        GraphicsComplexBox[CompressedData["
1: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
         "], {{{}, {}, 
           TagBox[
            TooltipBox[{
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6], FontFamily -> "Arial"], 
              LineBox[CompressedData["
1:eJwd0wOfEAYAxuEue7Va1lXbsm1zC5ddl3XZ5rK11dJybbll27Zt20+9v//z
Ed7A4DZBIQGhLOB7oUIThrCEIzwRiEgkIhOFqEQjOj8Qg5j8SCxi8xNxiEs8
4pOAhCQiMUlISjICSU4KUvIzv/ArqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nI
TR7yko/8FKAghShMEYpSjOKUoCSlKE0ZyvIbv1OO8lSgIkFUojJVqEo1qlOD
mtSiNnWoSz3q04BgGtKIxjShKc1oTgta0orWhNCGtrSjPR3oSCc604WudKM7
PehJL3rTh770oz8DGMggBvMHQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlP4k7+Y
yjT+ZjozmMksZvMPc5jLPOazgIUsYjFL+Jf/WMoylrOClaxiNWv4n7WsYz0b
2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4
yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jI
Jz7zhW/n/wqYtIE2
               "], VertexColors -> Automatic], 
              LineBox[CompressedData["
1:eJwV0VdbDQAAgOFzItkNMhJ1WohQokRatK2Q0XSaQocGJRlJkpIiIdVf9Xbx
Ps93/4XCkYb+YCAQWCcootjEZqLZQgxb2cZ2drCTXewmljjiSWAPe0lkH/s5
wEGSOEQyhzlCCqmESCOdDDLJ4ijHOE42JzhJDqc4zRlyyeMs+ZzjPAUUcoEi
LnKJYi5TQilllFPBFa5SSRXV1FBLHfVc4zo3uMktGrjNHe7SyD3u84CHNNFM
C6200c4jwnTQSRfd9NDLY/p4wlOesTEvwnNeMMAgQwzzkleMMMprxnjDOG95
x3s+MMFHJvnEFJ+Z5gszfGWWOb4xz3cWWOQHP1niF8v85g9/WeEfq6yxzn9O
EjSi
               "], VertexColors -> Automatic], 
              LineBox[CompressedData["
1:eJwV0/l/DwQAxvGvjeh0FNLtiHIlQopSbiVnytGBXDk7RFKkg3LfUXKzg5nZ
Zmxjm2Huc3MNw5j7vs/e/fD+/APP6ynesU+L3rkCgUAXmcksZjOHucxjPgsI
IZQwwlnIIiJYTCRLiGIp0cQQyzLiWM4K4kkgkZWsIolkUlhNKmtYyzrSWM8G
NrKJzWxhK9vYzg52sot0MtjNHvayj/1kcoCDHCKLwxzhKNkc4zg5nOAkpzjN
Gc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7/48QFAjkIohgcpOHB8hLPh7k
IR7mER7lMfJTgIIU4nGeoDBFKMqTFOMpnuYZnuU5nucFilOCkpTiRUpThpd4
mbKUozwVqMgrVOJVKlOF16hKNarzOjV4gzepSS3e4m1q8w7vUoe61KM+DWhI
IxrzHu/ThA9oSjOa04KWtOJDWvMRH9OGtrSjPZ/wKZ/xOR3oSCe+oDNd6Eo3
uvMlPehJL3rTh758xdd8w7f04zv6M4DvGcgPDOJHfmIwQ/iZofzCr/zG7wxj
OH/wJyMYyShGM4axjGM8E5jIJCYzhb+YyjT+5h+m8y8zmMksZjOHucxjPgsI
IZQwwlnIIiJYTCRLiGIp0cQQyzLiWM4K4kkgkZWsIolkUlhNKmtYyzrSWM8G
NrKJzWxhK9vYzg52sot0MtjNHvayj/1kcoCDHCKLwxzhKNkc4zg5nOAkpzjN
Gc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7BIL9nyCCyU0e/gOifdHs
               "], VertexColors -> Automatic]}, 
             RowBox[{
               RowBox[{
                 RowBox[{
                   TagBox["S", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"7.535659314738926`*^-16", " ", 
                    TagBox["\[Epsilon]", HoldForm]}], "-", 
                    "4.281176842148333`*^-11"}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}], "+", 
                    "2.2489872871832529`*^-7"}], ")"}]}], "-", 
                    "0.0002379938401519114`"}], ")"}]}], "+", 
                    "0.059549244347758365`"}], ")"}]}], "-", 
                    "3.393021119493091`"}], ")"}]}], "+", 
                    "36.53569709016391`"}], ")"}]}], "-", 
                    "50.249990947568804`"}], ")"}]}], "+", 
                 RowBox[{
                   TagBox["\[Epsilon]", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2.364992030562556`*^-9", "-", 
                    RowBox[{"1.65924196371522`*^-13", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}], "-", 
                    "5.364225133072119`*^-6"}], ")"}]}], "+", 
                    "0.002746365997682094`"}], ")"}]}], "-", 
                    "0.3325176234286391`"}], ")"}]}], "+", 
                    "8.51507864273902`"}], ")"}]}], "-", 
                    "35.140935203292656`"}], ")"}]}], "+", 
                 "12.194427640553812`"}], "\[LongEqual]", "0"}]], 
            Annotation[#, 
             12.194427640553812` + 
              HoldForm[$CellContext`\[Epsilon]] (-35.140935203292656` + 
                HoldForm[$CellContext`\[Epsilon]] (8.51507864273902 + 
                  HoldForm[$CellContext`\[Epsilon]] (-0.3325176234286391 + 
                    HoldForm[$CellContext`\[Epsilon]] (0.002746365997682094 + 
                    HoldForm[$CellContext`\[Epsilon]] (-5.364225133072119*^-6 + \
(2.364992030562556*^-9 - 1.65924196371522*^-13 
                    HoldForm[$CellContext`\[Epsilon]]) 
                    HoldForm[$CellContext`\[Epsilon]]))))) + 
              HoldForm[$CellContext`S] (-50.249990947568804` + 
                HoldForm[$CellContext`\[Epsilon]] (36.53569709016391 + 
                  HoldForm[$CellContext`\[Epsilon]] (-3.393021119493091 + 
                    HoldForm[$CellContext`\[Epsilon]] (0.059549244347758365` + 
                    HoldForm[$CellContext`\[Epsilon]] (-0.0002379938401519114 + 
                    HoldForm[$CellContext`\[Epsilon]] (
                    2.2489872871832529`*^-7 + (-4.281176842148333*^-11 + 
                    7.535659314738926*^-16 HoldForm[$CellContext`\[Epsilon]]) 
                    HoldForm[$CellContext`\[Epsilon]])))))) == 0, 
             "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6], FontFamily -> "Arial"], 
              LineBox[CompressedData["
1:eJwNxGOAFgYAANAv23aXbVy6bF92XdZdXbqMy9rCmG1zC1tui1tuyzXUFrfa
8vvxXlBYRGh4jEAgEK24sQKBeMQnAQlJRGKSkJRkJCcFKUlFatKQlnSkJwMZ
yURmspCVbGQniBzkJBe5yUNe8pGfAhSkEIUpQlGKUZwSlKQUpSlDWYIpR3kq
UJFKhFCZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0JZRmNKcFLWlFa9rQlna0
pwMd6URnuhBGV7rRnR70pBe96UNf+tGfcCIYwEAiGcRghjCUYUQxnBGMZBSj
GcNYxjGeCUQzkUlMZgpTmcZ0ZjCTWczmEz5lDnOZx3w+43O+4Eu+4msWsJBF
LGYJS1nGclawklWsZg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYPe/mGb9nHfg5w
kO/4nkMc5ghHOcZxTnCSH/iRU5zmDGc5x3l+4mcucJFLXOYKV7nGdX7hV25w
k1vc5g53ucd9HvAbv/MHf/KQR/zF3zzmCU95xnNe8A//8pJX/Mf/vOYNb3nH
ez4QiB0IxCAmsYhNHOISj/gkICGJSEwSkpKM5KQgJalITRrSko70ZCAjmchM
FrKSjewEkYOc5CI3echLPvJTgIIUojBFKEoxilOCkpSiNGUoSzDlKE8FKlKJ
ECpThapUozo1qEktalOHutSjPg1oSCMa04SmhNKM5rSgJa1oTRva0o72dKAj
nehMF8LoSje604Oe9KI3fehLP/oTTgQDGEgkgxjMEIYyjCiGM4KRjGI0YxjL
OMYzgWgmMonJTGEqHwFOiasf
               "], VertexColors -> Automatic], 
              LineBox[CompressedData["
1:eJwNwwN3kAEAAMBvtbVse8u2sWwuu5a1Vf8iW2vZtm3btpZt3L13ETFx0bEh
QRAkOjo0CMY41nGOd4ITneRkpzjVaU53hjOd5WzjnWOCc53nfBe40EUudolL
XeZyV7jSVa52jWtd53o3uNFNbnaLW93mdne4013udo973ed+D3jQQx72iEc9
5nFPeNJTnvaMZz3neS940Ute9opXveZ1b3jTW972jne9530f+NBHPvaJT33m
c1/40kRf+do3vvWd7/3gRz/52S9+9Zvf/eFPf/nbP/71n0FYEISYxKSGGmYy
w01uClOaytSmMa3pTG8GM5rJzGYxq9nMbg5zmsvc5jGv+cxvhJEWsKCFLGwR
i1rM4pawpKUsbRnLWs7yVrCilaxsFatazerWsKa1rG2UdaxrPevbwIY2srFN
bGozm9vClraytW1sa7TtbG8HO9rJznaxq93sbg972sve9jHGvvazvwMc6CAH
O8ShDnO4scY5wpGO8j/Y1ntw
               "], VertexColors -> Automatic]}, 
             RowBox[{
               RowBox[{
                 RowBox[{
                   TagBox["S", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"5.2601039817943464`*^-11", "-", 
                    RowBox[{"7.535659314738926`*^-16", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}], "-", 
                    "3.4928217819593087`*^-7"}], ")"}]}], "+", 
                    "0.00048431255467153877`"}], ")"}]}], "-", 
                    "0.16617918856920982`"}], ")"}]}], "+", 
                    "13.716010953452912`"}], ")"}]}], "-", 
                    "224.64781248057005`"}], ")"}]}], "+", 
                    "450.43032031174425`"}], ")"}]}], "+", 
                 RowBox[{
                   TagBox["\[Epsilon]", HoldForm], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    TagBox["\[Epsilon]", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"3.2539818024176075`*^-9", "-", 
                    RowBox[{"1.8333925978002083`*^-13", " ", 
                    TagBox["\[Epsilon]", HoldForm]}]}], ")"}], " ", 
                    TagBox["\[Epsilon]", HoldForm]}], "-", 
                    "9.488302488347804`*^-6"}], ")"}]}], "+", 
                    "0.006503303086392308`"}], ")"}]}], "-", 
                    "1.108810883409416`"}], ")"}]}], "+", 
                    "42.28390685080488`"}], ")"}]}], "-", 
                    "265.81816432232154`"}], ")"}]}], "+", 
                 "117.1738489947312`"}], "\[LongEqual]", "0"}]], 
            Annotation[#, 
             117.1738489947312 + 
              HoldForm[$CellContext`\[Epsilon]] (-265.81816432232154` + 
                HoldForm[$CellContext`\[Epsilon]] (42.28390685080488 + 
                  HoldForm[$CellContext`\[Epsilon]] (-1.108810883409416 + 
                    HoldForm[$CellContext`\[Epsilon]] (0.006503303086392308 + 
                    HoldForm[$CellContext`\[Epsilon]] (-9.488302488347804*^-6 + \
(3.2539818024176075`*^-9 - 1.8333925978002083`*^-13 
                    HoldForm[$CellContext`\[Epsilon]]) 
                    HoldForm[$CellContext`\[Epsilon]]))))) + 
              HoldForm[$CellContext`S] (450.43032031174425` + 
                HoldForm[$CellContext`\[Epsilon]] (-224.64781248057005` + 
                  HoldForm[$CellContext`\[Epsilon]] (13.716010953452912` + 
                    HoldForm[$CellContext`\[Epsilon]] (-0.16617918856920982` + 
                    HoldForm[$CellContext`\[Epsilon]] (
                    0.00048431255467153877` + 
                    HoldForm[$CellContext`\[Epsilon]] \
(-3.4928217819593087`*^-7 + (5.2601039817943464`*^-11 - 
                    7.535659314738926*^-16 HoldForm[$CellContext`\[Epsilon]]) 
                    HoldForm[$CellContext`\[Epsilon]])))))) == 0, 
             "Tooltip"]& ]}}, VertexColors -> CompressedData["
1:eJztyLEJg1AUAMCHwRHS2UTc40NGiAsEQexULB3BQRwlZUiTBbKC2McxLK46
uFszPNosIqY84nJ4n5ei7N9p39by+vqmsfo86+6XvPfee++9995777333nvv
vffee++9995777333nvvvffee++9995777333nvvvffee++9995777333nvv
vffee++9995777333nvvvffee+/9Of8Pd+U34w==
          "]], {}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, AxesLabel -> {None, None}, 
        FrameLabel -> {{None, None}, {None, None}}, DisplayFunction -> 
        Identity, AspectRatio -> 1, AxesLabel -> {None, None}, 
        BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "GridLinesInFront" -> True}, PlotRange -> {{-5, 20}, {-10, 10}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}], TraditionalForm]], EdgeForm[None], 
    Polygon3DBox[{{-5, -10, -1.5}, {20, -10, -1.5}, {
      20, 10, -1.5}, {-5, 10, -1.5}},
     VertexTextureCoordinates->{{0, 0}, {1, 0}, {1, 1}, {0, 1}}]}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  Background->GrayLevel[1],
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 0.6},
  DisplayFunction->Identity,
  FaceGrids->{{0, 1, 0}, {-1, 0, 0}},
  FaceGridsStyle->Automatic,
  ImageSize->{476.12351112814804`, 365.3821661700535},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->All,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.5606530079269152`, -2.6805034614712606`, 1.3525026365553556`},
  ViewVertical->{-0.20111180696707373`, 0.3454200850412394, 
   0.9166455181522144}]], "Output",
 CellChangeTimes->{
  3.864993579319718*^9, {3.864993642963076*^9, 3.864993674295865*^9}, {
   3.864993733607375*^9, 3.864993800418025*^9}, {3.864993884222221*^9, 
   3.8649939173986483`*^9}},
 CellLabel->
  "Out[190]=",ExpressionUUID->"68b56c3a-3e22-42f9-9777-ecbda9d78951"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plotP", "=", 
    RowBox[{"ContourPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"z", "==", "\[Alpha]P"}], ",", 
        RowBox[{"z", "==", "\[Alpha]M"}], ",", 
        RowBox[{"z", "==", "0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", 
        RowBox[{"-", "5"}], ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"S", ",", 
        RowBox[{"-", "7"}], ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Epsilon]\>\"", ",", " ", "\"\<S\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Background", "\[Rule]", "White"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"ContourStyle", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "Blue", ",", 
           RowBox[{"Opacity", "[", "0.65", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Red", ",", ",", 
           RowBox[{"Opacity", "[", "1.0", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Cyan", ",", ",", 
           RowBox[{"Opacity", "[", "0.15", "]"}]}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Mesh", "\[Rule]", "None"}], ","}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Boxed", "->", "False"}], ","}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"FaceGrids", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Mesh", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
      RowBox[{"BoundaryStyle", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "->", 
          RowBox[{"{", 
           RowBox[{"Purple", ",", "Thick"}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], "->", 
          RowBox[{"{", 
           RowBox[{"Purple", ",", "Thick"}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}], "->", 
          RowBox[{"{", 
           RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pt", "=", 
   RowBox[{"Point", "[", 
    RowBox[{"{", 
     RowBox[{"0.4237131621171315", ",", 
      RowBox[{"-", "0.0336891534959879"}], ",", "0"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotPoint", "=", 
   RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"AbsolutePointSize", "[", "10", "]"}], ",", "Purple", ",", 
      "pt"}], "}"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "plotP", 
  RowBox[{"(*", 
   RowBox[{",", " ", "plotPoint"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"ImageSize", "->", "Large"}]}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", "Infinity"}]}], "}"}]}]}], "*)"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8649822359750767`*^9, 3.8649825212133017`*^9}, {
   3.864982657815386*^9, 3.864982675709613*^9}, {3.864983235508698*^9, 
   3.864983275129622*^9}, {3.864983315539514*^9, 3.864983342770946*^9}, {
   3.864983563512084*^9, 3.864983563813168*^9}, {3.864984076058236*^9, 
   3.864984162679831*^9}, {3.864984207861273*^9, 3.864984247022616*^9}, {
   3.864984315179042*^9, 3.864984315818351*^9}, {3.864984401292039*^9, 
   3.8649844273851347`*^9}, {3.864984521904377*^9, 3.8649845444594183`*^9}, {
   3.8649845807687798`*^9, 3.8649848196189537`*^9}, {3.8649849003990507`*^9, 
   3.8649849050685053`*^9}, {3.864984968605974*^9, 3.864984992508771*^9}, {
   3.864985031167613*^9, 3.864985034733452*^9}, {3.864985073328313*^9, 
   3.864985112622179*^9}, {3.864985160798594*^9, 3.864985217887168*^9}, {
   3.8649853168656197`*^9, 3.864985368687689*^9}, {3.864985412626693*^9, 
   3.86498541669037*^9}, {3.864985452528853*^9, 3.864985504688786*^9}, {
   3.864985552707386*^9, 3.864985560352949*^9}, {3.864985606499276*^9, 
   3.86498561211338*^9}, {3.864985653203184*^9, 3.864985653329012*^9}, {
   3.8649861694390783`*^9, 3.864986169700523*^9}, {3.864987858689793*^9, 
   3.864987859302031*^9}, {3.86498789109317*^9, 3.864987979677178*^9}, {
   3.8649880530502977`*^9, 3.864988141778204*^9}, {3.864988175044867*^9, 
   3.864988175236624*^9}, {3.8649882068526363`*^9, 3.864988364340952*^9}, {
   3.864988502983749*^9, 3.8649885183251467`*^9}, 3.8649887346062326`*^9, 
   3.86498909174481*^9, {3.864989212044053*^9, 3.864989259364131*^9}, {
   3.8649895994891977`*^9, 3.8649896122367268`*^9}, {3.864989668556205*^9, 
   3.864989907554256*^9}, {3.864990078348362*^9, 3.8649902302893963`*^9}, {
   3.8649902986036043`*^9, 3.864990327701297*^9}, {3.864990747322444*^9, 
   3.864990850820496*^9}, {3.864990968047851*^9, 3.864990973970599*^9}, {
   3.8649910080271883`*^9, 3.864991013749405*^9}, {3.864991050373281*^9, 
   3.864991131845517*^9}, {3.864991172539446*^9, 3.864991194515459*^9}},
 CellLabel->
  "In[688]:=",ExpressionUUID->"e7eace6d-5693-4dc0-917b-03fa9ad504c1"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJydnXd0VdW2xkPv0nvvaAgJTQSBs1V89CrwEBAQaSogIAgoIkUQ6SDVQm9G
9MJVWkBPFBAVFZAoSA2RLoRQEgRC8nhj5Fvnjt92jvvu+ytj/MY3vjXXXGuv
vfY+a89U7PtKp/6Zw8LCTucIC8vy4O/sosU/b1e+knewavnC2UufD9w90+D2
5UEHg4PGTIjyvKrexbX7FsaNT3Gc+hafb2j58pRYn1581YiHt0QfruBFfXog
tc/W4yYPa3NoWKcJPX3+4iNqNtm2ZF5VL6zLrF2Tkm8HOrz0QcsKc476uBW/
9OSWf+ex6T9Fd4/36cUZp/zJpWd/FeeQ/j1ejkkt60049MjBK7/sNLnyRm7l
rcTQc+kvFo4NMH5xxmPxfoGunS5HHgzQX5z67ft2rCnf9aiP59ww+41HmsYH
GL/05NIzfrVLvTjHUXkjV97oY+Xhk0wvVIifcNE3jhOa1B69d8hZn4/05NIz
n7/tXfD93feu+OabOPXyp96K05q3VvzWvFU81ItTX/Fk28/T06/59OKMR5z9
Eqe/rjv6W+uD+kt/ceqVT3LFQ6489Dk2L3be/hpet943P9w6PqsnPbn03vFL
n9Z+voa3MdcnfQqUzOL05JZecdJfPOFmcObOtEe8ekVWHP8kcz7nQ27prf7W
Gxxb5emOZ33XXa+oGz/17nfRd/1KTy49fax1QJz66bcqj3599BWfXjz1UJ03
yyzzjaNPL16i6TPhlSeFexva7r4c2zW/ywO5Ne6aV+S6vphn6cmlZ7vSk1t6
jS/nj3zI5cM8W+ut1nPmU5x6a73VPCHXPOH1Lr142Oi4qBtztzk91xnFQ655
xXY1f6i3/KU31kNfnNKTS2+skz6uPCQWz/nKY4XDvKn9qs3qsLuQp/sdufLf
qtmWZV1Hh3k3vhpXs3W24k5PLv2P0TnbF7ubFtD8tLjmCdsVp17jMmx8j/J/
LQxxjQt9pCeXnvGr3ZEF/5jcscydAOctuXw2rLgT9fzK1ICuX+nJpaeP2qXe
yoPyTx/NN3LNH/pLT27pNX+Yf4tb/pqf1KtdcunZL3GOo/JPbuVf8b92bMbW
/h+HeX1KHt7/dPPSnvbb5No3/pK94fnJ+TJ5P7768Mveu+Wdnlx6xiNOf40v
fbRvCfsof9r8QCav7IXAlI/OVTS5FY/lr/WcPuKMX+2SW3mz9PKnXpzjZc1/
rTOcb9KTS8/+alzI5SP++nNPHElPr+zTi1t6jpe48kZu5UfzmVzzmeMrPbn0
HBeL67pmu+LU67om1/VLH+nJpWf8apdc6wDH0eJWfrQOU0+u8bI42xW32lUe
2K76S27pNY5s1+KWv/JPPdsVt8ZLnPdltUsuf3Jr/ui6Jrf2G9b1Yq0Plr81
vtIfbfVSwe0f1PTtu8ilv3xg+IpC30X49l3klr/6y32+9OTS00f9Ite8pY/0
5NIzfrU7eOmWToE84R73FeSaJ/SXnlx6+ljxK8/Uax5SL079v3lO9OVTcZLL
n1z9ZT4tbvkrHurVLrml17iTK8/MjzXu8iHXvOVzqPpLrv6SKx4+d6tdcunp
Y+nVL+qt/mq+0Ufxk2tc6G9xjZfx3snHlc+kFbs2FFldy3uycPErOyJC93dy
tbv11W0zun5cy7cPIZdP14nVes/oFunbh5BLTx+rXfWLcVrc6q/Gnf7ijNPi
ivPUU9HrtidG+u7j5JZecW54rmLta/WjfPdxcstfeaDePfeBS89+idPfPRfD
R5x51nVBruuL+dc6QC4fxik9ufT0UbuMRz7kun7pI852La52mU/FSW7p3XMQ
8m9x9/4B3PJ3z1PQW/sZPb+Q6zmI9wvpyaWnj56beJ+Vnlx6+ug5jnpxxmP5
6H0pud6v0sfi8jHWNx/Xe2bjOvVx6emjeDjPpSe39IqfXOPLeKw8KP/Geu7T
W9z6fUTjSK52eX/UvCKXD+/v0pNLTx+rXV1fjNPi1vWi/JArP4xT8XAd0DiS
q12uD9KTS8/5YHHlje2KU2/FL8545MPrwpqH4tTLh3orTuWH427te6313Oqv
xp1c427c931cevro+mW/tA5QL05/+TCf1nqovJFr/jD/1vyU/5fLpw07ElPc
W7HlzaFLwk8ElQdy5WHiwDIt9vxS1DuY2mrcmnpnTa5+0UecesVDrv7Kx2vz
TLHijU8GGb+49HmObRl1a0xBb/CEI+sbjLvh4iS34lEeqLe44iFXPIlvxi4/
fTqnd77G4A8LF80eq+uCXPO5zvxTx1vOe/AceHH8zsaV7gWlJ7f0GnfGY3HL
X+st9WqX3P2+hn6J09/Kj8UVf40VvTa3+DO7F3uyxPGcSx9y+SRXnORuH1vj
2+RKQ7N7F37L2fLntAJOT271S/OKXPOK/ZWeXHr6aL5RL85+Wflx6wb6pbw1
2xzR6H5SNq/N9wl535pd2OTKD7n1O4XiJHfrcKMnwmLibgY6lNuy9ck9F52e
3Mqbrjv6W9zdl+Hv1mdw63cZjRf11jjKf8mY8S+22ZUU1Dqj5xFy9zxyo/Nv
zzVKC5a4/ETRXccvOz259PTRfZN68WHDqm9svj8uePB66mtl7h41uRWnnnPp
L0695gn9xd/++OFp6emFY89+3Lbl4evJrl8Hsx6Mv7UiT+yeUgn3iz92w3Hq
1S714tSrX9RbeXbPfYfaFr874lqA5wPJ3e/46K/FFSd93HsGzDf3+zu4pbfi
dO/Vwd3zL3wsLh/eT7WekGs9Idc6xvu7xS1/a12SD7l82C+3jwKXnj5uvw29
OOeh4uQ8tK4L5Zl6ceZH7ZJb7brnHcx/ceqVH+rFGb/FlU/6i1OvflHvngsQ
j3uPgXnu3mOAq7+8TqUnd+9/4KP7AvXi7Jd8uH5aXPmkvzj1Vn7EGb97vgZX
PtmuONu1xld5YDzi1LvnLOjFmU/r/qt9BbkVj6V3z5vQizMe+bBf4tRb80T+
9HHvPTBeFle7HEerv9b8t/alip/cPediX2pxzf86Nat9smpPVu9mzKTP0tNL
u30vufteo9vhY7E1snk7KjfcOPZgcacnd89B8HHnxqEXZ7+UN3L3PjOjX+Pf
nNHr26sFXH64r7a48kOueMjVX+bTyoPWAXL3HIf8uOdQcGu/JD3nj+Xj9v/g
yg/jdN8LgLvnMvi4c/jQizOfFnfvmTG+1rhbcWp8Gaf13kP7PXL9XsZ9kcX1
Oxp9xKnX72jG+xOfj/Tk0vN9guIkt+JRHqi3uOIx3vP4zte55z5w9/wIrvHl
uVaLW/66rqlXu+TuOffvz6P69Hzvp3HR8wK5njuYf3cOGc+/7jw2uMaRz/XS
k7tzU/DR+FIvzjit5xSrv+79M/bzirNvjS03u+0Otat5Re7mFXzc79F//z7E
x608uPNjf/8eyTpn6DtvqflpnGfzcel57tHimudsV5x6zXPqxRmPfDjPdX/h
uThx6t17WujFjXOevngUJ8/XKU5yS6988tydxenP9//GuUefXpx5cO+7wOVP
bq1L7vka3Mq/e+/69+ckfeMof+qtdq39j9YB3vfFeb+2uPueFP7i1GtdJdf6
Rh/3XQ+49Izfei/kzuP9/XOE7/2V+67h758LfD5ax6gX5/5Z+eT6Jk69O/eC
fa87VwMuPfOjfJK7c1Pwced5wN33O4jfeg/pzjXhuVKceneeCnpxPj9aXONl
PFf63uvqPkhuxS+98bzsi0d6xiNOvTv/ifnmvt/BfLPiV36M533ffkPzivtJ
tw5A785pYz646x16cfrLh/Nf8RvPoW5+doyaWve3/AWdnlx6+rjzitCLM05r
XVL+eX25fSDWPYu77xDh7/aZ0Ku/xvOgz8d9//j3z4m++K11THkg1/pA7s6X
Is9W3hSn8dwa+Dln2E87slX0/T5Lrnmr7yuLTDu4rG/dfE4v7v366/edCuZz
+r7T169bcLyy735Erv62q1Rr6R+PVfatt+SWXu2S67pIOXrjQunWlXz3EXLp
mQfWf1B/xfeMe+xw75qVfb+H0l+cebDyJv+4TF7fmG5VfPsKcunpo3apV57J
lWfGL/2k8Rc/Xf7flXzzlvnh98Xi0jNOzWeOozjjtLiuO/qLc3wVJ7nbL72Q
O8ejdyr4fvenXvvhO7k71m6aq5zvd39y934P/trHUi/OdrXfpp51LZrVf/t8
zbCQDznrWogrTs5z7c/JtX/m/JGeXHr2S3pytz/HusT6POLS5+/a+MunK5Xz
nZ8h1/XCfOp5gZz1alYcmN043667Tk8uPect67FIz7o34laces7iOFrzQXrm
2eLqV/fPkuc3KVTR9/6BXPcd5ln6qiurt2z7uG+e+65HXb/0Ed/0+uiULl3D
fc+z5JrnOv/cNXin69xASC++stDO5/M2COmVt79eXDr/6ui7rl1y1jEQt/ql
dYz90vpDbum1/pOzvpDmD+sIiVOv+Fm/SFzxMM+aP+Q8r648s16HuPT00Xzu
2u6HbxvceMT3foPcisedU4XencsF5zl8xSlOf3deFD7uHDu49PS3fKx5qzzw
fq3x4n3Z4prn9BHn/Vqc65uuC3JdF7xfu/eo4NKzXenJrfVH+yjOf3H2l/VP
hlQ6fuvJa3lNrnbpI95mZJtMTzVJDfC7HnJdj7eaLz9U5fd7AX7XQ866HPxu
kVzXNdsVp7/ys6T0jZXZR90L8HsccitOy1/3NfqwvgG/Cya38il9nzvPzP3o
xfsBfn9Kzt+D+N0ouaVX/Oovv5+i3n3vBq7ri/2SntzSK37mXz7k8uG4uPOH
GZzfSZFznvD7LPq784TQW+26714xju47VnDps/60rs9b2UJc8ZT57NTU5k+H
+b6TJbfqw0hv1ZP59vXhVx6ul8VX74vc0mtcGI84+6VxIde4FOn02bXfa/vr
8JBbeuWN3Mq/+kXu3g8b9Xb+07o6twq0yNpwQBZfnTRy1tvh98jk0vO5Rvdf
ctYh1HMK6yKKS08fd/4hQ3+h0f5XR3TJ5zjvm/Ih1z6Hz3HSk0vP+7j05JZe
+yXGYz0nap9DzvqQygPrK4pLz34p/+TKJ9tlvVONl9VfPcexv+Jcb937Z6yH
1jps6d37bayTFrf83ft/6Nkuv6dmv6z9j/ud6Ozm+AIHKvvO7TBv1nhZ4+vO
v8Hf4u73656tPny0jW+/6uPSc9wVP7ni/2FgVPs1s+v4vn8k13rb8fN9h94Y
UccbVG5A7VOHQ3py6emj9fn5l3InpKfX9Tb9VaXpmlxhTk8u/blMhQtnSYjy
eg7vNLJoMI9bz9muOPW6r1Fvcatd8UIr+u0cmS/SV7+FnN/jD273ZaD1/sK+
798zJwe6PBVT2OnnRO6pNm9dlK9eB7n0bJff+6tdK/8aR/bX4hovxqPrkVzX
F32kJ5eePlofqBenXusM8yO+q+EH07Is8tdRIWf9Co2X5cM6HtKL87rQ+HJc
xKlXnNSLMz/WexLl33h/5erqPLajyeis1UJ6cunpwzpC0ot3zhzMdXhjlK9O
C8fR1ZfA+wdX5wRccRrvK3xxKm/krHek+FnXSNzKs647co0v43R1NsAtvauL
Am7Nf9bZ0PpgXdfWuqfxoo84rwv5kKtf5JaP4vxscbYx6afDfXVIyFmn60r/
cYOn1Qq9NyCXnj6Kh3rW5eB7jHZrR7auN6emr24P/VnXS/7i1LvvttAu64zx
fQ65Fb+VT/d7Gfrl3oOB67qjj/Tklt6994O/OOeJ/Mnlz/ksn6l3hyYnhUX6
6oNxPRenXv7cVyhv5Nb9Qj5c/637iOKhvzjvF/Ihl57+iod6q79W/MoDfcSp
1z6WXPtYtdv4UJ/sickhPbm179XzI+ORnlx63r/0/EWu50rel6Unl57xW+2K
00ec/dXzAv3F2V+LK89zG4XXOb/AN098/uKKM6pK25ZVz+RxPoxf+ed1qryR
sx6I7kesUyEuPX2UN+qt/Os5mj7iXH/ULjnrn6hdy0fxkFvzSj6MX3km17iQ
axzJNU+YB+nJpTfWZx9nfaTf1jd65JkTbp305c3yZz0l6cW5T1PeuL9iPSvd
r8Xpw+cpzX/r9zhLb+WT9aDUL+s6Un+N9dyXN9bdYh0Ycs1z3selJ2e9L9af
oZ51z1hHiHqLKw/k6q+xP/FxjSPH3Xp+sd6TKD9cP8WpV944jtKTW/cX5Yfc
GhfljdyaJ6yLxe8+2C/Fw/jFl5x9P65U5iy+/xtFzu8Qk9ZuXduo+jWnJ5f+
Ypfy6yvXTQ7w/A856xIMey9/vXev3nfnZ8ilz56aY0+j3vl8/0+HXPnXuVb+
nx1y9x008uDqbqG/4sf6194YHpHP93+L6C9e++786Gc+K+6rp0ROH/1/DelL
/2N9uTYLi/vqO9FH840+rLMk7v7fyqQff3ticWi8WG/hu4hS01/8+L47H0W9
4idnfYZxfSMffaTifddf8SrfVYlv2f9+0BpfzRNy1gvyhq+8M/Yf15yeXHp9
Rzasr1dtzxh/PStxxcM8W1z5oY8131ivif9Pjdz9bgsfcc5PjTu5q2+WkZ8N
x/Z3vLcs0enJpY8+0H1BmXt5ff8/i3pxtqv5PLjdnl15Dmb2/R8r9ovfm+t6
tHzULrmru4j5ac1/1h2KS204M/fJVHd9cT6zzhj+P45vPvB7YXHFSa52uQ5Y
/uLb9zW906zU1QDrroS9cnZpzk5XAvzuUt9fbPqi4bNV8v3u5hW5q3Myu3P2
gb8eD7JeDTnr9kxr3Se7d+6y05O7727g4+oOgbvf8REn6/mIS888qF3qxSuM
+XL7zKY3Azy/R275u/r84KwL1G/PtdoXd6Q5Pbn0bNfKm8aReWadmQmth6f8
3viGO89APb/3kZ7fE0nP76GkZ30q6VknSnp+PyU9v5NacezEEwtTkl275NT/
NfLC4lH/THbnCtTu0XNvtIn567rjbJd1ruTP757E1S/eL1h3SHprXFh3SHrW
HZKedYfcOtB0WL33Ej5x60aNxV1+eTvpD7c+NH96/KM99hX31WviOqP4OQ/5
XXaJO1lPbaid5uO7et1957tRab56X4rfur6s/MiH+bE465jJh3WWNO6ssyQ9
6yxJz3pKatfirMMjf9ZZkp51lqRnHSHF4+r9nlzePLHZsSDvy+TMw9Firbu/
NeRPp9c62aF1/kyryx4zufu/TjX/nDbqi6NB7kPoz7o66q98eF+TntyKx9LL
n/PNmudWPln3SfcRcbYrH3K1O27NSxejV4XaVZzk1jyUD/2l5/xR3siVN7ar
/Qa5+7+xFZZ2m5gQatfan7D+5LTa7R/b3znV6cWjFjdLuLwk1enZLutTKX7W
g9J8Y70m6V2dYehZD0rzk3WlxC29Nc9dHQBcL6wHpfns6gxAr3iot8ZL7ebs
U2vv0Rm3AzyHRq55u7HuxIUx1W8HeA6NXHr6aD5TL0695jP14v1mHr+Vcu12
gOfZyC297i9sV/yvY9UeHd87JcDzfuTKJ+OUnlx6+igPjFN5JpeePsoDuZVP
q7+u3juem6znLM03+rg69lg/rXWV9am0rlrcmp+Kh1zxM04rfuk5TzS+5Nb1
JX9y+XN8pSe39IqHXPHwPLD05NLzfLL05JZeceqcIX+/ILf8Nc+pV7vk0rNf
rq51Rh0S/n7K89uW3opT48V4xBmPxZUfxqP5T26dD7f0ul6oF2e/WKeFv6/R
R5w+8mc80vN5RM9Zvee++E3f+OK+OmnUs85Y2KLYba/mjnXPZXwOsvRql3or
Hj1vkrvvqjLqULHuCjnroSke1nMQZ72IpMk7O6T2TnJ6cktvxcm6cGpXnNcF
32spb6w7d3T/S+OfHvRH0PLh+y75qF88z6z5Q+7ex+IctavLCi49fdzvKdCL
U+9+l4FevPG1ZiMuFgid05YPueIkd+/tcT1anOfb+bskuaVnf/m7J7+L0fM4
uZ7HuQ5Y3/tYer1nYH4UP9uVnvFrvpG7+qsZ48jfPcmlp4/uF+SuLi58rPuL
Na/ce3Vw+TM/0pNb8ZDz+25y5YH+Frf2aRovcs0T7tOkJ5eePppX1Ivz9035
k8uf+y6Ly5/7QOnJLb3iIdd9jf0VZzwW13pLrvWc7UpPbul1P2WcFrf8dR+h
Xu12zhHX/8PdKXwucD78DprzQfnhuFvzxMqn+sX3S+oXuft/x/gdwf3fZHDp
6cM6lt2SD0Q2n5ru9OJhPfb+PuCHdKf3vFx7T/c/6Z7L3P8/BWcduQLl+m1e
m3rEV+9LXPoWxaY3+vHdP/m+yBe/+w43I868j5w7niMtzce/mHNsSvUn0311
z/R+TP7MmxWn+z+n6K/F5c9x5+9u8pee+1i+z9f+h/XN9HsxufZprKcqH3Hq
NZ+pF2ecrl5iRp00/n5Hznp9Lcp9u+5E6SSnJ5ee7bp6Vtivsk6XfMR5nVpc
40uu8SLXfOO6IR/jPYOPWz6sx8vfYclZd1HnIlh3UfmRXued3PuxMUWWHBjY
wp07IpfevTeDnlx6994JenKd92O74vQXp4/ade+10C659O5cE/Tkapc+4tTr
XCL7Jc5+ibNfOm9JH3H6iNNH/oxfnPHLh3px6pVP97se8kkuvftdEnpy5Zk+
4tTL3/1uDn9y6d05HOjJ3TlV+IhTrzwzfnHGrzxTL069fBiPOOORD/Xi1Ov/
RXIeinMeinMeDhozIcrzqvp8xOkjTh/5c36Kc37Kh3px6vW9OeMUZ5zijFN1
b+gjTh9x+sif8YszfvlQL0698sb5Js75prxRL069fDjfxDnf5EO9OPXKA+MR
ZzzKA/Xi1MuH8YgzHvlQL0691h/3vhfrD7n07ntS6Mm1LtFHnHr5u+8f4U8u
vfueEXpytUsfceq1jjF+ccavdYx6cerlw3jEGY98qBenXvlx3yEiP+TSu+8x
oSdX3ugjTr383fca8CeX3n2vAT252qWPOPXKM+MXZ/zKM/Xi1MuH8YgzHvlQ
L0691jHON3HON61j1ItTLx/ON3HON/lQL0691jHGI854tI5RL069fBiPOOOR
D/Xi1CsPnA/inA/KA/Xi1MuH80Gc80E+1ItTrzwwHnHGozxQL069fBiPOOOR
D/Xi1Ot9Avc54tzniHOfo/cV9BGnjzh95M/9jzj3P/KhXpx6PV8zTnHGKc44
9V6LPuL0EaeP/Bm/OOOXD/Xi1Ctv3C/5zqMib9SLUy8f7pfEuV+SD/XufRf0
ygPjEWc87rwr9OLUy4fxiDMed/4NeveeFnq9V+Q8Eec8Eec80ftS+ojTR5w+
8uf8Eef8kQ/14tTr/B7jFGec4oxT5/HoI04fcfrIn/GLM375UC9OvfLG+eb+
jwbmm/u/HtCLUy8fzjdxzjf5UC9OvfLAeMQZj/JAvTj18mE84oxHPtSLU691
hvsZce5ntM5QL069fLifEed+Rj7Ui1OvdYbxiDMe9zsR9OLUy4fxiDMe+VAv
Tr3ywP2MOPczygP14tTLh/sZce5n5EO9OPXKA+MRZzzKA/Xi1MuH8YgzHvlQ
L0691gHOB3HOB60D1ItTLx/OB3HOB/lQL0691gHGI854tA5QL069fBiPOOOR
D/Xi1CsPnA/inA/KA/Xi1MuH80Gc80E+1ItTrzwwHnHGozxQL069fBiPOOOR
D/Xi1PP/DIrz/9m5vP2H9Yetern/17q77rtC/B89xcP/xyfO/+cozv9LSM78
8P8tir+cJzL5nzvyxCZcHzNyRuCGu1+fyH8mKu5cMe/tiTGNBj10Jji8eXLV
N97YFLx3c/ikElmKe+Mmvj12+fZ4dx6g7b4GrXJsK+69f6j468M7nXQ+CcH+
ax9NKuu9c+ZIkwGbY9z9+r3UoV8PvpbNC3utYuYsi0P7tBMRuWrVW/9dYM+4
8vtmTdjk/Ounvbrsr+rZvAtbm2w/ejS036sb88fwlOM5vfaTLk0tXS20H9t3
u110jSEP1u3pc6OvZino+KU2635779WC3uMH0jZPnhXqb+6uA3JceCefd/n9
sXPbNAvtZ3z11TN421Vp+a7+a33yDO6r0w4f3zrP+ucZ3FePGuO1rFLOIW2b
3XD5zOlFrsodcTUwMuN7QHFfneoM/vGcc5899HxK4OEGi/YWiA7tb7PNjj80
qcaDfRXG5fmYWZlWzrwdYP5938Vn8B9+evStuCblvbVfzN5ZtuyPjv8880iP
Kc3CvFNdd6fkOVHExfNRdMW4RkvTA2fnfbPyxDcFfNdpvpSIjt0W5/F+mFAw
/qMZhwLk5XKNqnN48++B5M67v14/415gU8eSf/18KpPpcy6pR+lDP3zj81mb
af0XdW++F4jpcGzw5Gxpgfafvn6z7Ixc5rrx7+ppW/rXTpY/fnh2mPfgyf6n
r7KWNP2t9eT/W0f9/xq/2q24sO8nmytl8ro2XLK7zicVfOtM+Un1Hp++p5Lj
E96JWln1tzBvSnSpQ6NqlXV833t50tZ+W8zLVmZq1+1Vz7jvyHqVz1/fC0sI
9ouLP163wKnQdYf/Jyheo+SvTXeuvhts9Wzyqe+KXXKc/8dQ/L8GVC/fYcjh
wISsQyaGP/Sa4y1i8s6dVfZ6oEj9FvsbzTrjePYiR15eMKZAbNw7E+dsOXTT
91yj/58onuvd8MTBg9OCnyU+dP9s4mXH00c3rNb+TvbYhEc3dkh/JSkU/7Ji
WwLXi3mX41qVunYl3p2D2puYrfSpmWmBhbmTt3d4LVRnifPzpw+f2fRn8I8g
9TovSq48PzQz8lqWAsW9guW+KfT1/HgXD/+/s3jFvQ2e/u+qpb2cQ8fmnnTr
m6B1Hd3u069nzg93+vjlGvE7B9c94uNPbn7qoVXPnvbxGk/c+WVoqZ+DI3K3
/urs49m8T66fbtpyUGid6dd3+dR3DmX1uv+5Oj59VOg9AP8voVuHE09M7DAj
pxd9ekqBDlNyOD5+YZdaZeIfXHVFXsmz6Hxo3aubEre1XNYC3qWIXwa+Hn7b
9bdriflD7yx70M+VvzZrVzKT07/Yo8LXS/+rsLdu5to5S7MlOv3Ign9M7ljm
ju/9z8Jed56rd+J2oO2vN9tuaJDseO/BRb/PsuBe4Ndvn1h8tXHo/vJBZLmD
z5ZODbz+Rr1n40+F1ofWGfedygdbFUkNL+f40oz7y0t/NktI7hG6v3z3Tcu4
SntTAw13L7iZZUJRx/fmHl6t/tj7gSHz2n0wsHzB/3j9sdYNi7t6BayHoPtg
lrq9xhQqHNtz+8yUKQOTfc/77nv8DO77Dj2D767/3bDp+7LFDn376+Uj/vcc
YQZvfPfS1Oij+wM1dlX/5d2UDcGeH28ZmO2txOD08svT2zdLD+ybHLy+vlxo
nfd9v5PBb6x5JXvHfJm9863+ceDHy/ed/555P9wY/691YDL4poKDWowbmRLY
mvRu2QVv5nfzp02J1IG9myUHsk4O3K0+P7RvmRAZtqJx/duBxT0eXjC7YhHH
27fZtfr6+w/4V/3O5BtRInRd8HvJDO6rG6Dr5eMGCcv+tW6PngtSZh9+7cjN
wJUqJYdlzp3m9NOenf/Ui+Oye3nTogccmhHKZ5fxLSJbnr4Z6H+pYeO5Ny46
3v7y8HrnKscFF3UrOm7n3KPO59icgXcHRcUFny26aHyD6Ued/slXw38+nCct
uLx7hwvh+y87vnrtlLZpDat6u+v/48b1gSmBzFq3G5V+eVuZSl6dbckDp+Y+
7/Txsc/8uWNvhNe0UNMG+1KLufFKyjr2fPymiAc+FZ8sv7mYuy8fyLzqhfoT
w736OdbGluiU3+nb5dm4ptfKWt77pxY/9GLV0L6u68RqvWd0i/S/B3iuYu1r
9f2/h556Knrd9sRI3/489YVyCRU3R3hzmq8okuefxdx3YZnaVS7d7wG/0P/k
gHsP+L1GLxQse/VKMLHjvNvB7OHe/phK11dfz+t8/piY+sb8HjW8RG/dN4dz
Z3H8dPfTjb+KqOz21cpbx53lbsw+Udm3f/bVV8/gvvrqGXzuhWnFbhWM9H7Z
dmHxjzGhfamv/rDuy6zfq3yyfmAGnzf10tz9D8Yl8cqni1IiQ3m78lC2gt2n
V/Y21rg5vmWTJDfuVd5pMefymore4LeOZ9mQ/w/HV414eEv04Qq+eb7pt5O3
ej4c4d2rV+arrnuL+OLkfpvj1fjjgk1LdPo6UOTikPLnAzW96Gpf3Cr0dUFz
vj0ze3rfX1aeDZD/c8aeHJ2/vOLjb3balefqFxcDbLfVuQO7X0s+6uPJPQcP
f+LAQZ9P9R+67dg2Oz5Q6mivx4vUD/cOHxn60sC40P5/dcSThe7djvD6Thww
oHJi6LnjzNjobncaRHpVns2xdMVXofvLrNHT0woWj/LOtHo3aXhKaL93ZtPy
F3rERHpNh4zJtai6Pc9nvDSyaXrueB8PtpnyyPfXjvh4wo0jc+vVvujj22qt
u1Cy3Fkfb5n0V7HXZ33lu460//lgR8JL2RMf9g4NuHVp6Q85XZx9js2Lnbff
/7v/1XcX37v7QQ3vwJo5z249Fbq+upwoMLhn9ure5LaFb43rku7m1YiaTbYt
mec/1xQsPG9i356VvCab2g95OhBa/6cXaTN96+jKXtvkckmRLxR1vHvy4PHH
Iqp4MYt3l7owt5Tjvv+Dqfv7vJwfHO1Tzvt8fOcXdtZJdeut7/8X67mM/0dD
18UL2zrnK1/Hy5otc+7TzbI73j/vqEWLS0Z5W94sOvbwqtBz2Wd570z5dqP/
3NGnR8oU2pka7q0YtTLXywmh+RP11nOJW0pHeCfeK7T6XMnQfsZXRx3zZ3bG
+N6a+e3gWo8fCl5eP65wkQ7h3uS03tFP5QjNw6I/TWi7rnwlL1ii5Z8Rj+Zz
617M299U+mJEHe/yY00S6h4O9Tcx6cygS6treUsqdGv1+PeFHf8fnzRriw==

    "], {{
      {RGBColor[0, 0, 1], Opacity[0.65], Dashing[{Small, Small}], EdgeForm[
       None], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1:eJxNmgn4VtP2x895aTAPiUxpMielkkKTlFCSSKhUpkwpQ4pIiJSpopIoSdGg
WUTGUK6/4RqueSZTZpnu9V8f+3Oe9/09z/fZv73XsNdeZ79nWN9dt/+g7ueX
svirkmUbZQn0Nw48Gv/cEXje9jn/XxtYHnjI/orAw4E1tssdOybQLfBU4Bnl
T9uu1d9x6k0JPOs8qwNTA4sCjwVuCKwMPKmvp9VdpP0TgceV0T7qfLfra4p6
iwM99L0gsDAwPNb5f3nEE5gW/7+Yp/4lWRp7PvBI6LUOtAkMzdLYmsCS6Hct
JfmDgRNKaWyxLeOrjJ24bgqb49UlR8vM4VLz1CcwITAuT/FhN9n1LFPe13Uv
dJ6F+lti7pfqu4fzt3GtzP2guZyk32djbGa0cwMP2Of/mwLzAzcHblF+q5in
/ERlvR2bFrhbO9r7SilHD6g7J3B/4E7izFN/lv3pgbsC9zo2rULG/zO1maXv
e/T/eIzN1vf1gTGub66+iHds4Db3wtWsPU992vHKJrtH7rA/Uf1JtlMcm+De
GaPfScY9w5jwd3Oe9G40Tzebo3GBkwPXBOoFRrm2u1zTydqcErguMNp5Rhv3
WH3cqt+WgVaBgwMHBpoFWgSuIm+xR+8KXB7/v5WnsXOVnU3cITuPdWep/49u
4I7ASOUjtUGvc+CywJXicmXD7aM7ItAxcGngfPun2T8iMEwfb+TJvpCdHugU
eD1P8jP1SyxXRHu4vs5ybGqgn3ZnBIYEBgYuCFwSGODYUNsLAxdzHcPuviz1
0b1IDFZOe1uW9AY63yDj7mxMFziG7jmllLOzs5RH+jdHe6prK2Ic5ppuVvfc
LMV9pnMMcB0DzfXZ+r7WPcL176+/AV7vM8LHmVm6H3QP9BKHBtqyf7K0n9hL
JznWLnBFlvYishFZ+l3SP7aU7hOH6O8Qfd2Qpd8wetzbegaOtq0RsrpZuv8x
1qWU7mHH6oMx5LWzdH/voaxpYOcY2yVL98IP8+SPtc7M017v63qIvUNgfoy3
j/bIwKw8jR2l7HD3VyevE310O4rDlNM+kCc9fjd9s5TH1sbeVLv786RLDg40
D+Ag89hc3WbasT7Wg6yleUa3hfPQ9snSfG20P8R9xF5mz+GLfKD3dMy/PPBQ
4IAY3yfQROwS2DXQOLAVeQzUcqx2YP/Ajsp3sUVn78B+gUb6a6S8kTbovRnz
/Rb4T+D3wC+BPWJ891Lq8/9e+sIH/UdifGVgz/i/obK3o/+vPD1H5wU25Mn3
diGrGdg+sE3g7hjbNtoG7JNSuifWV15XzAidewJ14v8J0U7Pkx5jM7W/S/kM
W3Rqmo/dSikWYiVO+tjUMX+TY2xKnvK3s3HRbu3/5GJ311TbMexrmPearuPB
wK15yv2defK7vfMTF/6mqPdr4N3AU4EtS+lla/PAZqXU5/9vQ/ZjYH3guzyN
fZ8nbKF8trIFjv0V7f+0o/04cF+e/KJbNdpqgT/j/41LqV+y/3fgv4HcMXwV
Mv4nxo2V4fsj/W8S/Sr6+jL677g24s2N+Y/Ap4GvAj9p96n76yvzwb772X33
iGNPuXfWK/tZX79r96V6xP2DMa13DnS/yVOe1pujrwNz1fss8Ilr+6/5mqsN
e/aLwDrn+NT+V/r4Xr/DAkMDwwM7+PtkT7wW/Q/ydF97OfBv+2CbSOW2gWXx
/5OBxeoxxv2UNb+fJzntE+q9GmjIfSJL/mjxRa7fU5fnKr8z9uxbtuzbawKv
BG4IvKQvfPCOgPxF5VcouzFPa+B98XXzgV/uSQvzdF9aaIzEz7sy96y1+nrB
MfQWBVbn6X35uTw9S+ivyNO7JjbPVMhXO46Plc5ZxD1W3YfUeyywKk/vgIvt
LwkszVMel2nzsmtaou7D+l6q/xXKHjbXj+qL/fG5136RcywxT7tn6Xrwe54a
mCNGBq7O0/OK3xz7jmfOXPOI7pXq3a8cGd8qfEfx/n5H9Eepd4v+uIbc57jH
jM/Tve/2PL3Dci+cbv+2wOg8vYPynLzPOCZod22e7k3T8jQPdhO1/dg1f+o8
c5x/onajbccErrO9xuszzhzfpOwGc3+97Y3GdL26IwINspTHKcYy1TmuU++y
PP220L00cEmefm+j7F9ZseZJ5ulyY8KuUZbmuFwfV2gzzPyPd31j9Ns4SzZN
4v8OgYvEgMBpjl3o2JDA+YHTA4MCFwQuDvS07aXdyYFTtDvd/isxR/9o6wUO
D5wdOK/CV09tTgz0DrQJDFTvfHXRax8YHDhMDDFG5Oca02DnwO6YQNNAs0BH
19Rfv+doc2bgt4jv90D3+P8Mx+oH+nDNAn0DpwbOCjS03U+7HwLfZcnuD/sn
mo+TWFOW/OG/8IWPk53vTHPU0/X3MQd9jbefMfc3pnrKTzKmfuYOu07hc0Pg
5yyt+wDX3th8dTDGA6P9MNoTlNM/LtAlcGSgm7lDfqwtdl0DLeP/46Ptwrts
Xh7rHGilj67aH6U963yN+3jg9cDRjGVJr5gP3eox1jNLsWxii7xOluT46ak9
soPdE6yNWI4wjt2yZIdNu0Bb9ToFDnWskfbkpnmghXvkpSy17Fns2rifsGtt
n7h7mONW+mtvHrEnt52dr526+1fsxebqkseDWEuW0EhdrlsTY3o5S7G8Ss0m
8FBgRaCXe3aDPlq5nj0Cewf2CezlPqVfN7BrYCfySY4Cuwc2t91C7Bmo5dge
Ff19Azvqo7b2O2u/WWDjQJVA1cDXEVMebaliPnRZQz1jeTtLLfL1WZLjB/ku
6hwV4/8N/C9LcexjHMgbGMdWgW0DNQJb2t868E2W5t8kUM24kG/jOrDZQd3t
2HvKGfs2S3ER06aurVhPdX1WMS/428jcVVGvmrrrsrQmfHyZpTY3lm2MdTPt
kbFHGnvt/wz9d3jfCXyVpZyypt28rlybztH/yRz9Gvg+8IG//yzkP2YJf1bo
/W0+6f9VMfZR4BPvZa/5O+2gPbrkuqFz/+AeR+8w5/vR/fiLe3KDMf1sTP8J
vKX8O2P9PEt5+dpY3jWO750fm8+ylEf0vsjSXllnrB8HPg28kaX9xHV703a9
8q/Ued/5PjY3H5jf95zjfed70zjfcr73XOvLFXl5Q9131HvP2N/Tz7/9vb7t
et53Xp7BPON5br8Y/TGB2YFugWOzdE9cniXZksDEwPOBF+yje39ghmP/Ethw
X+B+wbOa5wbyNcpmqsf9Y25gdWBe4JbAec7B2LWBZwMXBUYF1tofHXjOeNfq
Y4FjD2p/sfMhv1p/c5xnvnHTfyCwzHZV4BHbxwOLAwsDK+0/GnjClrHHxDOB
JwNP2T6tfJGyecZNjA873yPGscA5ZruOOeaO/C41lsXOucKxh413fkWMDzrf
Ute2zFgfM67pXr8Z5mOk+Z2l7J4s1ebGB+61P8NrRW2Suvzdgnr9ZYHzbQdp
M0F/l6uH/NbA2MCNWarr3eocjFGPG5elGgz1zin2qc+xF25zDJubHJuo/Y3O
h3yy/s4xlguU3eTahmWpjnZVYIgt+4k9cmHgevtXmhvaK8wRoJZ3jfmiHa0N
+3KMsYxzvsHON8Q4BjvH2ebjHHMGt3GpsYxwzkGOYXOe9kWMQ5wP+VDn4PfJ
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
mWdzTWN8WtmivHyWfzvl2wf+H0nmI9k=
           "]],
          Annotation[#, "Charting`Private`Tag$73153#1"]& ]],
        Lighting->Automatic]}, 
      {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1:eJxVnHn8l1MWx+v3fB+EsitkGKNGqMiSIkrFEEkIZS0qkZJ9xp4lIrtMSJjs
Y4sikRJJi/adiEp7qLSIOW/3/bx+v/nj83q+dz/33HPPc+855/n+tWOPtleW
VapU6fm8UqUsnmsi8UtgVWBkqVKljwOfBLJApcA2PqdH5WqmeVYNNI28bQLN
Ah9GenhgROCYSDcKHBto4vO4wIQYo3KW2o2Oep8Gxtjms8DngVcCLwZeD9zj
81+BX6Ptu/HcNksYEL+3y1IfX9rP+4H7A++JBwJDA+vKUnp9PGeVpfH/ElgR
v/eJZ03TzGPfwAGBBoHDA/v7rB1YEvW/DxyRJSyK30fGc1lZKmPOh9q+TpbK
dg40lB+0OSpwSKC+dXlWd7zDArtZTptqgeaOs5f9kd4h0CLQVx71CSwvS3Ng
Pi2t10LeM+bxgaOztDasSWPpPsbyIx1zlOsAX78IjA9MKCXe31dKfH8y8Hzg
34E7AjcF7g48Fng08Hjg4cDNgVsD/QL/CTxo2UOW32se8+hvv/T5TuAR+7sz
8ERgUOCFwMuBwfY3WFkBrykr4EZlhrpvWA+8at0h9gVdbwfecswnnMeTytZT
8SzF83b7Y54zA9MCswJzAlPNm19KMj1DWR4bGOdeGmX5ZMunyONx8nmufcyz
vymO8VXgo1Lalzw/dK+wBk+XEn3Q+6w0D5KPz9n3F+4N6j0TGOh+uNf1ZD+Q
Zm99bN/Qdb886uf6vOIaHaccIV8nBv4ROCkwL9rPCUwLfBWYHpgS2BjYFNgc
+D2wJfCHGB+YGPg2MN92yP7u7ocdAzUCe7gPdjFvYdSbHfgh8E1ZGnu++5K8
RY4/IzAzMFlapjoeOmiSmGVf3zn+ZPuaZh8859rXTtKyZ5b2Ijpjb/cbOuOv
War7h+PMcd7kHRxlBwXqZokHGYpX5IGts3Ie0f7rwALntrYsrQ86j3Yl28A/
2qNPy7IkryV1A3yC3lrqrb9LLzTuF1gsP9BZe5v3N3XV3vJ6F/NYg6qBKo7z
W1l6ZspCQ3UN75H10sq7ZHVZyusVZd0DVwYuDFwc6Bi4INDG9DmWXRQ4NdA2
0No2PQI9A6coa7Q5M3BW4IRAK2WR8qttc03gukD7wBmBLoGugcsCpwUuDXR2
jEtM028n63ayvKtjnmZeN8c+OXC5z1bug9bWO1C+s+ZnO7dzsySLk5Q3eL+w
gsyuUG6nKLML5d86ebq0LK3ZMt/Va5SLH5XZxfa73P5mKIOMx3tof+mCFx3k
3Xny7ALncYJ8XBltfnb88y2/0PJTnSvtTzd9kPJVL3BD4Fp5v32WaERuZqv7
pvoOQZfwzjopcE6gXWDPwN6BfQJbB9Yhz+bVDPwlsFVgQ5bKzw3UCxwT2Bdd
jHyjI7OU3i1Qo5Ty9lJ336W+PBpdFjg+UDdwRaB74HT7bR9oGegVuMq630W/
v7Cu1u1luwMCPQIH2Vd3+6XuWngfv/8WqBXYQ1qYz/go291574S+Zv/Fc8fA
LoHqvDcib3JgmqDeDPMmmp6bpTnv5hi1peNAaTrY/na1z0nWZWzG+zJLZbT7
u/MpeEedCVmikXU5M7Al0r9L+x7SP0PaGWcH0/yuZrqKYG7bBuoE6kvflfKv
Z2Bslvg9JJ5HxvPQUuIf8nGE6UMC5wUaBE4LdHDdWgVONH1x4JLApaZPcF1b
W492nQIXBC6y7q9Zkq/LA8vi9wr0VPxuYb2zA90qlG8O/KbsMx7yzxmuSymd
Fxl7K/m1OFAWv3+M53Lbkb4w0MzxLzJNX+c7J+SQ/jpKL2epWwK3Ba4NnBq4
rpTOJv8sJRm/LHB1oHOgdymdz+40j36vCXS1HXXh99tZ4jl5baxL3g3x/DxL
8/7dOfM+gVbm3Vwam5SS3LOWveTFpcpLZ8fsYtn1jnm9a36D5c2d59eB6aWk
L1g35KBhKe1z5OaowGb4Ck2BSnGP2RTP3wI14nf1PJ3pdonn7qZ3zVN6tzzV
o/1Pgb9Eeo/AXmLPQM3APqZ3ytO7dkkpvaO56/wQvxeX0nmqt7wlb5H5/Kb+
glJ6H3Pmyn0usIyzWx/b/+h6Lg1M9LksUDnG3jGwJn7/EdgvfpfMq+Q8tskT
D6rEc7vAivj9QWCH+L11YFuxleXfRVm1PJ0rF0g7Z8YNgY2WVc3TuZtzOuNl
eeL12lKi5Wd5nzv2vvJpR581pY/nH67PwlIa+3v7+E3+Q2NxV8gdewfpfVh5
X+ETHtVTFurLb2jnrDtWnnFXObaUdB76G717WCnpNdqhS9CR6BL0yKFiP8vQ
8bRDD7VX5ppY3sC+6ttHXWURPdso0LaU5B6ZP7mU3m3oGvYoeged08Yne5uz
IG3OEGeVko7hSR/sN/QZuo890DTQuJTeXU0cm3QL041FI+t8E1heSntpfeAX
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
6etAx8FnhbxXtg/+l4Ex8AcV/p//AaieHNA=
           "]],
          Annotation[#, "Charting`Private`Tag$73153#2"]& ]],
        Lighting->Automatic]}, 
      {RGBColor[0, 1, 1], Thickness[Large], Opacity[0.15], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1: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
N9+591r7Hn3zrMMYjYiOfky+Y62/QC56z7qfXtDr6Hg0+UJ9cx0/qI/4EMcP
2CNcWd/jQ489nMp7BnapWGRPjzp3gf0t0feIdRijIYfLtcK1ovfXuzY0L5oa
bY3mRn+j69HjTzj3cccr9K10nxg/lUrtv9q56PpV+uDjjpfvfM/KRb1nnPsn
a6/W97R1VqdSr6+V7z7rPy8Xva9xD+jlReeiwdfpW+V4jb58T2D8nD3ClXU8
vpesDd9y9539ek0unqcNzqWXV83fkMp7wsvu+1DP/HX5sibF8mxu9Jw4c/Qk
Ohu9h+7O9wO0NO8oGn+Tvo2pvA/k+8EbqdTvm+RCIy5zHVnrL0vlfQDfFrk2
W/tN86hzqv1tNQ43Ghp9jabeYX9woOWnO873AXwfeP689zv1kbddvm3yvZ9K
/Y5F639kbeZmrb81lfcBfB/KDccufeTtdh6+ve4Bz35b9W8bNXVSozfxHlCl
Fl/vs8CYfHz73BvGjb0HNGqg4znnau8K8LFuvoV872rV/tSreAfgWWhqfqXB
PaGmwX2DmnXy5TtKrb23VuNnrb/dvvJ9oIVavKVz8x2gpfq+jfGs7zuoy9up
0/d4HuxXZ+OdRJ291MvdscF9gBjvPe8/Oqib87gDfAKZDu3o
           "]],
          Annotation[#, "Charting`Private`Tag$73153#3"]& ]],
        Lighting->Automatic]}, {}, {}, {}, {}, {}, {}}, {
      {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJwt0L1KggEYBeCvJlv9xbYwyDLRnPKHoJYCaymXXIogVJJ00T1J9CLqMqSp
MNy8DZvCazCfoeFZzjucw7vz0Ll+3giC4IYcefqCFwa888b2pjtZDsmwR5oC
CSJESbHLK0NGjPnkiynfzJjzwYQ76pxSpEzDnkeaXFJlxR8LfvhlyZadIRJE
iRMjQpgkGQ7YJ0uTe+rc0qNLmydanFDhnAtqXOk7o0SFYwoc/f9xDaM+IEM=

        "]], 
       Line3DBox[{134, 132, 135, 604, 653, 655, 685, 678, 674, 673, 672, 681, 
        679, 446, 444, 448, 477, 475, 488, 486, 485, 497, 511, 519, 517, 520, 
        521, 516, 515, 526, 522, 422, 420, 586, 587, 638, 622, 608, 610, 630, 
        631, 627, 628, 629, 166, 164, 165, 162, 163, 206, 184, 185, 186, 191, 
        192, 194, 195, 193, 196, 177, 175, 199, 134}]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], 
       Line3DBox[{733, 734, 736, 737, 744, 745, 826, 827, 829, 831, 837, 836, 
        783, 785, 794, 1396, 1408, 1405, 1404, 1403, 897, 899, 895, 855, 857, 
        934, 933, 930, 932, 931, 929, 928, 873, 872, 870, 869, 868, 1433, 
        1421, 1420, 1419, 1446, 1445, 1450, 1451, 1448, 1437, 1435, 1375, 
        1374, 1376, 1409, 1197, 1192, 1191, 1203, 1207, 1208, 757, 754, 753, 
        916, 914, 938, 939, 941, 942, 943, 944, 910, 911, 912, 922, 774, 
        733}], 
       Line3DBox[{790, 788, 819, 816, 817, 809, 810, 812, 813, 1107, 1111, 
        1131, 1004, 1005, 1006, 1007, 995, 996, 997, 988, 990, 1036, 1034, 
        1040, 1047, 1044, 970, 972, 1055, 1053, 1054, 1052, 1051, 1057, 985, 
        983, 951, 950, 966, 1144, 1136, 1135, 1064, 1063, 1075, 1074, 1116, 
        1076, 1077, 1112, 1096, 1098, 1102, 1100, 1141, 1128, 790}], 
       Line3DBox[{1240, 1241, 1242, 1243, 1498, 1502, 1504, 1494, 1487, 1489, 
        1522, 1525, 1477, 1475, 1478, 1469, 1468, 1482, 1467, 1461, 1460, 
        1503, 1328, 1327, 1326, 1335, 1336, 1359, 1358, 1357, 1356, 1354, 
        1348, 1350, 1342, 1302, 1298, 1300, 1316, 1315, 1306, 1305, 1309, 
        1310, 1311, 1312, 1281, 1268, 1269, 1271, 1248, 1250, 1262, 1263, 
        1246, 1245, 1240}]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], 
       Line3DBox[{1533, 1535, 1537, 1542, 1544, 1558, 1560, 1564, 1566, 1614, 
        1616, 1620, 1622, 1634, 1636, 1640, 1642, 1641, 1644, 1650, 1652, 
        1674, 1676, 1682, 1684, 1778, 1780, 1786, 1788, 1810, 1812, 1818, 
        1820, 1819, 1816, 1815, 1804, 1803, 1800, 1799, 1756, 1755, 1752, 
        1751, 1740, 1739, 1736, 1735, 1734, 1731, 1724, 1721, 1698, 1695, 
        1688, 1685, 1590, 1587, 1580, 1577, 1550, 1547, 1538, 1532, 
        1533}]}, {}, {}, {}, {}, 
      {RGBColor[0.5, 0, 0.5], Thickness[Large], 
       Line3DBox[{1827, 1824, 1920, 1873, 1826, 1876, 1877, 1868, 1825, 1921, 
        1872, 1923, 1874, 1875, 1823, 1863, 1862, 1865, 1866, 1900, 1903, 
        1901, 1902, 1894, 1895, 1893, 1896}], 
       Line3DBox[{1836, 1892, 1835, 1881}], Line3DBox[{1922, 1869, 1870}], 
       Line3DBox[{1929, 1840}], 
       Line3DBox[{1992, 1957, 1989, 1990, 1987, 1988, 2011, 1991, 1956, 1974, 
        1980, 1979, 1981, 1976, 1978, 1977, 1950}]}, 
      {RGBColor[0.5, 0, 0.5], Thickness[Large], 
       Line3DBox[{1889, 1888, 1834, 1891, 1890, 1884, 1883, 1882, 1944, 1886, 
        1885, 1887, 1943, 1913, 1912, 1864, 1828, 1867, 1829, 1861, 1822, 
        1860, 1821, 1871, 1830, 1880, 1833, 1878, 1831, 1879, 1832}], 
       Line3DBox[{1954, 1985, 1955, 1986, 1953, 1984, 1952, 1983, 1949, 1972, 
        1973, 1975, 1951, 1982, 1958, 1993, 1994, 1995, 1959, 1996, 1997, 
        1947, 1969, 1948, 1970, 1971, 1859, 1838, 1899, 1837, 1897, 1898, 
        1911, 1844, 1909, 1845, 1910, 1842, 1907, 1908, 1843, 1839, 1904, 
        1841, 1905, 1906}]}, {}, 
      {RGBColor[0.5, 0, 0.5], Thickness[Large], 
       Line3DBox[{1849, 1917, 1846, 1914, 1848, 1916, 1847, 1915, 1850, 1918, 
        1851, 1919, 1854, 1930, 1931, 1932, 1933, 1942, 1940, 1858, 1939, 
        2002, 2003, 2013, 1998, 1960, 1999, 1961, 2000, 2001}], 
       Line3DBox[{1926, 1925, 1852, 1928, 1946, 1924, 1945, 1853, 1927, 1941, 
        1935, 1855, 1934, 1856, 1936, 1857, 1937, 1938}], 
       Line3DBox[{1962, 2004, 2014, 2005, 1963, 2007, 2006, 1964, 2015, 2010, 
        2009, 1966, 2008, 1965, 1968, 2012, 1967}]}}},
    VertexNormals->CompressedData["
1:eJztm3k01tsX/3WbRTPNkeZB023SdErSXIY0KNGoKJmVpEmicEORqEQizSTN
J1Nz7m1SKUMh08OjiYrqZ63vPs93/Xa/vZ7c75+/5/nHWq+11/vss88+5+xz
Pke3ZeuNVv6hpKSU01hJqX7tX73qcW+adn7Bkk27L998rIxvci76WT3ElB/r
PviPRw+zWM2VcU/cDSX80IOnQyTvF/ApYJ8E9q5gH07YGxeOGGYXksHORXT9
OLGijB80aDYmvcsibgT8POKTCX92p8+q7rA3m6msWvnTu4uEdw/ekVPyegH3
RFwLeAThj+hXNfDDwIW+shydMLDXJfychPhm4EYoDmHQXwcdnQmL2TM2rZ3T
FtNB5dxidmvXrupmJHcCPh34EuBU3Kj+4nER/swjOB53oU+NL9YR3Jnw34Xo
L5WHlI4XkQ/U+FI6Jsj/Q+C/IREfe9CZATrmoIP1lwKn8gfPo8Ny8g3H54ic
eTcRdFKQDuUnNU9xf4U9FR87wr6ucaD6Rc0XL2LcKX2xnqiCvaac/KHWpfHb
DDutaZvPZrxfmbihpIhf6BBxPaFm/i88DnjVlgEFaqZ5rIvdCbPxbsW8cE+2
tnuvBbwSeFfgxcAp+3GE/oi/V5q49S1iX1U3+7atzuez9OpFeOyfx4cD/wZ8
DvBhiM8G7kPEAfNuwHF+ivUzCvg3xCl9ah2g7Cn9Sd0PtV0Xm820+hbtXaIu
4Vea7VZ7mrmAH0f2Qv+89fNtSp2LWern+5J5GXl8Wo5xXrLaPB4HPAVxMb7T
UfypfBgJcf5CjAseL8ofeTwN8S+QP50hf4qIvBKcyn954/67+6zYL87CvA6F
eT0fcbyPiPluBvM9y3+36ljjZ+zW5vtGL/uXc/VeVp+utzYj9y+qnqHanUbs
7zMIjvsVAjrZyM/24GcOwfWRvvCT8kezx/79Iz5IuZ+T5uW7Z0+zE1cv6Tx9
Zyjje4DHAB+WEHi1+VcpL3888P7ZVlGs559PY3f0mS3jxYjffWQ/oHeulJ8Z
eOKbs89FFt7hXoJqpckvPAI41a6wPw72h8H+xgTVvYavpfx8oXWcc1Yie1Zz
fXePZya/9CsG9cub6FcJ8j9L1ahdzo5yvk46xfWR3hPmPFztuueTZb9wJ+A6
ZUO+nwuV8rhRczWzq1JYyMiquL8+L5Lxc8CDgQudtaDjgHQSwf4g2Is4nEPx
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
cf0iGTdEHOu8QzpGyJ6q28W6dAmd16h5h9dVvB4uIs6D+Dwr7JcTOssJnYvE
ufiqnHVV7AtU3Kj1SvD+6P5ExHkWxHkrxFm0W0SsV++QP+03WBnE3itmnrvT
U7Uq3rJXBWxJoooXya97G64NM5Aw744vPxn/ncXaXKly9B+9ky/b4N5q7CwJ
e2W94bnW6yzWNfWJ67lJO/mpHMfeqyrLWYbh5/OL+vzDdHq3djOwdJfxl8BH
A780sejxyGHltY2ta5Pb7RnTV1/Ub8uxbTJugXgi4lORvdCZAtw/cJBXg1gJ
63XRZ90Ru9cs+0Xnrl/Pe/C9wAcAzwGuDnHYBXHIhDiI/mZBfzWhv0uHXo8+
1bd2vdgeuS3N7Bkzueav1/j8Npl+f6SP4zMSxScDxSdgyOPz6uZStrWtcuns
MXeZasayLuYeriT/tzrbEfdH/ueC//V0j94yvyxhOs11B6/68zUL6LQ4vvlx
D1l8XkB8OkN8cNxwnlD5gMcd+9mc8L85ioPQHwf6eHxx/mN+6kd6xJWEYmbd
k7l7qOQxh2O7L65S9+IdwH4H2L8E+9uBhlv3PMtn6Rpttd5PLWL+m7Z2edtr
zy98H/DToG8F+nagfwvs/wH7ALCn2sX2ot0VXL3f5tv5zGZTXOyXuUXsj/kp
7wy19/BlwG2BNwSO7esBx3k+F/J8GXBd4MbAAyF/uqN5h+djFnAR/52oX9S4
4HWpNaxLgvsAbwv85FLHV3GSfLY1WWVJveFFzKFm++jHXff8wh2Bp0I8H0E8
90M8U4A/RuNyfLhO28DkfNbPzSa378IiNtbySYjS0D08Cnh/4OOAi7x1hbxt
BnlL2VMc+yPyCo+vbByB26F8aI/y6gXEGefbc+B/RjS9vjGnmKlmtZ1x8slb
lhVxoEazvhcfDlwF8RMQZw+IswvE2UZ585c79QvYXd81JV81i5ipZ5hVufoe
rkasw5ROVXB81cZJUu6asEJjzoz7XPkPa+tHC51kfDNwVeBxpZttJ2hJ+f1d
3W5uDnjI51hKEn9UOfHebpetJnarPSfetGbjIx/y7lH3AmwbOPOr4y47HL+e
z3oe2em9yKyISY9ffXh2xB4Z74H4ZeC9gVcAp9Yf0a8dKA+p/oq83QbcGdnv
QFzkzwCUP5HAtYGPB0719xrqbzlwEecNRPydEO8LcfZHcaY4pT+52mboDi8p
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
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Epsilon]\"", TraditionalForm], 
    FormBox["\"S\"", TraditionalForm], None},
  Background->GrayLevel[1],
  BaseStyle->{FontFamily -> "Arial"},
  BoxRatios->{1, 1, 1},
  Boxed->False,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{386.16082119635035`, 372.00286272746104`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-5, 20}, {-7, 10}, {-1, 1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.22817640045471116`, -0.03162090862800438, 
   3.3759347814217424`},
  ViewVertical->{-0.20752971869709158`, 0.7834792625667791, 
   0.58574026751225}]], "Output",
 CellChangeTimes->{
  3.8649840563252296`*^9, {3.864984089195907*^9, 3.864984163001163*^9}, 
   3.864984208723666*^9, 3.864984249215981*^9, 3.8649843168884974`*^9, {
   3.864984402884349*^9, 3.864984430784882*^9}, {3.86498452338383*^9, 
   3.864984545144951*^9}, {3.864984581338612*^9, 3.864984620355199*^9}, 
   3.8649846521841803`*^9, {3.864984695690258*^9, 3.8649847869710283`*^9}, 
   3.864984820123601*^9, 3.864984908022606*^9, 3.864984993045829*^9, 
   3.864985035855466*^9, {3.864985102623879*^9, 3.864985114839443*^9}, {
   3.8649851619482183`*^9, 3.864985218368492*^9}, {3.86498531962212*^9, 
   3.8649853406370163`*^9}, 3.864985378748088*^9, {3.86498541349651*^9, 
   3.864985417737178*^9}, {3.864985490040584*^9, 3.864985506002195*^9}, 
   3.864985574842358*^9, {3.864985607285266*^9, 3.864985612422619*^9}, 
   3.864985653798059*^9, 3.86498617025457*^9, 3.864987865193201*^9, {
   3.864987914083498*^9, 3.864987993371232*^9}, {3.864988076336667*^9, 
   3.864988096123144*^9}, {3.864988126933896*^9, 3.8649881423217077`*^9}, {
   3.864988191874167*^9, 3.86498822480303*^9}, {3.864988279717411*^9, 
   3.864988365139351*^9}, {3.864988504146188*^9, 3.864988519057288*^9}, 
   3.864988736368476*^9, {3.864989092322373*^9, 3.8649891003177147`*^9}, {
   3.864989217866864*^9, 3.864989260046653*^9}, 3.86498973727389*^9, {
   3.864989783527432*^9, 3.864989825359947*^9}, {3.864989856538062*^9, 
   3.8649899083981733`*^9}, {3.864990092428393*^9, 3.864990154203705*^9}, {
   3.8649903032522078`*^9, 3.864990328521896*^9}, {3.86499081298518*^9, 
   3.864990851321477*^9}, {3.8649909691898327`*^9, 3.8649909775231524`*^9}, 
   3.86499101510462*^9, {3.8649910581747103`*^9, 3.864991132264102*^9}, {
   3.86499117354464*^9, 3.864991195392976*^9}},
 CellLabel->
  "Out[691]=",ExpressionUUID->"a0a047ce-5395-4b5f-bb6b-dd2097d3dfdf"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["3d Coulomb + 3d harmonic oscillator", "Subsection",
 CellChangeTimes->{{3.864114934147203*^9, 
  3.864114953922729*^9}},ExpressionUUID->"0d8e2725-d596-4955-b6df-\
df280e816d7e"],

Cell[CellGroupData[{

Cell["\<\
Try to follow the same reasoning as for the quartic potential\
\>", "Subsubsection",
 CellChangeTimes->{{3.864274692548676*^9, 3.864274722704041*^9}, {
   3.8643140153087*^9, 3.864314015970899*^9}, {3.8643185685023603`*^9, 
   3.864318578479597*^9}, 
   3.864318626069916*^9},ExpressionUUID->"5f04b166-d618-4eb0-b626-\
9196ee906f20"],

Cell[TextData[{
 "Let us now generalize the above story to the following more generic quartic \
potential.\nNotation: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["H", "2"], "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["m", "1"], "+", 
       SubscriptBox["m", "2"]}], 
      RowBox[{
       SubscriptBox["m", "1"], 
       SubscriptBox["m", "2"]}]], 
     FractionBox[
      SuperscriptBox["hbar", "2"], "2"]}]}], TraditionalForm]],ExpressionUUID->
  "87f493c7-8736-42e3-b680-dfed7de12581"]
}], "Text",
 CellChangeTimes->{{3.864274820517263*^9, 3.86427483221453*^9}, {
  3.864275377289834*^9, 3.864275399449318*^9}, {3.8642867086502132`*^9, 
  3.864286761195252*^9}},ExpressionUUID->"a05c4bad-f1e1-4d53-a204-\
242aecc815b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GENERIC", " ", "COMMENT", " ", "ABOUT", " ", "THIS", " ", 
   RowBox[{"SECTION", ":", " ", 
    RowBox[{
    "contrary", " ", "to", " ", "the", " ", "case", " ", "of", " ", "an", " ",
      "even", " ", "potential"}]}]}], ",", " ", 
  RowBox[{
  "one", " ", "here", " ", "has", " ", "to", " ", "keep", " ", "track", " ", 
   "of", " ", "both", " ", "the", " ", "positive", " ", "x", " ", "and", " ", 
   "the", " ", "negative", " ", "x", " ", "solutions"}]}]], "Text",
 CellChangeTimes->{{3.8643119982628927`*^9, 
  3.864312056801162*^9}},ExpressionUUID->"ccfd75c1-bac7-4460-b864-\
31d731cd579e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"A", " ", "z"}], " ", "+", 
   RowBox[{"\[Beta]", " ", 
    SuperscriptBox["z", "2"]}], "+", 
   FractionBox["\[Gamma]", "z"], "+", 
   FractionBox[
    SuperscriptBox["\[Lambda]", "2"], 
    SuperscriptBox["z", "2"]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq", "[", "\[Psi]_", "]"}], ":=", 
   RowBox[{"z", "\[Function]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "''"}], "[", "z", "]"}], "+", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Epsilon]", "-", 
        RowBox[{"V", "[", "z", "]"}]}], 
       RowBox[{
        SuperscriptBox["H", "2"], " "}]], 
      RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.864035526701899*^9, 3.864035567764186*^9}, {
   3.86403565956774*^9, 3.864035667256592*^9}, {3.864115016484351*^9, 
   3.864115017418898*^9}, {3.8641152422780733`*^9, 3.864115267812194*^9}, {
   3.864115649334899*^9, 3.864115655364806*^9}, 3.864115695927232*^9, 
   3.864116018567485*^9, 3.864117086684123*^9, {3.8641181148079357`*^9, 
   3.864118115933967*^9}, {3.864118242001134*^9, 3.86411825792118*^9}, 
   3.8641990306553793`*^9, 3.8642010609833183`*^9, 3.86420237395303*^9, {
   3.864205586724691*^9, 3.864205587664859*^9}, 3.8642078236374598`*^9, {
   3.864208608819233*^9, 3.864208610930963*^9}, {3.864269777597616*^9, 
   3.864269777795177*^9}, {3.8642708672924137`*^9, 3.8642708773561974`*^9}, {
   3.8642754046018677`*^9, 3.864275412761997*^9}, {3.8642866904537773`*^9, 
   3.8642867029554768`*^9}, {3.864286770795536*^9, 3.864286800475404*^9}, {
   3.8643186399036093`*^9, 3.8643186521833887`*^9}},
 CellLabel->
  "In[666]:=",ExpressionUUID->"538c78a1-38b2-427d-aa4a-ae454611eb8b"],

Cell["\<\
Now we need to find the correct change of variable for the active variable \
\[Psi], for this, let us get inspiration from the analytical solution \
provided by Mathematica:\
\>", "Text",
 CellChangeTimes->{{3.864275423626759*^9, 
  3.864275481754038*^9}},ExpressionUUID->"e6af5e0c-19fa-4f99-8e22-\
4a0c2d44d236"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"eq", "[", "\[Psi]", "]"}], "[", "z", "]"}], "==", "0"}], ",", 
    RowBox[{"\[Psi]", "[", "z", "]"}], ",", "z"}], "]"}], "//", 
  "PowerExpand"}]], "Input",
 CellChangeTimes->{{3.8642754848765173`*^9, 3.8642755082360373`*^9}, {
  3.864275949123186*^9, 3.864275950754225*^9}},
 CellLabel->
  "In[571]:=",ExpressionUUID->"ce421ec2-65f3-49b7-8de7-4164cda7720b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Psi]", "[", "z", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"H", " ", "z", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["A", 
            SuperscriptBox["H", "2"]], "+", 
           FractionBox[
            RowBox[{"z", " ", "\[Beta]"}], 
            SuperscriptBox["H", "2"]]}], ")"}]}], 
        RowBox[{"2", " ", 
         SqrtBox["\[Beta]"]}]]], " ", 
      SuperscriptBox["z", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SqrtBox[
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"4", " ", 
              SuperscriptBox["\[Lambda]", "2"]}], 
             SuperscriptBox["H", "2"]]}]]}], ")"}]}]], " ", 
      TemplateBox[{"2"},
       "C"], " ", 
      RowBox[{"HeunB", "[", 
       RowBox[{
        RowBox[{
         FractionBox["\[Gamma]", 
          SuperscriptBox["H", "2"]], "+", 
         FractionBox[
          RowBox[{"A", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Lambda]", "2"]}], 
                SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
          RowBox[{"2", " ", "H", " ", 
           SqrtBox["\[Beta]"]}]]}], ",", 
        RowBox[{
         FractionBox[
          SuperscriptBox["A", "2"], 
          RowBox[{"4", " ", 
           SuperscriptBox["H", "2"], " ", "\[Beta]"}]], "+", 
         FractionBox["\[Epsilon]", 
          SuperscriptBox["H", "2"]], "+", 
         FractionBox[
          RowBox[{
           SqrtBox["\[Beta]"], " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Lambda]", "2"]}], 
                SuperscriptBox["H", "2"]]}]]}], ")"}]}], "H"]}], ",", 
        RowBox[{"1", "-", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"4", " ", 
             SuperscriptBox["\[Lambda]", "2"]}], 
            SuperscriptBox["H", "2"]]}]]}], ",", 
        FractionBox["A", 
         RowBox[{"H", " ", 
          SqrtBox["\[Beta]"]}]], ",", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["\[Beta]"]}], "H"], ",", "z"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"H", " ", "z", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["A", 
            SuperscriptBox["H", "2"]], "+", 
           FractionBox[
            RowBox[{"z", " ", "\[Beta]"}], 
            SuperscriptBox["H", "2"]]}], ")"}]}], 
        RowBox[{"2", " ", 
         SqrtBox["\[Beta]"]}]]], " ", 
      SuperscriptBox["z", 
       RowBox[{
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], 
           SuperscriptBox["H", "2"]]}]], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SqrtBox[
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"4", " ", 
               SuperscriptBox["\[Lambda]", "2"]}], 
              SuperscriptBox["H", "2"]]}]]}], ")"}]}]}]], " ", 
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"HeunB", "[", 
       RowBox[{
        RowBox[{
         FractionBox["\[Gamma]", 
          SuperscriptBox["H", "2"]], "-", 
         FractionBox[
          RowBox[{"A", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox[
                 RowBox[{"1", "+", 
                  FractionBox[
                   RowBox[{"4", " ", 
                    SuperscriptBox["\[Lambda]", "2"]}], 
                   SuperscriptBox["H", "2"]]}]]}], ")"}]}]}], ")"}]}], 
          RowBox[{"H", " ", 
           SqrtBox["\[Beta]"]}]]}], ",", 
        RowBox[{
         FractionBox[
          SuperscriptBox["A", "2"], 
          RowBox[{"4", " ", 
           SuperscriptBox["H", "2"], " ", "\[Beta]"}]], "+", 
         FractionBox["\[Epsilon]", 
          SuperscriptBox["H", "2"]], "+", 
         FractionBox[
          RowBox[{
           SqrtBox["\[Beta]"], " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Lambda]", "2"]}], 
                SuperscriptBox["H", "2"]]}]]}], ")"}]}], "H"]}], ",", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[Lambda]", "2"]}], 
                 SuperscriptBox["H", "2"]]}]]}], ")"}]}]}], ")"}]}], ",", 
        FractionBox["A", 
         RowBox[{"H", " ", 
          SqrtBox["\[Beta]"]}]], ",", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["\[Beta]"]}], "H"], ",", "z"}], "]"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.864275505072137*^9, 3.864275520794508*^9}, 
   3.8642759513363037`*^9, 3.8642868069716597`*^9, 3.864312218853105*^9, 
   3.864317506247504*^9, 3.864318666773953*^9},
 CellLabel->
  "Out[571]=",ExpressionUUID->"2de11543-5639-4935-b791-023d65729712"]
}, Open  ]],

Cell[TextData[{
 "So now we have the exponential change of variable.\nRemains the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "+", "1"}], ")"}], 
    RowBox[{"some", " ", "power"}]], TraditionalForm]],ExpressionUUID->
  "d28e9117-8ebf-465f-babd-6644859a98e1"],
 " to fix. Let us call the generic power \[Mu]"
}], "Text",
 CellChangeTimes->{{3.864275595259122*^9, 
  3.864275672684463*^9}},ExpressionUUID->"f925fb2f-524b-46e8-a0c4-\
e65a6381bb12"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eq2Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"A", " ", "z"}], "+", 
        RowBox[{"B", " ", 
         SuperscriptBox["z", "2"]}]}]], " ", 
      SuperscriptBox["z", "\[Eta]"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "+", "1"}], ")"}], "\[Mu]"]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", " ", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"A", " ", "z"}], "+", 
          RowBox[{"B", " ", 
           SuperscriptBox["z", "2"]}]}]], " ", 
        SuperscriptBox["z", "\[Eta]"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"z", "+", "1"}], ")"}], "\[Mu]"], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.864118163342272*^9, 3.864118163421801*^9}, {
   3.8641182338242292`*^9, 3.8641182794537277`*^9}, {3.864118309938342*^9, 
   3.8641183532169247`*^9}, {3.864118384770278*^9, 3.864118397361452*^9}, {
   3.86419901804711*^9, 3.864199020958868*^9}, 3.864199267933145*^9, {
   3.864199361245159*^9, 3.864199363388564*^9}, 3.864201067883738*^9, {
   3.8642023845592937`*^9, 3.8642023977426434`*^9}, {3.864202740227565*^9, 
   3.864202750578661*^9}, {3.864203210996903*^9, 3.864203221267009*^9}, {
   3.864203261029221*^9, 3.864203279172521*^9}, {3.864204269612*^9, 
   3.864204278153284*^9}, {3.864204353340111*^9, 3.864204375658196*^9}, {
   3.8642046023818207`*^9, 3.864204606220006*^9}, {3.86420559214673*^9, 
   3.864205635889922*^9}, 3.8642069206506863`*^9, 3.8642069619650087`*^9, {
   3.864269780717699*^9, 3.864269784781036*^9}, {3.8642756794382143`*^9, 
   3.8642757264933233`*^9}, {3.8642759668761806`*^9, 3.86427598791363*^9}, {
   3.864286840898326*^9, 3.864286843151375*^9}, {3.864312073767428*^9, 
   3.864312114422969*^9}, {3.864312160160754*^9, 3.864312176013809*^9}, {
   3.86431242063426*^9, 3.864312427109799*^9}, {3.864318808277966*^9, 
   3.864318826068097*^9}, {3.864318929491708*^9, 3.8643189304814577`*^9}, {
   3.8643189626406813`*^9, 3.864319022191423*^9}, {3.8643190717298603`*^9, 
   3.864319073305979*^9}, {3.864319127728814*^9, 3.864319248115737*^9}, {
   3.864319308765787*^9, 3.864319322384123*^9}, {3.86431944441224*^9, 
   3.864319444629142*^9}, {3.8643197931710777`*^9, 3.864319797024631*^9}, {
   3.864319844803747*^9, 3.864319923608817*^9}},
 CellLabel->
  "In[684]:=",ExpressionUUID->"9eb743f7-7780-4267-a4a1-8d40fc6666f0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
    RowBox[{
     RowBox[{"w", "''"}], "[", "z", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
    RowBox[{
     RowBox[{"w", "'"}], "[", "z", "]"}]}], "]"}], "//", 
  "Together"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], ",", 
    RowBox[{"w", "[", "z", "]"}]}], "]"}], "//", "Together"}]}], "Input",
 CellChangeTimes->{{3.864318898101232*^9, 3.864318910670504*^9}, {
  3.8643189585335913`*^9, 3.864318960273237*^9}, {3.864320037204466*^9, 
  3.864320041448304*^9}, {3.8643201459250526`*^9, 3.864320148379053*^9}},
 CellLabel->
  "In[692]:=",ExpressionUUID->"2d046eeb-ba99-4006-bf06-ccb916bbb78d"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.864318911095879*^9, 3.8643189909778843`*^9}, 
   3.8643190258156443`*^9, 3.864319077520232*^9, 3.864319257010807*^9, 
   3.864319325214364*^9, 3.864319449071344*^9, {3.864319822101218*^9, 
   3.864319850101757*^9}, {3.8643198888991823`*^9, 3.8643199259667997`*^9}, 
   3.8643200420877542`*^9, 3.864320148934471*^9},
 CellLabel->
  "Out[692]=",ExpressionUUID->"9f2a0917-e8fb-494f-a45d-73c757b965ac"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"A", " ", "z"}], "+", 
     RowBox[{"A", " ", 
      SuperscriptBox["z", "2"]}], "+", 
     RowBox[{"2", " ", "B", " ", 
      SuperscriptBox["z", "2"]}], "+", 
     RowBox[{"2", " ", "B", " ", 
      SuperscriptBox["z", "3"]}], "+", "\[Eta]", "+", 
     RowBox[{"z", " ", "\[Eta]"}], "+", 
     RowBox[{"z", " ", "\[Mu]"}]}], ")"}]}], 
  RowBox[{"z", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "z"}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.864318911095879*^9, 3.8643189909778843`*^9}, 
   3.8643190258156443`*^9, 3.864319077520232*^9, 3.864319257010807*^9, 
   3.864319325214364*^9, 3.864319449071344*^9, {3.864319822101218*^9, 
   3.864319850101757*^9}, {3.8643198888991823`*^9, 3.8643199259667997`*^9}, 
   3.8643200420877542`*^9, 3.864320148938196*^9},
 CellLabel->
  "Out[693]=",ExpressionUUID->"ae7cfeb0-c44c-435c-ad03-b5830bc3e376"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["H", "2"], " ", 
    SuperscriptBox["z", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "z"}], ")"}], "2"]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "2"], " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"]}], "+", 
    RowBox[{"2", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"]}], "-", 
    RowBox[{"A", " ", 
     SuperscriptBox["z", "3"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["A", "2"], " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "3"]}], "+", 
    RowBox[{"4", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "3"]}], "+", 
    RowBox[{"4", " ", "A", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "3"]}], "-", 
    RowBox[{"2", " ", "A", " ", 
     SuperscriptBox["z", "4"]}], "+", 
    RowBox[{
     SuperscriptBox["A", "2"], " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "4"]}], "+", 
    RowBox[{"2", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "4"]}], "+", 
    RowBox[{"8", " ", "A", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "4"]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["B", "2"], " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "4"]}], "-", 
    RowBox[{"A", " ", 
     SuperscriptBox["z", "5"]}], "+", 
    RowBox[{"4", " ", "A", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "5"]}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["B", "2"], " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "5"]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["B", "2"], " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "6"]}], "-", 
    RowBox[{
     SuperscriptBox["z", "4"], " ", "\[Beta]"}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["z", "5"], " ", "\[Beta]"}], "-", 
    RowBox[{
     SuperscriptBox["z", "6"], " ", "\[Beta]"}], "-", 
    RowBox[{"z", " ", "\[Gamma]"}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["z", "2"], " ", "\[Gamma]"}], "-", 
    RowBox[{
     SuperscriptBox["z", "3"], " ", "\[Gamma]"}], "+", 
    RowBox[{
     SuperscriptBox["z", "2"], " ", "\[Epsilon]"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["z", "3"], " ", "\[Epsilon]"}], "+", 
    RowBox[{
     SuperscriptBox["z", "4"], " ", "\[Epsilon]"}], "-", 
    RowBox[{
     SuperscriptBox["H", "2"], " ", "\[Eta]"}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["H", "2"], " ", "z", " ", "\[Eta]"}], "+", 
    RowBox[{"2", " ", "A", " ", 
     SuperscriptBox["H", "2"], " ", "z", " ", "\[Eta]"}], "-", 
    RowBox[{
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"], " ", "\[Eta]"}], "+", 
    RowBox[{"4", " ", "A", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"], " ", "\[Eta]"}], "+", 
    RowBox[{"4", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"], " ", "\[Eta]"}], "+", 
    RowBox[{"2", " ", "A", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "3"], " ", "\[Eta]"}], "+", 
    RowBox[{"8", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "3"], " ", "\[Eta]"}], "+", 
    RowBox[{"4", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "4"], " ", "\[Eta]"}], "+", 
    RowBox[{
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Eta]", "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["H", "2"], " ", "z", " ", 
     SuperscriptBox["\[Eta]", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"], " ", 
     SuperscriptBox["\[Eta]", "2"]}], "-", 
    SuperscriptBox["\[Lambda]", "2"], "-", 
    RowBox[{"2", " ", "z", " ", 
     SuperscriptBox["\[Lambda]", "2"]}], "-", 
    RowBox[{
     SuperscriptBox["z", "2"], " ", 
     SuperscriptBox["\[Lambda]", "2"]}], "-", 
    RowBox[{
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"], " ", "\[Mu]"}], "+", 
    RowBox[{"2", " ", "A", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"], " ", "\[Mu]"}], "+", 
    RowBox[{"2", " ", "A", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "3"], " ", "\[Mu]"}], "+", 
    RowBox[{"4", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "3"], " ", "\[Mu]"}], "+", 
    RowBox[{"4", " ", "B", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "4"], " ", "\[Mu]"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["H", "2"], " ", "z", " ", "\[Eta]", " ", "\[Mu]"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"], " ", "\[Eta]", " ", "\[Mu]"}], "+", 
    RowBox[{
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["z", "2"], " ", 
     SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.864318911095879*^9, 3.8643189909778843`*^9}, 
   3.8643190258156443`*^9, 3.864319077520232*^9, 3.864319257010807*^9, 
   3.864319325214364*^9, 3.864319449071344*^9, {3.864319822101218*^9, 
   3.864319850101757*^9}, {3.8643198888991823`*^9, 3.8643199259667997`*^9}, 
   3.8643200420877542`*^9, 3.8643201489421387`*^9},
 CellLabel->
  "Out[694]=",ExpressionUUID->"7a3c3f63-d73e-4792-b70c-a8d20794d98e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolynomialRemainder", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["A", "2"], " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"]}], "+", 
     RowBox[{"2", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"]}], "-", 
     RowBox[{"A", " ", 
      SuperscriptBox["z", "3"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["A", "2"], " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "3"]}], "+", 
     RowBox[{"4", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "3"]}], "+", 
     RowBox[{"4", " ", "A", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "3"]}], "-", 
     RowBox[{"2", " ", "A", " ", 
      SuperscriptBox["z", "4"]}], "+", 
     RowBox[{
      SuperscriptBox["A", "2"], " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "4"]}], "+", 
     RowBox[{"2", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "4"]}], "+", 
     RowBox[{"8", " ", "A", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "4"]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["B", "2"], " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "4"]}], "-", 
     RowBox[{"A", " ", 
      SuperscriptBox["z", "5"]}], "+", 
     RowBox[{"4", " ", "A", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "5"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["B", "2"], " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "5"]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["B", "2"], " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "6"]}], "-", 
     RowBox[{
      SuperscriptBox["z", "4"], " ", "\[Beta]"}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["z", "5"], " ", "\[Beta]"}], "-", 
     RowBox[{
      SuperscriptBox["z", "6"], " ", "\[Beta]"}], "-", 
     RowBox[{"z", " ", "\[Gamma]"}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["z", "2"], " ", "\[Gamma]"}], "-", 
     RowBox[{
      SuperscriptBox["z", "3"], " ", "\[Gamma]"}], "+", 
     RowBox[{
      SuperscriptBox["z", "2"], " ", "\[Epsilon]"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["z", "3"], " ", "\[Epsilon]"}], "+", 
     RowBox[{
      SuperscriptBox["z", "4"], " ", "\[Epsilon]"}], "-", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", "\[Eta]"}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"], " ", "z", " ", "\[Eta]"}], "+", 
     RowBox[{"2", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", "z", " ", "\[Eta]"}], "-", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"], " ", "\[Eta]"}], "+", 
     RowBox[{"4", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"], " ", "\[Eta]"}], "+", 
     RowBox[{"4", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"], " ", "\[Eta]"}], "+", 
     RowBox[{"2", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "3"], " ", "\[Eta]"}], "+", 
     RowBox[{"8", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "3"], " ", "\[Eta]"}], "+", 
     RowBox[{"4", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "4"], " ", "\[Eta]"}], "+", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Eta]", "2"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"], " ", "z", " ", 
      SuperscriptBox["\[Eta]", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"], " ", 
      SuperscriptBox["\[Eta]", "2"]}], "-", 
     SuperscriptBox["\[Lambda]", "2"], "-", 
     RowBox[{"2", " ", "z", " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "-", 
     RowBox[{
      SuperscriptBox["z", "2"], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "-", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"], " ", "\[Mu]"}], "+", 
     RowBox[{"2", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"], " ", "\[Mu]"}], "+", 
     RowBox[{"2", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "3"], " ", "\[Mu]"}], "+", 
     RowBox[{"4", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "3"], " ", "\[Mu]"}], "+", 
     RowBox[{"4", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "4"], " ", "\[Mu]"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"], " ", "z", " ", "\[Eta]", " ", "\[Mu]"}], "+", 
     
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"], " ", "\[Eta]", " ", "\[Mu]"}], "+", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["z", "2"], " ", 
      SuperscriptBox["\[Mu]", "2"]}]}], ")"}], ",", 
   RowBox[{
    SuperscriptBox["z", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "z"}], ")"}], "2"]}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.864320077667474*^9, 3.864320098924899*^9}},
 CellLabel->
  "In[691]:=",ExpressionUUID->"4919bca8-7752-46f6-a850-28f6fc55da90"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["H", "2"]}], " ", "\[Eta]"}], "+", 
  RowBox[{
   SuperscriptBox["H", "2"], " ", 
   SuperscriptBox["\[Eta]", "2"]}], "-", 
  SuperscriptBox["\[Lambda]", "2"], "+", 
  RowBox[{
   SuperscriptBox["z", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Gamma]"}], "+", 
     RowBox[{"2", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", "\[Eta]"}], "+", 
     RowBox[{"2", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", "\[Mu]"}], "-", 
     RowBox[{"4", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", "\[Mu]"}]}], ")"}]}], "+", 
  RowBox[{"z", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Gamma]"}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"], " ", "\[Eta]"}], "+", 
     RowBox[{"2", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", "\[Eta]"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Eta]", "2"]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"], " ", "\[Eta]", " ", "\[Mu]"}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["z", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[Gamma]"}], "-", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", "\[Eta]"}], "+", 
     RowBox[{"4", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", "\[Eta]"}], "+", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Eta]", "2"]}], "-", 
     SuperscriptBox["\[Lambda]", "2"], "-", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", "\[Mu]"}], "+", 
     RowBox[{"2", " ", "A", " ", 
      SuperscriptBox["H", "2"], " ", "\[Mu]"}], "-", 
     RowBox[{"4", " ", "B", " ", 
      SuperscriptBox["H", "2"], " ", "\[Mu]"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"], " ", "\[Eta]", " ", "\[Mu]"}], "+", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.864320100307658*^9},
 CellLabel->
  "Out[691]=",ExpressionUUID->"2d4da2e3-fdfd-4e13-a261-0a3e3d6ed1fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolynomialRemainder", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"A", " ", "z"}], "+", 
     RowBox[{"A", " ", 
      SuperscriptBox["z", "2"]}], "+", 
     RowBox[{"2", " ", "B", " ", 
      SuperscriptBox["z", "2"]}], "+", 
     RowBox[{"2", " ", "B", " ", 
      SuperscriptBox["z", "3"]}], "+", "\[Eta]", "+", 
     RowBox[{"z", " ", "\[Eta]"}], "+", 
     RowBox[{"z", " ", "\[Mu]"}]}], ")"}], ",", 
   RowBox[{"z", 
    RowBox[{"(", 
     RowBox[{"1", "+", "z"}], ")"}]}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.864320169767565*^9, 3.8643202015267687`*^9}},
 CellLabel->
  "In[696]:=",ExpressionUUID->"82dfd22f-91cb-41e4-af72-0bf15a76305d"],

Cell[BoxData[
 RowBox[{"\[Eta]", "+", 
  RowBox[{"z", " ", 
   RowBox[{"(", 
    RowBox[{"\[Eta]", "+", "\[Mu]"}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.864320183744152*^9, 3.864320201804212*^9}},
 CellLabel->
  "Out[696]=",ExpressionUUID->"4c3393d9-b442-466c-b36e-75092acbaf81"]
}, Open  ]],

Cell["\<\
We perform a change of passive variable to move to the [0,1] segment\
\>", "Text",
 CellChangeTimes->{{3.864274950694655*^9, 
  3.864274983848119*^9}},ExpressionUUID->"744699d3-d1e7-42c1-a532-\
b2883a3b4eb1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "==", 
      FractionBox["z", 
       RowBox[{"z", "+", "1"}]]}], "}"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "==", 
      FractionBox[
       RowBox[{"-", "z"}], 
       RowBox[{
        RowBox[{"-", "z"}], "+", "1"}]]}], "}"}], ",", 
    RowBox[{"{", "z", "}"}]}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864202530337821*^9, 3.8642025455519876`*^9}, {
   3.864203679909642*^9, 3.864203695046502*^9}, {3.8643125792997847`*^9, 
   3.864312584998733*^9}, 3.864312739399147*^9, 3.864312846895759*^9, {
   3.864313227672843*^9, 3.8643132302920513`*^9}},
 CellLabel->
  "In[613]:=",ExpressionUUID->"2aabac85-db95-4187-89d6-05891a8310df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["x", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.864203689655448*^9, 3.864203695378886*^9}, 
   3.864269792992223*^9, 3.8642746682788057`*^9, 3.864312585566846*^9, 
   3.8643127402473993`*^9, 3.864312853051523*^9, 3.864313274121306*^9, 
   3.864317519201784*^9, 3.8643192808948727`*^9},
 CellLabel->
  "Out[613]=",ExpressionUUID->"2ad77721-f26b-4702-b9f6-252832b86fac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "\[Rule]", 
    FractionBox["x", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.864203689655448*^9, 3.864203695378886*^9}, 
   3.864269792992223*^9, 3.8642746682788057`*^9, 3.864312585566846*^9, 
   3.8643127402473993`*^9, 3.864312853051523*^9, 3.864313274121306*^9, 
   3.864317519201784*^9, 3.864319280898877*^9},
 CellLabel->
  "Out[614]=",ExpressionUUID->"1a58fef0-a5e8-49f9-b1ce-ab67f7870dd9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"eq3Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox["#1", 
            RowBox[{"#1", "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{"1", "-", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}]], "Input",
 CellChangeTimes->{{3.864203669237536*^9, 3.864203704773901*^9}, {
   3.86420374226264*^9, 3.864203743862155*^9}, 3.864206662091394*^9, 
   3.864206908747628*^9, {3.864206958892559*^9, 3.864206981146277*^9}, 
   3.864312121357253*^9, {3.8643121835475197`*^9, 3.8643121837888403`*^9}, {
   3.86431223160461*^9, 3.8643122468096533`*^9}, {3.864312635132743*^9, 
   3.864312642965464*^9}, {3.8643127437881927`*^9, 3.8643127515382442`*^9}, {
   3.864312859386508*^9, 3.86431288216315*^9}, {3.864313285147183*^9, 
   3.8643132933196983`*^9}, {3.864319460983685*^9, 3.864319461137887*^9}},
 CellLabel->
  "In[639]:=",ExpressionUUID->"876b1b7a-f665-4395-909d-803f6c7e4b10"],

Cell["\<\
Now we need to fix the power \[Mu] in order for the coefficient of w[x] to be \
a polynomial in x\
\>", "Text",
 CellChangeTimes->{{3.8642760369276342`*^9, 
  3.8642760992304163`*^9}},ExpressionUUID->"8671f292-4014-4f59-b055-\
e10385784279"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
    RowBox[{"w", "[", "x", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
    RowBox[{
     RowBox[{"w", "'"}], "[", "x", "]"}]}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
    RowBox[{
     RowBox[{"w", "''"}], "[", "x", "]"}]}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864276203478758*^9, 3.8642762449628353`*^9}, {
   3.864276415361682*^9, 3.864276443868231*^9}, 3.864312127163787*^9, {
   3.864312262542098*^9, 3.8643122664867067`*^9}, {3.8643194648608313`*^9, 
   3.8643194651510572`*^9}, {3.864319583679253*^9, 3.864319600252253*^9}},
 CellLabel->
  "In[651]:=",ExpressionUUID->"033c89cb-f932-46e2-abff-dae73ebe8c3b"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"8", " ", 
    SuperscriptBox["H", "2"], " ", "\[Beta]", " ", 
    SuperscriptBox["\[Lambda]", "4"]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["\[Lambda]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", "\[Beta]", " ", 
        SuperscriptBox["\[Gamma]", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["A", "2"], " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"4", " ", "\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "A"}], " ", "x"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Gamma]"}], "+", 
          "\[Epsilon]"}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"H", "-", 
        RowBox[{"H", " ", "x"}]}], ")"}], "2"], " ", "\[Beta]", " ", 
     "\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]", "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Lambda]", "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SqrtBox[
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"4", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], 
          SuperscriptBox["H", "2"]]}]]}], ")"}]}], "-", 
    RowBox[{"2", " ", "H", " ", 
     SqrtBox["\[Beta]"], " ", 
     SuperscriptBox["\[Lambda]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", "\[Beta]", " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SqrtBox[
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"4", " ", 
              SuperscriptBox["\[Lambda]", "2"]}], 
             SuperscriptBox["H", "2"]]}]]}], ")"}]}], "+", 
       RowBox[{"2", " ", "x", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"4", " ", 
              SuperscriptBox["\[Lambda]", "2"]}], 
             SuperscriptBox["H", "2"]]}]]}], ")"}]}], "-", 
       RowBox[{"A", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["\[Lambda]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Lambda]", "2"]}], 
                SuperscriptBox["H", "2"]]}]]}], ")"}]}], "+", 
          RowBox[{"x", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Lambda]", "2"]}], "+", 
             RowBox[{"\[Gamma]", " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[Lambda]", "2"]}], 
                 SuperscriptBox["H", "2"]]}]]}]}], ")"}]}]}], ")"}]}]}], 
      ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.86427621846246*^9, 3.864276245125049*^9}, {
   3.864276419853499*^9, 3.864276444262329*^9}, 3.864286853987031*^9, 
   3.864312268584391*^9, 3.864312444627284*^9, 3.8643126484910307`*^9, 
   3.864312763725235*^9, {3.864312868911336*^9, 3.8643128850649652`*^9}, 
   3.864313297462576*^9, 3.864317640173773*^9, 3.864319289451891*^9, 
   3.864319341911989*^9, 3.8643194693321667`*^9, {3.8643195867080097`*^9, 
   3.864319604774847*^9}},
 CellLabel->
  "Out[651]=",ExpressionUUID->"b0320cde-e1cf-4962-b7b9-52219cd1e48c"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"A", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "-", 
        RowBox[{"2", " ", "\[Beta]"}]}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"H", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", 
      SqrtBox["\[Beta]"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox["\[Lambda]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"4", " ", 
               SuperscriptBox["\[Lambda]", "2"]}], 
              SuperscriptBox["H", "2"]]}]]}], ")"}]}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]", "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"4", " ", 
                SuperscriptBox["\[Lambda]", "2"]}], 
               SuperscriptBox["H", "2"]]}]]}]}], ")"}]}]}], ")"}]}]}], 
    ")"}]}], 
  RowBox[{"2", " ", "H", " ", "x", " ", 
   SqrtBox["\[Beta]"], " ", 
   SuperscriptBox["\[Lambda]", "2"]}]]], "Output",
 CellChangeTimes->{{3.86427621846246*^9, 3.864276245125049*^9}, {
   3.864276419853499*^9, 3.864276444262329*^9}, 3.864286853987031*^9, 
   3.864312268584391*^9, 3.864312444627284*^9, 3.8643126484910307`*^9, 
   3.864312763725235*^9, {3.864312868911336*^9, 3.8643128850649652`*^9}, 
   3.864313297462576*^9, 3.864317640173773*^9, 3.864319289451891*^9, 
   3.864319341911989*^9, 3.8643194693321667`*^9, {3.8643195867080097`*^9, 
   3.864319604951889*^9}},
 CellLabel->
  "Out[652]=",ExpressionUUID->"15407a70-6e0d-4160-a510-347f2c33e184"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "x"}], ")"}], "4"]], "Output",
 CellChangeTimes->{{3.86427621846246*^9, 3.864276245125049*^9}, {
   3.864276419853499*^9, 3.864276444262329*^9}, 3.864286853987031*^9, 
   3.864312268584391*^9, 3.864312444627284*^9, 3.8643126484910307`*^9, 
   3.864312763725235*^9, {3.864312868911336*^9, 3.8643128850649652`*^9}, 
   3.864313297462576*^9, 3.864317640173773*^9, 3.864319289451891*^9, 
   3.864319341911989*^9, 3.8643194693321667`*^9, {3.8643195867080097`*^9, 
   3.864319604966217*^9}},
 CellLabel->
  "Out[653]=",ExpressionUUID->"f39fdfac-a661-4b19-98bc-02fa69994e9f"]
}, Open  ]],

Cell["\[Mu] should be such that -1+x divides the above numerator", "Text",
 CellChangeTimes->{{3.8642771359749947`*^9, 
  3.864277156949697*^9}},ExpressionUUID->"b24f096d-61b1-4c75-a038-\
7112e1c3fd04"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"muPlus", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PolynomialRemainder", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "2"], " ", "x"}], "+", 
           RowBox[{"2", " ", "A", " ", "H", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
            SqrtBox["\[Beta]"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[Lambda]", "2"]}], 
                 SuperscriptBox["H", "2"]]}]], "-", 
              RowBox[{"2", " ", "x", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"4", " ", "\[Beta]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "\[Gamma]"}], 
              "+", 
              RowBox[{"x", " ", "\[Epsilon]"}], "-", 
              RowBox[{
               SuperscriptBox["H", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", "\[Mu]", 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "x", "+", 
                 SqrtBox[
                  RowBox[{"1", "+", 
                   FractionBox[
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Lambda]", "2"]}], 
                    SuperscriptBox["H", "2"]]}]], "-", 
                 RowBox[{"x", " ", "\[Mu]"}]}], ")"}]}], "+", 
              RowBox[{"H", " ", "x", " ", 
               SqrtBox["\[Beta]"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 SqrtBox[
                  RowBox[{"1", "+", 
                   FractionBox[
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Lambda]", "2"]}], 
                    SuperscriptBox["H", "2"]]}]], "+", 
                 RowBox[{"2", " ", "x", " ", "\[Mu]"}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], ",", "x", ",", "x"}], "]"}], "==", "0"}], ",", 
      "\[Mu]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.8642764896009493`*^9, 3.864276567089525*^9}, {
   3.8642766664189796`*^9, 3.864276682947541*^9}, {3.864276958083522*^9, 
   3.864276974100775*^9}, {3.8642770336545763`*^9, 3.864277069237823*^9}, 
   3.864277164783778*^9, {3.8642868998673153`*^9, 3.864286933564728*^9}, {
   3.864312131851811*^9, 3.864312133268993*^9}, {3.8643122805726643`*^9, 
   3.86431232866*^9}, {3.864312901364444*^9, 3.864312936476317*^9}, {
   3.8643131849495573`*^9, 3.864313191041491*^9}, {3.8643133098870573`*^9, 
   3.8643133194317093`*^9}, {3.864317648225321*^9, 3.864317658506645*^9}, {
   3.8643193603356323`*^9, 3.864319388417686*^9}, {3.864319474523642*^9, 
   3.864319475005272*^9}},
 CellLabel->
  "In[641]:=",ExpressionUUID->"7927f046-4d09-4122-ac75-e8ac2cedfcb2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["A", 
    RowBox[{"2", " ", "H", " ", 
     SqrtBox["\[Beta]"]}]]}], "-", 
  FractionBox[
   RowBox[{"\[Gamma]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SqrtBox[
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"4", " ", 
          SuperscriptBox["\[Lambda]", "2"]}], 
         SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["\[Lambda]", "2"]}]]}]], "Output",
 CellChangeTimes->{
  3.864277165089775*^9, 3.864286937877316*^9, 3.864312340829945*^9, {
   3.8643129171184063`*^9, 3.864312938922553*^9}, 3.864313192078261*^9, 
   3.864313320569648*^9, 3.864317660725588*^9, 3.8643193889711847`*^9, 
   3.864319475431704*^9},
 CellLabel->
  "Out[641]=",ExpressionUUID->"b76e678f-a618-47c1-9d7b-a859d26d2215"]
}, Open  ]],

Cell["\<\
That is a great success. So now we can perform the change of variable \
explicitly.\
\>", "Text",
 CellChangeTimes->{{3.864277224998146*^9, 
  3.8642772574782133`*^9}},ExpressionUUID->"d482a27f-8f55-474c-9eed-\
f0f7df2dd7f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"A", " ", "z"}], " ", "+", 
   RowBox[{"\[Beta]", " ", 
    SuperscriptBox["z", "2"]}], "+", 
   FractionBox["\[Gamma]", "z"], "+", 
   FractionBox[
    SuperscriptBox["\[Lambda]", "2"], 
    SuperscriptBox["z", "2"]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq", "[", "\[Psi]_", "]"}], ":=", 
   RowBox[{"z", "\[Function]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "''"}], "[", "z", "]"}], "+", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Epsilon]", "-", 
        RowBox[{"V", "[", "z", "]"}]}], 
       RowBox[{
        SuperscriptBox["H", "2"], " "}]], 
      RowBox[{"\[Psi]", "[", "z", "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"z", "\[Function]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"H", " ", "z", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["A", 
            SuperscriptBox["H", "2"]], "+", 
           FractionBox[
            RowBox[{"z", " ", "\[Beta]"}], 
            SuperscriptBox["H", "2"]]}], ")"}]}], 
        RowBox[{"2", " ", 
         SqrtBox["\[Beta]"]}]]], " ", 
      SuperscriptBox["z", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SqrtBox[
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"4", " ", 
              SuperscriptBox["\[Lambda]", "2"]}], 
             SuperscriptBox["H", "2"]]}]]}], ")"}]}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "+", "1"}], ")"}], 
       RowBox[{
        RowBox[{"-", 
         FractionBox["A", 
          RowBox[{"2", " ", "H", " ", 
           SqrtBox["\[Beta]"]}]]}], "-", 
        FractionBox[
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"4", " ", 
                SuperscriptBox["\[Lambda]", "2"]}], 
               SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Lambda]", "2"]}]]}]]}]], 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"z", "\[Function]", " ", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"H", " ", "z", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["A", 
              SuperscriptBox["H", "2"]], "+", 
             FractionBox[
              RowBox[{"z", " ", "\[Beta]"}], 
              SuperscriptBox["H", "2"]]}], ")"}]}], 
          RowBox[{"2", " ", 
           SqrtBox["\[Beta]"]}]]], " ", 
        SuperscriptBox["z", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SqrtBox[
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"4", " ", 
                SuperscriptBox["\[Lambda]", "2"]}], 
               SuperscriptBox["H", "2"]]}]]}], ")"}]}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"z", "+", "1"}], ")"}], 
         RowBox[{
          RowBox[{"-", 
           FractionBox["A", 
            RowBox[{"2", " ", "H", " ", 
             SqrtBox["\[Beta]"]}]]}], "-", 
          FractionBox[
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"4", " ", 
                  SuperscriptBox["\[Lambda]", "2"]}], 
                 SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}]]}]], 
        RowBox[{"w", "[", "z", "]"}]}]}], "]"}], "[", "z", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3Plus", "[", "w_", "]"}], ":=", 
  RowBox[{"x", "\[Function]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"eq2Plus", "[", "w", "]"}], "[", "z", "]"}], "/.", 
       "\[VeryThinSpace]", 
       RowBox[{"w", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "[", 
           FractionBox["#1", 
            RowBox[{"#1", "+", "1"}]], "]"}], "&"}], ")"}]}]}], "/.", 
      "\[VeryThinSpace]", 
      RowBox[{"z", "\[Rule]", 
       FractionBox["x", 
        RowBox[{"1", "-", "x"}]]}]}], ")"}], "//", 
    "FullSimplify"}]}]}]}], "Input",
 CellChangeTimes->{{3.864035526701899*^9, 3.864035567764186*^9}, {
   3.86403565956774*^9, 3.864035667256592*^9}, {3.864115016484351*^9, 
   3.864115017418898*^9}, {3.8641152422780733`*^9, 3.864115267812194*^9}, {
   3.864115649334899*^9, 3.864115655364806*^9}, 3.864115695927232*^9, 
   3.864116018567485*^9, 3.864117086684123*^9, {3.8641181148079357`*^9, 
   3.864118115933967*^9}, {3.864118242001134*^9, 3.86411825792118*^9}, 
   3.8641990306553793`*^9, 3.8642010609833183`*^9, 3.86420237395303*^9, {
   3.864205586724691*^9, 3.864205587664859*^9}, 3.8642078236374598`*^9, {
   3.864208608819233*^9, 3.864208610930963*^9}, {3.864269777597616*^9, 
   3.864269777795177*^9}, {3.8642708672924137`*^9, 3.8642708773561974`*^9}, {
   3.8642754046018677`*^9, 3.864275412761997*^9}, {3.8642772909887466`*^9, 
   3.86427732148457*^9}, {3.864277363257691*^9, 3.8642773643954773`*^9}, 
   3.864286339687099*^9, {3.864286963090498*^9, 3.864286991152171*^9}, {
   3.864312401282723*^9, 3.8643124124651127`*^9}, {3.864313334376279*^9, 
   3.864313408970352*^9}, {3.864319499168584*^9, 3.864319523874175*^9}, {
   3.864319554027649*^9, 3.864319554560927*^9}},
 CellLabel->
  "In[654]:=",ExpressionUUID->"006ecdcd-d13d-4664-af5d-9f2bf60a65ca"],

Cell["\<\
The coefficients of the ODE are simple polynomials now. Let us extract and \
name the coefficients of those polynomials\
\>", "Text",
 CellChangeTimes->{{3.864274994666313*^9, 
  3.864275028944138*^9}},ExpressionUUID->"4378e718-5fa7-44a3-923b-\
b4427a176db8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "''"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "'"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Plus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{"w", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864277353595161*^9, 3.8642773853036823`*^9}, {
  3.864313419531303*^9, 3.864313425651647*^9}},
 CellLabel->
  "In[646]:=",ExpressionUUID->"4e42acb4-83b0-4c48-ae4d-0b7bdebd263f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "4"}], ",", "6", ",", 
   RowBox[{"-", "4"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.864317683945923*^9, 
   3.864319562561537*^9},
 CellLabel->
  "Out[646]=",ExpressionUUID->"9c6d51c4-a411-410b-8588-94fefd211e73"],

Cell[BoxData[
 TemplateBox[{
  "CoefficientList", "poly", 
   "\"\\!\\(\\*FractionBox[RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"4\\\"}], \\\
\" \\\", SuperscriptBox[\\\"H\\\", \\\"2\\\"], \\\" \\\", \\\"x\\\", \\\" \
\\\", \\\"\[Beta]\\\", \\\" \\\", \\\"\[Gamma]\\\", \\\" \\\", \
SuperscriptBox[\\\"\[Lambda]\\\", \\\"2\\\"]}], \\\"+\\\", \
RowBox[{\\\"12\\\", \\\" \\\", SuperscriptBox[\\\"H\\\", \\\"2\\\"], \\\" \
\\\", SuperscriptBox[\\\"x\\\", \\\"2\\\"], \\\" \\\", \\\"\[Beta]\\\", \\\" \
\\\", \\\"\[Gamma]\\\", \\\" \\\", SuperscriptBox[\\\"\[Lambda]\\\", \
\\\"2\\\"]}], \\\"-\\\", RowBox[{\\\"12\\\", \\\" \\\", \
SuperscriptBox[\\\"H\\\", \\\"2\\\"], \\\" \\\", SuperscriptBox[\\\"x\\\", \\\
\"3\\\"], \\\" \\\", \\\"\[Beta]\\\", \\\" \\\", \\\"\[Gamma]\\\", \\\" \\\", \
SuperscriptBox[\\\"\[Lambda]\\\", \\\"2\\\"]}], \\\"+\\\", RowBox[{\\\"4\\\", \
\\\" \\\", SuperscriptBox[\\\"H\\\", \\\"2\\\"], \\\" \\\", SuperscriptBox[\\\
\"x\\\", \\\"4\\\"], \\\" \\\", \\\"\[Beta]\\\", \\\" \\\", \\\"\[Gamma]\\\", \
\\\" \\\", SuperscriptBox[\\\"\[Lambda]\\\", \\\"2\\\"]}], \\\"+\\\", \
RowBox[{\\\"8\\\", \\\" \\\", \\\"A\\\", \\\" \\\", \\\"H\\\", \\\" \\\", \
SuperscriptBox[\\\"x\\\", \\\"2\\\"], \\\" \\\", SqrtBox[\\\"\[Beta]\\\"], \\\
\" \\\", SuperscriptBox[\\\"\[Lambda]\\\", \\\"4\\\"]}], \\\"-\\\", \
RowBox[{\\\"16\\\", \\\" \\\", \\\"A\\\", \\\" \\\", \\\"H\\\", \\\" \\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\" \
\\\", SqrtBox[\\\"\[Beta]\\\"], \\\" \\\", SuperscriptBox[\\\"\[Lambda]\\\", \
\\\"4\\\"]}], \\\"+\\\", RowBox[{\\\"8\\\", \\\" \\\", \\\"A\\\", \\\" \\\", \
\\\"H\\\", \\\" \\\", SuperscriptBox[\\\"x\\\", \\\"4\\\"], \\\" \\\", \
SqrtBox[\\\"\[Beta]\\\"], \\\" \\\", SuperscriptBox[\\\"\[Lambda]\\\", \
\\\"4\\\"]}], \\\"+\\\", RowBox[{\\\"8\\\", \\\" \\\", SuperscriptBox[\\\"H\\\
\", \\\"2\\\"], \\\" \\\", \\\"\[Beta]\\\", \\\" \\\", SuperscriptBox[\\\"\
\[Lambda]\\\", \\\"4\\\"]}], \\\"-\\\", RowBox[{\\\"40\\\", \\\" \\\", \
SuperscriptBox[\\\"H\\\", \\\"2\\\"], \\\" \\\", \\\"x\\\", \\\" \\\", \\\"\
\[Beta]\\\", \\\" \\\", SuperscriptBox[\\\"\[Lambda]\\\", \\\"4\\\"]}], \\\"+\
\\\", RowBox[{\\\"72\\\", \\\" \\\", SuperscriptBox[\\\"H\\\", \\\"2\\\"], \\\
\" \\\", SuperscriptBox[\\\"x\\\", \\\"2\\\"], \\\" \\\", \\\"\[Beta]\\\", \\\
\" \\\", SuperscriptBox[\\\"\[Lambda]\\\", \\\"4\\\"]}], \\\"+\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"12\\\", \\\"\[RightSkeleton]\\\"}]}], \
RowBox[{\\\"8\\\", \\\" \\\", SuperscriptBox[\\\"H\\\", \\\"2\\\"], \\\" \
\\\", \\\"x\\\", \\\" \\\", \\\"\[Beta]\\\", \\\" \\\", SuperscriptBox[\\\"\
\[Lambda]\\\", \\\"4\\\"]}]]\\) is not a polynomial.\"", 2, 647, 18, 
   32766809435337214103, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8643195625723543`*^9},
 CellLabel->
  "During evaluation of \
In[646]:=",ExpressionUUID->"3b4cefc0-2312-41c9-a198-09e5136aa7af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "5"}], "+", 
    RowBox[{"3", " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"4", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], 
        SuperscriptBox["H", "2"]]}]]}], "+", 
    FractionBox[
     RowBox[{"1", "-", 
      SqrtBox[
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"4", " ", 
          SuperscriptBox["\[Lambda]", "2"]}], 
         SuperscriptBox["H", "2"]]}]]}], "x"], "-", 
    FractionBox[
     RowBox[{"\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], 
           SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
   RowBox[{"9", "+", 
    FractionBox[
     RowBox[{"A", "+", 
      RowBox[{"2", " ", "\[Beta]"}]}], 
     RowBox[{"H", " ", 
      SqrtBox["\[Beta]"]}]], "-", 
    RowBox[{"3", " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"4", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], 
        SuperscriptBox["H", "2"]]}]]}], "+", 
    FractionBox[
     RowBox[{"3", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], 
           SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
   RowBox[{
    RowBox[{"-", "7"}], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"A", "+", "\[Beta]"}], ")"}]}], 
     RowBox[{"H", " ", 
      SqrtBox["\[Beta]"]}]], "+", 
    SqrtBox[
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], 
       SuperscriptBox["H", "2"]]}]], "-", 
    FractionBox[
     RowBox[{"3", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], 
           SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
   RowBox[{
    FractionBox["A", 
     RowBox[{"H", " ", 
      SqrtBox["\[Beta]"]}]], "+", 
    FractionBox[
     RowBox[{"\[Gamma]", "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"\[Gamma]", " ", 
       SqrtBox[
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"4", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], 
          SuperscriptBox["H", "2"]]}]]}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.864317683945923*^9, 
   3.864319563411892*^9},
 CellLabel->
  "Out[647]=",ExpressionUUID->"e857fd52-b352-42a5-bf3d-a833236e390d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", "\[Gamma]"}], "+", "\[Epsilon]"}], 
     SuperscriptBox["H", "2"]], "+", 
    FractionBox[
     SuperscriptBox["\[Gamma]", "2"], 
     RowBox[{"4", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "2"]}]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", "+", 
        RowBox[{"2", " ", "\[Beta]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], 
           SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
     RowBox[{"2", " ", "H", " ", 
      SqrtBox["\[Beta]"]}]], "+", 
    FractionBox[
     RowBox[{"\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{"\[Gamma]", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Lambda]", "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], 
           SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Lambda]", "4"]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "A"}], "+", 
      RowBox[{"\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         FractionBox["\[Gamma]", 
          SuperscriptBox["\[Lambda]", "2"]]}], ")"}]}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"]}]], "-", 
    FractionBox[
     RowBox[{"\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{"\[Gamma]", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Lambda]", "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], 
           SuperscriptBox["H", "2"]]}]]}], ")"}]}], 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Lambda]", "4"]}]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "A", " ", 
       SuperscriptBox["\[Lambda]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"4", " ", 
             SuperscriptBox["\[Lambda]", "2"]}], 
            SuperscriptBox["H", "2"]]}]]}], ")"}]}], "+", 
      RowBox[{"A", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"4", " ", 
             SuperscriptBox["\[Lambda]", "2"]}], 
            SuperscriptBox["H", "2"]]}]]}], ")"}]}], "+", 
      RowBox[{"2", " ", "\[Beta]", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"4", " ", 
             SuperscriptBox["\[Lambda]", "2"]}], 
            SuperscriptBox["H", "2"]]}]]}], ")"}]}]}], 
     RowBox[{"4", " ", "H", " ", 
      SqrtBox["\[Beta]"], " ", 
      SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox["\[Lambda]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["A", "2"], " ", 
         SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["H", "2"], " ", "\[Beta]", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{"\[Gamma]", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Lambda]", "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"4", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], 
           SuperscriptBox["H", "2"]]}]]}], ")"}]}], "+", 
     RowBox[{"2", " ", "A", " ", "H", " ", 
      SqrtBox["\[Beta]"], " ", 
      SuperscriptBox["\[Lambda]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"\[Gamma]", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"\[Gamma]", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"4", " ", 
             SuperscriptBox["\[Lambda]", "2"]}], 
            SuperscriptBox["H", "2"]]}]]}]}], ")"}]}]}], 
    RowBox[{"8", " ", 
     SuperscriptBox["H", "2"], " ", "\[Beta]", " ", 
     SuperscriptBox["\[Lambda]", "4"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, 3.8643134297903137`*^9, 3.864317683945923*^9, 
   3.8643195644107533`*^9},
 CellLabel->
  "Out[648]=",ExpressionUUID->"6e511d4e-d327-475a-870b-3e5d52c13fe5"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"2", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"32", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "-", 
     RowBox[{"4", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "+", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"3", " ", 
       SuperscriptBox["\[Gamma]", "3"]}], "-", 
      RowBox[{"2", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "A"}], "+", "\[Beta]", "-", "\[Gamma]"}], ")"}], 
       " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"96", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "+", 
      RowBox[{"16", " ", 
       SuperscriptBox["\[Lambda]", "6"]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "-", 
     RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Lambda]", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"A", "+", 
        RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"256", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "6"], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "A"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "+", 
      RowBox[{"48", " ", "H", " ", 
       SuperscriptBox["\[Gamma]", "3"], " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "-", 
      RowBox[{"32", " ", 
       RowBox[{"(", 
        RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "6"]}], "-", 
      RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "7"]}], "+", 
      RowBox[{"64", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", "+", "\[Beta]"}], ")"}], "2"], " ", 
       SuperscriptBox["\[Lambda]", "8"]}], "+", 
      RowBox[{"128", " ", "H", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "A"}], "+", 
         RowBox[{"2", " ", "\[Beta]"}], "-", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "9"]}], "+", 
      RowBox[{"256", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"A", "+", "\[Beta]", "-", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "4"]}], "+", 
        RowBox[{"32", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}], "+", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Lambda]", "6"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Lambda]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"A", "+", 
           RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"128", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]]}]}], ";", 
  RowBox[{"l", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}], " ", 
     
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8642697470308247`*^9, 3.8642697719328527`*^9}, {
   3.8642698050613003`*^9, 3.864269809694182*^9}, {3.864269920748795*^9, 
   3.864269997090382*^9}, 3.864270965722127*^9, {3.864277396585041*^9, 
   3.8642774445072193`*^9}, {3.864287010818693*^9, 3.864287054480163*^9}},
 CellLabel->
  "In[528]:=",ExpressionUUID->"7a3c3ce1-e79b-4a2f-bb9b-2f7f38211c4d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "''"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"w", "'"}], "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eq3Minus", "[", "w", "]"}], "[", "x", "]"}], ",", 
      RowBox[{"w", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.864277353595161*^9, 3.8642773853036823`*^9}, {
  3.864313419531303*^9, 3.864313454870009*^9}},
 CellLabel->
  "In[514]:=",ExpressionUUID->"05c08959-3e82-4f5b-963a-a0b8d880861b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "4"}], ",", "6", ",", 
   RowBox[{"-", "4"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.864317698224139*^9},
 CellLabel->
  "Out[514]=",ExpressionUUID->"0b9c22e1-6e50-4f25-97dc-2567c2896809"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"32", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "-", 
     RowBox[{"4", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "+", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "-", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], 
       ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}], "-", 
     RowBox[{"16", " ", 
      SuperscriptBox["\[Lambda]", "6"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[Lambda]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"A", "-", 
         RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.864317698288124*^9},
 CellLabel->
  "Out[515]=",ExpressionUUID->"1635626f-bedc-4009-8ea2-8cce032b33d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"256", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "6"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Beta]", "2"]}], "-", 
         RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "A"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "-", 
      RowBox[{"48", " ", "H", " ", 
       SuperscriptBox["\[Gamma]", "3"], " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "-", 
      RowBox[{"32", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "A"}], "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "6"]}], "-", 
      RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "7"]}], "+", 
      RowBox[{"64", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", "-", "\[Beta]"}], ")"}], "2"], " ", 
       SuperscriptBox["\[Lambda]", "8"]}], "+", 
      RowBox[{"128", " ", "H", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "A"}], "+", 
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "9"]}], "+", 
      RowBox[{"256", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]}], ")"}]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "+", 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
         " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], ")"}], " ", 
         
         SuperscriptBox["\[Lambda]", "4"]}], "-", 
        RowBox[{"32", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Lambda]", "6"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Lambda]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"A", "-", 
           RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"128", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}], " ", 
     
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.864277357269302*^9, 3.864277386088471*^9}, 
   3.86428699812247*^9, {3.8643134297903137`*^9, 3.864313459150901*^9}, 
   3.864317698459565*^9},
 CellLabel->
  "Out[516]=",ExpressionUUID->"ba5242d8-8adb-4011-b0af-9ab20a871547"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bb", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dd", "=", 
   RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ee", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ff", "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Gamma]", "3"], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"32", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gg", "=", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "-", 
     RowBox[{"4", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "+", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hh", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["\[Gamma]", "3"]}], "+", 
     RowBox[{"2", " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
      
      SuperscriptBox["\[Lambda]", "2"]}], "-", 
     RowBox[{"8", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], 
       ")"}], " ", 
      SuperscriptBox["\[Lambda]", "4"]}], "-", 
     RowBox[{"96", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}], "-", 
     RowBox[{"16", " ", 
      SuperscriptBox["\[Lambda]", "6"]}]}], 
    RowBox[{"8", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ii", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "3"], "-", 
      RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[Lambda]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"A", "-", 
         RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
     RowBox[{"8", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "5"]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jj", "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"256", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", "6"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Beta]", "2"]}], "-", 
         RowBox[{"8", " ", "\[Beta]", " ", "\[Gamma]"}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "A"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "4"]}], "-", 
      RowBox[{"48", " ", "H", " ", 
       SuperscriptBox["\[Gamma]", "3"], " ", 
       SuperscriptBox["\[Lambda]", "5"]}], "-", 
      RowBox[{"32", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "A"}], "+", "\[Beta]"}], ")"}], " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "6"]}], "-", 
      RowBox[{"64", " ", "H", " ", "\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "7"]}], "+", 
      RowBox[{"64", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"A", "-", "\[Beta]"}], ")"}], "2"], " ", 
       SuperscriptBox["\[Lambda]", "8"]}], "+", 
      RowBox[{"128", " ", "H", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "A"}], "+", 
         RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "9"]}], "+", 
      RowBox[{"256", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["H", "2"]}], "+", "\[Epsilon]"}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "10"]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kk", "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "+", 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
         " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "A"}], "+", "\[Beta]", "+", "\[Gamma]"}], ")"}], " ", 
         
         SuperscriptBox["\[Lambda]", "4"]}], "-", 
        RowBox[{"32", " ", "H", " ", 
         SuperscriptBox["\[Lambda]", "5"]}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Lambda]", "6"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "3"], "-", 
        RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Lambda]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"A", "-", 
           RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"128", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox["\[Lambda]", "10"]}]]}]}], ";", 
  RowBox[{"ll", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"4", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}], " ", 
     
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"256", " ", 
     SuperscriptBox["H", "2"], " ", 
     SuperscriptBox["\[Lambda]", "10"]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8642697470308247`*^9, 3.8642697719328527`*^9}, {
   3.8642698050613003`*^9, 3.864269809694182*^9}, {3.864269920748795*^9, 
   3.864269997090382*^9}, 3.864270965722127*^9, {3.864277396585041*^9, 
   3.8642774445072193`*^9}, {3.864287010818693*^9, 3.864287054480163*^9}, {
   3.864313470139778*^9, 3.864313555327423*^9}},
 CellLabel->
  "In[539]:=",ExpressionUUID->"4e09a1ba-6dae-4d5a-a830-866e964c0cb8"],

Cell[TextData[{
 "Ansatz for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"w", 
     RowBox[{"(", "x", ")"}]}], "=", 
    RowBox[{"\[Sum]", 
     RowBox[{
      SubscriptBox["\[Alpha]", "n"], 
      SuperscriptBox["x", "n"]}]}]}], TraditionalForm]],ExpressionUUID->
  "9d1ed62a-fc8a-458c-b784-9b21a9919ac7"],
 ", we get the following difference equations, exactly the same as in the \
previous section because it is for generic coefficients abcdefghijkl"
}], "Text",
 CellChangeTimes->{{3.8642750419140577`*^9, 3.864275053063743*^9}, {
  3.864275110366568*^9, 3.8642751370634737`*^9}, {3.864277463032014*^9, 
  3.864277495417461*^9}},ExpressionUUID->"2c445f2c-479c-476b-831c-\
d9abe72381eb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"diffEqPlus", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"n", "+", "2"}], ")"}], "a", " ", 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "+", "2"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "b"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "f"}]}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "+", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "n", " ", "c"}], "+", 
      RowBox[{"n", " ", "g"}], "+", "j"}], ")"}], 
    SubscriptBox["\[Alpha]", "n"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "d"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "h"}], "+", "k"}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "-", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "3"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "e"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "i"}], "+", "l"}], ")"}], 
    SubscriptBox["\[Alpha]", 
     RowBox[{"n", "-", "2"}]]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffEqMinus", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"n", "+", "2"}], ")"}], "aa", " ", 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "+", "2"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "bb"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "ff"}]}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "+", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "n", " ", "cc"}], "+", 
      RowBox[{"n", " ", "gg"}], "+", "jj"}], ")"}], 
    SubscriptBox["\[Delta]", "n"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "dd"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "hh"}], "+", "kk"}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "-", "1"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "3"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "ee"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "2"}], ")"}], "ii"}], "+", "ll"}], ")"}], 
    SubscriptBox["\[Delta]", 
     RowBox[{"n", "-", "2"}]]}]}]}]}], "Input",
 CellChangeTimes->{{3.864270018911315*^9, 3.8642702462416697`*^9}, {
  3.8642705156994133`*^9, 3.8642705159562902`*^9}, {3.864313518020338*^9, 
  3.864313519482671*^9}, {3.864313560863084*^9, 3.864313611425284*^9}},
 CellLabel->
  "In[550]:=",ExpressionUUID->"7f890f63-1d8e-498f-8a62-22a495462599"],

Cell[TextData[{
 "Now we need to generalize the choice of initial conditions C0 and C1 in \
order to be able to extract the even level energy spectrum, and in particular \
the ground state energy.\nLet us recall that for the previous potential (\
\[Gamma]->0, \[Beta]->1), we had C0=1 and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C1", "=", 
    RowBox[{"1", "+", 
     FractionBox["1", 
      RowBox[{"2", "\[Lambda]"}]]}]}], TraditionalForm]],ExpressionUUID->
  "2c033307-e18a-419d-9b62-6716aaf71dea"],
 "."
}], "Text",
 CellChangeTimes->{{3.864275145180252*^9, 3.864275191066702*^9}, {
  3.864277514040395*^9, 3.86427757220188*^9}, {3.8642777223928633`*^9, 
  3.8642778004261217`*^9}, {3.8642862975920963`*^9, 
  3.864286314556131*^9}},ExpressionUUID->"db867459-695c-4c29-8dde-\
885be7c32dd6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"psiPlus", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"z", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "+", 
         RowBox[{"6", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Beta]"}], "+", 
            RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["z", "2"], " ", 
          SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
      RowBox[{"24", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "3"]}]]}], "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"z", "+", "1"}], ")"}], 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]]}]], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Alpha]", "0"], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], 
      FractionBox["z", 
       RowBox[{"z", "+", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[Alpha]", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["z", 
         RowBox[{"z", "+", "1"}]], ")"}], "2"]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psiMinus", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Exp", "[", 
    FractionBox[
     RowBox[{"z", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{"6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Beta]"}], "+", 
           RowBox[{"z", " ", "\[Gamma]"}]}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["z", "2"], " ", 
         SuperscriptBox["\[Lambda]", "4"]}]}], ")"}]}], 
     RowBox[{"24", " ", "H", " ", 
      SuperscriptBox["\[Lambda]", "3"]}]], "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "z"}], "+", "1"}], ")"}], 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[Gamma]", "3"]}], "+", 
       RowBox[{"4", " ", "\[Beta]", " ", "\[Gamma]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Lambda]", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "A"}], "+", 
          RowBox[{"2", " ", "H", " ", "\[Lambda]"}]}], ")"}]}]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]]}]], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Delta]", "0"], "+", 
     RowBox[{
      SubscriptBox["\[Delta]", "1"], 
      FractionBox[
       RowBox[{"-", "z"}], 
       RowBox[{
        RowBox[{"-", "z"}], "+", "1"}]]}], "+", 
     RowBox[{
      SubscriptBox["\[Delta]", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"-", "z"}], 
         RowBox[{
          RowBox[{"-", "z"}], "+", "1"}]], ")"}], "2"]}]}], 
    ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.864286324723585*^9, 3.864286433353557*^9}, {
   3.8642889704779167`*^9, 3.8642890116523952`*^9}, 3.8642890470751457`*^9, {
   3.864289083251052*^9, 3.86428912995544*^9}, {3.864289237638175*^9, 
   3.864289254868375*^9}, {3.864313707915181*^9, 3.864313713541687*^9}, {
   3.864313881883119*^9, 3.864313887220744*^9}, {3.864317721805814*^9, 
   3.864317725550482*^9}},
 CellLabel->
  "In[552]:=",ExpressionUUID->"143c6dc9-d9de-4bae-ae3a-de2e07f1f621"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"psiPlus", "'"}], "[", "0", "]"}], "/.", "rule"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"psiMinus", "'"}], "[", "0", "]"}], "/.", "rule"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.8642864434371567`*^9, 3.864286462633073*^9}, {
  3.864289139123407*^9, 3.864289156917902*^9}, {3.864289223876636*^9, 
  3.864289228321069*^9}},
 CellLabel->
  "In[554]:=",ExpressionUUID->"0e378861-682c-4fbd-bb39-e1ec7a55e903"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "A", "+", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
     SubscriptBox["\[Alpha]", "0"]}], 
    RowBox[{"2", " ", "\[Lambda]"}]]}], "+", 
  SubscriptBox["\[Alpha]", "1"]}]], "Output",
 CellChangeTimes->{{3.864286450123785*^9, 3.8642864630254097`*^9}, 
   3.864287064388155*^9, {3.864289140413212*^9, 3.864289159117506*^9}, {
   3.8642892288595867`*^9, 3.864289258649302*^9}, 3.86431389030669*^9, 
   3.864317732172204*^9},
 CellLabel->
  "Out[554]=",ExpressionUUID->"406df5ac-2de8-495c-ad14-01a281b75b7a"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "A", "+", 
      RowBox[{"2", " ", "\[Lambda]"}]}], ")"}], " ", 
    SubscriptBox["\[Delta]", "0"]}], 
   RowBox[{"2", " ", "\[Lambda]"}]], "-", 
  SubscriptBox["\[Delta]", "1"]}]], "Output",
 CellChangeTimes->{{3.864286450123785*^9, 3.8642864630254097`*^9}, 
   3.864287064388155*^9, {3.864289140413212*^9, 3.864289159117506*^9}, {
   3.8642892288595867`*^9, 3.864289258649302*^9}, 3.86431389030669*^9, 
   3.8643177321781797`*^9},
 CellLabel->
  "Out[555]=",ExpressionUUID->"cb004738-d450-4654-9f78-51f956191e5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"psiPlus", "'"}], "[", "0", "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"psiMinus", "'"}], "[", "0", "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.86428941613244*^9, 3.864289417586679*^9}},
 CellLabel->
  "In[556]:=",ExpressionUUID->"44b3a7e1-1600-4274-beb0-d117bb22dc24"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "-", 
       RowBox[{"2", " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "4"]}], "+", 
       RowBox[{"16", " ", "H", " ", 
        SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
     SubscriptBox["\[Alpha]", "0"]}], 
    RowBox[{"16", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], "+", 
  SubscriptBox["\[Alpha]", "1"]}]], "Output",
 CellChangeTimes->{3.864289418474496*^9, 3.864317827419479*^9},
 CellLabel->
  "Out[556]=",ExpressionUUID->"c2d00c03-e567-4970-84f0-96f7f82050cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", "3"], "+", 
       RowBox[{"2", " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
        " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "4"]}], "-", 
       RowBox[{"16", " ", "H", " ", 
        SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
     SubscriptBox["\[Delta]", "0"]}], 
    RowBox[{"16", " ", "H", " ", 
     SuperscriptBox["\[Lambda]", "5"]}]]}], "-", 
  SubscriptBox["\[Delta]", "1"]}]], "Output",
 CellChangeTimes->{3.864289418474496*^9, 3.864317827477714*^9},
 CellLabel->
  "Out[557]=",ExpressionUUID->"1063ebf8-d867-4feb-81e5-c9f0901f570c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"C0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"C1", "=", 
   RowBox[{"S", "+", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Gamma]", "3"], "-", 
         RowBox[{"2", " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          RowBox[{"(", 
           RowBox[{"A", "+", "\[Beta]"}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "4"]}], "+", 
         RowBox[{"16", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
       SubscriptBox["\[Alpha]", "0"]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]], "C0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CC0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CC1", "=", 
   RowBox[{
    RowBox[{"-", "S"}], "-", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Gamma]", "3"], "+", 
         RowBox[{"2", " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "\[Beta]"}], "+", "\[Gamma]"}], ")"}], 
          " ", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         RowBox[{"8", " ", 
          RowBox[{"(", 
           RowBox[{"A", "-", "\[Beta]"}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "4"]}], "-", 
         RowBox[{"16", " ", "H", " ", 
          SuperscriptBox["\[Lambda]", "5"]}]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "0"]}], 
      RowBox[{"16", " ", "H", " ", 
       SuperscriptBox["\[Lambda]", "5"]}]], "CC0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialEqPlus", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Alpha]", "0"], "-", "C0"}], ",", 
     RowBox[{
      SubscriptBox["\[Alpha]", "1"], "-", "C1"}], ",", 
     RowBox[{
      RowBox[{"2", "a", " ", 
       SubscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"f", " ", 
       SubscriptBox["\[Alpha]", "1"]}], "+", 
      RowBox[{"j", " ", 
       SubscriptBox["\[Alpha]", "0"]}]}], ",", 
     RowBox[{
      RowBox[{"6", "a", " ", 
       SubscriptBox["\[Alpha]", "3"]}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"b", "+", "f"}], ")"}], 
       SubscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"g", "+", "j"}], ")"}], 
       SubscriptBox["\[Alpha]", "1"]}], "+", 
      RowBox[{"k", " ", 
       SubscriptBox["\[Alpha]", "0"]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialEqMinus", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Delta]", "0"], "-", "CC0"}], ",", 
     RowBox[{
      SubscriptBox["\[Delta]", "1"], "-", "CC1"}], ",", 
     RowBox[{
      RowBox[{"2", "aa", " ", 
       SubscriptBox["\[Delta]", "2"]}], "+", 
      RowBox[{"ff", " ", 
       SubscriptBox["\[Delta]", "1"]}], "+", 
      RowBox[{"jj", " ", 
       SubscriptBox["\[Delta]", "0"]}]}], ",", 
     RowBox[{
      RowBox[{"6", "aa", " ", 
       SubscriptBox["\[Delta]", "3"]}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"bb", "+", "ff"}], ")"}], 
       SubscriptBox["\[Delta]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"gg", "+", "jj"}], ")"}], 
       SubscriptBox["\[Delta]", "1"]}], "+", 
      RowBox[{"kk", " ", 
       SubscriptBox["\[Delta]", "0"]}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.864270380769575*^9, 3.864270544385949*^9}, {
  3.864270681732925*^9, 3.8642707092690983`*^9}, {3.864277584361083*^9, 
  3.864277623001809*^9}, {3.864277788826624*^9, 3.864277805818914*^9}, {
  3.8643148390180197`*^9, 3.864314996387719*^9}, {3.864315370805738*^9, 
  3.864315370870441*^9}, {3.8643154226625013`*^9, 3.864315422935775*^9}, {
  3.8643161033803577`*^9, 3.8643161147858477`*^9}, {3.864316764706365*^9, 
  3.864316769043502*^9}, {3.864316802577961*^9, 3.864316820537896*^9}, {
  3.8643179116870728`*^9, 3.864317931324974*^9}},
 CellLabel->
  "In[558]:=",ExpressionUUID->"c8edbfc1-1116-4580-ac63-3191194bca8f"],

Cell["\<\
We solve for the coefficients of the series expansion for a large value of n\
\>", "Text",
 CellChangeTimes->{{3.8642751963474607`*^9, 
  3.8642752191768208`*^9}},ExpressionUUID->"a9f6db18-bbb2-4f0d-a9c7-\
535f83784f64"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nmax", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]largePlus", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"initialEqPlus", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"diffEqPlus", "[", "n", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "2", ",", 
              RowBox[{"Nmax", "-", "2"}]}], "}"}]}], "]"}]}], "]"}], "==", 
        "0"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["\[Alpha]", "m"], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"Nmax", "+", "1"}], ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]largeMinus", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"initialEqMinus", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"diffEqMinus", "[", "n", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "2", ",", 
              RowBox[{"Nmax", "-", "2"}]}], "}"}]}], "]"}]}], "]"}], "==", 
        "0"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        SubscriptBox["\[Delta]", "m"], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "Nmax"}], "}"}]}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"Nmax", "+", "1"}], ",", "2"}], "]"}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.8642703216466703`*^9, 3.864270374397962*^9}, {
  3.8642705513296633`*^9, 3.8642705574736023`*^9}, {3.8642706051077547`*^9, 
  3.864270674659809*^9}, {3.864270719493314*^9, 3.864270843494506*^9}, {
  3.864270983647256*^9, 3.864270983916497*^9}, {3.864271384077087*^9, 
  3.864271391467572*^9}, {3.864271456796391*^9, 3.864271566285283*^9}, {
  3.864272670480879*^9, 3.8642726706307497`*^9}, {3.8643150041381397`*^9, 
  3.864315039287624*^9}, {3.8643152147129307`*^9, 3.864315217142314*^9}, {
  3.8643153954184837`*^9, 3.8643153955802298`*^9}, {3.864316807467794*^9, 
  3.8643168351853743`*^9}},
 CellLabel->
  "In[564]:=",ExpressionUUID->"35a3e64e-4f55-49b1-8845-b704e4c21d66"],

Cell["Check that we recover the result for the simpler potential", "Text",
 CellChangeTimes->{{3.864275243849395*^9, 3.864275278617496*^9}, {
  3.864317968659535*^9, 
  3.864317980809977*^9}},ExpressionUUID->"bd578c7f-4e42-4fe4-93ff-\
abcbd5a4b793"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Alpha]largePlus", ",", "\[Alpha]largeMinus"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", "->", "1"}], ",", 
      RowBox[{"A", "->", "1.0"}], ",", 
      RowBox[{"\[Gamma]", "->", "0"}], ",", 
      RowBox[{"H", "->", "1"}], ",", 
      RowBox[{"\[Beta]", "->", "1"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", 
       RowBox[{"-", "10"}]}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.864272516042613*^9, 3.864272581235248*^9}, {
   3.864272630956184*^9, 3.864272652997024*^9}, {3.8643152302549*^9, 
   3.864315334743429*^9}, {3.864315388282217*^9, 3.864315388370914*^9}, {
   3.864315478660943*^9, 3.864315500630616*^9}, {3.8643161278235292`*^9, 
   3.8643161552456636`*^9}, {3.864316829844284*^9, 3.864316829982398*^9}, {
   3.864317021269602*^9, 3.864317096679879*^9}, {3.864317220413212*^9, 
   3.864317231961761*^9}, 3.864317298780168*^9, {3.864317334566575*^9, 
   3.864317342387321*^9}, {3.864318011281124*^9, 3.864318026607298*^9}},
 CellLabel->
  "In[567]:=",ExpressionUUID->"428f7fa5-6680-429f-8578-cb7df7398016"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Epsilon]", "\[Rule]", "1.2992147129802167`"}], ",", 
   RowBox[{"S", "\[Rule]", 
    RowBox[{"-", "0.3187155117719456`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864272582474341*^9, 3.864272653692486*^9}, 
   3.8642727233006563`*^9, {3.864315296586309*^9, 3.864315344630843*^9}, {
   3.864315378405192*^9, 3.864315417696125*^9}, {3.864315457418236*^9, 
   3.864315501130307*^9}, {3.864316143990018*^9, 3.864316155816534*^9}, {
   3.864316791724887*^9, 3.8643168537145967`*^9}, {3.8643170232770653`*^9, 
   3.864317097691369*^9}, {3.86431722205857*^9, 3.864317232530428*^9}, 
   3.864317299287344*^9, {3.864317335018508*^9, 3.8643173428797483`*^9}, 
   3.86431806306894*^9},
 CellLabel->
  "Out[567]=",ExpressionUUID->"9f8f45b5-f5f3-4df2-b2c5-077d628421b3"]
}, Open  ]],

Cell["The new result", "Text",
 CellChangeTimes->{{3.86431798915965*^9, 
  3.864317991930902*^9}},ExpressionUUID->"73c265c7-aa0d-4caa-b50a-\
cd53a381bd00"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Alpha]largePlus", ",", "\[Alpha]largeMinus"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", "->", "1"}], ",", 
      RowBox[{"A", "->", "1.0"}], ",", 
      RowBox[{"\[Gamma]", "->", "1"}], ",", 
      RowBox[{"H", "->", "1"}], ",", 
      RowBox[{"\[Beta]", "->", "1"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", 
       RowBox[{"-", "10"}]}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.864272516042613*^9, 3.864272581235248*^9}, {
   3.864272630956184*^9, 3.864272652997024*^9}, {3.8643152302549*^9, 
   3.864315334743429*^9}, {3.864315388282217*^9, 3.864315388370914*^9}, {
   3.864315478660943*^9, 3.864315500630616*^9}, {3.8643161278235292`*^9, 
   3.8643161552456636`*^9}, {3.864316829844284*^9, 3.864316829982398*^9}, {
   3.864317021269602*^9, 3.864317096679879*^9}, {3.864317220413212*^9, 
   3.864317231961761*^9}, 3.864317298780168*^9, {3.864317334566575*^9, 
   3.864317342387321*^9}, {3.8643181174813232`*^9, 3.864318128884192*^9}},
 CellLabel->
  "In[568]:=",ExpressionUUID->"0b1e0bbe-f251-41a1-ac7b-cf00280f5f55"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Epsilon]", "\[Rule]", "1.0341313847228892`"}], ",", 
   RowBox[{"S", "\[Rule]", 
    RowBox[{"-", "0.5354056512475651`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864272582474341*^9, 3.864272653692486*^9}, 
   3.8642727233006563`*^9, {3.864315296586309*^9, 3.864315344630843*^9}, {
   3.864315378405192*^9, 3.864315417696125*^9}, {3.864315457418236*^9, 
   3.864315501130307*^9}, {3.864316143990018*^9, 3.864316155816534*^9}, {
   3.864316791724887*^9, 3.8643168537145967`*^9}, {3.8643170232770653`*^9, 
   3.864317097691369*^9}, {3.86431722205857*^9, 3.864317232530428*^9}, 
   3.864317299287344*^9, {3.864317335018508*^9, 3.8643173428797483`*^9}, 
   3.86431816332311*^9},
 CellLabel->
  "Out[568]=",ExpressionUUID->"d3340de5-343b-40d3-a81a-51ee041b8c3f"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1920, 1016},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules->Association["TryRealOnly" -> False],
Magnification:>1.15 Inherited,
FrontEndVersion->"12.3 for Linux x86 (64-bit) (July 9, 2021)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"311bef3e-5d55-4f9c-9dcb-8ee559cc70b5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 291, 4, 110, "Title",ExpressionUUID->"fe2360b0-62b6-4776-80a3-16c5f3914b5b"],
Cell[CellGroupData[{
Cell[896, 30, 235, 3, 52, "Code",ExpressionUUID->"2cf9f381-7be1-4d17-9079-360bae585fc9"],
Cell[1134, 35, 1032, 15, 27, "Print",ExpressionUUID->"261962aa-40c0-4edc-bb47-2e47c12195b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2203, 55, 270, 6, 79, "Section",ExpressionUUID->"06d2419f-fbb3-475c-be33-6fea5e17123c"],
Cell[CellGroupData[{
Cell[2498, 65, 412, 7, 40, "Subsection",ExpressionUUID->"4fb6a8ac-24b6-40b0-aa29-01e36afe4b6c"],
Cell[2913, 74, 193, 3, 38, "Text",ExpressionUUID->"af6e7ac7-8506-4f8b-978a-df0eb900375e"],
Cell[3109, 79, 1462, 32, 69, "Input",ExpressionUUID->"84e93e8d-6a83-4b8e-8587-8a32b94ff6d3"],
Cell[4574, 113, 618, 15, 89, "Text",ExpressionUUID->"1ddbe78d-48e3-4e46-9a06-2777ad0b30e4"],
Cell[5195, 130, 2295, 57, 84, "Input",ExpressionUUID->"d74e46a9-fda7-4591-8646-42e8c414633f"],
Cell[CellGroupData[{
Cell[7515, 191, 904, 27, 92, "Input",ExpressionUUID->"1de40967-077e-4c16-8cf0-3579c64ced88"],
Cell[8422, 220, 1730, 44, 72, "Output",ExpressionUUID->"fb0912a7-c9d2-401d-8a91-22b451992e79"],
Cell[10155, 266, 1169, 25, 67, "Output",ExpressionUUID->"baaaeb62-ab7c-4a3e-b552-8adf01fdfb09"],
Cell[11327, 293, 799, 13, 45, "Output",ExpressionUUID->"6edb00ea-1ab0-49eb-a003-241152284807"]
}, Open  ]],
Cell[12141, 309, 218, 5, 38, "Text",ExpressionUUID->"0958cbc1-8933-45d5-973f-60968a48490a"],
Cell[CellGroupData[{
Cell[12384, 318, 447, 12, 61, "Input",ExpressionUUID->"98d15196-f75a-4bc5-8886-1e7a98d79a02"],
Cell[12834, 332, 418, 11, 59, "Output",ExpressionUUID->"164f90da-6785-49e8-a000-424c4b537be2"]
}, Open  ]],
Cell[13267, 346, 928, 26, 62, "Input",ExpressionUUID->"38a8245a-412c-48d8-91d3-00ef68dc20ed"],
Cell[CellGroupData[{
Cell[14220, 376, 1306, 35, 92, "Input",ExpressionUUID->"ae35ea29-c65c-4a07-85f3-690b748e058e"],
Cell[15529, 413, 869, 15, 89, "Output",ExpressionUUID->"33041c6e-fc0a-4a20-bb60-3cb51e3e5cc3"],
Cell[16401, 430, 1327, 30, 117, "Output",ExpressionUUID->"30e68b07-c485-4362-ac4e-712b0fdce095"],
Cell[17731, 462, 1983, 52, 129, "Output",ExpressionUUID->"d556e031-1edc-4838-938d-ffc28c3794cc"]
}, Open  ]],
Cell[19729, 517, 269, 6, 74, "Text",ExpressionUUID->"79540f38-fbda-4966-a2f6-102b2e3ba4f1"],
Cell[20001, 525, 2788, 89, 895, "Input",ExpressionUUID->"3cc96c75-42ec-4eaf-a407-f7b7b6281298"],
Cell[22792, 616, 554, 17, 75, "Text",ExpressionUUID->"bb90b2f1-f02d-427e-be13-9bf8cb4a5d83"],
Cell[23349, 635, 1765, 59, 137, "Input",ExpressionUUID->"8eda7c4e-f0c4-4baa-8ba8-117e62050539"],
Cell[25117, 696, 258, 6, 125, "Text",ExpressionUUID->"b392c7c2-6fb5-4d34-86ee-3b44e01ecef0"],
Cell[25378, 704, 1308, 39, 223, "Input",ExpressionUUID->"5c1f63e4-2c5a-4e2c-8283-1f0efb2a34f3"],
Cell[26689, 745, 230, 5, 74, "Text",ExpressionUUID->"005a7ee8-eeee-4101-ae6e-7aa47dbefeac"],
Cell[26922, 752, 1430, 36, 183, "Input",ExpressionUUID->"85e5043e-67e4-4f5a-8952-714bcda11643"],
Cell[28355, 790, 276, 6, 74, "Text",ExpressionUUID->"dd5bf477-fccd-438e-9230-60962ef700d9"],
Cell[CellGroupData[{
Cell[28656, 800, 492, 13, 89, "Input",ExpressionUUID->"ce1e471b-8455-4ab8-b805-57b7eef7f240"],
Cell[29151, 815, 305, 6, 129, "Output",ExpressionUUID->"b7cfb2ba-02e2-4938-a940-b4ace841e389"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[29505, 827, 320, 6, 39, "Subsection",ExpressionUUID->"9a018dee-75b4-427b-b19e-bfe63377c498"],
Cell[29828, 835, 631, 13, 38, "Text",ExpressionUUID->"1bc7fad4-1ed3-4c4e-b071-f91444251558"],
Cell[30462, 850, 1642, 35, 69, "Input",ExpressionUUID->"834b4028-bc20-4ff1-8341-cc2df7927880"],
Cell[32107, 887, 323, 7, 38, "Text",ExpressionUUID->"34d5bb7d-55f5-4b3c-b5d3-f0f50f01e81b"],
Cell[CellGroupData[{
Cell[32455, 898, 462, 12, 45, "Input",ExpressionUUID->"567ecf2c-0687-46cd-ae07-f3c4181be0be"],
Cell[32920, 912, 2284, 64, 72, "Output",ExpressionUUID->"26ecd390-aba1-4087-8871-86790927e985"]
}, Open  ]],
Cell[35219, 979, 486, 13, 64, "Text",ExpressionUUID->"63dd1d47-b10f-4817-bbca-f4d49fbc49b1"],
Cell[35708, 994, 3756, 95, 170, "Input",ExpressionUUID->"8a4d73c9-dde8-4f0b-a719-4579030983aa"],
Cell[CellGroupData[{
Cell[39489, 1093, 866, 25, 92, "Input",ExpressionUUID->"4586e6fa-2dfc-4003-8e4c-40d67b2646a1"],
Cell[40358, 1120, 205, 4, 45, "Output",ExpressionUUID->"d8b73688-ffe3-4257-8139-97523ac944bd"],
Cell[40566, 1126, 424, 12, 61, "Output",ExpressionUUID->"8458653e-cf67-4695-9c3a-4ff61141e89d"],
Cell[40993, 1140, 854, 25, 66, "Output",ExpressionUUID->"cc4d8ca7-e128-452f-90ff-3a2fa73957de"]
}, Open  ]],
Cell[41862, 1168, 218, 5, 37, "Text",ExpressionUUID->"61814ecc-3337-46d1-b0c1-b0388c251e9d"],
Cell[CellGroupData[{
Cell[42105, 1177, 973, 26, 98, "Input",ExpressionUUID->"88ee5e8d-c2f4-4100-90c9-14832197358b"],
Cell[43081, 1205, 531, 12, 56, "Output",ExpressionUUID->"d46bd5ac-645a-41b9-8abe-693bd929602f"],
Cell[43615, 1219, 510, 11, 56, "Output",ExpressionUUID->"8b2183cb-9694-468c-9873-25aa150b1d06"]
}, Open  ]],
Cell[44140, 1233, 2041, 55, 104, "Input",ExpressionUUID->"1ff717bb-3ead-401d-9431-2256548e14fd"],
Cell[46184, 1290, 251, 6, 37, "Text",ExpressionUUID->"6925a1b0-36fc-428d-9b91-08317d5f25c9"],
Cell[CellGroupData[{
Cell[46460, 1300, 722, 18, 68, "Input",ExpressionUUID->"a7647c65-9d28-4012-b3f5-1ef7c7c8c30a"],
Cell[47185, 1320, 1776, 47, 68, "Output",ExpressionUUID->"e59923ea-665b-4967-a019-4c7f1a9523de"],
Cell[48964, 1369, 1774, 47, 68, "Output",ExpressionUUID->"96fba8ff-1be5-4e01-b5fd-b3afbacc8b9e"]
}, Open  ]],
Cell[50753, 1419, 202, 3, 37, "Text",ExpressionUUID->"553008ed-4b8a-4a26-a9f4-5fd1ff882c1b"],
Cell[CellGroupData[{
Cell[50980, 1426, 4348, 109, 122, "Input",ExpressionUUID->"b435c254-fe92-4ac4-a860-552b9d7b17be"],
Cell[55331, 1537, 463, 11, 59, "Output",ExpressionUUID->"e0c7f3b7-ff0c-4382-a35d-51332089bf27"],
Cell[55797, 1550, 462, 11, 59, "Output",ExpressionUUID->"d49743ee-0751-4224-9353-2d77a754e1e6"]
}, Open  ]],
Cell[56274, 1564, 235, 6, 37, "Text",ExpressionUUID->"512083d6-6f49-4183-a60c-a83d63d50bcb"],
Cell[56512, 1572, 6183, 175, 309, "Input",ExpressionUUID->"21747cb5-4694-4154-ae1c-065d305ffb4b"],
Cell[62698, 1749, 269, 6, 37, "Text",ExpressionUUID->"0be422b8-953a-4714-8e59-50c2806f5843"],
Cell[CellGroupData[{
Cell[62992, 1759, 1148, 33, 93, "Input",ExpressionUUID->"ee4a31bf-00e5-4ab1-9a32-6cf37aeee7c2"],
Cell[64143, 1794, 411, 9, 44, "Output",ExpressionUUID->"6ae6002f-97c7-41f8-b6f4-56d76c8efa51"],
Cell[64557, 1805, 873, 24, 59, "Output",ExpressionUUID->"2a98a92a-7d97-42f8-9413-dce644340cc7"],
Cell[65433, 1831, 1527, 46, 62, "Output",ExpressionUUID->"34b56f1e-fdfe-4f8c-a887-f894232bf752"]
}, Open  ]],
Cell[66975, 1880, 2935, 91, 447, "Input",ExpressionUUID->"1d133d24-d484-4bc0-8074-9d9bbae43357"],
Cell[CellGroupData[{
Cell[69935, 1975, 1151, 33, 93, "Input",ExpressionUUID->"f3860058-d08d-407b-80b4-e9a18708f963"],
Cell[71089, 2010, 437, 9, 44, "Output",ExpressionUUID->"87464f24-909f-47ed-9a32-28ea9c923610"],
Cell[71529, 2021, 897, 25, 59, "Output",ExpressionUUID->"3d4fb43b-7f2a-47fe-8167-624ad80edd2e"],
Cell[72429, 2048, 1570, 47, 62, "Output",ExpressionUUID->"9e05e9f8-6e7c-4197-9119-9065ff5dbb25"]
}, Open  ]],
Cell[74014, 2098, 3010, 94, 447, "Input",ExpressionUUID->"60c43622-b66c-465c-8a2e-093cbf906e87"],
Cell[77027, 2194, 699, 18, 37, "Text",ExpressionUUID->"de2ea44c-6544-48a8-b669-874f143b57fb"],
Cell[77729, 2214, 3445, 115, 68, "Input",ExpressionUUID->"6346966c-6e3c-45f3-a007-fb0bf911ab3d"],
Cell[81177, 2331, 795, 18, 68, "Text",ExpressionUUID->"f693829a-a506-416e-bc84-fff32fd406a4"],
Cell[81975, 2351, 2708, 82, 120, "Input",ExpressionUUID->"02a6420f-2b82-4d6a-beda-38f99a2fb1a1"],
Cell[CellGroupData[{
Cell[84708, 2437, 509, 13, 68, "Input",ExpressionUUID->"eee868dd-e760-42e6-bc7b-a9b35fc2bc72"],
Cell[85220, 2452, 702, 17, 59, "Output",ExpressionUUID->"ffa3261f-73f2-4437-b7b1-911ddb7425bd"],
Cell[85925, 2471, 677, 16, 59, "Output",ExpressionUUID->"532d4e83-8c7b-421c-89d3-ff85eb138501"]
}, Open  ]],
Cell[86617, 2490, 3076, 91, 202, "Input",ExpressionUUID->"51c73d4f-062d-4634-a0d6-6b2f89f77c3e"],
Cell[89696, 2583, 230, 5, 37, "Text",ExpressionUUID->"a329d138-6d7a-4ca7-bba3-03a632efb73c"],
Cell[89929, 2590, 2426, 63, 93, "Input",ExpressionUUID->"6be06e70-0b04-4d3a-8f6b-f76391bbb77c"],
Cell[92358, 2655, 276, 6, 37, "Text",ExpressionUUID->"aec30ee4-9875-4e5c-99d1-75349cc9cf91"],
Cell[CellGroupData[{
Cell[92659, 2665, 1113, 26, 44, "Input",ExpressionUUID->"e57bd8d8-3948-4718-93e1-0833c13a072c"],
Cell[93775, 2693, 791, 14, 44, "Output",ExpressionUUID->"c6b83e80-05ca-460f-89e4-aeb12f600b3e"]
}, Open  ]],
Cell[94581, 2710, 574, 12, 113, "Text",ExpressionUUID->"796f8069-b69e-4536-8ac4-cdfd1133154e"]
}, Closed]],
Cell[CellGroupData[{
Cell[95192, 2727, 294, 4, 39, "Subsection",ExpressionUUID->"dd6ce8dd-d52f-4919-baae-bfc80178df37"],
Cell[CellGroupData[{
Cell[95511, 2735, 213, 4, 37, "Subsubsection",ExpressionUUID->"dd7f872f-bbb2-4e62-b465-4b024100df6c"],
Cell[95727, 2741, 1006, 26, 100, "Text",ExpressionUUID->"c93deddb-90ec-4d53-a857-cf0cfc05d13f"],
Cell[96736, 2769, 631, 13, 38, "Text",ExpressionUUID->"a70d9391-164b-42ae-9926-1da565c18e49"],
Cell[97370, 2784, 1736, 38, 94, "Code",ExpressionUUID->"8ef4b5a2-b391-4465-bbc2-c3aa197c324a"],
Cell[99109, 2824, 6298, 186, 241, "Code",ExpressionUUID->"ff4d649d-72af-4424-8b4e-b48dd4d35a72"],
Cell[105410, 3012, 323, 7, 38, "Text",ExpressionUUID->"dc63463d-ffa1-43d3-b023-16b905d51db8"],
Cell[CellGroupData[{
Cell[105758, 3023, 458, 11, 45, "Input",ExpressionUUID->"3d2674f1-d9fd-463c-a000-28d3b38adaba"],
Cell[106219, 3036, 5843, 151, 137, "Output",ExpressionUUID->"f788a805-7b0c-4c55-94ef-7362eef0bddb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112099, 3192, 1549, 43, 88, "Input",ExpressionUUID->"5577d6e0-3446-460c-a2c7-d971ae9673d0"],
Cell[113651, 3237, 227, 4, 45, "Output",ExpressionUUID->"4aaf2634-c680-4ada-8cac-e0022b45d964"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113915, 3246, 1758, 49, 122, "Input",ExpressionUUID->"39cc0d46-afda-46a3-87e4-313ad7f46403"],
Cell[115676, 3297, 732, 19, 68, "Output",ExpressionUUID->"0227efbb-7679-4aa3-9a4e-74b40b57ddb0"],
Cell[116411, 3318, 716, 18, 68, "Output",ExpressionUUID->"c93e2b14-67a9-49be-85d2-3a602da479e8"]
}, Open  ]],
Cell[117142, 3339, 486, 13, 64, "Text",ExpressionUUID->"12fd6c21-5c33-431e-89d0-c632747007a7"],
Cell[117631, 3354, 5307, 133, 188, "Input",ExpressionUUID->"54705305-6d2c-4dee-bdb1-11d879e4708f"],
Cell[CellGroupData[{
Cell[122963, 3491, 1486, 42, 92, "Input",ExpressionUUID->"f42abe4c-6d1b-4840-8e4e-77f57ec5955c"],
Cell[124452, 3535, 350, 5, 45, "Output",ExpressionUUID->"30740fa0-8e4e-4391-8706-5f33d5225da6"],
Cell[124805, 3542, 822, 22, 71, "Output",ExpressionUUID->"fa88bba5-26b5-4b50-8d68-a0560cfccfe5"],
Cell[125630, 3566, 1496, 37, 70, "Output",ExpressionUUID->"7a9d2884-78fc-4e91-9d00-0589c2cf2a3b"]
}, Open  ]],
Cell[127141, 3606, 218, 5, 38, "Text",ExpressionUUID->"1797eaaa-2a96-4258-8f16-b0aaeadc709f"],
Cell[CellGroupData[{
Cell[127384, 3615, 892, 24, 99, "Input",ExpressionUUID->"0ba523e6-8de9-4e5a-8c93-e58531fdfa9d"],
Cell[128279, 3641, 556, 12, 59, "Output",ExpressionUUID->"62c91768-4e1f-4eee-89f5-e29d587b4f46"],
Cell[128838, 3655, 533, 11, 59, "Output",ExpressionUUID->"6648de88-982d-4005-8690-5473040f5008"]
}, Open  ]],
Cell[129386, 3669, 1991, 54, 104, "Input",ExpressionUUID->"e00713bd-4f4d-44c7-be2c-6e62e00d44a1"],
Cell[131380, 3725, 251, 6, 38, "Text",ExpressionUUID->"c193f374-e684-46e4-85ec-9b491781295f"],
Cell[CellGroupData[{
Cell[131656, 3735, 718, 17, 69, "Input",ExpressionUUID->"030c1b12-13b3-4947-9a36-98a6a339850d"],
Cell[132377, 3754, 3533, 98, 65, "Output",ExpressionUUID->"1727f977-8c3b-4a83-b149-b7c1e809f3f2"],
Cell[135913, 3854, 3700, 104, 65, "Output",ExpressionUUID->"922ec6a5-2259-4f9c-8562-7fb067a391f2"]
}, Open  ]],
Cell[139628, 3961, 202, 3, 38, "Text",ExpressionUUID->"8171d9ac-34d9-4484-bb7a-05482ef52eaf"],
Cell[CellGroupData[{
Cell[139855, 3968, 8551, 211, 219, "Input",ExpressionUUID->"bc8bd5a8-1838-433f-b10b-ccc9781582d8"],
Cell[148409, 4181, 806, 19, 68, "Output",ExpressionUUID->"804b4a0b-0521-4674-b789-442b723415cb"],
Cell[149218, 4202, 777, 18, 68, "Output",ExpressionUUID->"99651457-a5ef-41ed-846e-b94044fbf406"]
}, Open  ]],
Cell[150010, 4223, 259, 6, 38, "Text",ExpressionUUID->"ce5cdc2c-1ae1-42ee-b05e-001c5ccbb4bf"],
Cell[CellGroupData[{
Cell[150294, 4233, 735, 19, 69, "Input",ExpressionUUID->"a2c6bcce-1e88-4487-a9df-e7c987a320eb"],
Cell[151032, 4254, 406, 8, 62, "Output",ExpressionUUID->"e582dd3a-ecda-4740-b916-ed1c599824ea"],
Cell[151441, 4264, 408, 8, 62, "Output",ExpressionUUID->"1bbe72e8-2c27-4da9-9296-351c0e3c04ff"]
}, Open  ]],
Cell[151864, 4275, 235, 6, 38, "Text",ExpressionUUID->"ceba5f3e-a66d-4040-88bf-51c4ea0f6de5"],
Cell[152102, 4283, 9382, 252, 350, "Code",ExpressionUUID->"33266b00-1840-4e26-943c-a220052c1b66"]
}, Closed]],
Cell[CellGroupData[{
Cell[161521, 4540, 167, 3, 36, "Subsubsection",ExpressionUUID->"e9687498-4e52-40c3-8f96-b01c1467a36c"],
Cell[161691, 4545, 269, 6, 38, "Text",ExpressionUUID->"4c640880-6459-4024-b91c-680836bbf068"],
Cell[CellGroupData[{
Cell[161985, 4555, 1144, 32, 92, "Input",ExpressionUUID->"8c936833-1c05-4ed1-9e55-d66306293c7f"],
Cell[163132, 4589, 407, 8, 45, "Output",ExpressionUUID->"3f70b2b9-ea2c-4dde-a5e5-5e7db2d8e4f4"],
Cell[163542, 4599, 2808, 76, 68, "Output",ExpressionUUID->"d21a7259-80ce-4539-aeb8-191840bde25b"],
Cell[166353, 4677, 4617, 122, 113, "Output",ExpressionUUID->"6e9f1865-9d2c-4f9f-9734-58e633c97e50"]
}, Open  ]],
Cell[170985, 4802, 7938, 218, 429, "Code",ExpressionUUID->"8e4de106-f69b-4013-9ec7-508b64e01070"],
Cell[CellGroupData[{
Cell[178948, 5024, 859, 22, 196, "Input",ExpressionUUID->"a62b3c59-2e96-4f2b-95b3-51cea4a7b7cc"],
Cell[179810, 5048, 822, 22, 68, "Output",ExpressionUUID->"cde43abd-8032-4cf6-a234-a48014f55260"],
Cell[180635, 5072, 883, 24, 68, "Output",ExpressionUUID->"e72b2ced-ead7-438b-a22a-37f0faac06bb"],
Cell[181521, 5098, 972, 27, 68, "Output",ExpressionUUID->"3d89f7d7-a359-472d-bb4c-1599c76dba51"],
Cell[182496, 5127, 647, 16, 72, "Output",ExpressionUUID->"779bcff1-7993-4afb-8615-bb8d9d2c96a1"],
Cell[183146, 5145, 2351, 66, 64, "Output",ExpressionUUID->"e5e5baf3-7b98-4c06-a4eb-0b900a84e5a1"],
Cell[185500, 5213, 1363, 35, 72, "Output",ExpressionUUID->"e955d5f8-e2d5-4a22-bba7-f3411f366383"],
Cell[186866, 5250, 1074, 28, 72, "Output",ExpressionUUID->"1dc4123d-4b27-4c8a-9c8d-bb5d4085bccd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187977, 5283, 1151, 33, 97, "Input",ExpressionUUID->"a8ba9d02-a284-4225-8897-8252a381dffe"],
Cell[189131, 5318, 411, 9, 45, "Output",ExpressionUUID->"7ac3630c-de46-4eae-ae9a-278edb748dba"],
Cell[189545, 5329, 2937, 85, 67, "Output",ExpressionUUID->"a37f1060-3fb8-4b80-926f-1170f0d4900a"],
Cell[192485, 5416, 4752, 134, 122, "Output",ExpressionUUID->"a06afa03-843d-40fb-ad9d-a38d07d3ee10"]
}, Open  ]],
Cell[197252, 5553, 8298, 232, 424, "Code",ExpressionUUID->"bba9a1c4-1d18-4a26-8ab3-9e2229071852"],
Cell[205553, 5787, 699, 18, 39, "Text",ExpressionUUID->"60006717-d4f0-49fd-9749-d28b32186661"],
Cell[206255, 5807, 3440, 114, 75, "Code",ExpressionUUID->"fbf7c6cd-954c-4a1e-b761-d9403fc7d7ae"],
Cell[209698, 5923, 795, 18, 96, "Text",ExpressionUUID->"11cc14b3-1299-4c1d-aeb7-00492ad7f768"],
Cell[210496, 5943, 4012, 120, 133, "Input",ExpressionUUID->"7cd8a1e6-a867-45c1-8c9c-b6914c1b1b70"],
Cell[CellGroupData[{
Cell[214533, 6067, 541, 14, 71, "Input",ExpressionUUID->"d1664fba-5159-4fbb-b119-d7acbcf15af0"],
Cell[215077, 6083, 672, 15, 62, "Output",ExpressionUUID->"b30999df-d06f-44df-a4fb-95610785319e"],
Cell[215752, 6100, 647, 14, 62, "Output",ExpressionUUID->"42f0e254-8815-46b8-8648-71079399d491"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216436, 6119, 386, 11, 71, "Input",ExpressionUUID->"f370c1c6-3320-4a08-b7c7-dcfe4553ed4f"],
Cell[216825, 6132, 944, 26, 71, "Output",ExpressionUUID->"0b5f9636-c4a0-4e2b-b758-f6e227b10e97"],
Cell[217772, 6160, 978, 28, 71, "Output",ExpressionUUID->"c19e0f7a-6a8a-4e04-8f7b-bcd70ec076f4"]
}, Open  ]],
Cell[218765, 6191, 4304, 121, 223, "Code",ExpressionUUID->"bca1ef3b-66a9-41d9-8196-5aab1bd979ab"]
}, Closed]],
Cell[CellGroupData[{
Cell[223106, 6317, 169, 3, 36, "Subsubsection",ExpressionUUID->"6c03e5ae-951f-4455-8880-6529b8f93feb"],
Cell[223278, 6322, 230, 5, 37, "Text",ExpressionUUID->"ffcadf0a-4dbf-4025-814e-8971b9ff2228"],
Cell[223511, 6329, 2615, 67, 99, "Code",ExpressionUUID->"800309c8-c87d-4c44-b6bf-42d5f0f86b32"],
Cell[226129, 6398, 509, 9, 62, "Text",ExpressionUUID->"f087c32a-614f-4602-b796-8535b1c16195"],
Cell[CellGroupData[{
Cell[226663, 6411, 1804, 36, 46, "Input",ExpressionUUID->"5e86adfd-ce6d-4ad4-bda0-153c6bc22cd5"],
Cell[228470, 6449, 1312, 22, 46, "Output",ExpressionUUID->"321b80a3-66ca-44eb-abbd-cfb74336156a"]
}, Open  ]],
Cell[229797, 6474, 837, 14, 112, "Text",ExpressionUUID->"98d4ae08-619f-4e2c-8407-286657de6f13"],
Cell[CellGroupData[{
Cell[230659, 6492, 1488, 43, 138, "Input",ExpressionUUID->"ca4c6747-0808-459a-999a-137a50e43e28"],
Cell[232150, 6537, 1938, 43, 69, "Output",ExpressionUUID->"5166facb-d7c1-4de8-b94a-35f846271ac8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[234137, 6586, 237, 4, 36, "Subsubsection",ExpressionUUID->"638d987a-5b5c-4123-9625-2b7f7085a3ef"],
Cell[234377, 6592, 2005, 56, 138, "Input",ExpressionUUID->"9c7623ef-a6fb-48c3-8c40-c7b35078f494"],
Cell[236385, 6650, 370, 9, 69, "Input",ExpressionUUID->"5ad06055-8ea9-46ea-8ead-fc915e00bbf9"],
Cell[236758, 6661, 386, 10, 45, "Input",ExpressionUUID->"72edcd1b-ae1e-4897-9224-23c9b2be9fed"],
Cell[237147, 6673, 281, 6, 38, "Text",ExpressionUUID->"fb11cd44-ec9d-47bf-addf-33d11671cacb"],
Cell[237431, 6681, 347, 7, 45, "Input",ExpressionUUID->"4bb8c281-cd9f-4a0c-900a-62049ef38e1f"],
Cell[CellGroupData[{
Cell[237803, 6692, 208, 3, 45, "Input",ExpressionUUID->"e321b3c9-2ca6-46ad-85ba-6c617dd21e0d"],
Cell[238014, 6697, 175, 2, 45, "Output",ExpressionUUID->"80738758-8b73-4024-a9e3-9d3fc368f448"]
}, Open  ]],
Cell[238204, 6702, 383, 10, 66, "Input",ExpressionUUID->"65d49684-88aa-401c-a74e-db3bc3fcfb4e"],
Cell[238590, 6714, 175, 3, 38, "Text",ExpressionUUID->"fb9c66e6-5c00-48f5-8ed5-2326f350e161"],
Cell[238768, 6719, 284, 6, 45, "Input",ExpressionUUID->"471b429a-0e66-4009-90f2-f5b1880ee288"],
Cell[239055, 6727, 220, 5, 38, "Text",ExpressionUUID->"99e731d5-356a-4818-854a-9a95ceace031"],
Cell[239278, 6734, 337, 6, 45, "Input",ExpressionUUID->"3add8282-3571-43d2-9b5a-219513b9ef94"],
Cell[239618, 6742, 281, 6, 38, "Text",ExpressionUUID->"356dca39-f246-43f3-b2e9-6f3b4d44abe9"],
Cell[239902, 6750, 257, 5, 45, "Input",ExpressionUUID->"546d84d5-d6da-45e8-a722-6833686a9cd6"],
Cell[240162, 6757, 257, 5, 45, "Input",ExpressionUUID->"9b8245d4-c711-4464-8e79-d462ef52ff86"],
Cell[240422, 6764, 642, 11, 45, "Input",ExpressionUUID->"02fb20e3-5dd4-4278-b4a7-b45b0c90a918"],
Cell[241067, 6777, 294, 5, 45, "Input",ExpressionUUID->"d48572de-a28a-4636-8b6a-b738428d075b"],
Cell[CellGroupData[{
Cell[241386, 6786, 1114, 24, 92, "Input",ExpressionUUID->"195ecbb2-57bd-4edf-8b9b-b4d2e73f2b3b"],
Cell[242503, 6812, 303, 4, 45, "Output",ExpressionUUID->"c04ccea7-3f71-49a6-a362-3c7941fe50f6"],
Cell[242809, 6818, 303, 4, 45, "Output",ExpressionUUID->"a5e731a1-238c-4e33-8e94-e313f1588c04"]
}, Open  ]],
Cell[243127, 6825, 214, 5, 38, "Text",ExpressionUUID->"edaf6acb-d476-442f-b34b-358bfe859af0"],
Cell[243344, 6832, 541, 14, 45, "Input",ExpressionUUID->"f63b7536-f49c-4c30-8c63-550f04584996"],
Cell[CellGroupData[{
Cell[243910, 6850, 269, 6, 45, "Input",ExpressionUUID->"61dfab4c-78aa-433c-ad72-6684c6b030e3"],
Cell[244182, 6858, 1885, 44, 69, "Output",ExpressionUUID->"c14c9886-7ad1-4a7e-9bdc-d42c3eb8f12d"]
}, Open  ]],
Cell[246082, 6905, 332, 7, 38, "Text",ExpressionUUID->"d767ac92-e93c-406c-9a2c-62ac80e515c9"],
Cell[246417, 6914, 611, 15, 69, "Input",ExpressionUUID->"43aa1519-f34d-48cc-9d72-22c5877a1922"],
Cell[247031, 6931, 368, 9, 45, "Input",ExpressionUUID->"07c81278-c985-4523-b452-512ab15fa331"],
Cell[CellGroupData[{
Cell[247424, 6944, 506, 12, 45, "Input",ExpressionUUID->"2c142d1d-ec34-4d12-ba4a-0b01ba311e23"],
Cell[247933, 6958, 834, 16, 87, "Message",ExpressionUUID->"c6eeacd8-d049-46cf-981b-20597174c4f6"],
Cell[248770, 6976, 837, 16, 87, "Message",ExpressionUUID->"f8690fa7-537d-4ff3-bae1-0451e5008a6c"],
Cell[249610, 6994, 833, 16, 87, "Message",ExpressionUUID->"8ab58e75-e40a-404e-bcb9-a9a7909c9168"],
Cell[250446, 7012, 529, 11, 33, "Message",ExpressionUUID->"e4b7583d-85ab-4ab9-80c6-c0be6961d5c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251012, 7028, 183, 3, 45, "Input",ExpressionUUID->"1061cdfd-2d99-4209-ac4d-1d3d9b616135"],
Cell[251198, 7033, 1874, 42, 92, "Output",ExpressionUUID->"5a185a69-cb17-4654-a8da-27e9bcaaf2e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253109, 7080, 268, 6, 45, "Input",ExpressionUUID->"19a6c94a-6336-4a95-b026-f489c57e8e04"],
Cell[253380, 7088, 2013, 47, 69, "Output",ExpressionUUID->"0dee98f9-15aa-424a-a247-53c215b87f09"]
}, Open  ]],
Cell[255408, 7138, 541, 14, 45, "Input",ExpressionUUID->"1e2c9859-1d37-4ff0-a03d-70319185d045"],
Cell[CellGroupData[{
Cell[255974, 7156, 269, 6, 45, "Input",ExpressionUUID->"1eb9a044-da0a-4ba5-8a05-bf3e78731a8c"],
Cell[256246, 7164, 1885, 44, 69, "Output",ExpressionUUID->"5b20a9d9-35b2-47a6-a4e4-5636282938e3"]
}, Open  ]],
Cell[258146, 7211, 543, 12, 69, "Input",ExpressionUUID->"d0d08e64-81ea-428d-bc88-c84720276933"],
Cell[CellGroupData[{
Cell[258714, 7227, 280, 5, 69, "Input",ExpressionUUID->"f3df003c-a044-4a76-a780-92dd0dc42af1"],
Cell[258997, 7234, 204, 4, 45, "Output",ExpressionUUID->"c9c1ec57-b391-4f8b-abb4-7634b9d59564"],
Cell[259204, 7240, 204, 4, 45, "Output",ExpressionUUID->"fdab0f9f-772b-46c8-88ce-b24f718465c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259445, 7249, 7956, 210, 506, "Input",ExpressionUUID->"6cf5b05e-99c0-400c-a8c6-1a143762afb0"],
Cell[267404, 7461, 294, 4, 45, "Output",ExpressionUUID->"c64310d9-db25-4a89-8d8c-475ceb441d8b"],
Cell[267701, 7467, 294, 4, 45, "Output",ExpressionUUID->"c0cd9033-cf4e-4a52-8556-ed9e267d3ec8"],
Cell[267998, 7473, 294, 4, 45, "Output",ExpressionUUID->"9b04dc9d-ea9c-4924-94d5-f96892946074"],
Cell[268295, 7479, 296, 4, 45, "Output",ExpressionUUID->"7e0b57fb-ee9b-4c5b-a034-40294e80efcf"],
Cell[268594, 7485, 296, 4, 45, "Output",ExpressionUUID->"e5b2a3e4-d1e0-4fc0-8a69-014abfe99b91"],
Cell[268893, 7491, 294, 4, 45, "Output",ExpressionUUID->"3b162f10-3b95-42b8-9a72-06cd989440a1"],
Cell[269190, 7497, 296, 4, 45, "Output",ExpressionUUID->"4f5e3491-a967-4862-9b3a-18c8378202ec"],
Cell[269489, 7503, 294, 4, 45, "Output",ExpressionUUID->"1cf75c91-35ec-4783-9ec9-3c93b8e0f3c4"],
Cell[269786, 7509, 294, 4, 45, "Output",ExpressionUUID->"17d78ca3-2ca1-4e15-b4d2-f31cd7e0ac67"],
Cell[270083, 7515, 294, 4, 45, "Output",ExpressionUUID->"d76c7546-1342-4398-b696-7a782fc0a91b"],
Cell[270380, 7521, 295, 4, 45, "Output",ExpressionUUID->"ec2e64ad-8343-461e-809c-d853b36530c8"],
Cell[270678, 7527, 295, 4, 45, "Output",ExpressionUUID->"2d0b4a29-c2e7-4425-a224-c07a3f323a79"],
Cell[270976, 7533, 297, 4, 45, "Output",ExpressionUUID->"33b4d714-1c82-4703-a3ac-d8c1ccdfa9cb"],
Cell[271276, 7539, 297, 4, 45, "Output",ExpressionUUID->"1e046030-59d9-44ca-ac12-12f1c80d878c"],
Cell[271576, 7545, 295, 4, 45, "Output",ExpressionUUID->"3a0779a6-929d-41b0-a4bd-c010ced5f400"],
Cell[271874, 7551, 297, 4, 45, "Output",ExpressionUUID->"4ce3593b-b7ca-4a77-b607-fe4d93fb275b"],
Cell[272174, 7557, 297, 4, 45, "Output",ExpressionUUID->"02717dca-20ed-40d2-a5f2-e8f3d11a8088"],
Cell[272474, 7563, 295, 4, 45, "Output",ExpressionUUID->"a378f1ce-8abd-40fc-8b9d-e0a95449a1cd"],
Cell[272772, 7569, 295, 4, 45, "Output",ExpressionUUID->"b4feadd2-c10f-49ab-a721-d8fb5b4cd812"],
Cell[273070, 7575, 295, 4, 45, "Output",ExpressionUUID->"36220416-6014-4b30-83c2-ee70dc6992a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273402, 7584, 4058, 107, 276, "Input",ExpressionUUID->"8d53aed8-d919-4664-9528-56e9615d57ef"],
Cell[277463, 7693, 304, 5, 46, "Output",ExpressionUUID->"c0a5f361-ea9a-4fe0-a258-9e3276dfb157"],
Cell[277770, 7700, 302, 5, 46, "Output",ExpressionUUID->"29ba2311-8da5-40b6-9c3b-334798074af8"],
Cell[278075, 7707, 302, 5, 46, "Output",ExpressionUUID->"8187fd45-3abc-4437-923b-bf523d5c87c5"],
Cell[278380, 7714, 304, 5, 46, "Output",ExpressionUUID->"941f1cff-50a4-4063-91de-337789ff98ae"],
Cell[278687, 7721, 301, 5, 46, "Output",ExpressionUUID->"9cd718a1-78ad-4e3d-bdb7-c87236e1d0d3"],
Cell[278991, 7728, 302, 5, 46, "Output",ExpressionUUID->"e01a4939-39c3-4dae-bb7e-4e55791ddd8b"],
Cell[279296, 7735, 304, 5, 46, "Output",ExpressionUUID->"a2685032-d489-49c5-8ea6-90984f1eac71"],
Cell[279603, 7742, 302, 5, 46, "Output",ExpressionUUID->"6c3b481a-39a4-47d6-ba3f-1498d17871c0"],
Cell[279908, 7749, 302, 5, 46, "Output",ExpressionUUID->"5c0d180a-f4b9-48c0-b27c-5fc15574be0b"],
Cell[280213, 7756, 302, 5, 46, "Output",ExpressionUUID->"0f204fd6-4e35-44b8-b719-81ba32f34844"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[280564, 7767, 173, 3, 36, "Subsubsection",ExpressionUUID->"7d8bc839-ff56-4e3e-b8ce-44880c097ea1"],
Cell[280740, 7772, 486, 13, 69, "Input",ExpressionUUID->"0a840572-3e50-40f9-981e-4a535247fd97"],
Cell[281229, 7787, 883, 22, 45, "Input",ExpressionUUID->"7d376c22-1934-4f3c-9759-0bccb31dfcbe"],
Cell[282115, 7811, 393, 10, 45, "Input",ExpressionUUID->"3d53ea0d-7777-4ba5-9f57-ce31fe4db344"],
Cell[CellGroupData[{
Cell[282533, 7825, 266, 6, 45, "Input",ExpressionUUID->"c0844726-bbdc-4f31-a45e-7227c119720a"],
Cell[282802, 7833, 2219, 51, 69, "Output",ExpressionUUID->"c1a1996d-7e4d-447f-bfd3-30d91a555436"]
}, Open  ]],
Cell[285036, 7887, 593, 18, 69, "Input",ExpressionUUID->"6a555a0c-0a08-4eb9-ad06-757abde4adbd"],
Cell[285632, 7907, 892, 27, 69, "Input",ExpressionUUID->"766bb855-112e-44b7-8222-fdd810d97c80"],
Cell[286527, 7936, 669, 20, 45, "Input",ExpressionUUID->"f97459a9-ca5d-4269-abf1-679f38a1498b"],
Cell[CellGroupData[{
Cell[287221, 7960, 3646, 92, 322, "Input",ExpressionUUID->"b832d30d-a2b7-45af-a445-5fc4f7fcc8b8"],
Cell[290870, 8054, 28452, 545, 672, "Output",ExpressionUUID->"2ce40c3d-5d8e-43fe-b9c6-ddd3e872fc19"]
}, Open  ]],
Cell[319337, 8602, 469, 13, 115, "Input",ExpressionUUID->"ce160c10-a63c-412f-9430-35f14f47157a"],
Cell[319809, 8617, 1138, 28, 69, "Input",ExpressionUUID->"fd924231-b75c-4540-b76c-4a53f850e5dc"],
Cell[CellGroupData[{
Cell[320972, 8649, 269, 6, 45, "Input",ExpressionUUID->"f2b499fc-8048-4565-a8f0-bfb4687756b5"],
Cell[321244, 8657, 221, 5, 45, "Output",ExpressionUUID->"d879c031-3751-4a5f-96ad-dd43d8b2cfcd"]
}, Open  ]],
Cell[321480, 8665, 1705, 46, 94, "Input",ExpressionUUID->"c0f8cf19-3f71-48c3-b6df-818ec63cf6e7"],
Cell[CellGroupData[{
Cell[323210, 8715, 1352, 35, 69, "Input",ExpressionUUID->"d35e4030-b331-4367-ac7f-3798990cb4cf"],
Cell[324565, 8752, 270874, 4428, 344, "Output",ExpressionUUID->"0b25abd4-2d07-4dcc-bae3-2958093715e4"]
}, Open  ]],
Cell[595454, 13183, 1427, 36, 69, "Input",ExpressionUUID->"1977914a-64ba-4614-85ba-3770e73641c1"],
Cell[CellGroupData[{
Cell[596906, 13223, 748, 16, 45, "Input",ExpressionUUID->"8ab1d283-1c45-4b0a-9aa2-3a9dc92898c2"],
Cell[597657, 13241, 280117, 4641, 447, "Output",ExpressionUUID->"68b56c3a-3e22-42f9-9777-ecbda9d78951"]
}, Open  ]],
Cell[CellGroupData[{
Cell[877811, 17887, 5548, 125, 432, "Input",ExpressionUUID->"e7eace6d-5693-4dc0-917b-03fa9ad504c1"],
Cell[883362, 18014, 55111, 918, 454, "Output",ExpressionUUID->"a0a047ce-5395-4b5f-bb6b-dd2097d3dfdf"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[938534, 18939, 183, 3, 39, "Subsection",ExpressionUUID->"0d8e2725-d596-4955-b6df-df280e816d7e"],
Cell[CellGroupData[{
Cell[938742, 18946, 343, 7, 37, "Subsubsection",ExpressionUUID->"5f04b166-d618-4eb0-b626-9196ee906f20"],
Cell[939088, 18955, 767, 22, 75, "Text",ExpressionUUID->"a05c4bad-f1e1-4d53-a204-242aecc815b0"],
Cell[939858, 18979, 631, 13, 38, "Text",ExpressionUUID->"ccfd75c1-bac7-4460-b864-31d731cd579e"],
Cell[940492, 18994, 1766, 39, 114, "Input",ExpressionUUID->"538c78a1-38b2-427d-aa4a-ae454611eb8b"],
Cell[942261, 19035, 323, 7, 38, "Text",ExpressionUUID->"e6af5e0c-19fa-4f99-8e22-4a0c2d44d236"],
Cell[CellGroupData[{
Cell[942609, 19046, 462, 12, 45, "Input",ExpressionUUID->"ce421ec2-65f3-49b7-8de7-4164cda7720b"],
Cell[943074, 19060, 5939, 179, 162, "Output",ExpressionUUID->"2de11543-5639-4935-b791-023d65729712"]
}, Open  ]],
Cell[949028, 19242, 486, 13, 64, "Text",ExpressionUUID->"f925fb2f-524b-46e8-a0c4-e65a6381bb12"],
Cell[949517, 19257, 2630, 54, 72, "Input",ExpressionUUID->"9eb743f7-7780-4267-a4a1-8d40fc6666f0"],
Cell[CellGroupData[{
Cell[952172, 19315, 1002, 27, 92, "Input",ExpressionUUID->"2d046eeb-ba99-4006-bf06-ccb916bbb78d"],
Cell[953177, 19344, 449, 7, 45, "Output",ExpressionUUID->"9f2a0917-e8fb-494f-a45d-73c757b965ac"],
Cell[953629, 19353, 937, 23, 69, "Output",ExpressionUUID->"ae7cfeb0-c44c-435c-ad03-b5830bc3e376"],
Cell[954569, 19378, 5473, 146, 93, "Output",ExpressionUUID->"7a3c3f63-d73e-4792-b70c-a8d20794d98e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[960079, 19529, 5339, 142, 123, "Input",ExpressionUUID->"4919bca8-7752-46f6-a850-28f6fc55da90"],
Cell[965421, 19673, 2183, 62, 48, "Output",ExpressionUUID->"2d4da2e3-fdfd-4e13-a261-0a3e3d6ed1fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[967641, 19740, 699, 19, 48, "Input",ExpressionUUID->"82dfd22f-91cb-41e4-af72-0bf15a76305d"],
Cell[968343, 19761, 285, 7, 45, "Output",ExpressionUUID->"4c3393d9-b442-466c-b36e-75092acbaf81"]
}, Open  ]],
Cell[968643, 19771, 218, 5, 38, "Text",ExpressionUUID->"744699d3-d1e7-42c1-a532-b2883a3b4eb1"],
Cell[CellGroupData[{
Cell[968886, 19780, 896, 25, 99, "Input",ExpressionUUID->"2aabac85-db95-4187-89d6-05891a8310df"],
Cell[969785, 19807, 540, 13, 59, "Output",ExpressionUUID->"2ad77721-f26b-4702-b9f6-252832b86fac"],
Cell[970328, 19822, 515, 12, 59, "Output",ExpressionUUID->"1a58fef0-a5e8-49f9-b1ce-ab67f7870dd9"]
}, Open  ]],
Cell[970858, 19837, 1310, 31, 63, "Input",ExpressionUUID->"876b1b7a-f665-4395-909d-803f6c7e4b10"],
Cell[972171, 19870, 251, 6, 38, "Text",ExpressionUUID->"8671f292-4014-4f59-b055-e10385784279"],
Cell[CellGroupData[{
Cell[972447, 19880, 1091, 29, 92, "Input",ExpressionUUID->"033c89cb-f932-46e2-abff-dae73ebe8c3b"],
Cell[973541, 19911, 4056, 114, 74, "Output",ExpressionUUID->"b0320cde-e1cf-4962-b7b9-52219cd1e48c"],
Cell[977600, 20027, 2184, 61, 85, "Output",ExpressionUUID->"15407a70-6e0d-4160-a510-347f2c33e184"],
Cell[979787, 20090, 656, 13, 45, "Output",ExpressionUUID->"f39fdfac-a661-4b19-98bc-02fa69994e9f"]
}, Open  ]],
Cell[980458, 20106, 202, 3, 38, "Text",ExpressionUUID->"b24f096d-61b1-4c75-a038-7112e1c3fd04"],
Cell[CellGroupData[{
Cell[980685, 20113, 3332, 81, 78, "Input",ExpressionUUID->"7927f046-4d09-4122-ac75-e8ac2cedfcb2"],
Cell[984020, 20196, 823, 24, 85, "Output",ExpressionUUID->"b76e678f-a618-47c1-9d7b-a859d26d2215"]
}, Open  ]],
Cell[984858, 20223, 235, 6, 38, "Text",ExpressionUUID->"d482a27f-8f55-474c-9eed-f0f7df2dd7f6"],
Cell[985096, 20231, 5816, 161, 284, "Input",ExpressionUUID->"006ecdcd-d13d-4664-af5d-9f2bf60a65ca"],
Cell[990915, 20394, 269, 6, 38, "Text",ExpressionUUID->"4378e718-5fa7-44a3-923b-b4427a176db8"],
Cell[CellGroupData[{
Cell[991209, 20404, 1148, 33, 92, "Input",ExpressionUUID->"4e42acb4-83b0-4c48-ae4d-0b7bdebd263f"],
Cell[992360, 20439, 387, 9, 45, "Output",ExpressionUUID->"9c6d51c4-a411-410b-8588-94fefd211e73"],
Cell[992750, 20450, 2915, 43, 55, "Message",ExpressionUUID->"3b4cefc0-2312-41c9-a198-09e5136aa7af"],
Cell[995668, 20495, 3152, 104, 85, "Output",ExpressionUUID->"e857fd52-b352-42a5-bf3d-a833236e390d"],
Cell[998823, 20601, 5018, 154, 155, "Output",ExpressionUUID->"6e511d4e-d327-475a-870b-3e5d52c13fe5"]
}, Open  ]],
Cell[1003856, 20758, 7917, 218, 484, "Input",ExpressionUUID->"7a3c3ce1-e79b-4a2f-bb9b-2f7f38211c4d"],
Cell[CellGroupData[{
Cell[1011798, 20980, 1151, 33, 92, "Input",ExpressionUUID->"05c08959-3e82-4f5b-963a-a0b8d880861b"],
Cell[1012952, 21015, 389, 9, 45, "Output",ExpressionUUID->"0b9c22e1-6e50-4f25-97dc-2567c2896809"],
Cell[1013344, 21026, 2915, 85, 68, "Output",ExpressionUUID->"1635626f-bedc-4009-8ea2-8cce032b33d4"],
Cell[1016262, 21113, 4805, 132, 113, "Output",ExpressionUUID->"ba5242d8-8adb-4011-b0af-9ab20a871547"]
}, Open  ]],
Cell[1021082, 21248, 8308, 236, 484, "Input",ExpressionUUID->"4e09a1ba-6dae-4d5a-a830-866e964c0cb8"],
Cell[1029393, 21486, 699, 18, 42, "Text",ExpressionUUID->"2c445f2c-479c-476b-831c-d9abe72381eb"],
Cell[1030095, 21506, 3445, 115, 69, "Input",ExpressionUUID->"7f890f63-1d8e-498f-8a62-22a495462599"],
Cell[1033543, 21623, 795, 18, 69, "Text",ExpressionUUID->"db867459-695c-4c29-8dde-885be7c32dd6"],
Cell[1034341, 21643, 4012, 120, 128, "Input",ExpressionUUID->"143c6dc9-d9de-4bae-ae3a-de2e07f1f621"],
Cell[CellGroupData[{
Cell[1038378, 21767, 545, 15, 69, "Input",ExpressionUUID->"0e378861-682c-4fbd-bb39-e1ec7a55e903"],
Cell[1038926, 21784, 630, 16, 62, "Output",ExpressionUUID->"406df5ac-2de8-495c-ad14-01a281b75b7a"],
Cell[1039559, 21802, 607, 15, 62, "Output",ExpressionUUID->"cb004738-d450-4654-9f78-51f956191e5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1040203, 21822, 386, 11, 69, "Input",ExpressionUUID->"44b3a7e1-1600-4274-beb0-d117bb22dc24"],
Cell[1040592, 21835, 917, 25, 70, "Output",ExpressionUUID->"c2d00c03-e567-4970-84f0-96f7f82050cd"],
Cell[1041512, 21862, 953, 27, 70, "Output",ExpressionUUID->"1063ebf8-d867-4feb-81e5-c9f0901f570c"]
}, Open  ]],
Cell[1042480, 21892, 4309, 122, 219, "Input",ExpressionUUID->"c8edbfc1-1116-4580-ac63-3191194bca8f"],
Cell[1046792, 22016, 230, 5, 38, "Text",ExpressionUUID->"a9f6db18-bbb2-4f0d-a9c7-535f83784f64"],
Cell[1047025, 22023, 2426, 63, 92, "Input",ExpressionUUID->"35a3e64e-4f55-49b1-8845-b704e4c21d66"],
Cell[1049454, 22088, 249, 4, 38, "Text",ExpressionUUID->"bd578c7f-4e42-4fe4-93ff-abcbd5a4b793"],
Cell[CellGroupData[{
Cell[1049728, 22096, 1286, 29, 45, "Input",ExpressionUUID->"428f7fa5-6680-429f-8578-cb7df7398016"],
Cell[1051017, 22127, 815, 15, 45, "Output",ExpressionUUID->"9f8f45b5-f5f3-4df2-b2c5-077d628421b3"]
}, Open  ]],
Cell[1051847, 22145, 155, 3, 38, "Text",ExpressionUUID->"73c265c7-aa0d-4caa-b50a-cd53a381bd00"],
Cell[CellGroupData[{
Cell[1052027, 22152, 1288, 29, 45, "Input",ExpressionUUID->"0b1e0bbe-f251-41a1-ac7b-cf00280f5f55"],
Cell[1053318, 22183, 815, 15, 45, "Output",ExpressionUUID->"d3340de5-343b-40d3-a81a-51ee041b8c3f"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

